sample_index,generated_label,error_message,golden_label,premise,hypothesis,clean_premise,clean_hypothesis,completion
2266,neutral,,neutral,Andy has less than 60 pairs of matched gloves,Andy has 20 pairs of matched gloves,andy has less than 60 pairs of matched gloves,andy has 20 pairs of matched gloves,"max_gloves_premise = 60
gloves_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_gloves_premise, gloves_hypothesis):
    # the hypothesis specifies the exact number of gloves Andy has
    # check if the hypothesis contradicts the premise by checking if the number of gloves from the hypothesis is greater or equal to 'max_gloves_premise'
    if gloves_hypothesis >= max_gloves_premise:
        return False
    # any number of gloves less than 60 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_gloves_premise, gloves_hypothesis))
"
7503,entailment,,entailment,"After 10 minutes , Pat stops to stretch","After less than 20 minutes , Pat stops to stretch","after 10 minutes , pat stops to stretch","after less than 20 minutes , pat stops to stretch","stretch_time_premise = 10
max_stretch_time_hypothesis = 20

def entailment_or_contradiction_or_neutral(stretch_time_premise, max_stretch_time_hypothesis):
    # the hypothesis talks about the time after which Pat stops to stretch, this is also mentioned in the premise
    # the hypothesis states that Pat stops to stretch after less than 'max_stretch_time_hypothesis' minutes
    # check if the hypothesis contradicts the premise by checking if 'stretch_time_premise' is greater than 'max_stretch_time_hypothesis'
    if stretch_time_premise > max_stretch_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stretch_time_premise, max_stretch_time_hypothesis))
"
7443,entailment,,entailment,Bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,Bhanu spends less than 60 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends less than 60 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,"income_spend_on_petrol_premise = 0.30
income_spend_on_house_rent_premise = 0.14
income_spend_on_petrol_hypothesis = 0.60

def entailment_or_contradiction_or_neutral(income_spend_on_petrol_premise, income_spend_on_house_rent_premise, income_spend_on_petrol_hypothesis):
    # the hypothesis refers to the percentage of income Bhanu spends on petrol, house rent, and food
    # the hypothesis estimates the petrol spending to less than 'income_spend_on_petrol_hypothesis'
    # check if the hypothesis contradicts the premise by checking if petrol spending reported in the premise are higher than 'income_spend_on_petrol_hypothesis'
    if income_spend_on_petrol_premise > income_spend_on_petrol_hypothesis:
        return False
    else:
        # if no contradiction, check if the percentage of income Bhanu spends on petrol in the hypothesis is less than or equal to the spending in the premise
        if income_spend_on_petrol_premise <= income_spend_on_petrol_hypothesis:
            return True
        else:
            # if the percentage of income Bhanu spends on petrol is not less than or equal to the spending in the premise, the hypothesis is neutral
            return None

print(entailment_or_contradiction_or_neutral(income_spend_on_petrol_premise, income_spend_on_house_rent_premise, income_spend_on_petrol_hypothesis))
"
7552,neutral,,neutral,In a group of more than 2 boys & 4 girls a Committee of 4 persons is to be formed,In a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,in a group of more than 2 boys & 4 girls a committee of 4 persons is to be formed,in a group of 6 boys & 4 girls a committee of 4 persons is to be formed,"min_boys_premise = 2
boys_hypothesis = 6
girls_premise = 4
girls_hypothesis = 4
committee_size = 4

def entailment_or_contradiction_or_neutral(min_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis, committee_size):
    # the hypothesis talks about the number of boys and girls in a group, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_boys_premise', by checking if the number of boys from the hypothesis is lower or equal to 'min_boys_premise'
    if boys_hypothesis <= min_boys_premise or girls_hypothesis != girls_premise or committee_size != 4:
        return False
    # any number of boys greater than 2 and girls equal to 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis, committee_size))
"
7412,contradiction,,contradiction,Raman mixed 27 kg of butter at Rs,Raman mixed 77 kg of butter at Rs,raman mixed 27 kg of butter at rs,raman mixed 77 kg of butter at rs,"butter_kg_premise = 27
butter_kg_hypothesis = 77

def entailment_or_contradiction_or_neutral(butter_kg_premise, butter_kg_hypothesis):
    # the hypothesis refers to the quantity of butter mixed by Raman, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the quantity of butter in the hypothesis is equal to the quantity in the premise
    if butter_kg_hypothesis != butter_kg_premise:
        return False
    # since the hypothesis contradicts the premise, there is no need to check for entailment or neutrality
    return

print(entailment_or_contradiction_or_neutral(butter_kg_premise, butter_kg_hypothesis))
"
5985,entailment,,entailment,Mark sold 6 boxes less than n and Ann sold 2 boxes less than n,Mark sold more than 1 boxes less than n and Ann sold 2 boxes less than n,mark sold 6 boxes less than n and ann sold 2 boxes less than n,mark sold more than 1 boxes less than n and ann sold 2 boxes less than n,"mark_boxes_sold_premise = 6
ann_boxes_sold_premise = 2
min_mark_boxes_sold_hypothesis = 1
ann_boxes_sold_hypothesis = 2

def entailment_or_contradiction_or_neutral(mark_boxes_sold_premise, ann_boxes_sold_premise, min_mark_boxes_sold_hypothesis, ann_boxes_sold_hypothesis):
    # the hypothesis refers to the number of boxes sold by Mark and Ann mentioned in the premise
    # the hypothesis estimates Mark's sales to more than 'min_mark_boxes_sold_hypothesis' and Ann's sales to be equal to 'ann_boxes_sold_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Mark's sales reported in the premise are lower than 'min_mark_boxes_sold_hypothesis' or if Ann's sales reported in the premise are not equal to 'ann_boxes_sold_hypothesis'
    if mark_boxes_sold_premise < min_mark_boxes_sold_hypothesis or ann_boxes_sold_premise != ann_boxes_sold_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(mark_boxes_sold_premise, ann_boxes_sold_premise, min_mark_boxes_sold_hypothesis, ann_boxes_sold_hypothesis))
"
6061,neutral,,neutral,Anita goes away and Indu leaves more than 1 days before the work is finished,Anita goes away and Indu leaves 7 days before the work is finished,anita goes away and indu leaves more than 1 days before the work is finished,anita goes away and indu leaves 7 days before the work is finished,"min_days_before_work_finish_premise = 1
days_before_work_finish_hypothesis = 7

def entailment_or_contradiction_or_neutral(min_days_before_work_finish_premise, days_before_work_finish_hypothesis):
    # the hypothesis talks about the number of days Indu leaves before the work is finished, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_days_before_work_finish_premise', by checking if the number of days from the hypothesis is lower or equal to 'min_days_before_work_finish_premise'
    if days_before_work_finish_hypothesis <= min_days_before_work_finish_premise:
        return False
    # any number of days greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_days_before_work_finish_premise, days_before_work_finish_hypothesis))
"
6539,contradiction,,contradiction,"While driving from City A to City B , Cara drives at a constant speed of 30 miles per hour","While driving from City A to City B , Cara drives at a constant speed of 60 miles per hour","while driving from city a to city b , cara drives at a constant speed of 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of 60 miles per hour","speed_premise = 30
speed_hypothesis = 60

def entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis):
    # the hypothesis refers to the constant speed in miles per hour that Cara is driving from City A to City B
    # the hypothesis contradicts the premise if the speed in the hypothesis is not equal to the speed from the premise
    if speed_hypothesis != speed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis))
"
6428,contradiction,,contradiction,450 and she sold that to George for Rs,750 and she sold that to George for Rs,450 and she sold that to george for rs,750 and she sold that to george for rs,"sold_price_premise = 450
sold_price_hypothesis = 750

def entailment_or_contradiction_or_neutral(sold_price_premise, sold_price_hypothesis):
    # the hypothesis refers to the sold price mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if sold price reported in the premise is lower than the sold price in the hypothesis
    if sold_price_premise < sold_price_hypothesis:
        return False
    # if the sold prices match, the hypothesis is entailed by the premise
    elif sold_price_premise == sold_price_hypothesis:
        return True
    # any other case means the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(sold_price_premise, sold_price_hypothesis))
"
7595,contradiction,,contradiction,Dan leaves City A 60 minutes after Cara,Dan leaves City A 70 minutes after Cara,dan leaves city a 60 minutes after cara,dan leaves city a 70 minutes after cara,"dan_leaving_time_premise = 60
dan_leaving_time_hypothesis = 70

def entailment_or_contradiction_or_neutral(dan_leaving_time_premise, dan_leaving_time_hypothesis):
    # the hypothesis refers to the time when Dan leaves City A, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the leaving time from the hypothesis is not equal to the leaving time from the premise
    if dan_leaving_time_premise != dan_leaving_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_leaving_time_premise, dan_leaving_time_hypothesis))
"
56,contradiction,,contradiction,Speed of Bruce is 30 m / s and that of Bhishma is 20 m / s,Speed of Bruce is 60 m / s and that of Bhishma is 20 m / s,speed of bruce is 30 m / s and that of bhishma is 20 m / s,speed of bruce is 60 m / s and that of bhishma is 20 m / s,"bruce_speed_premise = 30
bhishma_speed_premise = 20
bruce_speed_hypothesis = 60
bhishma_speed_hypothesis = 20

def entailment_or_contradiction_or_neutral(bruce_speed_premise, bhishma_speed_premise, bruce_speed_hypothesis, bhishma_speed_hypothesis):
    # the hypothesis talks about the speed of Bruce and Bhishma, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speeds mentioned in the premise are different from those in the hypothesis
    if bruce_speed_premise != bruce_speed_hypothesis or bhishma_speed_premise != bhishma_speed_hypothesis:
        return False
    # if the speeds in the hypothesis are same as those in the premise, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(bruce_speed_premise, bhishma_speed_premise, bruce_speed_hypothesis, bhishma_speed_hypothesis))
"
6958,neutral,,neutral,Venkat purchased twenty dozens of toys at the rate of more than 275 per dozen,Venkat purchased twenty dozens of toys at the rate of 375 per dozen,venkat purchased twenty dozens of toys at the rate of more than 275 per dozen,venkat purchased twenty dozens of toys at the rate of 375 per dozen,"toys_purchased = 20
min_rate_per_dozen_premise = 275
rate_per_dozen_hypothesis = 375

def entailment_or_contradiction_or_neutral(toys_purchased, min_rate_per_dozen_premise, rate_per_dozen_hypothesis):
    # the hypothesis refers to the number of toys purchased and the rate per dozen mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_rate_per_dozen_premise', by checking if the rate per dozen from the hypothesis is lower or equal to 'min_rate_per_dozen_premise'
    if rate_per_dozen_hypothesis <= min_rate_per_dozen_premise:
        return False
    # any rate per dozen greater than 275 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(toys_purchased, min_rate_per_dozen_premise, rate_per_dozen_hypothesis))
"
5927,contradiction,,contradiction,"Faiza has 14 purses , she gives 3 purse as gift","Faiza has 34 purses , she gives 3 purse as gift","faiza has 14 purses , she gives 3 purse as gift","faiza has 34 purses , she gives 3 purse as gift","purses_faiza_premise = 14
purses_gift_premise = 3
purses_faiza_hypothesis = 34
purses_gift_hypothesis = 3

def entailment_or_contradiction_or_neutral(purses_faiza_premise, purses_gift_premise, purses_faiza_hypothesis, purses_gift_hypothesis):
    # the hypothesis contradicts the premise if the number of purses Faiza has according to the hypothesis is not equal to the number of purses Faiza has according to the premise
    if purses_faiza_hypothesis != purses_faiza_premise:
        return False
    # the hypothesis entails the premise if the number of purses Faiza gives as gifts according to the hypothesis is equal to the number of purses Faiza gives as gifts according to the premise
    if purses_gift_hypothesis == purses_gift_premise:
        return True
    # if neither contradiction nor entailment are found, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(purses_faiza_premise, purses_gift_premise, purses_faiza_hypothesis, purses_gift_hypothesis))
"
6849,entailment,,entailment,Billy has 10 apples,Billy has less than 20 apples,billy has 10 apples,billy has less than 20 apples,"apples_billy_premise = 10
max_apples_billy_hypothesis = 20

def entailment_or_contradiction_or_neutral(apples_billy_premise, max_apples_billy_hypothesis):
    # the hypothesis talks about the number of apples Billy has, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of apples in the premise is greater than 'max_apples_billy_hypothesis'
    if apples_billy_premise > max_apples_billy_hypothesis:
        return False
    # since the number of apples in the premise is less than 'max_apples_billy_hypothesis', the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(apples_billy_premise, max_apples_billy_hypothesis))
"
6818,contradiction,,contradiction,Tina has 5 socks and 3 pair of shoes,Tina has 2 socks and 3 pair of shoes,tina has 5 socks and 3 pair of shoes,tina has 2 socks and 3 pair of shoes,"socks_premise = 5
shoes_premise = 3
socks_hypothesis = 2
shoes_hypothesis = 3

def entailment_or_contradiction_or_neutral(socks_premise, shoes_premise, socks_hypothesis, shoes_hypothesis):
    # the hypothesis refers to the number of socks and shoes mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if sock or shoe counts reported in the premise are different from the hypothesis
    if socks_premise != socks_hypothesis or shoes_premise != shoes_hypothesis:
        return False
    return None

print(entailment_or_contradiction_or_neutral(socks_premise, shoes_premise, socks_hypothesis, shoes_hypothesis))
"
6237,entailment,,entailment,John has 10 pairs of matched socks,John has less than 40 pairs of matched socks,john has 10 pairs of matched socks,john has less than 40 pairs of matched socks,"pairs_socks_premise = 10
max_pairs_socks_hypothesis = 40

def entailment_or_contradiction_or_neutral(pairs_socks_premise, max_pairs_socks_hypothesis):
    # the hypothesis refers to the number of John's pairs of socks
    # the hypothesis estimates the number of pairs of socks to be less than 'max_pairs_socks_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of pairs of socks mentioned in the premise is greater than 'max_pairs_socks_hypothesis'
    if pairs_socks_premise > max_pairs_socks_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pairs_socks_premise, max_pairs_socks_hypothesis))
"
6366,entailment,,entailment,Andy has 20 pairs of matched gloves,Andy has less than 60 pairs of matched gloves,andy has 20 pairs of matched gloves,andy has less than 60 pairs of matched gloves,"matched_gloves_premise = 20
max_matched_gloves_hypothesis = 60

def entailment_or_contradiction_or_neutral(matched_gloves_premise, max_matched_gloves_hypothesis):
    # the hypothesis talks about the number of matched gloves Andy has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Andy's gloves are more than 'max_matched_gloves_hypothesis'
    if matched_gloves_premise > max_matched_gloves_hypothesis:
        return False
    # if the number of gloves is less than 60, it is consistent with the premise, hence the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(matched_gloves_premise, max_matched_gloves_hypothesis))
"
1446,entailment,,entailment,"5 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","more than 4 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","5 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","more than 4 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","percent_died_premise = 5
percent_left_premise = 15
min_percent_died_hypothesis = 4

def entailment_or_contradiction_or_neutral(percent_died_premise, min_percent_died_hypothesis):
    # the hypothesis refers to the percent of people who died or left from the village, mentioned in the premise
    # the hypothesis estimates the percentage of people who died to be more than 'min_percent_died_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage of people who died in the premise is less than 'min_percent_died_hypothesis'
    if percent_died_premise < min_percent_died_hypothesis:
        return False
    else:
        return True 

print(entailment_or_contradiction_or_neutral(percent_died_premise, min_percent_died_hypothesis))
"
6277,neutral,,neutral,There are less than 75 stations between Hyderabad and Bangalore,There are 15 stations between Hyderabad and Bangalore,there are less than 75 stations between hyderabad and bangalore,there are 15 stations between hyderabad and bangalore,"max_stations_premise = 75
stations_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis):
    # the hypothesis refers to the number of stations mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of stations in the hypothesis is greater than 'max_stations_premise'
    if stations_hypothesis > max_stations_premise:
        return False
    # any number of stations less than 75 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis))
"
6326,contradiction,,contradiction,"In an exam , Bobby scored 38 percent , Bonny scored 56 percent , Vijay scored 66 percent and Libin scored 75 percent","In an exam , Bobby scored 88 percent , Bonny scored 56 percent , Vijay scored 66 percent and Libin scored 75 percent","in an exam , bobby scored 38 percent , bonny scored 56 percent , vijay scored 66 percent and libin scored 75 percent","in an exam , bobby scored 88 percent , bonny scored 56 percent , vijay scored 66 percent and libin scored 75 percent","bobby_score_premise = 38
bobby_score_hypothesis = 88
bonny_score_premise = 56
bonny_score_hypothesis = 56
vijay_score_premise = 66
vijay_score_hypothesis = 66
libin_score_premise = 75
libin_score_hypothesis = 75

def entailment_or_contradiction_or_neutral(bobby_score_premise, bobby_score_hypothesis, bonny_score_premise, bonny_score_hypothesis, vijay_score_premise, vijay_score_hypothesis, libin_score_premise, libin_score_hypothesis):
    # the hypothesis talks about the scores of four people in an exam, referenced also in the premise
    # check if the hypothesis contradicts the premise by comparing the scores of each individual
    if bobby_score_premise != bobby_score_hypothesis or bonny_score_premise != bonny_score_hypothesis or vijay_score_premise != vijay_score_hypothesis or libin_score_premise != libin_score_hypothesis:
        return False
    # if the scores are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(bobby_score_premise, bobby_score_hypothesis, bonny_score_premise, bonny_score_hypothesis, vijay_score_premise, vijay_score_hypothesis, libin_score_premise, libin_score_hypothesis))
"
7339,neutral,,neutral,"If Sanoop returned more than 4 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","If Sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","if sanoop returned more than 4 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","if sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","min_returned_shirts_premise = 4
returned_shirts_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_returned_shirts_premise, returned_shirts_hypothesis):
    # the hypothesis talks about the number of returned shirts, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_returned_shirts_premise', by checking if the number of returned shirts from the hypothesis is lower or equal to 'min_returned_shirts_premise'
    if returned_shirts_hypothesis <= min_returned_shirts_premise:
        return False
    # any number of returned shirts greater than 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_returned_shirts_premise, returned_shirts_hypothesis))
"
7268,contradiction,,contradiction,Bruce and Bhishma are running on a circular track of length 600 m,Bruce and Bhishma are running on a circular track of length 500 m,bruce and bhishma are running on a circular track of length 600 m,bruce and bhishma are running on a circular track of length 500 m,"track_length_premise = 600
track_length_hypothesis = 500

def entailment_or_contradiction_or_neutral(track_length_premise, track_length_hypothesis):
    # the hypothesis refers to the length of the track mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the lengths of the track
    if track_length_premise != track_length_hypothesis:
        return False
    # if the lengths are equal, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(track_length_premise, track_length_hypothesis))
"
6295,neutral,,neutral,Jones gave less than 60 % of the money he had to his wife,Jones gave 40 % of the money he had to his wife,jones gave less than 60 % of the money he had to his wife,jones gave 40 % of the money he had to his wife,"max_percent_money_given_premise = 60
percent_money_given_hypothesis = 40

def entailment_or_contradiction_or_neutral(max_percent_money_given_premise, percent_money_given_hypothesis):
    # the hypothesis talks about the percentage of money Jones gave to his wife, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_percent_money_given_premise', by checking if the percentage in the hypothesis is greater or equal to 'max_percent_money_given_premise'
    if percent_money_given_hypothesis >= max_percent_money_given_premise:
        return False
    # any percentage of money given less than 60% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_percent_money_given_premise, percent_money_given_hypothesis))
"
6104,contradiction,,contradiction,Jane started baby - sitting when she was 18 years old,Jane started baby - sitting when she was 58 years old,jane started baby - sitting when she was 18 years old,jane started baby - sitting when she was 58 years old,"babysitting_age_premise = 18
babysitting_age_hypothesis = 58

def entailment_or_contradiction_or_neutral(babysitting_age_premise, babysitting_age_hypothesis):
    # the hypothesis contradicts the premise if the babysitting age mentioned in the hypothesis is not equal to the one in the premise
    if babysitting_age_hypothesis != babysitting_age_premise:
        return False
    # if the ages match, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(babysitting_age_premise, babysitting_age_hypothesis))
"
6044,contradiction,,contradiction,"If the distance between their homes is 40 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is 80 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is 40 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is 80 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","distance_homes_premise = 40
distance_homes_hypothesis = 80
maxwell_speed = 4
brad_speed = 6

def entailment_or_contradiction_or_neutral(distance_homes_premise, distance_homes_hypothesis, maxwell_speed, brad_speed):
    # the hypothesis talks about the distance between their homes and their speeds
    # the hypothesis contradicts the premise by estimating the distance between their homes to be 'distance_homes_hypothesis' instead of 'distance_homes_premise'
    if distance_homes_premise != distance_homes_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(distance_homes_premise, distance_homes_hypothesis, maxwell_speed, brad_speed))
"
3991,neutral,,neutral,"Sheila works more than 5 hours per day on Monday , Wednesday and Friday , and 6 hours per day on Tuesday and Thursday","Sheila works 8 hours per day on Monday , Wednesday and Friday , and 6 hours per day on Tuesday and Thursday","sheila works more than 5 hours per day on monday , wednesday and friday , and 6 hours per day on tuesday and thursday","sheila works 8 hours per day on monday , wednesday and friday , and 6 hours per day on tuesday and thursday","min_hours_work_mon_wed_fri_premise = 5
hours_work_mon_wed_fri_hypothesis = 8
hours_work_tue_thur_premise = 6
hours_work_tue_thur_hypothesis = 6

def entailment_or_contradiction_or_neutral(min_hours_work_mon_wed_fri_premise, hours_work_mon_wed_fri_hypothesis, hours_work_tue_thur_premise, hours_work_tue_thur_hypothesis):
    # the hypothesis talks about the number of hours Sheila works on certain days, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_hours_work_mon_wed_fri_premise', by checking if the hours worked from the hypothesis is lower or equal to 'min_hours_work_mon_wed_fri_premise'
    if hours_work_mon_wed_fri_hypothesis <= min_hours_work_mon_wed_fri_premise:
        return False
    # check if the hypothesis contradicts the premise estimate of 'hours_work_tue_thur_premise', by checking if the hours worked from the hypothesis is not equal to 'hours_work_tue_thur_premise'
    if hours_work_tue_thur_hypothesis != hours_work_tue_thur_premise:
        return False
    # any number of hours greater than 5 on Mon, Wed, Fri and 6 on Tue, Thur is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_work_mon_wed_fri_premise, hours_work_mon_wed_fri_hypothesis, hours_work_tue_thur_premise, hours_work_tue_thur_hypothesis))
"
6115,neutral,,neutral,"An investor can sell her MicroTron stock for less than 76 $ per share and her Dynaco stock for 68 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","An investor can sell her MicroTron stock for 36 $ per share and her Dynaco stock for 68 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","an investor can sell her microtron stock for less than 76 $ per share and her dynaco stock for 68 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","an investor can sell her microtron stock for 36 $ per share and her dynaco stock for 68 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","microtron_stock_price_premise = 76
dynaco_stock_price_premise = 68
total_shares_premise = 300
average_price_per_share_premise = 40

microtron_stock_price_hypothesis = 36
dynaco_stock_price_hypothesis = 68
total_shares_hypothesis = 300
average_price_per_share_hypothesis = 40

def entailment_or_contradiction_or_neutral(microtron_stock_price_premise, dynaco_stock_price_premise, total_shares_premise, average_price_per_share_premise, microtron_stock_price_hypothesis, dynaco_stock_price_hypothesis, total_shares_hypothesis, average_price_per_share_hypothesis):
    # the hypothesis contradicts the premise if the price of either stock is higher in the hypothesis than in the premise
    if microtron_stock_price_hypothesis > microtron_stock_price_premise or dynaco_stock_price_hypothesis > dynaco_stock_price_premise:
        return False
    # the hypothesis contradicts the premise if the total number of shares or the average price per share is different in the hypothesis and the premise
    if total_shares_hypothesis != total_shares_premise or average_price_per_share_hypothesis != average_price_per_share_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(microtron_stock_price_premise, dynaco_stock_price_premise, total_shares_premise, average_price_per_share_premise, microtron_stock_price_hypothesis, dynaco_stock_price_hypothesis, total_shares_hypothesis, average_price_per_share_hypothesis))
"
6212,contradiction,,contradiction,NHAI employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,NHAI employs 200 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs 200 men to build a highway of 2 km in 50 days working 8 hours a day,"men_premise = 100
men_hypothesis = 200

def entailment_or_contradiction_or_neutral(men_premise, men_hypothesis):
    # the hypothesis talks about the number of men employed by NHAI, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of men in the hypothesis is not equal to the number of men in the premise
    if men_hypothesis != men_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(men_premise, men_hypothesis))
"
6183,entailment,,entailment,"At Veridux Corporation , there are 218 employees","At Veridux Corporation , there are less than 818 employees","at veridux corporation , there are 218 employees","at veridux corporation , there are less than 818 employees","employees_veridux_premise = 218
max_employees_veridux_hypothesis = 818

def entailment_or_contradiction_or_neutral(employees_veridux_premise, max_employees_veridux_hypothesis):
    # the hypothesis talks about the number of employees at Veridux Corporation, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of employees reported in the premise is more than 'max_employees_veridux_hypothesis'
    if employees_veridux_premise > max_employees_veridux_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_veridux_premise, max_employees_veridux_hypothesis))
"
6170,contradiction,,contradiction,Addison High School ’ s senior class has 200 boys and 160 girls,Addison High School ’ s senior class has 700 boys and 160 girls,addison high school ’ s senior class has 200 boys and 160 girls,addison high school ’ s senior class has 700 boys and 160 girls,"boys_premise = 200
girls_premise = 160
boys_hypothesis = 700
girls_hypothesis = 160

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis):
    # the hypothesis talks about the number of boys and girls in Addison High School's senior class, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the number of boys and girls
    if boys_premise != boys_hypothesis or girls_premise != girls_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis))
"
6303,entailment,,entailment,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of more than 11 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of more than 11 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 41
james_min_work_hours_hypothesis = 11

def entailment_or_contradiction_or_neutral(james_work_hours_premise, james_min_work_hours_hypothesis):
    # the hypothesis refers to the number of worked hours by James mentioned in the premise
    # the hypothesis estimates the work hours to more or equal to 'james_min_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work hours reported in the premise are lower than 'james_min_work_hours_hypothesis'
    if james_work_hours_premise < james_min_work_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, james_min_work_hours_hypothesis))
"
6284,contradiction,,contradiction,Robin ' s average ( arithmetic mean ) test score on 9 tests is 82,Robin ' s average ( arithmetic mean ) test score on more than 9 tests is 82,robin ' s average ( arithmetic mean ) test score on 9 tests is 82,robin ' s average ( arithmetic mean ) test score on more than 9 tests is 82,"test_count_premise = 9
mean_test_score_premise = 82
min_test_count_hypothesis = 10
mean_test_score_hypothesis = 82

def entailment_or_contradiction_or_neutral(test_count_premise, mean_test_score_premise, min_test_count_hypothesis, mean_test_score_hypothesis):
    # the hypothesis talks about Robin's average score on more than 'min_test_count_hypothesis' tests
    # check if the hypothesis contradicts the premise by checking if the test count from the premise is lower than 'min_test_count_hypothesis'
    if test_count_premise < min_test_count_hypothesis:
        return False
    # if the test count from the premise is equal or higher than 'min_test_count_hypothesis', the mean test scores should be the same for entailment
    elif mean_test_score_premise == mean_test_score_hypothesis:
        return True
    # any other situation means the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(test_count_premise, mean_test_score_premise, min_test_count_hypothesis, mean_test_score_hypothesis))
"
4381,neutral,,neutral,"City A to city B , Andrew drove for less than 8 hour at 50 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 8 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","# extract the individual quantities
drive_hours_at_50_mph_premise = 8
drive_hours_at_50_mph_hypothesis = 1
drive_hours_at_60_mph = 3

def entailment_or_contradiction_or_neutral(drive_hours_at_50_mph_premise, drive_hours_at_50_mph_hypothesis, drive_hours_at_60_mph):
    # the hypothesis talks about the driving hours from city A to city B mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'drive_hours_at_50_mph_premise'
    # by checking if the number of driving hours from the hypothesis is greater than 'drive_hours_at_50_mph_premise'
    if drive_hours_at_50_mph_hypothesis > drive_hours_at_50_mph_premise:
        return False
    # the hypothesis is consistent with premise for driving hours at 60 mph
    # any number of driving hours less than 8 at 50 mph is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(drive_hours_at_50_mph_premise, drive_hours_at_50_mph_hypothesis, drive_hours_at_60_mph))
"
7279,neutral,,neutral,"At Veridux Corporation , there are less than 510 employees","At Veridux Corporation , there are 210 employees","at veridux corporation , there are less than 510 employees","at veridux corporation , there are 210 employees","max_employees_veridux_premise = 510
employees_veridux_hypothesis = 210

def entailment_or_contradiction_or_neutral(max_employees_veridux_premise, employees_veridux_hypothesis):
    # the hypothesis talks about the number of employees at Veridux Corporation, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_employees_veridux_premise', by checking if the number of employees from the hypothesis is greater or equal to 'max_employees_veridux_premise'
    if employees_veridux_hypothesis >= max_employees_veridux_premise:
        return False
    # any number of employees less than 510 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_employees_veridux_premise, employees_veridux_hypothesis))
"
6004,neutral,,neutral,John needs more than 3 balls out of 10 balls,John needs 4 balls out of 10 balls,john needs more than 3 balls out of 10 balls,john needs 4 balls out of 10 balls,"min_balls_needed_premise = 3
balls_needed_hypothesis = 4

def entailment_or_contradiction_or_neutral(min_balls_needed_premise, balls_needed_hypothesis):
    # the hypothesis refers to the number of balls John needs, mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_balls_needed_premise', by checking if the number of balls from the hypothesis is lower or equal to 'min_balls_needed_premise'
    if balls_needed_hypothesis <= min_balls_needed_premise:
        return False
    # any number of balls greater than 3 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_balls_needed_premise, balls_needed_hypothesis))
"
3922,neutral,,neutral,A train leaves Delhi at more than 4 a,A train leaves Delhi at 9 a,a train leaves delhi at more than 4 a,a train leaves delhi at 9 a,"min_train_departure_time_premise = 4
train_departure_time_hypothesis = 9

def entailment_or_contradiction_or_neutral(min_train_departure_time_premise, train_departure_time_hypothesis):
    # both the hypothesis and premise refer to the time a train leaves Delhi
    # check if the hypothesis contradicts the premise's claim of the train leaving after 'min_train_departure_time_premise' by checking if the departure time in the hypothesis is less or equal to 'min_train_departure_time_premise'
    if train_departure_time_hypothesis <= min_train_departure_time_premise:
        return False
    # any departure time later than 4 a.m. is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_train_departure_time_premise, train_departure_time_hypothesis))
"
6243,entailment,,entailment,Another survey of 120 people in the town of Angie found that 60 % preferred Brand A,Another survey of less than 520 people in the town of Angie found that 60 % preferred Brand A,another survey of 120 people in the town of angie found that 60 % preferred brand a,another survey of less than 520 people in the town of angie found that 60 % preferred brand a,"survey_people_premise = 120
max_survey_people_hypothesis = 520

def entailment_or_contradiction_or_neutral(survey_people_premise, max_survey_people_hypothesis):
    # the hypothesis refers to the number of people surveyed in the premise
    # the hypothesis estimates the number of people surveyed to be less than 'max_survey_people_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of people surveyed in the premise is more than 'max_survey_people_hypothesis'
    if survey_people_premise > max_survey_people_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(survey_people_premise, max_survey_people_hypothesis))
"
6578,contradiction,,contradiction,Vijay bought 160 shirts at the rate of Rs,Vijay bought less than 160 shirts at the rate of Rs,vijay bought 160 shirts at the rate of rs,vijay bought less than 160 shirts at the rate of rs,"shirts_bought_premise = 160
max_shirts_bought_hypothesis = 160

def entailment_or_contradiction_or_neutral(shirts_bought_premise, max_shirts_bought_hypothesis):
    # the hypothesis refers to the number of shirts bought by Vijay mentioned in the premise
    # the hypothesis estimates the shirts bought to less than 'max_shirts_bought_hypothesis'
    # check if the hypothesis contradicts the premise by checking if shirt numbers reported in the premise are higher than 'max_shirts_bought_hypothesis'
    if shirts_bought_premise >= max_shirts_bought_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shirts_bought_premise, max_shirts_bought_hypothesis))
"
6105,entailment,,entailment,"Jane is currently 32 years old , and she stopped baby - sitting 12 years ago","Jane is currently less than 82 years old , and she stopped baby - sitting 12 years ago","jane is currently 32 years old , and she stopped baby - sitting 12 years ago","jane is currently less than 82 years old , and she stopped baby - sitting 12 years ago","current_age_premise = 32
years_since_babysitting_premise = 12
max_current_age_hypothesis = 82
years_since_babysitting_hypothesis = 12

def entailment_or_contradiction_or_neutral(current_age_premise, years_since_babysitting_premise, max_current_age_hypothesis, years_since_babysitting_hypothesis):
    # the hypothesis talks about the current age of Jane and the number of years since she stopped baby-sitting
    # these are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the age or number of years since babysitting are inconsistent
    if current_age_premise > max_current_age_hypothesis or years_since_babysitting_premise != years_since_babysitting_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if the age and number of years since babysitting from the premise fall within the limits set by the hypothesis
    if current_age_premise <= max_current_age_hypothesis and years_since_babysitting_premise == years_since_babysitting_hypothesis:
        return True
    # neutrally related
    return None

print(entailment_or_contradiction_or_neutral(current_age_premise, years_since_babysitting_premise, max_current_age_hypothesis, years_since_babysitting_hypothesis))
"
6294,entailment,,entailment,Jones gave 40 % of the money he had to his wife,Jones gave less than 60 % of the money he had to his wife,jones gave 40 % of the money he had to his wife,jones gave less than 60 % of the money he had to his wife,"percent_given_to_wife_premise = 40
max_percent_given_to_wife_hypothesis = 60

def entailment_or_contradiction_or_neutral(percent_given_to_wife_premise, max_percent_given_to_wife_hypothesis):
    # the hypothesis refers to the percentage of money Jones gave to his wife, mentioned in the premise
    # first, check if the hypothesis contradicts the premise
    # it would contradict if the premise percentage is higher than the maximum percentage mentioned in the hypothesis
    if percent_given_to_wife_premise > max_percent_given_to_wife_hypothesis:
        return False
    # since the premise percentage is lower than the hypothesis maximum, the premise entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(percent_given_to_wife_premise, max_percent_given_to_wife_hypothesis))
"
7269,entailment,,entailment,Speed of Bruce is 30 m / s and that of Bhishma is 20 m / s,Speed of Bruce is less than 60 m / s and that of Bhishma is 20 m / s,speed of bruce is 30 m / s and that of bhishma is 20 m / s,speed of bruce is less than 60 m / s and that of bhishma is 20 m / s,"bruce_speed_premise = 30
bhishma_speed_premise = 20
max_bruce_speed_hypothesis = 60
bhishma_speed_hypothesis = 20

def entailment_or_contradiction_or_neutral(bruce_speed_premise, bhishma_speed_premise, max_bruce_speed_hypothesis, bhishma_speed_hypothesis):
    # the hypothesis refers to the speed of Bruce and Bhishma, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if bruce's speed in the premise is more than 'max_bruce_speed_hypothesis'
    if bruce_speed_premise > max_bruce_speed_hypothesis:
        return False
    # then, check if the speed of Bhishma contradicts the premise by comparing 'bhishma_speed_hypothesis' with 'bhishma_speed_premise'
    elif bhishma_speed_hypothesis != bhishma_speed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(bruce_speed_premise, bhishma_speed_premise, max_bruce_speed_hypothesis, bhishma_speed_hypothesis))
"
7329,entailment,,entailment,"Hali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","Hali builds a tower using only red , green , and blue toy bricks in a ratio of more than 3 : 3 : 1","hali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","hali builds a tower using only red , green , and blue toy bricks in a ratio of more than 3 : 3 : 1","red_green_blue_ratio_premise = [4, 3, 1]
red_green_blue_ratio_hypothesis = [3, 3, 1]

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis):
    # the hypothesis talks about the ratio of red, green and blue toy bricks Hali uses to build a tower
    # the hypothesis estimate is that the ratio of red bricks to the other colors is more than 3:3:1
    # check if the hypothesis contradicts the premise by checking if the ratio of red bricks to the other colors in the premise is less than or equal to 3:3:1
    if red_green_blue_ratio_premise[0] <= red_green_blue_ratio_hypothesis[0]:
        return False
    # since the ratio of red bricks in the premise is more than 3:3:1, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis))
"
6045,entailment,,entailment,"The pilot of a small aircraft with a 40 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","The pilot of a small aircraft with a less than 50 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","the pilot of a small aircraft with a 40 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","the pilot of a small aircraft with a less than 50 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","fuel_tank_capacity_premise = 40
max_fuel_tank_capacity_hypothesis = 50

def entailment_or_contradiction_or_neutral(fuel_tank_capacity_premise, max_fuel_tank_capacity_hypothesis):
    # the hypothesis refers to the fuel tank capacity of an aircraft mentioned in the premise
    # the hypothesis estimates the fuel tank capacity to less than 'max_fuel_tank_capacity_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the fuel tank capacity in the premise is greater than 'max_fuel_tank_capacity_hypothesis'
    if fuel_tank_capacity_premise > max_fuel_tank_capacity_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(fuel_tank_capacity_premise, max_fuel_tank_capacity_hypothesis))
"
3990,entailment,,entailment,"Sheila works 8 hours per day on Monday , Wednesday and Friday , and 6 hours per day on Tuesday and Thursday","Sheila works more than 5 hours per day on Monday , Wednesday and Friday , and 6 hours per day on Tuesday and Thursday","sheila works 8 hours per day on monday , wednesday and friday , and 6 hours per day on tuesday and thursday","sheila works more than 5 hours per day on monday , wednesday and friday , and 6 hours per day on tuesday and thursday","work_hours_mwf_premise = 8
work_hours_tt_premise = 6
min_work_hours_mwf_hypothesis = 5
work_hours_tt_hypothesis = 6

def entailment_or_contradiction_or_neutral(work_hours_mwf_premise, work_hours_tt_premise, min_work_hours_mwf_hypothesis, work_hours_tt_hypothesis):
  # the hypothesis refers to the number of hours Sheila works each day, mentioned in the premise
  # check if the hypothesis contradicts the premise by checking if work hours on Mon, Wed, Fri reported in the premise are lower than 'min_work_hours_mwf_hypothesis' or if work hours on Tue, Thu reported in the premise are different from 'work_hours_tt_hypothesis'
  if work_hours_mwf_premise < min_work_hours_mwf_hypothesis or work_hours_tt_premise != work_hours_tt_hypothesis:
    return False
  else:
    return True

print(entailment_or_contradiction_or_neutral(work_hours_mwf_premise, work_hours_tt_premise, min_work_hours_mwf_hypothesis, work_hours_tt_hypothesis))
"
6327,entailment,,entailment,Kramer can pack 10 boxes of cigarettes per minute,Kramer can pack less than 20 boxes of cigarettes per minute,kramer can pack 10 boxes of cigarettes per minute,kramer can pack less than 20 boxes of cigarettes per minute,"box_packing_rate_kramer_premise = 10
max_box_packing_rate_kramer_hypothesis = 20

def entailment_or_contradiction_or_neutral(box_packing_rate_kramer_premise, max_box_packing_rate_kramer_hypothesis):
    # the hypothesis talks about Kramer's box packing rate, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Kramer's packing rate from the premise is higher than the maximum rate in the hypothesis
    if box_packing_rate_kramer_premise > max_box_packing_rate_kramer_hypothesis:
        return False
    # if the packing rate in the premise is less than or equal to the maximum rate in the hypothesis, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(box_packing_rate_kramer_premise, max_box_packing_rate_kramer_hypothesis))
"
7238,contradiction,,contradiction,"On the first day of her vacation , Louisa traveled 240 miles","On the first day of her vacation , Louisa traveled 340 miles","on the first day of her vacation , louisa traveled 240 miles","on the first day of her vacation , louisa traveled 340 miles","miles_traveled_premise = 240
miles_traveled_hypothesis = 340

def entailment_or_contradiction_or_neutral(miles_traveled_premise, miles_traveled_hypothesis):
    # the hypothesis talks about the miles Louisa traveled on the first day of her vacation, also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the miles traveled as per the hypothesis are different from those mentioned in the premise
    if miles_traveled_hypothesis != miles_traveled_premise:
        return False
    return True

print(entailment_or_contradiction_or_neutral(miles_traveled_premise, miles_traveled_hypothesis))
"
6014,contradiction,,contradiction,"Assuming that Karen drives at an average speed of 60 mph and Tom drives at an average speed of 45 mph , how many E miles will Tom drive before Karen wins the bet ?","Assuming that Karen drives at an average speed of 20 mph and Tom drives at an average speed of 45 mph , how many E miles will Tom drive before Karen wins the bet ?","assuming that karen drives at an average speed of 60 mph and tom drives at an average speed of 45 mph , how many e miles will tom drive before karen wins the bet ?","assuming that karen drives at an average speed of 20 mph and tom drives at an average speed of 45 mph , how many e miles will tom drive before karen wins the bet ?","karen_speed_premise = 60
tom_speed_premise = 45
karen_speed_hypothesis = 20
tom_speed_hypothesis = 45

def entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis):
    # the hypothesis refers to the driving speeds of Karen and Tom mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speeds reported in the premise are not equal to the speeds in the hypothesis
    if karen_speed_premise != karen_speed_hypothesis or tom_speed_premise != tom_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis))
"
6376,neutral,,neutral,"more than 4 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","5 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","more than 4 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","5 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","min_death_percentage_premise = 4
death_percentage_hypothesis = 5
departure_percentage_premise = 15
departure_percentage_hypothesis = 15

def entailment_or_contradiction_or_neutral(min_death_percentage_premise, death_percentage_hypothesis, 
                                           departure_percentage_premise, departure_percentage_hypothesis):
    # The hypothesis refers to the percentage of people who died and left the village mentioned in the premise
    # Check if the death percentage in the hypothesis contradicts the premise by checking if the percentage in the hypothesis is less than or equal to the minimum percentage in the premise
    if death_percentage_hypothesis <= min_death_percentage_premise:
        return False
    # Check if the departure percentage in the hypothesis contradicts the premise by checking if the percentage in the hypothesis is different than the percentage in the premise
    if departure_percentage_hypothesis != departure_percentage_premise:
        return False
    # If no contradiction is found, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_death_percentage_premise, death_percentage_hypothesis, 
                                             departure_percentage_premise, departure_percentage_hypothesis))
"
7218,entailment,,entailment,Lena ’ s grade was in the 80 th percentile out of 120 grades in her class,Lena ’ s grade was in the more than 30 th percentile out of 120 grades in her class,lena ’ s grade was in the 80 th percentile out of 120 grades in her class,lena ’ s grade was in the more than 30 th percentile out of 120 grades in her class,"lena_grade_percentile_premise = 80
lena_min_grade_percentile_hypothesis = 30

def entailment_or_contradiction_or_neutral(lena_grade_percentile_premise, lena_min_grade_percentile_hypothesis):
    # the hypothesis talks about Lena's grade percentile, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Lena's grade percentile in the premise is less than the minimum percentile in the hypothesis
    if lena_grade_percentile_premise < lena_min_grade_percentile_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(lena_grade_percentile_premise, lena_min_grade_percentile_hypothesis))
"
6174,entailment,,entailment,"If it takes Darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","If it takes Darcy a total of less than 55 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of less than 55 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","more_minutes_walking_premise = 15
max_more_minutes_walking_hypothesis = 55

def entailment_or_contradiction_or_neutral(more_minutes_walking_premise, max_more_minutes_walking_hypothesis):
    # the hypothesis talks about the number of extra minutes it takes Darcy to walk to work compared to taking the train, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the extra minutes from the premise are more than 'max_more_minutes_walking_hypothesis'
    if more_minutes_walking_premise > max_more_minutes_walking_hypothesis:
        return False
    # if the extra minutes for walking from the premise are less than 'max_more_minutes_walking_hypothesis', the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(more_minutes_walking_premise, max_more_minutes_walking_hypothesis))
"
7358,contradiction,,contradiction,"The total of the ages of Amar , Akbar and Anthony is 45 years","The total of the ages of Amar , Akbar and Anthony is 75 years","the total of the ages of amar , akbar and anthony is 45 years","the total of the ages of amar , akbar and anthony is 75 years","total_age_premise = 45
total_age_hypothesis = 75

def entailment_or_contradiction_or_neutral(total_age_premise, total_age_hypothesis):
    # the hypothesis refers to the total age of Amar, Akbar, and Anthony, also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing if the total age in the hypothesis is not equal to the total age in the premise
    if total_age_hypothesis != total_age_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_age_premise, total_age_hypothesis))
"
6333,entailment,,entailment,Ben worked for 7 days on a task that will take him 14 days to complete alone before he was joined by Blake,Ben worked for more than 2 days on a task that will take him 14 days to complete alone before he was joined by Blake,ben worked for 7 days on a task that will take him 14 days to complete alone before he was joined by blake,ben worked for more than 2 days on a task that will take him 14 days to complete alone before he was joined by blake,"work_days_ben_premise = 7
work_days_ben_hypothesis = 2
task_duration = 14

def entailment_or_contradiction_or_neutral(work_days_ben_premise, work_days_ben_hypothesis, task_duration):
    # the hypothesis talks about the number of days Ben worked alone on the task, which is also mentioned in the premise
    # the hypothesis estimates work days to be more than 'work_days_ben_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work days reported in the premise are lower than or equal to 'work_days_ben_hypothesis'
    if work_days_ben_premise <= work_days_ben_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_ben_premise, work_days_ben_hypothesis, task_duration))
"
6236,contradiction,,contradiction,"If Anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","If Anne ’ s speed were doubled , they could clean their house in less than 3 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in less than 3 hours working at their respective rates","cleaning_time_premise = 3
max_cleaning_time_hypothesis = 3

def entailment_or_contradiction_or_neutral(cleaning_time_premise, max_cleaning_time_hypothesis):
    # the hypothesis refers to the time needed for cleaning the house if Anne's speed was doubled, also mentioned in the premise
    # the hypothesis estimates the time for cleaning to be less than 'max_cleaning_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the cleaning time from the premise is equal or more than 'max_cleaning_time_hypothesis'
    if cleaning_time_premise >= max_cleaning_time_hypothesis:
        return False
    else:
        # if the premise time is less than the hypothesis time, the hypothesis is entailed
        return True

print(entailment_or_contradiction_or_neutral(cleaning_time_premise, max_cleaning_time_hypothesis))
"
6356,contradiction,,contradiction,"An investor can sell her MicroTron stock for 36 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","An investor can sell her MicroTron stock for 76 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","an investor can sell her microtron stock for 36 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","an investor can sell her microtron stock for 76 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","microtron_price_per_share_premise = 36
dynaco_price_per_share_premise = 48
total_shares_premise = 300
average_price_per_share_premise = 40

microtron_price_per_share_hypothesis = 76
dynaco_price_per_share_hypothesis = 48
total_shares_hypothesis = 300
average_price_per_share_hypothesis = 40

def entailment_or_contradiction_or_neutral(microtron_price_per_share_premise, dynaco_price_per_share_premise, total_shares_premise, average_price_per_share_premise, microtron_price_per_share_hypothesis, dynaco_price_per_share_hypothesis, total_shares_hypothesis, average_price_per_share_hypothesis):
    # the hypothesis talks about the price per share of MicroTron and Dynaco stocks, as well as the total number of shares sold and the average price per share
    # first, we need to check if the hypothesis contradicts the premise by checking if the price per share of MicroTron and Dynaco stocks, total number of shares sold and average price per share are different from those mentioned in the premise
    if (microtron_price_per_share_hypothesis != microtron_price_per_share_premise) or (dynaco_price_per_share_hypothesis != dynaco_price_per_share_premise) or (total_shares_hypothesis != total_shares_premise) or (average_price_per_share_hypothesis != average_price_per_share_premise):
        return False
    # since there is no contradiction, we can say that the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(microtron_price_per_share_premise, dynaco_price_per_share_premise, total_shares_premise, average_price_per_share_premise, microtron_price_per_share_hypothesis, dynaco_price_per_share_hypothesis, total_shares_hypothesis, average_price_per_share_hypothesis))
"
6065,contradiction,,contradiction,"Dacid obtained 86 , 89 , 82 , 87 and 81 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained 56 , 89 , 82 , 87 and 81 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained 86 , 89 , 82 , 87 and 81 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained 56 , 89 , 82 , 87 and 81 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","english_marks_premise = 86
math_marks_premise = 89
physics_marks_premise = 82
chemistry_marks_premise = 87
biology_marks_premise = 81

english_marks_hypothesis = 56
math_marks_hypothesis = 89
physics_marks_hypothesis = 82
chemistry_marks_hypothesis = 87
biology_marks_hypothesis = 81

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, 
                                           chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, 
                                           math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, 
                                           biology_marks_hypothesis):
    # the hypothesis refers to the marks obtained by Dacid, mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the marks in each subject
    if english_marks_hypothesis != english_marks_premise or math_marks_hypothesis != math_marks_premise or physics_marks_hypothesis != physics_marks_premise or chemistry_marks_hypothesis != chemistry_marks_premise or biology_marks_hypothesis != biology_marks_premise:
        return False
    # if there is no contradiction, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, 
                                             chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, 
                                             math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, 
                                             biology_marks_hypothesis))
"
6202,neutral,,neutral,"On the first day of her vacation , Louisa traveled less than 300 miles","On the first day of her vacation , Louisa traveled 200 miles","on the first day of her vacation , louisa traveled less than 300 miles","on the first day of her vacation , louisa traveled 200 miles","max_travel_distance_premise = 300
travel_distance_hypothesis = 200

def entailment_or_contradiction_or_neutral(max_travel_distance_premise, travel_distance_hypothesis):
    # the hypothesis refers to the distance traveled by Louisa on the first day of her vacation, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_travel_distance_premise', by checking if the distance from the hypothesis is greater than 'max_travel_distance_premise'
    if travel_distance_hypothesis > max_travel_distance_premise:
        return False
    # any distance less than 300 miles is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_travel_distance_premise, travel_distance_hypothesis))
"
7576,neutral,,neutral,Sreedhar and Sravan together can do a work in less than 35 days,Sreedhar and Sravan together can do a work in 25 days,sreedhar and sravan together can do a work in less than 35 days,sreedhar and sravan together can do a work in 25 days,"max_days_premise = 35
days_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_days_premise, days_hypothesis):
    # the hypothesis refers to the same work and people mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the days from the hypothesis are higher or equal to 'max_days_premise'
    if days_hypothesis >= max_days_premise:
        return False
    # any number of days less than 35 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_days_premise, days_hypothesis))
"
6859,neutral,,neutral,"If Jack walked more than 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked more than 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","min_distance_walked_premise = 3
time_walked_premise = 1.25 # 1 hour and 15 minutes
distance_walked_hypothesis = 4
time_walked_hypothesis = 1.25 # 1 hour and 15 minutes

def entailment_or_contradiction_or_neutral(min_distance_walked_premise, time_walked_premise, distance_walked_hypothesis, time_walked_hypothesis):
    # the hypothesis talks about the distance Jack walked, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_distance_walked_premise', by checking if the distance from the hypothesis is lower or equal to 'min_distance_walked_premise'
    if distance_walked_hypothesis <= min_distance_walked_premise:
        return False
    # any distance greater than 3 miles is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_distance_walked_premise, time_walked_premise, distance_walked_hypothesis, time_walked_hypothesis))
"
5937,entailment,,entailment,"At Veridux Corporation , there are 180 employees","At Veridux Corporation , there are less than 280 employees","at veridux corporation , there are 180 employees","at veridux corporation , there are less than 280 employees","employees_veridux_corp_premise = 180
max_employees_veridux_corp_hypothesis = 280

def entailment_or_contradiction_or_neutral(employees_veridux_corp_premise, max_employees_veridux_corp_hypothesis):
    # the hypothesis talks about the number of employees at Veridux Corporation, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of employees reported in the premise is more than 'max_employees_veridux_corp_hypothesis'
    if employees_veridux_corp_premise > max_employees_veridux_corp_hypothesis:
        return False
    # any number of employees less than 280 is consistent with the hypothesis, so the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_veridux_corp_premise, max_employees_veridux_corp_hypothesis))
"
4418,contradiction,,contradiction,"If Jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","If Jerry wants to raise his average by 5 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 5 points , what score must he earn on the fourth test ?","raise_avg_premise = 2
raise_avg_hypothesis = 5

def entailment_or_contradiction_or_neutral(raise_avg_premise, raise_avg_hypothesis):
    # the hypothesis talks about the raise of average by Jerry, also referenced in the premise
    # check if the hypothesis contradicts the premise by comparing 'raise_avg_hypothesis' and 'raise_avg_premise'
    if raise_avg_hypothesis != raise_avg_premise:
        return False
    # if the premise and hypothesis are equal, it means the hypothesis is entailed by the premise
    elif raise_avg_hypothesis == raise_avg_premise:
        return True

print(entailment_or_contradiction_or_neutral(raise_avg_premise, raise_avg_hypothesis))
"
5966,contradiction,,contradiction,Yesterday it took Robert 4 hours to drive from City A to City B,Yesterday it took Robert 5 hours to drive from City A to City B,yesterday it took robert 4 hours to drive from city a to city b,yesterday it took robert 5 hours to drive from city a to city b,"drive_time_premise = 4
drive_time_hypothesis = 5

def entailment_or_contradiction_or_neutral(drive_time_premise, drive_time_hypothesis):
    # the hypothesis contradicts the premise if the driving time from the hypothesis is different than the one from the premise
    if drive_time_premise != drive_time_hypothesis:
        return False
    # if the driving time from the premise equals the driving time from the hypothesis, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(drive_time_premise, drive_time_hypothesis))
"
6529,neutral,,neutral,John has less than 70 pairs of matched socks,John has 10 pairs of matched socks,john has less than 70 pairs of matched socks,john has 10 pairs of matched socks,"max_pairs_socks_john_premise = 70
pairs_socks_john_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_pairs_socks_john_premise, pairs_socks_john_hypothesis):
    # the hypothesis refers to the number of pairs of matched socks John has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if pairs of socks from the hypothesis is greater than 'max_pairs_socks_john_premise'
    if pairs_socks_john_hypothesis > max_pairs_socks_john_premise:
        return False
    # any number of pairs of socks less than or equal to 70 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_pairs_socks_john_premise, pairs_socks_john_hypothesis))
"
6948,entailment,,entailment,"At present , the ratio between the ages of Arun and Deepak is 5 : 4","At present , the ratio between the ages of Arun and Deepak is more than 1 : 4","at present , the ratio between the ages of arun and deepak is 5 : 4","at present , the ratio between the ages of arun and deepak is more than 1 : 4","arun_deepak_ratio_premise = 5/4
min_arun_deepak_ratio_hypothesis = 1/4

def entailment_or_contradiction_or_neutral(arun_deepak_ratio_premise, min_arun_deepak_ratio_hypothesis):
    # the hypothesis refers to the ratio of ages of Arun and Deepak mentioned in the premise
    # the hypothesis estimates the age ratio to be more than 'min_arun_deepak_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the age ratio from the premise is lower than 'min_arun_deepak_ratio_hypothesis'
    if arun_deepak_ratio_premise <= min_arun_deepak_ratio_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(arun_deepak_ratio_premise, min_arun_deepak_ratio_hypothesis))
"
6020,contradiction,,contradiction,"Jane is currently 32 years old , and she stopped baby - sitting 10 years ago","Jane is currently more than 32 years old , and she stopped baby - sitting 10 years ago","jane is currently 32 years old , and she stopped baby - sitting 10 years ago","jane is currently more than 32 years old , and she stopped baby - sitting 10 years ago","age_premise = 32
age_hypothesis = 32
years_since_babysitting_premise = 10
years_since_babysitting_hypothesis = 10

def entailment_or_contradiction_or_neutral(age_premise, age_hypothesis, years_since_babysitting_premise, years_since_babysitting_hypothesis):
    # the hypothesis refers to Jane's age and how many years ago she stopped babysitting
    # check if the hypothesis contradicts the premise by checking if Jane's age from the hypothesis is less than or equal to 'age_premise' or the years since she stopped babysitting are different
    if age_hypothesis <= age_premise or years_since_babysitting_hypothesis != years_since_babysitting_premise:
        return False
    # if Jane's age from the hypothesis is greater than 'age_premise', it is consistent with the premise and thus neutral
    return None

print(entailment_or_contradiction_or_neutral(age_premise, age_hypothesis, years_since_babysitting_premise, years_since_babysitting_hypothesis))
"
6342,entailment,,entailment,288 and the true discount on the same sum for the same time is Rs,less than 588 and the true discount on the same sum for the same time is Rs,288 and the true discount on the same sum for the same time is rs,less than 588 and the true discount on the same sum for the same time is rs,"true_discount_premise = 288
max_true_discount_hypothesis = 588

def entailment_or_contradiction_or_neutral(true_discount_premise, max_true_discount_hypothesis):
    # the hypothesis refers to the true discount mentioned in the premise
    # the hypothesis estimates the true discount to be less than 'max_true_discount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if true discount reported in the premise is greater than 'max_true_discount_hypothesis'
    if true_discount_premise > max_true_discount_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(true_discount_premise, max_true_discount_hypothesis))
"
7542,entailment,,entailment,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","If the toy store is stocked with less than 5 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","if the toy store is stocked with less than 5 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","types_of_balls_premise = 3
types_of_board_games_premise = 6
items_selection_premise = 4

max_types_of_balls_hypothesis = 5
types_of_board_games_hypothesis = 6
items_selection_hypothesis = 4

# The function checks if the hypothesis contradicts or entails the premise.
def entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, items_selection_premise, max_types_of_balls_hypothesis, types_of_board_games_hypothesis, items_selection_hypothesis):
    # In the hypothesis, the number of types of balls is stated to be less than 5, which includes 3 types given in the premise
    # The number of types of board games and the number of items selected are the same in both the premise and the hypothesis
    # Check if the hypothesis contradicts the premise by checking if the number of types of balls in the hypothesis is greater than in the premise or 
    # if the number of types of board games or items selected in the hypothesis is different from the premise
    if max_types_of_balls_hypothesis < types_of_balls_premise or types_of_board_games_hypothesis != types_of_board_games_premise or items_selection_hypothesis != items_selection_premise:
        return False
    # Since all information in the hypothesis is included in the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, items_selection_premise, max_types_of_balls_hypothesis, types_of_board_games_hypothesis, items_selection_hypothesis))
"
6015,entailment,,entailment,Jane started baby - sitting when she was 20 years old,Jane started baby - sitting when she was less than 40 years old,jane started baby - sitting when she was 20 years old,jane started baby - sitting when she was less than 40 years old,"start_age_babysitting_premise = 20
max_start_age_babysitting_hypothesis = 40

def entailment_or_contradiction_or_neutral(start_age_babysitting_premise, max_start_age_babysitting_hypothesis):
    # the hypothesis refers to the starting age of babysitting mentioned in the premise
    # the hypothesis estimates the starting age to be less than 'max_start_age_babysitting_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the starting age reported in the premise is higher than 'max_start_age_babysitting_hypothesis'
    if start_age_babysitting_premise > max_start_age_babysitting_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(start_age_babysitting_premise, max_start_age_babysitting_hypothesis))
"
6384,entailment,,entailment,"Last week James worked a total of 45 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of less than 55 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 45 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of less than 55 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 45
max_james_work_hours_hypothesis = 55

def entailment_or_contradiction_or_neutral(james_work_hours_premise, max_james_work_hours_hypothesis):
    # the hypothesis talks about the total work hours of James last week, which is also mentioned in the premise
    # the hypothesis estimates the total work hours of James to be less than 'max_james_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work hours reported in the premise are more than 'max_james_work_hours_hypothesis'
    if james_work_hours_premise > max_james_work_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, max_james_work_hours_hypothesis))
"
4380,entailment,,entailment,"City A to city B , Andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 8 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 8 hour at 50 mph and for 3 hours at 60 mph","drive_speed_1_premise = 50
drive_speed_2_premise = 60
drive_time_1_premise = 1
drive_time_2_premise = 3

max_drive_time_1_hypothesis = 8
drive_time_2_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_speed_1_premise, drive_speed_2_premise, drive_time_1_premise, drive_time_2_premise, max_drive_time_1_hypothesis, drive_time_2_hypothesis):
    # the hypothesis refers to the time Andrew drove at certain speeds between city A and city B
    # the hypothesis estimates that the time spent driving at 'drive_speed_1_premise' is less than 'max_drive_time_1_hypothesis' and at 'drive_speed_2_premise' is 'drive_time_2_hypothesis'
    
    # check if the hypothesis contradicts the premise by checking if the time spent driving at the first speed in the premise is more than 'max_drive_time_1_hypothesis' 
    if drive_time_1_premise > max_drive_time_1_hypothesis:
        return False
    # check if the hypothesis contradicts the premise by checking if the time spent driving at the second speed in the premise is not equal to 'drive_time_2_hypothesis'
    elif drive_time_2_premise != drive_time_2_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_speed_1_premise, drive_speed_2_premise, drive_time_1_premise, drive_time_2_premise, max_drive_time_1_hypothesis, drive_time_2_hypothesis))
"
6005,contradiction,,contradiction,John needs 4 balls out of 10 balls,John needs 3 balls out of 10 balls,john needs 4 balls out of 10 balls,john needs 3 balls out of 10 balls,"balls_needed_premise = 4
balls_needed_hypothesis = 3

def entailment_or_contradiction_or_neutral(balls_needed_premise, balls_needed_hypothesis):
    # the hypothesis talks about the number of balls needed by John which is also referenced in the premise
    # if the quantity of balls needed in the hypothesis is not the same as in the premise, it contradicts the premise
    if balls_needed_hypothesis != balls_needed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(balls_needed_premise, balls_needed_hypothesis))
"
6394,neutral,,neutral,George ' s car calls for more than 7 ounces of oil for each cylinder used,George ' s car calls for 8 ounces of oil for each cylinder used,george ' s car calls for more than 7 ounces of oil for each cylinder used,george ' s car calls for 8 ounces of oil for each cylinder used,"min_oil_per_cylinder_premise = 7
oil_per_cylinder_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_oil_per_cylinder_premise, oil_per_cylinder_hypothesis):
    # the hypothesis talks about the oil requirement per cylinder for George's car, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_oil_per_cylinder_premise', by checking if the oil requirement from the hypothesis is lower or equal to 'min_oil_per_cylinder_premise'
    if oil_per_cylinder_hypothesis <= min_oil_per_cylinder_premise:
        return False
    # any oil requirement per cylinder greater than 7 ounces is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_oil_per_cylinder_premise, oil_per_cylinder_hypothesis))
"
7369,neutral,,neutral,The average of Suresh ’ s marks in English and History is more than 15,The average of Suresh ’ s marks in English and History is 55,the average of suresh ’ s marks in english and history is more than 15,the average of suresh ’ s marks in english and history is 55,"min_avg_marks_premise = 15
avg_marks_hypothesis = 55

def entailment_or_contradiction_or_neutral(min_avg_marks_premise, avg_marks_hypothesis):
    # the hypothesis refers to the average marks in English and History mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the average marks from the hypothesis is lower or equal to 'min_avg_marks_premise'
    if avg_marks_hypothesis <= min_avg_marks_premise:
        return False
    # any average marks greater than 15 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_avg_marks_premise, avg_marks_hypothesis))
"
7229,contradiction,,contradiction,"Nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","Nancy obtained 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","nancy obtained 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","# Marks obtained by Nancy in different subjects as per the premise
american_lit_premise = 66
history_premise = 75
home_eco_premise = 52
phy_edu_premise = 68
art_premise = 89

# Marks obtained by Nancy in different subjects as per the hypothesis
american_lit_hypothesis = 86
history_hypothesis = 75
home_eco_hypothesis = 52
phy_edu_hypothesis = 68
art_hypothesis = 89

def entailment_or_contradiction_or_neutral(american_lit_premise, history_premise, home_eco_premise, phy_edu_premise, art_premise, american_lit_hypothesis, history_hypothesis, home_eco_hypothesis, phy_edu_hypothesis, art_hypothesis):
    # the hypothesis discusses about the marks Nancy obtained in different subjects, which is also discussed in the premise
    # check if the hypothesis contradicts the premise by comparing the marks obtained in each subject
    if american_lit_premise != american_lit_hypothesis or history_premise != history_hypothesis or home_eco_premise != home_eco_hypothesis or phy_edu_premise != phy_edu_hypothesis or art_premise != art_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(american_lit_premise, history_premise, home_eco_premise, phy_edu_premise, art_premise, american_lit_hypothesis, history_hypothesis, home_eco_hypothesis, phy_edu_hypothesis, art_hypothesis))
"
7278,entailment,,entailment,"At Veridux Corporation , there are 210 employees","At Veridux Corporation , there are less than 510 employees","at veridux corporation , there are 210 employees","at veridux corporation , there are less than 510 employees","employees_veridux_premise = 210
max_employees_veridux_hypothesis = 510

def entailment_or_contradiction_or_neutral(employees_veridux_premise, max_employees_veridux_hypothesis):
    # the hypothesis refers to the number of employees at Veridux Corporation, mentioned in the premise
    # the hypothesis estimates the number of employees to be less than 'max_employees_veridux_hypothesis'
    # check if the hypothesis contradicts the premise by checking if employee count in the premise is more than 'max_employees_veridux_hypothesis'
    if employees_veridux_premise > max_employees_veridux_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_veridux_premise, max_employees_veridux_hypothesis))
"
6054,entailment,,entailment,How many miles from home can Aaron jog so that he spends a total of 3 hours jogging and walking ?,How many miles from home can Aaron jog so that he spends a total of less than 4 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of 3 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of less than 4 hours jogging and walking ?,"jog_walk_time_premise = 3
max_jog_walk_time_hypothesis = 4

def entailment_or_contradiction_or_neutral(jog_walk_time_premise, max_jog_walk_time_hypothesis):
    # the hypothesis refers to the time spent jogging and walking, also mentioned in the premise
    # the hypothesis estimates the time to be less than 'max_jog_walk_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the time reported in the premise is higher than 'max_jog_walk_time_hypothesis'
    if jog_walk_time_premise > max_jog_walk_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(jog_walk_time_premise, max_jog_walk_time_hypothesis))
"
6227,contradiction,,contradiction,Addison High School ’ s senior class has 300 boys and 240 girls,Addison High School ’ s senior class has more than 300 boys and 240 girls,addison high school ’ s senior class has 300 boys and 240 girls,addison high school ’ s senior class has more than 300 boys and 240 girls,"boys_premise = 300
girls_premise = 240
min_boys_hypothesis = 300
girls_hypothesis = 240

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis):
    # the hypothesis refers to the number of boys and girls in the senior class of Addison High School, mentioned in the premise
    # the hypothesis estimates the number of boys to be more than 'min_boys_hypothesis' and the girls to be equal to 'girls_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of boys reported in the premise is less than 'min_boys_hypothesis' or the girls are not equal to 'girls_hypothesis'
    if boys_premise <= min_boys_hypothesis or girls_premise != girls_hypothesis:
        return False
    # as the premise states that there are 300 boys and 240 girls, the hypothesis stating that there are more than 300 boys contradicts the premise
    return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis))
"
7338,entailment,,entailment,"If Sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","If Sanoop returned more than 4 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","if sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","if sanoop returned more than 4 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","tshirts_returned_premise = 5
min_tshirts_returned_hypothesis = 4

def entailment_or_contradiction_or_neutral(tshirts_returned_premise, min_tshirts_returned_hypothesis):
    # the hypothesis talks about the number of t-shirts returned by Sanoop, which is also referenced in the premise
    # the hypothesis estimates the number of returned t-shirts to more than 'min_tshirts_returned_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of returned t-shirts in the premise is less than or equal to 'min_tshirts_returned_hypothesis' 
    if tshirts_returned_premise <= min_tshirts_returned_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tshirts_returned_premise, min_tshirts_returned_hypothesis))
"
6031,neutral,,neutral,"During a car trip , Maria stopped to rest after she traveled less than 8 / 2 of the total distance to her destination","During a car trip , Maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled less than 8 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","max_travel_ratio_premise = 8 / 2
travel_ratio_hypothesis = 1 / 2

def entailment_or_contradiction_or_neutral(max_travel_ratio_premise, travel_ratio_hypothesis):
    # the hypothesis talks about the ratio of the travel distance covered when Maria stopped to rest, from the total distance to destination
    # check if the hypothesis contradicts the premise estimate of less than 'max_travel_ratio_premise', by checking if the travel ratio from the hypothesis is greater or equal to 'max_travel_ratio_premise'
    if travel_ratio_hypothesis >= max_travel_ratio_premise:
        return False
    # any ratio of travel distance covered less than 4 (max_travel_ratio_premise) is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_travel_ratio_premise, travel_ratio_hypothesis))
"
6120,entailment,,entailment,"If Sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","If Sanoop returned less than 8 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","if sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","if sanoop returned less than 8 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","tshirts_returned_premise = 4
max_tshirts_returned_hypothesis = 8

def entailment_or_contradiction_or_neutral(tshirts_returned_premise, max_tshirts_returned_hypothesis):
    # the hypothesis refers to the number of t-shirts returned as mentioned in the premise
    # the hypothesis states that the number of returned t-shirts is less than 'max_tshirts_returned_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of returned t-shirts in the premise is more than 'max_tshirts_returned_hypothesis'
    if tshirts_returned_premise > max_tshirts_returned_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tshirts_returned_premise, max_tshirts_returned_hypothesis))
"
6060,entailment,,entailment,Anita goes away and Indu leaves 7 days before the work is finished,Anita goes away and Indu leaves more than 1 days before the work is finished,anita goes away and indu leaves 7 days before the work is finished,anita goes away and indu leaves more than 1 days before the work is finished,"indu_leaves_days_premise = 7
min_indu_leaves_days_hypothesis = 1

def entailment_or_contradiction_or_neutral(indu_leaves_days_premise, min_indu_leaves_days_hypothesis):
    # the hypothesis refers to the number of days before the work is finished when Indu leaves, mentioned in the premise
    # the hypothesis estimates the number of days to be more than 'min_indu_leaves_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of days reported in the premise are less than 'min_indu_leaves_days_hypothesis'
    if indu_leaves_days_premise < min_indu_leaves_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(indu_leaves_days_premise, min_indu_leaves_days_hypothesis))
"
6242,contradiction,,contradiction,"If the ratio of area of triangle ADE to that of the trapezium DECB is 144 : 25 and BC = 13 cm , then find the length of DE .","If the ratio of area of triangle ADE to that of the trapezium DECB is 244 : 25 and BC = 13 cm , then find the length of DE .","if the ratio of area of triangle ade to that of the trapezium decb is 144 : 25 and bc = 13 cm , then find the length of de .","if the ratio of area of triangle ade to that of the trapezium decb is 244 : 25 and bc = 13 cm , then find the length of de .","ratio_premise = 144/25
ratio_hypothesis = 244/25
BC_length_premise = 13
BC_length_hypothesis = 13

def entailment_or_contradiction_or_neutral(ratio_premise, ratio_hypothesis, BC_length_premise, BC_length_hypothesis):
    # the hypothesis refers to the ratio of areas and the length of BC
    # check if the hypothesis contradicts the premise by comparing the numbers for ratio and BC length
    if ratio_premise != ratio_hypothesis or BC_length_premise != BC_length_hypothesis:
        return False
    # if the numbers are the same, it means that the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(ratio_premise, ratio_hypothesis, BC_length_premise, BC_length_hypothesis))
"
6093,entailment,,entailment,The product of all the possible units digits of Sophie Germain primes greater than 9 is,The product of all the possible units digits of Sophie Germain primes greater than more than 8 is,the product of all the possible units digits of sophie germain primes greater than 9 is,the product of all the possible units digits of sophie germain primes greater than more than 8 is,"# The premise and hypothesis both refer to the product of all possible units digits of Sophie Germain primes.
# However, they differ on the lower limit of the primes being considered, with the premise specifying ""greater than 9""
# and the hypothesis specifying ""greater than 8"". 

# Considering the nature of the Sophie Germain primes, the only possible units digits are 1, 3, 7, 9. 
# Therefore, the product will be the same regardless of whether the lower limit is 8 or 9, as both are less than the smallest two-digit Sophie Germain prime (11). 

# As a result, the hypothesis does not contradict the premise and also entails the premise, as the product of all possible units digits of Sophie Germain primes will not change with a slight adjustment of the lower limit. 

# Therefore, the script would simply return True, as the hypothesis entails the premise:

def entailment_or_contradiction_or_neutral():
    # There is no contradiction nor neutrality, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral())
"
6302,contradiction,,contradiction,"Each week , James is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first more than 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first more than 40 hours and 2 x dollars for each additional hour worked that week","hours_premise = 40
hours_hypothesis = 40

def entailment_or_contradiction_or_neutral(hours_premise, hours_hypothesis):
    # the hypothesis talks about the number of hours James is paid x dollars per hour, referenced also in the premise
    # hypothesis mentions 'more than 40 hours' which contradicts the premise mentioning 'first 40 hours'
    return False

print(entailment_or_contradiction_or_neutral(hours_premise, hours_hypothesis))
"
6207,entailment,,entailment,Preethi has 6 flavors of ice cream in his parlor,Preethi has more than 1 flavors of ice cream in his parlor,preethi has 6 flavors of ice cream in his parlor,preethi has more than 1 flavors of ice cream in his parlor,"flavors_ice_cream_parlor_premise = 6
min_flavors_ice_cream_parlor_hypothesis = 1

def entailment_or_contradiction_or_neutral(flavors_ice_cream_parlor_premise, min_flavors_ice_cream_parlor_hypothesis):
    # the hypothesis talks about the number of ice cream flavors in Preethi's parlor, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of flavors from the premise is lower than or equal to 'min_flavors_ice_cream_parlor_hypothesis'
    if flavors_ice_cream_parlor_premise <= min_flavors_ice_cream_parlor_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(flavors_ice_cream_parlor_premise, min_flavors_ice_cream_parlor_hypothesis))
"
6011,contradiction,,contradiction,Karen places a bet with Tom that she will beat Tom in a car race by 4 miles even if Karen starts 4 minutes late,Karen places a bet with Tom that she will beat Tom in a car race by 6 miles even if Karen starts 4 minutes late,karen places a bet with tom that she will beat tom in a car race by 4 miles even if karen starts 4 minutes late,karen places a bet with tom that she will beat tom in a car race by 6 miles even if karen starts 4 minutes late,"winning_margin_premise = 4
winning_margin_hypothesis = 6

def entailment_or_contradiction_or_neutral(winning_margin_premise, winning_margin_hypothesis):
    # The hypothesis and the premise both refer to the winning margin of Karen in a car race
    # Check if the hypothesis contradicts the premise by stating a bigger winning margin than that in the premise
    if winning_margin_hypothesis > winning_margin_premise:
        return False
    # If the winning margin in the hypothesis is equal to or less than that in the premise, the hypothesis is entailed in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(winning_margin_premise, winning_margin_hypothesis))
"
6233,contradiction,,contradiction,Bruce and Anne can clean their house in 4 hours working together at their respective constant rates,Bruce and Anne can clean their house in 3 hours working together at their respective constant rates,bruce and anne can clean their house in 4 hours working together at their respective constant rates,bruce and anne can clean their house in 3 hours working together at their respective constant rates,"cleaning_time_premise = 4
cleaning_time_hypothesis = 3

def entailment_or_contradiction_or_neutral(cleaning_time_premise, cleaning_time_hypothesis):
    # the hypothesis refers to the time Bruce and Anne takes to clean their house, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the cleaning time reported in the hypothesis is less than the premise
    if cleaning_time_hypothesis < cleaning_time_premise:
        return False
    # if the cleaning time is the same in the hypothesis and premise, it is entailed
    elif cleaning_time_hypothesis == cleaning_time_premise:
        return True
    # any other case is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(cleaning_time_premise, cleaning_time_hypothesis))
"
6373,neutral,,neutral,Shreehari has less than 425 pencils,Shreehari has 125 pencils,shreehari has less than 425 pencils,shreehari has 125 pencils,"max_pencils_shreehari_premise = 425
pencils_shreehari_hypothesis = 125

def entailment_or_contradiction_or_neutral(max_pencils_shreehari_premise, pencils_shreehari_hypothesis):
    # the hypothesis refers to the number of pencils Shreehari has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_pencils_shreehari_premise', by checking if the number of pencils from the hypothesis is greater or equal to 'max_pencils_shreehari_premise'
    if pencils_shreehari_hypothesis >= max_pencils_shreehari_premise:
        return False
    # any number of pencils less than 425 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_pencils_shreehari_premise, pencils_shreehari_hypothesis))
"
1402,neutral,,neutral,"What is the share of Sravan , if Sreedhar alone can do the work in more than 25 days ?","What is the share of Sravan , if Sreedhar alone can do the work in 75 days ?","what is the share of sravan , if sreedhar alone can do the work in more than 25 days ?","what is the share of sravan , if sreedhar alone can do the work in 75 days ?","min_days_sreedhar_premise = 25
days_sreedhar_hypothesis = 75

def entailment_or_contradiction_or_neutral(min_days_sreedhar_premise, days_sreedhar_hypothesis):
    # the hypothesis talks about the number of days Sreedhar can do the work alone, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_days_sreedhar_premise', by checking if the number of days from the hypothesis is lower or equal to 'min_days_sreedhar_premise'
    if days_sreedhar_hypothesis <= min_days_sreedhar_premise:
        return False
    # any number of days greater than 25 is consistent with the premise, so there is no contradiction
    # however, the hypothesis doesn't necessarily entail the premise because it specifies a different number of days, so it is neutral
    return None

print(entailment_or_contradiction_or_neutral(min_days_sreedhar_premise, days_sreedhar_hypothesis))
"
6262,neutral,,neutral,"Annie , working alone , can do the same job in just less than 40 hours","Annie , working alone , can do the same job in just 10 hours","annie , working alone , can do the same job in just less than 40 hours","annie , working alone , can do the same job in just 10 hours","max_hours_annie_premise = 40
hours_annie_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_hours_annie_premise, hours_annie_hypothesis):
    # the hypothesis refers to the time Annie needs to do a job, which is also mentioned in the premise
    # the hypothesis estimates that Annie needs 'hours_annie_hypothesis' to finish the job
    # check if the hypothesis contradicts the premise by checking if the number of hours in the hypothesis is greater or equal to 'max_hours_annie_premise'
    if hours_annie_hypothesis >= max_hours_annie_premise:
        return False
    # any number of hours less than 'max_hours_annie_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_hours_annie_premise, hours_annie_hypothesis))
"
6100,neutral,,neutral,It will take less than 86 days for Mary to complete a certain task alone,It will take 16 days for Mary to complete a certain task alone,it will take less than 86 days for mary to complete a certain task alone,it will take 16 days for mary to complete a certain task alone,"max_days_to_complete_task_premise = 86
days_to_complete_task_hypothesis = 16

def entailment_or_contradiction_or_neutral(max_days_to_complete_task_premise, days_to_complete_task_hypothesis):
    # the hypothesis talks about the number of days Mary will take to complete a task alone, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_days_to_complete_task_premise', by checking if the number of days from the hypothesis is greater than 'max_days_to_complete_task_premise'
    if days_to_complete_task_hypothesis > max_days_to_complete_task_premise:
        return False
    # any number of days less than 86 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_days_to_complete_task_premise, days_to_complete_task_hypothesis))
"
6291,entailment,,entailment,"Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained more than 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained more than 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","english_mark_premise = 76
math_mark_premise = 65
chem_mark_premise = 82
bio_mark_premise = 67
phys_mark_premise = 85

min_english_mark_hypothesis = 46
min_math_mark_hypothesis = 65
min_chem_mark_hypothesis = 82
min_bio_mark_hypothesis = 67
min_phys_mark_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_mark_premise, math_mark_premise, chem_mark_premise, bio_mark_premise, phys_mark_premise, min_english_mark_hypothesis, min_math_mark_hypothesis, min_chem_mark_hypothesis, min_bio_mark_hypothesis, min_phys_mark_hypothesis):
    # the hypothesis refers to the marks obtained by Arun in different subjects, mentioned in the premise
    # the hypothesis states that the marks are more than the minimum values mentioned
    # check if the hypothesis contradicts the premise by checking if any of the marks in the premise are lower than the corresponding minimum marks in the hypothesis
    if english_mark_premise < min_english_mark_hypothesis or math_mark_premise < min_math_mark_hypothesis or chem_mark_premise < min_chem_mark_hypothesis or bio_mark_premise < min_bio_mark_hypothesis or phys_mark_premise < min_phys_mark_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(english_mark_premise, math_mark_premise, chem_mark_premise, bio_mark_premise, phys_mark_premise, min_english_mark_hypothesis, min_math_mark_hypothesis, min_chem_mark_hypothesis, min_bio_mark_hypothesis, min_phys_mark_hypothesis))
"
6040,neutral,,neutral,Xavier starts from P towards Q at a speed of more than 10 kmph and after every 12 mins increases his speed by 20 kmph,Xavier starts from P towards Q at a speed of 90 kmph and after every 12 mins increases his speed by 20 kmph,xavier starts from p towards q at a speed of more than 10 kmph and after every 12 mins increases his speed by 20 kmph,xavier starts from p towards q at a speed of 90 kmph and after every 12 mins increases his speed by 20 kmph,"initial_speed_premise = 10
initial_speed_hypothesis = 90
speed_increment = 20

def entailment_or_contradiction_or_neutral(initial_speed_premise, initial_speed_hypothesis, speed_increment):
    # the hypothesis talks about Xavier's initial speed and speed increment, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'initial_speed_premise', by checking if the initial speed from the hypothesis is lower or equal to 'initial_speed_premise'
    if initial_speed_hypothesis <= initial_speed_premise:
        return False
    # any initial speed greater than 10 kmph is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(initial_speed_premise, initial_speed_hypothesis, speed_increment))
"
6196,neutral,,neutral,Two dogsled teams raced across a more than 100 mile course in Wyoming,Two dogsled teams raced across a 300 mile course in Wyoming,two dogsled teams raced across a more than 100 mile course in wyoming,two dogsled teams raced across a 300 mile course in wyoming,"min_race_distance_premise = 100
race_distance_hypothesis = 300

def entailment_or_contradiction_or_neutral(min_race_distance_premise, race_distance_hypothesis):
    # the hypothesis talks about the race distance, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the race distance in the hypothesis is less than or equal to the minimum distance in the premise
    if race_distance_hypothesis <= min_race_distance_premise:
        return False
    # since the premise only provides a minimum distance, any distance greater than that is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_race_distance_premise, race_distance_hypothesis))
"
7258,neutral,,neutral,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is less than 4 : 3 ?,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 2 : 3 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is less than 4 : 3 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 2 : 3 ?,"max_ratio_premise = 4/3
ratio_hypothesis = 2/3

def entailment_or_contradiction_or_neutral(max_ratio_premise, ratio_hypothesis):
    # the hypothesis refers to the ratio of distances between A to B and B to C
    # check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is greater than 'max_ratio_premise'
    if ratio_hypothesis > max_ratio_premise:
        return False
    # if the ratio in the hypothesis is less than 'max_ratio_premise', it is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_ratio_premise, ratio_hypothesis))
"
6087,entailment,,entailment,After they have worked together for 12 days Matt stops and Peter completes the remaining work in 10 days,After they have worked together for less than 52 days Matt stops and Peter completes the remaining work in 10 days,after they have worked together for 12 days matt stops and peter completes the remaining work in 10 days,after they have worked together for less than 52 days matt stops and peter completes the remaining work in 10 days,"together_work_days_premise = 12
max_together_work_days_hypothesis = 52
remaining_work_days_premise = remaining_work_days_hypothesis = 10

def entailment_or_contradiction_or_neutral(together_work_days_premise, max_together_work_days_hypothesis, remaining_work_days_premise, remaining_work_days_hypothesis):
    # the hypothesis refers to the number of days they worked together and number of days Peter worked alone mentioned in the premise
    # the hypothesis estimates the work days together to be less or equal to 'max_together_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work days together reported in the premise is more than 'max_together_work_days_hypothesis'
    if together_work_days_premise > max_together_work_days_hypothesis or remaining_work_days_premise != remaining_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(together_work_days_premise, max_together_work_days_hypothesis, remaining_work_days_premise, remaining_work_days_hypothesis))
"
6316,neutral,,neutral,"If ` ` YELLOW ' ' is given a color code of more than 62 , what is the difference between ` ` BROWN ' ' and ` ` RED ' ' ?","If ` ` YELLOW ' ' is given a color code of 92 , what is the difference between ` ` BROWN ' ' and ` ` RED ' ' ?","if ` ` yellow ' ' is given a color code of more than 62 , what is the difference between ` ` brown ' ' and ` ` red ' ' ?","if ` ` yellow ' ' is given a color code of 92 , what is the difference between ` ` brown ' ' and ` ` red ' ' ?","min_color_code_yellow_premise = 62
color_code_yellow_hypothesis = 92

def entailment_or_contradiction_or_neutral(min_color_code_yellow_premise, color_code_yellow_hypothesis):
    # the hypothesis talks about the color code of 'YELLOW', which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_color_code_yellow_premise', by checking if the color code of 'YELLOW' from the hypothesis is lower or equal to 'min_color_code_yellow_premise'
    if color_code_yellow_hypothesis <= min_color_code_yellow_premise:
        return False
    # any color code for 'YELLOW' greater than 62 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_color_code_yellow_premise, color_code_yellow_hypothesis))
"
6165,entailment,,entailment,I want to give 95 $ to John,I want to give more than 85 $ to John,i want to give 95 $ to john,i want to give more than 85 $ to john,"money_to_give_john_premise = 95
min_money_to_give_john_hypothesis = 85

def entailment_or_contradiction_or_neutral(money_to_give_john_premise, min_money_to_give_john_hypothesis):
    # both the premise and hypothesis are talking about the amount of money to be given to John
    # the hypothesis states that the amount is more than 'min_money_to_give_john_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the amount in the premise is less than 'min_money_to_give_john_hypothesis'
    if money_to_give_john_premise < min_money_to_give_john_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(money_to_give_john_premise, min_money_to_give_john_hypothesis))
"
7089,entailment,,entailment,Mary has a monthly salary of $ 1200,Mary has a monthly salary of $ less than 3200,mary has a monthly salary of $ 1200,mary has a monthly salary of $ less than 3200,"mary_salary_premise = 1200
max_mary_salary_hypothesis = 3200

def entailment_or_contradiction_or_neutral(mary_salary_premise, max_mary_salary_hypothesis):
    # the hypothesis refers to Mary's salary mentioned in the premise
    # the hypothesis estimates the salary to less than 'max_mary_salary_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the salary is more than 'max_mary_salary_hypothesis'
    if mary_salary_premise > max_mary_salary_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(mary_salary_premise, max_mary_salary_hypothesis))
"
6074,contradiction,,contradiction,"Jerry travels 8 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","Jerry travels 5 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 8 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 5 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","first_travel_distance_premise = 8
average_speed_first_travel_premise = 40
stop_time_premise = 15
second_travel_distance_premise = 20
average_speed_second_travel_premise = 60

first_travel_distance_hypothesis = 5
average_speed_first_travel_hypothesis = 40
stop_time_hypothesis = 15
second_travel_distance_hypothesis = 20
average_speed_second_travel_hypothesis = 60

def entailment_or_contradiction_or_neutral(first_travel_distance_premise, average_speed_first_travel_premise, stop_time_premise, second_travel_distance_premise, average_speed_second_travel_premise, first_travel_distance_hypothesis, average_speed_first_travel_hypothesis, stop_time_hypothesis, second_travel_distance_hypothesis, average_speed_second_travel_hypothesis):
    # the hypothesis refers to Jerry's travels mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing each of the travel details
    if first_travel_distance_premise != first_travel_distance_hypothesis or average_speed_first_travel_premise != average_speed_first_travel_hypothesis or stop_time_premise != stop_time_hypothesis or second_travel_distance_premise != second_travel_distance_hypothesis or average_speed_second_travel_premise != average_speed_second_travel_hypothesis:
        return False
    # if there is no contradiction, it means that the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(first_travel_distance_premise, average_speed_first_travel_premise, stop_time_premise, second_travel_distance_premise, average_speed_second_travel_premise, first_travel_distance_hypothesis, average_speed_first_travel_hypothesis, stop_time_hypothesis, second_travel_distance_hypothesis, average_speed_second_travel_hypothesis))
"
7403,contradiction,,contradiction,"City A to city B , Andrew drove for 1 hr at 46 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 3 hr at 46 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 46 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 3 hr at 46 mph and for 3 hours at 60 mph","# Driving time at 46 mph for premise and hypothesis
drive_time_46mph_premise = 1
drive_time_46mph_hypothesis = 3

# Driving time at 60 mph for premise and hypothesis
drive_time_60mph_premise = 3
drive_time_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_time_46mph_premise, drive_time_46mph_hypothesis, drive_time_60mph_premise, drive_time_60mph_hypothesis):
    # the hypothesis talks about the driving time at 46 mph and 60 mph from city A to B, both mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the driving times at 46 mph and 60 mph in the hypothesis are more than in the premise
    if drive_time_46mph_hypothesis > drive_time_46mph_premise or drive_time_60mph_hypothesis > drive_time_60mph_premise:
        return False
    # check if the hypothesis entails the premise by checking if the driving times at 46 mph and 60 mph in the hypothesis are equal to in the premise
    elif drive_time_46mph_hypothesis == drive_time_46mph_premise and drive_time_60mph_hypothesis == drive_time_60mph_premise:
        return True
    # if the hypothesis does not contradict or entail the premise, it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(drive_time_46mph_premise, drive_time_46mph_hypothesis, drive_time_60mph_premise, drive_time_60mph_hypothesis))
"
7543,neutral,,neutral,"If the toy store is stocked with less than 5 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","if the toy store is stocked with less than 5 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","types_of_balls_premise = 5
types_of_board_games_premise = 6
types_of_balls_hypothesis = 3
types_of_board_games_hypothesis = 6

def entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis):
    # the hypothesis refers to the number of types of balls and board games in the toy store mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of types of balls or board games in the hypothesis is greater than in the premise
    if types_of_balls_hypothesis > types_of_balls_premise or types_of_board_games_hypothesis > types_of_board_games_premise:
        return False
    # the number of types of balls in the hypothesis is less than in the premise and the number of types of board games is the same in the hypothesis and the premise
    # so the hypothesis is consistent with the premise, but does not provide any additional information, thus it's neutral
    return None

print(entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis))
"
7512,entailment,,entailment,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of less than 4 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of less than 4 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","shirt_count_premise = 1
shirt_count_hypothesis = 4

def entailment_or_contradiction_or_neutral(shirt_count_premise, shirt_count_hypothesis):
    # the hypothesis refers to the number of shirts in an outfit, which is also mentioned in the premise
    # the hypothesis estimates the shirt count as less than 'shirt_count_hypothesis'
    # check if the hypothesis contradicts the premise by checking if shirt count mentioned in the premise is more or equal to 'shirt_count_hypothesis'
    if shirt_count_premise >= shirt_count_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shirt_count_premise, shirt_count_hypothesis))
"
6070,neutral,,neutral,"The more than 1 nd builder builds in 15 days , then how many 2 ' s are used by the builder from Chennai in numbering the 100 homes ?","The 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from Chennai in
numbering the 100 homes ?","the more than 1 nd builder builds in 15 days , then how many 2 ' s are used by the builder from chennai in numbering the 100 homes ?","the 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from chennai innumbering the 100 homes ?","builder_number_premise = 1
builder_number_hypothesis = 2

def entailment_or_contradiction_or_neutral(builder_number_premise, builder_number_hypothesis):
    # the hypothesis refers to the builder number in the premise
    # check if the hypothesis contradicts the premise by checking if the builder number in the hypothesis is less or equal to the builder number in the premise
    if builder_number_hypothesis <= builder_number_premise:
        return False
    # if the builder number in the hypothesis is greater than the builder number in the premise, it doesn't contradict or entail the premise, hence it is neutral
    return None

print(entailment_or_contradiction_or_neutral(builder_number_premise, builder_number_hypothesis))
"
5967,entailment,,entailment,Dawson runs the first leg of the course in 38 seconds,Dawson runs the first leg of the course in more than 28 seconds,dawson runs the first leg of the course in 38 seconds,dawson runs the first leg of the course in more than 28 seconds,"first_leg_time_premise = 38
min_first_leg_time_hypothesis = 28

def entailment_or_contradiction_or_neutral(first_leg_time_premise, min_first_leg_time_hypothesis):
    # the hypothesis refers to the time Dawson runs the first leg of the course, mentioned in the premise
    # the hypothesis estimates the time to more than 'min_first_leg_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the time reported in the premise is less than 'min_first_leg_time_hypothesis'
    if first_leg_time_premise <= min_first_leg_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(first_leg_time_premise, min_first_leg_time_hypothesis))
"
7466,contradiction,,contradiction,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","If the toy store is stocked with less than 3 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","if the toy store is stocked with less than 3 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","toy_store_balls_premise = 3
toy_store_board_games_premise = 6
toy_store_balls_hypothesis = 2
toy_store_board_games_hypothesis = 6

def entailment_or_contradiction_or_neutral(toy_store_balls_premise, toy_store_board_games_premise, toy_store_balls_hypothesis, toy_store_board_games_hypothesis):
    # the hypothesis talks about the number of types of balls and board games in a toy store, referenced also in the premise
    # the hypothesis suggests fewer types of balls than the premise states
    # check if the hypothesis contradicts the premise by checking if the number of types of balls and board games mentioned in the hypothesis is equal to the premise
    if toy_store_balls_hypothesis >= toy_store_balls_premise and toy_store_board_games_hypothesis == toy_store_board_games_premise:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(toy_store_balls_premise, toy_store_board_games_premise, toy_store_balls_hypothesis, toy_store_board_games_hypothesis))
"
6809,contradiction,,contradiction,"If Yolanda ' s walking rate was 3 miles per hour and Bob т ' s was 4 miles per hour , how many miles had Bob walked when they met ?","If Yolanda ' s walking rate was 5 miles per hour and Bob т ' s was 4 miles per hour , how many miles had Bob walked when they met ?","if yolanda ' s walking rate was 3 miles per hour and bob т ' s was 4 miles per hour , how many miles had bob walked when they met ?","if yolanda ' s walking rate was 5 miles per hour and bob т ' s was 4 miles per hour , how many miles had bob walked when they met ?","yolanda_speed_premise = 3
bob_speed_premise = 4
yolanda_speed_hypothesis = 5
bob_speed_hypothesis = 4

def entailment_or_contradiction_or_neutral(yolanda_speed_premise, bob_speed_premise, yolanda_speed_hypothesis, bob_speed_hypothesis):
    # the hypothesis contradicts the premise if Yolanda's speed or Bob's speed doesn't match the speeds mentioned in the premise
    if yolanda_speed_premise != yolanda_speed_hypothesis or bob_speed_premise != bob_speed_hypothesis:
        return False
    # if the speeds match, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(yolanda_speed_premise, bob_speed_premise, yolanda_speed_hypothesis, bob_speed_hypothesis))
"
6858,entailment,,entailment,"If Jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked more than 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked more than 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","walk_distance_premise = 4
min_walk_distance_hypothesis = 3

def entailment_or_contradiction_or_neutral(walk_distance_premise, min_walk_distance_hypothesis):
    # the hypothesis refers to the distance walked by Jack mentioned in the premise
    # the hypothesis estimates the walked distance to more than 'min_walk_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if distance walked in the premise is lower than 'min_walk_distance_hypothesis'
    if walk_distance_premise < min_walk_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(walk_distance_premise, min_walk_distance_hypothesis))
"
7437,entailment,,entailment,The London Racetrack needs to submit its 3 fastest horses to the Kentucky Derby out of 25 horses,The London Racetrack needs to submit its less than 4 fastest horses to the Kentucky Derby out of 25 horses,the london racetrack needs to submit its 3 fastest horses to the kentucky derby out of 25 horses,the london racetrack needs to submit its less than 4 fastest horses to the kentucky derby out of 25 horses,"fastest_horses_premise = 3
max_fastest_horses_hypothesis = 4
total_horses = 25

def entailment_or_contradiction_or_neutral(fastest_horses_premise, max_fastest_horses_hypothesis, total_horses):
    # the hypothesis refers to the number of fastest horses the London Racetrack needs to submit to the Kentucky Derby, also mentioned in the premise
    # the hypothesis estimates the number of fastest horses to less than 'max_fastest_horses_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of fastest horses mentioned in the premise is more than 'max_fastest_horses_hypothesis'
    if fastest_horses_premise >= max_fastest_horses_hypothesis:
        return False
    else:
        # the fact that the premise has exactly 3 fastest horses to submit and the hypothesis has less than 4 fastest horses to submit, means the hypothesis entails the premise
        return True

print(entailment_or_contradiction_or_neutral(fastest_horses_premise, max_fastest_horses_hypothesis, total_horses))
"
6203,contradiction,,contradiction,"On the first day of her vacation , Louisa traveled 200 miles","On the first day of her vacation , Louisa traveled more than 200 miles","on the first day of her vacation , louisa traveled 200 miles","on the first day of her vacation , louisa traveled more than 200 miles","traveled_miles_premise = 200
min_traveled_miles_hypothesis = 200

def entailment_or_contradiction_or_neutral(traveled_miles_premise, min_traveled_miles_hypothesis):
    # the hypothesis talks about the distance traveled by Louisa on her first vacation day, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of 'traveled_miles_premise', by checking if the distance from the hypothesis is less or equal to 'traveled_miles_premise'
    if min_traveled_miles_hypothesis <= traveled_miles_premise:
        return False
    # any distance greater than 200 miles is inconsistent with the premise, so the hypothesis contradicts the premise
    return None

print(entailment_or_contradiction_or_neutral(traveled_miles_premise, min_traveled_miles_hypothesis))
"
6312,entailment,,entailment,How many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,How many ways are there for more than 2 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,how many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,how many ways are there for more than 2 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,"males_premise = 4
females_premise = 3
min_males_hypothesis = 3

def entailment_or_contradiction_or_neutral(males_premise, females_premise, min_males_hypothesis):
    # both the premise and the hypothesis talk about the seating arrangement of males and females around a circular table
    # the hypothesis states a minimum number of males that could sit around the table
    # check if the hypothesis contradicts the premise by checking if there are fewer males in the premise than the minimum stated in the hypothesis
    if males_premise < min_males_hypothesis:
        return False
    # check if the hypothesis is entailed by the premise by checking if the number of males and females in the premise is the same as in the hypothesis
    elif males_premise >= min_males_hypothesis and females_premise == 3:
        return True
    # if there is no contradiction or entailment, the hypothesis is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(males_premise, females_premise, min_males_hypothesis))
"
6083,contradiction,,contradiction,"If Rahul finds that he is 12 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","If Rahul finds that he is 22 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","if rahul finds that he is 12 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","if rahul finds that he is 22 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","rahul_position_right_premise = 12
rahul_position_left_premise = 4
total_boys_premise = 28

rahul_position_right_hypothesis = 22
rahul_position_left_hypothesis = 4
total_boys_hypothesis = 28

def entailment_or_contradiction_or_neutral(rahul_position_right_premise, rahul_position_left_premise, total_boys_premise, rahul_position_right_hypothesis, rahul_position_left_hypothesis, total_boys_hypothesis):
    # the hypothesis and premise both refer to Rahul's positions in the line and the total number of boys
    # check if the hypothesis contradicts the premise, by comparing Rahul's positions and the total number of boys
    if rahul_position_right_premise != rahul_position_right_hypothesis or rahul_position_left_premise != rahul_position_left_hypothesis or total_boys_premise != total_boys_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, check if it entails the premise
    # since the hypothesis and premise describe the same situations, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(rahul_position_right_premise, rahul_position_left_premise, total_boys_premise, rahul_position_right_hypothesis, rahul_position_left_hypothesis, total_boys_hypothesis))
"
6155,contradiction,,contradiction,In 21 years John will be twice as old as Wilson will be then,In 71 years John will be twice as old as Wilson will be then,in 21 years john will be twice as old as wilson will be then,in 71 years john will be twice as old as wilson will be then,"years_john_twice_old_premise = 21
years_john_twice_old_hypothesis = 71

def entailment_or_contradiction_or_neutral(years_john_twice_old_premise, years_john_twice_old_hypothesis):
    # the hypothesis refers to the number of years in which John will be twice as old as Wilson, mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing 'years_john_twice_old_premise' with 'years_john_twice_old_hypothesis'
    if years_john_twice_old_premise != years_john_twice_old_hypothesis:
        return False
    # if the years are the same, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(years_john_twice_old_premise, years_john_twice_old_hypothesis))
"
6130,neutral,,neutral,"Each week , Harry is paid x dollars per hour for the first more than 11 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first more than 11 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","min_hours_premise = 11
hours_hypothesis = 21

def entailment_or_contradiction_or_neutral(min_hours_premise, hours_hypothesis):
    # the hypothesis talks about the number of hours Harry works, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_hours_premise', by checking if the number of hours from the hypothesis is lower or equal to 'min_hours_premise'
    if hours_hypothesis <= min_hours_premise:
        return False
    # any number of hours greater than 11 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_premise, hours_hypothesis))
"
6021,entailment,,entailment,Dana borrows 5000 pounds annually for her college education,Dana borrows more than 2000 pounds annually for her college education,dana borrows 5000 pounds annually for her college education,dana borrows more than 2000 pounds annually for her college education,"annual_borrowing_premise = 5000
min_annual_borrowing_hypothesis = 2000

def entailment_or_contradiction_or_neutral(annual_borrowing_premise, min_annual_borrowing_hypothesis):
    # the hypothesis refers to the annual borrowing mentioned in the premise
    # the hypothesis estimates the borrowing to be more than 'min_annual_borrowing_hypothesis'
    # check if the hypothesis contradicts the premise by checking if annual borrowing reported in the premise is less than or equal to 'min_annual_borrowing_hypothesis'
    if annual_borrowing_premise <= min_annual_borrowing_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(annual_borrowing_premise, min_annual_borrowing_hypothesis))
"
7427,contradiction,,contradiction,"David obtained 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in English , mathematics , physics , chemistry and biology","David obtained less than 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in English , mathematics , physics , chemistry and biology","david obtained 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","david obtained less than 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","# Extracting the scores obtained by David in different subjects from the premise and hypothesis.
english_score_premise = 76
mathematics_score_premise = 65
physics_score_premise = 82
chemistry_score_premise = 67
biology_score_premise = 85

english_score_hypothesis = 76
mathematics_score_hypothesis = 65
physics_score_hypothesis = 82
chemistry_score_hypothesis = 67
biology_score_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_score_premise, mathematics_score_premise, physics_score_premise, chemistry_score_premise, biology_score_premise, english_score_hypothesis, mathematics_score_hypothesis, physics_score_hypothesis, chemistry_score_hypothesis, biology_score_hypothesis):
    # The hypothesis talks about the scores obtained by David in different subjects, also mentioned in the premise.
    # The hypothesis claims that David obtained less than the marks mentioned in the premise. 
    # If any of the hypothesis scores is greater or equal to the corresponding premise score, it's a contradiction.
    if english_score_hypothesis >= english_score_premise or mathematics_score_hypothesis >= mathematics_score_premise or physics_score_hypothesis >= physics_score_premise or chemistry_score_hypothesis >= chemistry_score_premise or biology_score_hypothesis >= biology_score_premise:
        return False
    # If all the hypothesis scores are less than the corresponding premise scores, it's an entailment.
    elif english_score_hypothesis < english_score_premise and mathematics_score_hypothesis < mathematics_score_premise and physics_score_hypothesis < physics_score_premise and chemistry_score_hypothesis < chemistry_score_premise and biology_score_hypothesis < biology_score_premise:
        return True
    # If some scores are less and some are equal to the premise scores, it's neutral.
    else:
        return None

print(entailment_or_contradiction_or_neutral(english_score_premise, mathematics_score_premise, physics_score_premise, chemistry_score_premise, biology_score_premise, english_score_hypothesis, mathematics_score_hypothesis, physics_score_hypothesis, chemistry_score_hypothesis, biology_score_hypothesis))
"
6848,contradiction,,contradiction,The compound interest earned by Sunil on a certain amount at the end of two years at the rate of 8 % p,The compound interest earned by Sunil on a certain amount at the end of two years at the rate of 4 % p,the compound interest earned by sunil on a certain amount at the end of two years at the rate of 8 % p,the compound interest earned by sunil on a certain amount at the end of two years at the rate of 4 % p,"interest_rate_premise = 8
interest_rate_hypothesis = 4

def entailment_or_contradiction_or_neutral(interest_rate_premise, interest_rate_hypothesis):
    # the hypothesis refers to the interest rate of Sunil's investment
    # check if the hypothesis contradicts the premise by comparing if the interest rate in the hypothesis is different than the interest rate in the premise
    if interest_rate_premise != interest_rate_hypothesis:
        return False
    # if the interest rates are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(interest_rate_premise, interest_rate_hypothesis))
"
6959,contradiction,,contradiction,Venkat purchased twenty dozens of toys at the rate of 375 per dozen,Venkat purchased twenty dozens of toys at the rate of 675 per dozen,venkat purchased twenty dozens of toys at the rate of 375 per dozen,venkat purchased twenty dozens of toys at the rate of 675 per dozen,"toys_purchased_premise = 20
rate_per_dozen_premise = 375
toys_purchased_hypothesis = 20
rate_per_dozen_hypothesis = 675

def entailment_or_contradiction_or_neutral(toys_purchased_premise, rate_per_dozen_premise, toys_purchased_hypothesis, rate_per_dozen_hypothesis):
    # both the premise and hypothesis refer to the number of toys purchased and the rate per dozen
    # check if the hypothesis contradicts the premise by checking if the number of toys purchased and the rate per dozen are the same
    if toys_purchased_premise != toys_purchased_hypothesis or rate_per_dozen_premise != rate_per_dozen_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(toys_purchased_premise, rate_per_dozen_premise, toys_purchased_hypothesis, rate_per_dozen_hypothesis))
"
7502,contradiction,,contradiction,"Pat runs at 9 miles per hour , and Cara runs at 5 miles per hour","Pat runs at more than 9 miles per hour , and Cara runs at 5 miles per hour","pat runs at 9 miles per hour , and cara runs at 5 miles per hour","pat runs at more than 9 miles per hour , and cara runs at 5 miles per hour","pat_speed_premise = 9
pat_speed_hypothesis = 9
cara_speed_premise = 5
cara_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(pat_speed_premise, pat_speed_hypothesis, cara_speed_premise, cara_speed_hypothesis):
    # the hypothesis talks about the speed of Pat and Cara, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the speed of Pat in the hypothesis is lesser or equal to 'pat_speed_premise' or the speed of Cara in the hypothesis is not equal to 'cara_speed_premise'
    if pat_speed_hypothesis <= pat_speed_premise or cara_speed_hypothesis != cara_speed_premise:
        return False
    # any speed of Pat greater than 9 miles per hour and Cara's speed equal to 5 miles per hour is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(pat_speed_premise, pat_speed_hypothesis, cara_speed_premise, cara_speed_hypothesis))
"
2267,contradiction,,contradiction,Andy has 20 pairs of matched gloves,Andy has more than 20 pairs of matched gloves,andy has 20 pairs of matched gloves,andy has more than 20 pairs of matched gloves,"paired_gloves_premise = 20
min_paired_gloves_hypothesis = 20

def entailment_or_contradiction_or_neutral(paired_gloves_premise, min_paired_gloves_hypothesis):
    # the hypothesis refers to the number of glove pairs mentioned in the premise
    # the hypothesis estimates the glove pairs to be more than 'min_paired_gloves_hypothesis'
    # check if the hypothesis contradicts the premise by checking if glove pairs reported in the premise are less than or equal to 'min_paired_gloves_hypothesis'
    if paired_gloves_premise <= min_paired_gloves_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(paired_gloves_premise, min_paired_gloves_hypothesis))
"
7413,entailment,,entailment,loyd wants to fence his Square shaped land of 120 Sqft each side,loyd wants to fence his Square shaped land of less than 320 Sqft each side,loyd wants to fence his square shaped land of 120 sqft each side,loyd wants to fence his square shaped land of less than 320 sqft each side,"land_side_length_premise = 120
max_land_side_length_hypothesis = 320

def entailment_or_contradiction_or_neutral(land_side_length_premise, max_land_side_length_hypothesis):
    # the hypothesis refers to the side length of a square land mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if land side length reported in the premise is greater than 'max_land_side_length_hypothesis'
    if land_side_length_premise > max_land_side_length_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if land side length reported in the premise is less than 'max_land_side_length_hypothesis'
    elif land_side_length_premise < max_land_side_length_hypothesis:
        return True
    return None

print(entailment_or_contradiction_or_neutral(land_side_length_premise, max_land_side_length_hypothesis))
"
3238,neutral,,neutral,"If less than 50 % of all the students at Morse have cars , how many students are in the three lower grades ?","If 20 % of all the students at Morse have cars , how many students are in the three lower grades ?","if less than 50 % of all the students at morse have cars , how many students are in the three lower grades ?","if 20 % of all the students at morse have cars , how many students are in the three lower grades ?","car_ownership_rate_premise = 50
car_ownership_rate_hypothesis = 20

def entailment_or_contradiction_or_neutral(car_ownership_rate_premise, car_ownership_rate_hypothesis):
    # the hypothesis talks about the car ownership rate among the Morse students, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'car_ownership_rate_premise'%, by checking if the car ownership rate from the hypothesis is greater or equal to 'car_ownership_rate_premise'%
    if car_ownership_rate_hypothesis >= car_ownership_rate_premise:
        return False
    # any percentage less than 50% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(car_ownership_rate_premise, car_ownership_rate_hypothesis))
"
519,entailment,,entailment,There are 18 stations between Hyderabad and Bangalore,There are less than 58 stations between Hyderabad and Bangalore,there are 18 stations between hyderabad and bangalore,there are less than 58 stations between hyderabad and bangalore,"stations_between_cities_premise = 18
max_stations_between_cities_hypothesis = 58

def entailment_or_contradiction_or_neutral(stations_between_cities_premise, max_stations_between_cities_hypothesis):
    # the hypothesis refers to the number of stations between two cities mentioned in the premise
    # the hypothesis estimates the stations to less than 'max_stations_between_cities_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the station count reported in the premise is higher than 'max_stations_between_cities_hypothesis'
    if stations_between_cities_premise >= max_stations_between_cities_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stations_between_cities_premise, max_stations_between_cities_hypothesis))
"
6528,entailment,,entailment,John has 10 pairs of matched socks,John has less than 70 pairs of matched socks,john has 10 pairs of matched socks,john has less than 70 pairs of matched socks,"sock_pairs_premise = 10
max_sock_pairs_hypothesis = 70

def entailment_or_contradiction_or_neutral(sock_pairs_premise, max_sock_pairs_hypothesis):
    # the hypothesis talks about the number of matched sock pairs that John has, referenced also in the premise
    # the hypothesis estimates that John has less than 'max_sock_pairs_hypothesis' pairs of socks
    # check if the hypothesis contradicts the premise, by checking if the sock pairs reported in the premise are more than 'max_sock_pairs_hypothesis'
    if sock_pairs_premise > max_sock_pairs_hypothesis:
        return False
    else:
        # the hypothesis is entailed by the premise, as the premise states that John has 10 pairs of socks, which is less than 70
        return True

print(entailment_or_contradiction_or_neutral(sock_pairs_premise, max_sock_pairs_hypothesis))
"
6468,entailment,,entailment,20 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,less than 30 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,20 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,less than 30 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,"carpet_covered_area_premise = (4 * 9) # Area of carpet in square feet
percentage_covered_premise = 20 
max_percentage_covered_hypothesis = 30 

def entailment_or_contradiction_or_neutral(carpet_covered_area_premise, percentage_covered_premise, max_percentage_covered_hypothesis):
    # the hypothesis refers to the percentage of the living room floor covered by the carpet mentioned in the premise
    # the max percentage covered by the carpet in the hypothesis should be less than 'max_percentage_covered_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage covered by the carpet in the premise is greater than 'max_percentage_covered_hypothesis'
    if percentage_covered_premise > max_percentage_covered_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(carpet_covered_area_premise, percentage_covered_premise, max_percentage_covered_hypothesis))
"
6949,neutral,,neutral,"At present , the ratio between the ages of Arun and Deepak is more than 1 : 4","At present , the ratio between the ages of Arun and Deepak is 5 : 4","at present , the ratio between the ages of arun and deepak is more than 1 : 4","at present , the ratio between the ages of arun and deepak is 5 : 4","min_ratio_premise = 1/4
ratio_hypothesis = 5/4

def entailment_or_contradiction_or_neutral(min_ratio_premise, ratio_hypothesis):
    # the hypothesis talks about the age ratio of Arun and Deepak, referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_ratio_premise', by checking if the ratio from the hypothesis is lower or equal to 'min_ratio_premise'
    if ratio_hypothesis <= min_ratio_premise:
        return False
    # any ratio greater than 1:4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_ratio_premise, ratio_hypothesis))
"
7526,contradiction,,contradiction,How many different combinations of 4 passengers can be formed from John ' s 6 friends ?,How many different combinations of more than 4 passengers can be formed from John ' s 6 friends ?,how many different combinations of 4 passengers can be formed from john ' s 6 friends ?,how many different combinations of more than 4 passengers can be formed from john ' s 6 friends ?,"import math

# Number of friends John has
num_friends = 6

# Number of combinations for 4 friends
comb_4_friends = math.comb(num_friends, 4)

# Number of combinations for more than 4 friends
comb_more_4_friends = sum([math.comb(num_friends, i) for i in range(5, num_friends+1)])

def entailment_or_contradiction_or_neutral(num_friends, comb_4_friends, comb_more_4_friends):
    # The hypothesis is asking for the number of combinations of more than 4 friends
    # First, check if the hypothesis contradicts the premise by checking if the number of combinations for more than 4 friends is less than or equal to the number of combinations for 4 friends
    if comb_more_4_friends <= comb_4_friends:
        return False
    # The hypothesis does not contradict the premise
    # However, it does not entail the premise either, as the premise specifically talks about the number of combinations for 4 friends and the hypothesis is about the number of combinations for more than 4 friends
    # Therefore, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(num_friends, comb_4_friends, comb_more_4_friends))
"
6538,neutral,,neutral,"While driving from City A to City B , Cara drives at a constant speed of less than 50 miles per hour","While driving from City A to City B , Cara drives at a constant speed of 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of less than 50 miles per hour","while driving from city a to city b , cara drives at a constant speed of 30 miles per hour","max_speed_premise = 50
speed_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_speed_premise, speed_hypothesis):
    # the hypothesis refers to Cara's speed mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the speed from the hypothesis is greater than max_speed_premise
    if speed_hypothesis > max_speed_premise:
        return False
    # any speed less than 50 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_speed_premise, speed_hypothesis))
"
6429,entailment,,entailment,"Rosy also matched the London Eye which stands at 443 ft and Las
Vegas ’ High Roller standing at 550 ft",Rosy also matched the London Eye which stands at more than 343 ft and Las Vegas ’ High Roller standing at 550 ft,rosy also matched the london eye which stands at 443 ft and lasvegas ’ high roller standing at 550 ft,rosy also matched the london eye which stands at more than 343 ft and las vegas ’ high roller standing at 550 ft,"london_eye_height_premise = 443
min_london_eye_height_hypothesis = 343
high_roller_height_premise = 550
high_roller_height_hypothesis = 550

def entailment_or_contradiction_or_neutral(london_eye_height_premise, min_london_eye_height_hypothesis, high_roller_height_premise, high_roller_height_hypothesis):
    # the hypothesis refers to the height of the London Eye and the High Roller mentioned in the premise
    # it estimates the London Eye's height to be more than 'min_london_eye_height_hypothesis' and the High Roller's height to be exactly 'high_roller_height_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the heights reported in the premise are lower than the ones in the hypothesis
    if (london_eye_height_premise < min_london_eye_height_hypothesis) or (high_roller_height_premise != high_roller_height_hypothesis):
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(london_eye_height_premise, min_london_eye_height_hypothesis, high_roller_height_premise, high_roller_height_hypothesis))
"
6579,entailment,,entailment,"Sean , who weighs 200 pounds , is in the elevator with two packages weighing 150 pounds and 280 pounds","Sean , who weighs less than 800 pounds , is in the elevator with two packages weighing 150 pounds and 280 pounds","sean , who weighs 200 pounds , is in the elevator with two packages weighing 150 pounds and 280 pounds","sean , who weighs less than 800 pounds , is in the elevator with two packages weighing 150 pounds and 280 pounds","sean_weight_premise = 200
package1_weight_premise = 150
package2_weight_premise = 280
max_sean_weight_hypothesis = 800

def entailment_or_contradiction_or_neutral(sean_weight_premise, package1_weight_premise, package2_weight_premise, max_sean_weight_hypothesis):
    # the hypothesis talks about Sean's weight and the weight of two packages, referenced also in the premise
    # first check if Sean's weight from the hypothesis contradicts the premise by checking if Sean's weight in the premise is greater than 'max_sean_weight_hypothesis'
    if sean_weight_premise > max_sean_weight_hypothesis:
        return False
    # since the weights of the packages in the hypothesis are identical to those in the premise, we have an entailment
    return True

print(entailment_or_contradiction_or_neutral(sean_weight_premise, package1_weight_premise, package2_weight_premise, max_sean_weight_hypothesis))
"
7584,entailment,,entailment,If KING is coded as 17 and DON is coded as 18 Then MASS is coded as,If KING is coded as less than 27 and DON is coded as 18 Then MASS is coded as,if king is coded as 17 and don is coded as 18 then mass is coded as,if king is coded as less than 27 and don is coded as 18 then mass is coded as,"king_code_premise = 17
don_code_premise = 18

max_king_code_hypothesis = 27
don_code_hypothesis = 18

def entailment_or_contradiction_or_neutral(king_code_premise, don_code_premise, max_king_code_hypothesis, don_code_hypothesis):
    # the hypothesis refers to the coding of words mentioned in the premise
    # check if the coding of KING from the hypothesis contradicts the premise by checking if king_code_premise is greater than max_king_code_hypothesis
    if king_code_premise > max_king_code_hypothesis:
        return False
    # check if the coding of DON from the hypothesis contradicts the premise by comparing don_code_premise and don_code_hypothesis
    elif don_code_premise != don_code_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(king_code_premise, don_code_premise, max_king_code_hypothesis, don_code_hypothesis))
"
6072,entailment,,entailment,"Jerry travels 8 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","Jerry travels more than 7 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 8 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels more than 7 miles at an average speed of 40 miles per hour , stops for 15 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","# Distance travelled at speed 40 mph
travel_distance_40mph_premise = 8
travel_distance_40mph_hypothesis = 7

# Distance travelled at speed 60 mph
travel_distance_60mph_premise = 20
travel_distance_60mph_hypothesis = 20

def entailment_or_contradiction_or_neutral(travel_distance_40mph_premise, travel_distance_40mph_hypothesis, travel_distance_60mph_premise, travel_distance_60mph_hypothesis):
    # the hypothesis refers to the same journey as the premise
    # the hypothesis estimates the first leg of the journey to be more than 'travel_distance_40mph_hypothesis' miles at 40mph
    # the hypothesis estimates the second leg of the journey to be 'travel_distance_60mph_hypothesis' miles at 60mph
    # first we check if the hypothesis contradicts the premise by checking if the distance travelled at 40mph is less than 'travel_distance_40mph_hypothesis' or the distance travelled at 60mph is not equal to 'travel_distance_60mph_hypothesis'
    if travel_distance_40mph_premise <= travel_distance_40mph_hypothesis or travel_distance_60mph_premise != travel_distance_60mph_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travel_distance_40mph_premise, travel_distance_40mph_hypothesis, travel_distance_60mph_premise, travel_distance_60mph_hypothesis))
"
7159,neutral,,neutral,"After more than 4 years , Sandy ’ s age will be 38 years","After 6 years , Sandy ’ s age will be 38 years","after more than 4 years , sandy ’ s age will be 38 years","after 6 years , sandy ’ s age will be 38 years","years_until_age_premise = 4
future_age_premise = 38

years_until_age_hypothesis = 6
future_age_hypothesis = 38

def entailment_or_contradiction_or_neutral(years_until_age_premise, future_age_premise, years_until_age_hypothesis, future_age_hypothesis):
    # the hypothesis talks about Sandy's age after a certain number of years, which is also referenced in the premise
    # check if the hypothesis contradicts the premise information, by checking if Sandy's age in the hypothesis is different than the age from the premise or the number of years until that age is less than the number of years from the premise
    if future_age_hypothesis != future_age_premise or years_until_age_hypothesis < years_until_age_premise:
        return False
    # if the age is the same in both the premise and the hypothesis and the number of years in the hypothesis is greater, then the hypothesis is consistent with the premise, but does not add new information, so it's neutral
    return None

print(entailment_or_contradiction_or_neutral(years_until_age_premise, future_age_premise, years_until_age_hypothesis, future_age_hypothesis))
"
7019,contradiction,,contradiction,"There are 300 seniors at Morse High School , and 40 % of them have cars","There are 400 seniors at Morse High School , and 40 % of them have cars","there are 300 seniors at morse high school , and 40 % of them have cars","there are 400 seniors at morse high school , and 40 % of them have cars","seniors_premise = 300
seniors_hypothesis = 400

def entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis):
    # the hypothesis contradicts the premise if the number of seniors in the hypothesis is not equal to the number in the premise
    if seniors_hypothesis != seniors_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis))
"
6250,neutral,,neutral,From a group of more than 5 boys & 4 girls a Committee of 4 persons is to be formed,From a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,from a group of more than 5 boys & 4 girls a committee of 4 persons is to be formed,from a group of 6 boys & 4 girls a committee of 4 persons is to be formed,"min_boys_premise = 5
boys_hypothesis = 6
girls_premise = girls_hypothesis = 4
committee_size_premise = committee_size_hypothesis = 4

def entailment_or_contradiction_or_neutral(min_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis, committee_size_premise, committee_size_hypothesis):
    # the hypothesis refers to the formation of a committee from a group of boys and girls, mentioned also in the premise
    # the hypothesis estimates the number of boys to be 'boys_hypothesis', while the premise estimates them to more than 'min_boys_premise'
    # check if the hypothesis contradicts the premise by checking if the number of boys in the hypothesis is less than or equal to 'min_boys_premise'
    if boys_hypothesis <= min_boys_premise:
        return False
    # the number of girls and the committee size in the premise and hypothesis are the same, so they don't contradict or entail each other
    # any number of boys greater than 5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis, committee_size_premise, committee_size_hypothesis))
"
6341,contradiction,,contradiction,"If she worked four 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four more than 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four more than 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shifts_premise = 4
hours_per_shift_premise = 8
average_orders_per_hour = 40

shifts_hypothesis = 4
hours_per_shift_hypothesis = 8

def entailment_or_contradiction_or_neutral(shifts_premise, hours_per_shift_premise, average_orders_per_hour, shifts_hypothesis, hours_per_shift_hypothesis):
    # The hypothesis refers to the number of hours Jill worked in a shift, mentioned in the premise
    # The hypothesis suggests Jill worked more than 'hours_per_shift_hypothesis' hours per shift
    # Check if the hypothesis contradicts the premise by checking if the hours worked per shift in the premise are equal to 'hours_per_shift_hypothesis'
    # As Jill worked more than 8 hours per shift in the hypothesis, it contradicts the premise where Jill worked exactly 8 hours per shift
    if hours_per_shift_premise == hours_per_shift_hypothesis:
        return False
    # Any number of hours per shift greater than 8 is inconsistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(shifts_premise, hours_per_shift_premise, average_orders_per_hour, shifts_hypothesis, hours_per_shift_hypothesis))
"
6201,entailment,,entailment,"On the first day of her vacation , Louisa traveled 200 miles","On the first day of her vacation , Louisa traveled less than 300 miles","on the first day of her vacation , louisa traveled 200 miles","on the first day of her vacation , louisa traveled less than 300 miles","traveled_distance_premise = 200
max_traveled_distance_hypothesis = 300

def entailment_or_contradiction_or_neutral(traveled_distance_premise, max_traveled_distance_hypothesis):
    # the hypothesis refers to the distance traveled by Louisa on the first day of her vacation, mentioned in the premise
    # the hypothesis estimates the traveled distance to less than 'max_traveled_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if traveled distance reported in the premise is greater than 'max_traveled_distance_hypothesis'
    if traveled_distance_premise > max_traveled_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(traveled_distance_premise, max_traveled_distance_hypothesis))
"
6190,neutral,,neutral,Lexi needed to save for less than 80 days to afford a vacation at the job that paid her $ 125 per day,Lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for less than 80 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,"max_saving_days_premise = 80
saving_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_saving_days_premise, saving_days_hypothesis):
    # the hypothesis refers to the number of saving days mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_saving_days_premise', by checking if the number of saving days from the hypothesis is greater than or equal to 'max_saving_days_premise'
    if saving_days_hypothesis >= max_saving_days_premise:
        return False
    # any number of saving days less than 80 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_saving_days_premise, saving_days_hypothesis))
"
6023,contradiction,,contradiction,Dana borrows 5000 pounds annually for her college education,Dana borrows 3000 pounds annually for her college education,dana borrows 5000 pounds annually for her college education,dana borrows 3000 pounds annually for her college education,"annual_borrow_premise = 5000
annual_borrow_hypothesis = 3000

def entailment_or_contradiction_or_neutral(annual_borrow_premise, annual_borrow_hypothesis):
    # the hypothesis refers to the amount borrowed annually by Dana for her college education, also mentioned in the premise
    # the hypothesis estimates the borrowed amount to be 'annual_borrow_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the borrowed amount reported in the premise is lower than 'annual_borrow_hypothesis'
    if annual_borrow_premise < annual_borrow_hypothesis:
        return False
    # the hypothesis contradicts the premise because it reports a smaller borrowed amount
    elif annual_borrow_premise > annual_borrow_hypothesis:
        return False
    # if none of the above, then the hypothesis is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(annual_borrow_premise, annual_borrow_hypothesis))
"
7299,entailment,,entailment,"James have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","James have less than 70 parrots , 4 fishes , 9 rabbits and 6 dogs","james have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","james have less than 70 parrots , 4 fishes , 9 rabbits and 6 dogs","parrots_premise = 10
fishes_premise = 4
rabbits_premise = 9
dogs_premise = 6

max_parrots_hypothesis = 70
fishes_hypothesis = 4
rabbits_hypothesis = 9
dogs_hypothesis = 6

def entailment_or_contradiction_or_neutral(parrots_premise, fishes_premise, rabbits_premise, dogs_premise, max_parrots_hypothesis, fishes_hypothesis, rabbits_hypothesis, dogs_hypothesis):
    # the hypothesis refers to the number of parrots, fishes, rabbits and dogs that James has, mentioned in the premise
    # the hypothesis estimates the parrots to be less than 'max_parrots_hypothesis' and equal numbers for fishes, rabbits and dogs
    # check if the hypothesis contradicts the premise by checking if the number of parrots, fishes, rabbits and dogs reported in the premise are more than the hypothesis
    if parrots_premise > max_parrots_hypothesis or fishes_premise != fishes_hypothesis or rabbits_premise != rabbits_hypothesis or dogs_premise != dogs_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(parrots_premise, fishes_premise, rabbits_premise, dogs_premise, max_parrots_hypothesis, fishes_hypothesis, rabbits_hypothesis, dogs_hypothesis))
"
6157,neutral,,neutral,Present ages of Sameer and Anand are in the ratio of more than 3 : 4 respectively,Present ages of Sameer and Anand are in the ratio of 5 : 4 respectively,present ages of sameer and anand are in the ratio of more than 3 : 4 respectively,present ages of sameer and anand are in the ratio of 5 : 4 respectively,"min_sameer_anand_ratio_premise = 3/4
sameer_anand_ratio_hypothesis = 5/4

def entailment_or_contradiction_or_neutral(min_sameer_anand_ratio_premise, sameer_anand_ratio_hypothesis):
    # the hypothesis talks about the age ratio of Sameer and Anand, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_sameer_anand_ratio_premise', by checking if the age ratio from the hypothesis is less than or equal to 'min_sameer_anand_ratio_premise'
    if sameer_anand_ratio_hypothesis <= min_sameer_anand_ratio_premise:
        return False
    # any ratio more than 3/4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_sameer_anand_ratio_premise, sameer_anand_ratio_hypothesis))
"
6386,contradiction,,contradiction,"Last week James worked a total of 45 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 35 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 45 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 35 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 45
james_work_hours_hypothesis = 35

def entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis):
    # the hypothesis talks about the number of hours James worked last week, mentioned also in the premise
    # check if the hypothesis contradicts the premise by comparing the number of work hours reported in both
    if james_work_hours_premise != james_work_hours_hypothesis:
        return False
    # if there is no contradiction, this means the hours reported in the hypothesis are entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis))
"
6017,contradiction,,contradiction,Jane started baby - sitting when she was 20 years old,Jane started baby - sitting when she was 40 years old,jane started baby - sitting when she was 20 years old,jane started baby - sitting when she was 40 years old,"age_start_babysitting_premise = 20
age_start_babysitting_hypothesis = 40

def entailment_or_contradiction_or_neutral(age_start_babysitting_premise, age_start_babysitting_hypothesis):
    # the hypothesis refers to the age when Jane started babysitting mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the age mentioned in the hypothesis is different from the one in the premise
    if age_start_babysitting_premise != age_start_babysitting_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(age_start_babysitting_premise, age_start_babysitting_hypothesis))
"
6264,entailment,,entailment,"If Dan works alone for 3 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for more than 2 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for 3 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for more than 2 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_hours_premise = 3
dan_min_work_hours_hypothesis = 2

def entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_min_work_hours_hypothesis):
    # the hypothesis refers to the hours Dan worked mentioned in the premise
    # the hypothesis estimates the work hours to more than 'dan_min_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Dan's work hours reported in the premise are lower than 'dan_min_work_hours_hypothesis'
    if dan_work_hours_premise < dan_min_work_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_min_work_hours_hypothesis))
"
3663,entailment,,entailment,How much loss would Indu has suffered had she given it to Bindu for 2 years at 4 % per annum simple interest ?,How much loss would Indu has suffered had she given it to Bindu for less than 6 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for less than 6 years at 4 % per annum simple interest ?,"interest_years_premise = 2
max_interest_years_hypothesis = 6

def entailment_or_contradiction_or_neutral(interest_years_premise, max_interest_years_hypothesis):
    # the hypothesis refers to the period of interest mentioned in the premise
    # the hypothesis estimates this period to be less than 'max_interest_years_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the period of interest reported in the premise is greater than 'max_interest_years_hypothesis'
    if interest_years_premise > max_interest_years_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(interest_years_premise, max_interest_years_hypothesis))
"
6648,entailment,,entailment,He works at it for 20 days and then Rajesh finished it in 30 days,He works at it for less than 40 days and then Rajesh finished it in 30 days,he works at it for 20 days and then rajesh finished it in 30 days,he works at it for less than 40 days and then rajesh finished it in 30 days,"work_days_premise = 20
work_days_hypothesis = 40
rajesh_work_days_premise = 30
rajesh_work_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis, rajesh_work_days_premise, rajesh_work_days_hypothesis):
    # the hypothesis talks about the number of work days, referenced also in the premise
    # the hypothesis estimates the work days to be less than 'work_days_hypothesis' and Rajesh's work days to be equal to 'rajesh_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work days reported in the premise are greater than 'work_days_hypothesis' or Rajesh's work days reported in the premise are not equal to 'rajesh_work_days_hypothesis'
    if work_days_premise > work_days_hypothesis or rajesh_work_days_premise != rajesh_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis, rajesh_work_days_premise, rajesh_work_days_hypothesis))
"
989,contradiction,,contradiction,"There are 300 seniors at Morse High School , and 50 % of them have cars","There are more than 300 seniors at Morse High School , and 50 % of them have cars","there are 300 seniors at morse high school , and 50 % of them have cars","there are more than 300 seniors at morse high school , and 50 % of them have cars","seniors_premise = 300
seniors_hypothesis = 300

def entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis):
    # the hypothesis is about the number of seniors at Morse High School, a topic also mentioned in the premise
    # the hypothesis contradicts the premise if the number of seniors from the hypothesis is less or equal to the number from the premise
    if seniors_hypothesis <= seniors_premise:
        return False
    # any number of seniors greater than 300 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis))
"
6749,contradiction,,contradiction,Raman mixed 44 kg of butter at Rs,Raman mixed more than 44 kg of butter at Rs,raman mixed 44 kg of butter at rs,raman mixed more than 44 kg of butter at rs,"butter_kg_premise = 44
min_butter_kg_hypothesis = 44

def entailment_or_contradiction_or_neutral(butter_kg_premise, min_butter_kg_hypothesis):
    # the hypothesis talks about the quantity of butter mixed by Raman, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the hypothesis suggests that the quantity of butter mixed is equal or less than the quantity mentioned in the premise
    if min_butter_kg_hypothesis >= butter_kg_premise:
        # as the hypothesis suggests more than 44 kg, it contradicts the premise
        return False
    else:
        # any quantity of butter less than 44 kg would be neutral to the premise
        return None

print(entailment_or_contradiction_or_neutral(butter_kg_premise, min_butter_kg_hypothesis))
"
5910,entailment,,entailment,"The ratio between the number of sheep and the number of horses at the Stewart farm is 1 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","The ratio between the number of sheep and the number of horses at the Stewart farm is less than 6 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is 1 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is less than 6 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","horse_food_per_day = 230 # ounces
total_horse_food_needed = 12880 # ounces
sheep_to_horse_ratio_premise = 1/7
sheep_to_horse_ratio_hypothesis_max = 6/7

def entailment_or_contradiction_or_neutral(horse_food_per_day, total_horse_food_needed, sheep_to_horse_ratio_premise, sheep_to_horse_ratio_hypothesis_max):
    # number of horses in the farm can be computed from the total food needed and the food each horse needs
    horses_in_farm = total_horse_food_needed / horse_food_per_day
    # number of sheep can be computed using the ratio and the number of horses
    sheep_in_farm_premise = horses_in_farm * sheep_to_horse_ratio_premise
    # the hypothesis suggests a maximum for the ratio of sheep to horses
    # compute the maximum number of sheep that would be consistent with the hypothesis
    sheep_in_farm_hypothesis_max = horses_in_farm * sheep_to_horse_ratio_hypothesis_max
    # check if the number of sheep computed from the premise exceeds the maximum suggested by the hypothesis
    if sheep_in_farm_premise > sheep_in_farm_hypothesis_max:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(horse_food_per_day, total_horse_food_needed, sheep_to_horse_ratio_premise, sheep_to_horse_ratio_hypothesis_max))
"
7487,contradiction,,contradiction,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of less than 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of less than 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","hours_worked_james_premise = 41
max_hours_worked_james_hypothesis = 41

def entailment_or_contradiction_or_neutral(hours_worked_james_premise, max_hours_worked_james_hypothesis):
    # the hypothesis refers to the total hours James worked last week, which is also mentioned in the premise
    # the hypothesis claims that James worked less than 'max_hours_worked_james_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the hours James worked according to the premise is greater or equal to 'max_hours_worked_james_hypothesis'
    if hours_worked_james_premise >= max_hours_worked_james_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hours_worked_james_premise, max_hours_worked_james_hypothesis))
"
7474,neutral,,neutral,A “ Sophie Germain ” prime is any positive prime number p for which less than 4 p + 1 is also prime,A “ Sophie Germain ” prime is any positive prime number p for which 2 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which less than 4 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 2 p + 1 is also prime,"# In this case, the premise and hypothesis are not referring to a specific number but a mathematical condition. 
# Therefore, we don't need to extract any quantities, but we need to compare the conditions.

def entailment_or_contradiction_or_neutral():
    # The hypothesis describes a subset of the conditions mentioned in the premise
    # If p is a positive prime number for which 2p + 1 is also prime, it also satisfies the condition in the premise, i.e., less than 4p + 1 is also prime
    # Hence, the hypothesis does not contradict the premise, but rather, it entails the premise
    # However, the premise includes more cases than the hypothesis, for example, when 3p + 1 is also prime
    # Therefore, the relationship is neutrality, not entailment
    return None

print(entailment_or_contradiction_or_neutral())
"
6489,entailment,,entailment,Dana borrows 6500 pounds annually for her college education,Dana borrows more than 3500 pounds annually for her college education,dana borrows 6500 pounds annually for her college education,dana borrows more than 3500 pounds annually for her college education,"annual_borrow_premise = 6500
min_annual_borrow_hypothesis = 3500

def entailment_or_contradiction_or_neutral(annual_borrow_premise, min_annual_borrow_hypothesis):
    # the hypothesis refers to Dana's annual borrowing for college, which is also mentioned in the premise
    # the hypothesis estimates the annual borrowing to be more than 'min_annual_borrow_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the annual borrowing reported in the premise is less than or equal to 'min_annual_borrow_hypothesis'
    if annual_borrow_premise <= min_annual_borrow_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(annual_borrow_premise, min_annual_borrow_hypothesis))
"
6609,entailment,,entailment,Molly ' s age in 18 years will be six times her age seven years ago,Molly ' s age in less than 88 years will be six times her age seven years ago,molly ' s age in 18 years will be six times her age seven years ago,molly ' s age in less than 88 years will be six times her age seven years ago,"future_age_multiplier_premise = 6
past_age_years_premise = 7
future_years_premise = 18

future_years_hypothesis = 88

def entailment_or_contradiction_or_neutral(future_age_multiplier_premise, past_age_years_premise, future_years_premise, future_years_hypothesis):
    # the hypothesis refers to the same premise of Molly's age being six times her age seven years ago
    # the hypothesis estimates the years in the future to be less than 88
    # check if the hypothesis contradicts the premise by checking if future years reported in the premise are more than future years in the hypothesis
    if future_years_premise > future_years_hypothesis:
        return False
    # if the years in the future reported in the premise are less than or equal to the years in the future in the hypothesis, then it is entailed by the hypothesis 
    else:
        return True

print(entailment_or_contradiction_or_neutral(future_age_multiplier_premise, past_age_years_premise, future_years_premise, future_years_hypothesis))
"
5996,contradiction,,contradiction,There are 4 more women than men on Centerville ' s board of education,There are 1 more women than men on Centerville ' s board of education,there are 4 more women than men on centerville ' s board of education,there are 1 more women than men on centerville ' s board of education,"extra_women_premise = 4
extra_women_hypothesis = 1

def entailment_or_contradiction_or_neutral(extra_women_premise, extra_women_hypothesis):
    # the hypothesis and premise discuss the difference in the number of women and men on Centerville's board of education
    # check if the hypothesis contradicts the premise by comparing the quantity of extra women in the hypothesis to the quantity in the premise
    if extra_women_hypothesis != extra_women_premise:
        return False
    # if the quantities match, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(extra_women_premise, extra_women_hypothesis))
"
7586,contradiction,,contradiction,If KING is coded as 17 and DON is coded as 18 Then MASS is coded as,If KING is coded as 37 and DON is coded as 18 Then MASS is coded as,if king is coded as 17 and don is coded as 18 then mass is coded as,if king is coded as 37 and don is coded as 18 then mass is coded as,"king_code_premise = 17
don_code_premise = 18
king_code_hypothesis = 37
don_code_hypothesis = 18

def entailment_or_contradiction_or_neutral(king_code_premise, don_code_premise, king_code_hypothesis, don_code_hypothesis):
    # The hypothesis and premise both talk about the codes for KING and DON
    # Check if the codes for KING and DON in the hypothesis contradict the ones in the premise
    if king_code_premise != king_code_hypothesis or don_code_premise != don_code_hypothesis:
        return False
    # If the codes match, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(king_code_premise, don_code_premise, king_code_hypothesis, don_code_hypothesis))
"
7450,neutral,,neutral,Bhanu spends less than 80 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,Bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends less than 80 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,"max_scooter_expense_premise = 80
scooter_expense_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_scooter_expense_premise, scooter_expense_hypothesis):
    # the hypothesis talks about Bhanu's expenses on scooter petrol, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_scooter_expense_premise', by checking if the scooter expenses from the hypothesis are greater than 'max_scooter_expense_premise'
    if scooter_expense_hypothesis > max_scooter_expense_premise:
        return False
    # any scooter expense less than 80% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_scooter_expense_premise, scooter_expense_hypothesis))
"
7401,entailment,,entailment,"City A to city B , Andrew drove for 1 hr at 46 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 7 hr at 46 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 46 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 7 hr at 46 mph and for 3 hours at 60 mph","drive_time_at_46mph_premise = 1
drive_time_at_60mph_premise = 3

max_drive_time_at_46mph_hypothesis = 7
drive_time_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_time_at_46mph_premise, drive_time_at_60mph_premise, max_drive_time_at_46mph_hypothesis, drive_time_at_60mph_hypothesis):
    # the hypothesis talks about the driving times at different speeds from city A to city B, mentioned also in the premise
    # the hypothesis estimates the drive time at 46 mph to be less than 'max_drive_time_at_46mph_hypothesis'
    # check if the hypothesis contradicts the premise by checking if drive time at 46 mph reported in the premise is greater than 'max_drive_time_at_46mph_hypothesis'
    if drive_time_at_46mph_premise > max_drive_time_at_46mph_hypothesis:
        return False
    # the hypothesis also estimates the drive time at 60 mph to be equal to 'drive_time_at_60mph_hypothesis'
    # check if the hypothesis contradicts the premise by checking if drive time at 60 mph reported in the premise is not equal to 'drive_time_at_60mph_hypothesis'
    elif drive_time_at_60mph_premise != drive_time_at_60mph_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_time_at_46mph_premise, drive_time_at_60mph_premise, max_drive_time_at_46mph_hypothesis, drive_time_at_60mph_hypothesis))
"
6126,entailment,,entailment,"If 31 people have visited both Iceland and Norway , how many people have visited neither country ?","If less than 41 people have visited both Iceland and Norway , how many people have visited neither country ?","if 31 people have visited both iceland and norway , how many people have visited neither country ?","if less than 41 people have visited both iceland and norway , how many people have visited neither country ?","people_visited_both_premise = 31
people_visited_both_hypothesis = 41

def entailment_or_contradiction_or_neutral(people_visited_both_premise, people_visited_both_hypothesis):
    # the hypothesis talks about the number of people visiting both countries mentioned in the premise
    # the hypothesis estimates the number of people visiting both countries to be less than 'people_visited_both_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of people in the premise is greater than 'people_visited_both_hypothesis'
    if people_visited_both_premise > people_visited_both_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(people_visited_both_premise, people_visited_both_hypothesis))
"
6668,contradiction,,contradiction,Kamal will complete work in 20 days,Kamal will complete work in 50 days,kamal will complete work in 20 days,kamal will complete work in 50 days,"work_days_premise = 20
work_days_hypothesis = 50

def entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis):
    # the hypothesis refers to the number of days Kamal will take to complete the work, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the estimated number of days in the hypothesis is less than the number of days in the premise
    if work_days_hypothesis < work_days_premise:
        return False
    # if the number of days in the hypothesis is greater than the number of days in the premise, it contradicts the premise
    elif work_days_hypothesis > work_days_premise:
        return False
    # if the number of days in the hypothesis equals the number of days in the premise, it entails the premise
    elif work_days_hypothesis == work_days_premise:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis))
"
6728,contradiction,,contradiction,"Mary selects a total of 10 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","Mary selects a total of 20 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","mary selects a total of 10 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","mary selects a total of 20 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","total_fruits_premise = 10
average_price_premise = 56
total_fruits_hypothesis = 20
average_price_hypothesis = 56

def entailment_or_contradiction_or_neutral(total_fruits_premise, average_price_premise, total_fruits_hypothesis, average_price_hypothesis):
    # the hypothesis refers to the number and average price of fruits selected by Mary, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the total fruits or average price from the premise are different from the hypothesis
    if total_fruits_premise != total_fruits_hypothesis or average_price_premise != average_price_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_fruits_premise, average_price_premise, total_fruits_hypothesis, average_price_hypothesis))
"
7444,neutral,,neutral,Bhanu spends less than 60 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,Bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends less than 60 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,"max_petrol_expense_percentage_premise = 60
house_rent_expense_percentage = 14
petrol_expense_percentage_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_petrol_expense_percentage_premise, house_rent_expense_percentage, petrol_expense_percentage_hypothesis):
    # the hypothesis talks about the percentage of Bhanu's income spent on petrol, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'max_petrol_expense_percentage_premise' by checking if the petrol expense percentage from the hypothesis is greater than 'max_petrol_expense_percentage_premise'
    if petrol_expense_percentage_hypothesis > max_petrol_expense_percentage_premise:
        return False
    # any petrol expense percentage less than or equal to 60 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_petrol_expense_percentage_premise, house_rent_expense_percentage, petrol_expense_percentage_hypothesis))
"
7555,neutral,,neutral,Jim alone cleans the entire house in more than 1 hours,Jim alone cleans the entire house in 6 hours,jim alone cleans the entire house in more than 1 hours,jim alone cleans the entire house in 6 hours,"min_house_cleaning_time_premise = 1  # hours
house_cleaning_time_hypothesis = 6  # hours

def entailment_or_contradiction_or_neutral(min_house_cleaning_time_premise, house_cleaning_time_hypothesis):
    # the hypothesis refers to the time Jim takes to clean the house, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_house_cleaning_time_premise', by checking if the time from the hypothesis is lower or equal to 'min_house_cleaning_time_premise'
    if house_cleaning_time_hypothesis <= min_house_cleaning_time_premise:
        return False
    # any time greater than 1 hour is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_house_cleaning_time_premise, house_cleaning_time_hypothesis))
"
5982,entailment,,entailment,"If 25 % of all the students at Morse have cars , how many students are in the three lower grades ?","If less than 35 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 25 % of all the students at morse have cars , how many students are in the three lower grades ?","if less than 35 % of all the students at morse have cars , how many students are in the three lower grades ?","percentage_students_with_cars_premise = 25
percentage_students_with_cars_hypothesis = 35

def entailment_or_contradiction_or_neutral(percentage_students_with_cars_premise, percentage_students_with_cars_hypothesis):
    # both the hypothesis and premise refer to the percentage of students at Morse that have cars
    # the hypothesis says that less than 'percentage_students_with_cars_hypothesis' % of students have cars
    # check if the hypothesis contradicts the premise which states that 'percentage_students_with_cars_premise' % of students have cars
    if percentage_students_with_cars_premise >= percentage_students_with_cars_hypothesis:
        return False
    # if the 'percentage_students_with_cars_premise' is less than 'percentage_students_with_cars_hypothesis', the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(percentage_students_with_cars_premise, percentage_students_with_cars_hypothesis))
"
6779,contradiction,,contradiction,"In an exam , Bright scored 60 percent , Bivi scored 65 percent and Lisa 45 percent","In an exam , Bright scored more than 60 percent , Bivi scored 65 percent and Lisa 45 percent","in an exam , bright scored 60 percent , bivi scored 65 percent and lisa 45 percent","in an exam , bright scored more than 60 percent , bivi scored 65 percent and lisa 45 percent","bright_score_premise = 60
bright_score_hypothesis = 60
bivi_score_premise = 65
bivi_score_hypothesis = 65
lisa_score_premise = 45
lisa_score_hypothesis = 45

def entailment_or_contradiction_or_neutral(bright_score_premise, bright_score_hypothesis, bivi_score_premise, bivi_score_hypothesis, lisa_score_premise, lisa_score_hypothesis):
    # the hypothesis talks about the scores of Bright, Bivi, and Lisa in an exam, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Bright's score in the hypothesis is less than or equal to the score in the premise
    if bright_score_hypothesis <= bright_score_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if Bivi's score in the hypothesis is not equal to the score in the premise
    elif bivi_score_hypothesis != bivi_score_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if Lisa's score in the hypothesis is not equal to the score in the premise
    elif lisa_score_hypothesis != lisa_score_premise:
        return False
    # if there's no contradiction, the hypothesis is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(bright_score_premise, bright_score_hypothesis, bivi_score_premise, bivi_score_hypothesis, lisa_score_premise, lisa_score_hypothesis))
"
7470,entailment,,entailment,"Listco employs 72 level - 1 employees , 30 of whom are college graduates","Listco employs more than 52 level - 1 employees , 30 of whom are college graduates","listco employs 72 level - 1 employees , 30 of whom are college graduates","listco employs more than 52 level - 1 employees , 30 of whom are college graduates","total_employees_premise = 72
graduate_employees_premise = 30
min_employees_hypothesis = 52
graduate_employees_hypothesis = 30

def entailment_or_contradiction_or_neutral(total_employees_premise, graduate_employees_premise, min_employees_hypothesis, graduate_employees_hypothesis):
    # the hypothesis refers to the number of level 1 employees mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the total employees reported in the premise are lower than 'min_employees_hypothesis'
    if total_employees_premise < min_employees_hypothesis:
        return False
    # check if the number of graduate employees in the premise is not equal to the number of graduate employees in the hypothesis
    elif graduate_employees_premise != graduate_employees_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_employees_premise, graduate_employees_premise, min_employees_hypothesis, graduate_employees_hypothesis))
"
5971,neutral,,neutral,Henry runs the second leg of the course in more than 6 seconds,Henry runs the second leg of the course in 7 seconds,henry runs the second leg of the course in more than 6 seconds,henry runs the second leg of the course in 7 seconds,"min_time_second_leg_premise = 6
time_second_leg_hypothesis = 7

def entailment_or_contradiction_or_neutral(min_time_second_leg_premise, time_second_leg_hypothesis):
    # the hypothesis talks about the time to run the second leg of the course, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_time_second_leg_premise', by checking if the time from the hypothesis is lower or equal to 'min_time_second_leg_premise'
    if time_second_leg_hypothesis <= min_time_second_leg_premise:
        return False
    # any time greater than 6 seconds is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_time_second_leg_premise, time_second_leg_hypothesis))
"
7415,contradiction,,contradiction,loyd wants to fence his Square shaped land of 120 Sqft each side,loyd wants to fence his Square shaped land of 220 Sqft each side,loyd wants to fence his square shaped land of 120 sqft each side,loyd wants to fence his square shaped land of 220 sqft each side,"land_side_length_premise = 120
land_side_length_hypothesis = 220

def entailment_or_contradiction_or_neutral(land_side_length_premise, land_side_length_hypothesis):
    # the hypothesis talks about the side length of a square-shaped land owned by loyd
    # check if the hypothesis contradicts the premise by checking if the side length in the hypothesis is different than in the premise
    if land_side_length_premise != land_side_length_hypothesis:
        return False
    # if the side length in the hypothesis is the same as in the premise, that means the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(land_side_length_premise, land_side_length_hypothesis))
"
2393,contradiction,,contradiction,Sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of Rs,Sanoop bought less than 8 t - shirts at an average price ( arithmetic mean ) of Rs,sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of rs,sanoop bought less than 8 t - shirts at an average price ( arithmetic mean ) of rs,"tshirts_bought_premise = 8
tshirts_bought_hypothesis = 8

def entailment_or_contradiction_or_neutral(tshirts_bought_premise, tshirts_bought_hypothesis):
    # the hypothesis refers to the number of shirts Sanoop bought, which is also mentioned in the premise
    # the hypothesis estimates the number of shirts bought to be less than 'tshirts_bought_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shirts bought in the premise is greater or equal to 'tshirts_bought_hypothesis'
    if tshirts_bought_premise >= tshirts_bought_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(tshirts_bought_premise, tshirts_bought_hypothesis))
"
2142,entailment,,entailment,Alice leaves City A 30 minutes after Bob,Alice leaves City A less than 60 minutes after Bob,alice leaves city a 30 minutes after bob,alice leaves city a less than 60 minutes after bob,"leave_time_difference_premise = 30
max_leave_time_difference_hypothesis = 60

def entailment_or_contradiction_or_neutral(leave_time_difference_premise, max_leave_time_difference_hypothesis):
    # the hypothesis speaks about the time difference between Alice and Bob leaving City A
    # it suggests that Alice leaves less than 'max_leave_time_difference_hypothesis' after Bob
    # check if the hypothesis contradicts the premise by checking if the time difference in the premise is more than 'max_leave_time_difference_hypothesis'
    if leave_time_difference_premise > max_leave_time_difference_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(leave_time_difference_premise, max_leave_time_difference_hypothesis))
"
6988,neutral,,neutral,The ratio of the ages of Anil and his son at present is more than 2 : 3,The ratio of the ages of Anil and his son at present is 7 : 3,the ratio of the ages of anil and his son at present is more than 2 : 3,the ratio of the ages of anil and his son at present is 7 : 3,"min_ratio_anil_son_premise = 2/3
ratio_anil_son_hypothesis = 7/3

def entailment_or_contradiction_or_neutral(min_ratio_anil_son_premise, ratio_anil_son_hypothesis):
    # the hypothesis talks about the age ratio of Anil and his son, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_ratio_anil_son_premise', by checking if the ratio from the hypothesis is lower or equal to 'min_ratio_anil_son_premise'
    if ratio_anil_son_hypothesis <= min_ratio_anil_son_premise:
        return False
    # any ratio greater than 'min_ratio_anil_son_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_ratio_anil_son_premise, ratio_anil_son_hypothesis))
"
6769,neutral,,neutral,"more than 2600 among John , Jose & Binoy in the ration 2 : 4 : 6","6600 among John , Jose & Binoy in the ration 2 : 4 : 6","more than 2600 among john , jose & binoy in the ration 2 : 4 : 6","6600 among john , jose & binoy in the ration 2 : 4 : 6","min_total_premise = 2600
total_hypothesis = 6600

def entailment_or_contradiction_or_neutral(min_total_premise, total_hypothesis):
    # The hypothesis refers to the total amount that John, Jose and Binoy have, which is also referenced in the premise
    # The hypothesis estimates it to be 'total_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the total amount reported in the hypothesis is lower than 'min_total_premise'
    if total_hypothesis < min_total_premise:
        return False
    # If the total amount in the hypothesis is more than 'min_total_premise', it is consistent with the premise, making the hypothesis neutral
    if total_hypothesis > min_total_premise:
        return None

print(entailment_or_contradiction_or_neutral(min_total_premise, total_hypothesis))
"
498,entailment,,entailment,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of less than 6 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of less than 6 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","outfit_shirts_premise = 1
max_outfit_shirts_hypothesis = 6

def entailment_or_contradiction_or_neutral(outfit_shirts_premise, max_outfit_shirts_hypothesis):
    # the hypothesis refers to the number of shirts in an outfit mentioned in the premise
    # the hypothesis estimates the number of shirts to be less than 'max_outfit_shirts_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shirts in the outfit, as reported in the premise, is greater than 'max_outfit_shirts_hypothesis'
    if outfit_shirts_premise > max_outfit_shirts_hypothesis:
        return False
    # any number of shirts less than or equal to 6 is consistent with the hypothesis, so the premise entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(outfit_shirts_premise, max_outfit_shirts_hypothesis))
"
6629,contradiction,,contradiction,"Mary played the game , getting at least one score of each of 1 , 2 , and 3 , and never getting the same score in consecutive steps","Mary played the game , getting at least one score of each of less than 1 , 2 , and 3 , and never getting the same score in consecutive steps","mary played the game , getting at least one score of each of 1 , 2 , and 3 , and never getting the same score in consecutive steps","mary played the game , getting at least one score of each of less than 1 , 2 , and 3 , and never getting the same score in consecutive steps","min_score_premise = 1
min_score_hypothesis = 0

def entailment_or_contradiction_or_neutral(min_score_premise, min_score_hypothesis):
    # the hypothesis talks about the minimum score that Mary got in the game
    # check if the hypothesis contradicts the premise estimate of 'min_score_premise' by checking if the minimum score from the hypothesis is lower than 'min_score_premise'
    if min_score_hypothesis < min_score_premise:
        return False
    # any score of 1 or more is consistent with the premise, so the hypothesis is not entailed by the premise
    return None

print(entailment_or_contradiction_or_neutral(min_score_premise, min_score_hypothesis))
"
6738,entailment,,entailment,Diane find 1 can of paint are just enough to paint one third of her room,Diane find less than 2 can of paint are just enough to paint one third of her room,diane find 1 can of paint are just enough to paint one third of her room,diane find less than 2 can of paint are just enough to paint one third of her room,"paint_cans_premise = 1
max_paint_cans_hypothesis = 2

def entailment_or_contradiction_or_neutral(paint_cans_premise, max_paint_cans_hypothesis):
    # the hypothesis refers to the number of paint cans needed to paint a third of the room, mentioned also in the premise
    # the hypothesis estimates that Diane needs less than 'max_paint_cans_hypothesis' to paint a third of her room
    # check if the hypothesis contradicts the premise by checking if the number of paint cans from the premise is higher or equal to 'max_paint_cans_hypothesis'
    if paint_cans_premise >= max_paint_cans_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(paint_cans_premise, max_paint_cans_hypothesis))
"
7454,contradiction,,contradiction,"If T = 5 / 9 * ( K - 32 ) , and if T = 105 , then what is the value of K ?","If T = less than 5 / 9 * ( K - 32 ) , and if T = 105 , then what is the value of K ?","if t = 5 / 9 * ( k - 32 ) , and if t = 105 , then what is the value of k ?","if t = less than 5 / 9 * ( k - 32 ) , and if t = 105 , then what is the value of k ?","T_value_premise = 105
T_value_hypothesis = 105

def entailment_or_contradiction_or_neutral(T_value_premise, T_value_hypothesis):
    # the hypothesis refers to the temperature conversion formula mentioned in the premise
    # the hypothesis proposes a T value less than the one in the premise
    # check if the hypothesis contradicts the premise by checking if the T value from the hypothesis is greater than or equal to T_value_premise
    if T_value_hypothesis >= T_value_premise:
        return False
    # if the T value from the hypothesis is less than the one from the premise, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(T_value_premise, T_value_hypothesis))
"
6678,entailment,,entailment,"The sum of ages of Aswin , Sachin and Sumesh is 93 years","The sum of ages of Aswin , Sachin and Sumesh is more than 43 years","the sum of ages of aswin , sachin and sumesh is 93 years","the sum of ages of aswin , sachin and sumesh is more than 43 years","ages_sum_premise = 93
min_ages_sum_hypothesis = 43

def entailment_or_contradiction_or_neutral(ages_sum_premise, min_ages_sum_hypothesis):
    # the hypothesis refers to the sum of the ages of Aswin, Sachin, and Sumesh, as mentioned in the premise
    # the hypothesis estimates the sum of ages to be more than 'min_ages_sum_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the sum of ages reported in the premise are less than 'min_ages_sum_hypothesis'
    if ages_sum_premise < min_ages_sum_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(ages_sum_premise, min_ages_sum_hypothesis))
"
5930,contradiction,,contradiction,"Dacid obtained 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained less than 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained less than 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","english_mark_premise = 86
mathematics_mark_premise = 85
physics_mark_premise = 92
chemistry_mark_premise = 87
biology_mark_premise = 95

english_mark_hypothesis = 86
mathematics_mark_hypothesis = 85
physics_mark_hypothesis = 92
chemistry_mark_hypothesis = 87
biology_mark_hypothesis = 95

def entailment_or_contradiction_or_neutral(english_mark_premise, mathematics_mark_premise, physics_mark_premise, chemistry_mark_premise, biology_mark_premise, english_mark_hypothesis, mathematics_mark_hypothesis, physics_mark_hypothesis, chemistry_mark_hypothesis, biology_mark_hypothesis):
    # the hypothesis makes a claim about Dacid's marks in English, Mathematics, Physics, Chemistry and Biology
    # it claims that the marks are less than the ones mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if any of the marks in the hypothesis are not less than the corresponding marks in the premise
    if english_mark_hypothesis >= english_mark_premise or mathematics_mark_hypothesis >= mathematics_mark_premise or physics_mark_hypothesis >= physics_mark_premise or chemistry_mark_hypothesis >= chemistry_mark_premise or biology_mark_hypothesis >= biology_mark_premise:
        return False
    # if the hypothesis is not contradicted, then it entails the premise as it is a subset of the premise
    return True

print(entailment_or_contradiction_or_neutral(english_mark_premise, mathematics_mark_premise, physics_mark_premise, chemistry_mark_premise, biology_mark_premise, english_mark_hypothesis, mathematics_mark_hypothesis, physics_mark_hypothesis, chemistry_mark_hypothesis, biology_mark_hypothesis))
"
6283,neutral,,neutral,Robin ' s average ( arithmetic mean ) test score on more than 2 tests is 82,Robin ' s average ( arithmetic mean ) test score on 9 tests is 82,robin ' s average ( arithmetic mean ) test score on more than 2 tests is 82,robin ' s average ( arithmetic mean ) test score on 9 tests is 82,"tests_premise = 2
tests_hypothesis = 9
average_score = 82

def entailment_or_contradiction_or_neutral(tests_premise, tests_hypothesis, average_score):
    # the hypothesis refers to the average test score of Robin mentioned in the premise
    # the hypothesis estimates the number of tests to be 'tests_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of tests in the hypothesis is less than or equal to 'tests_premise'
    if tests_hypothesis <= tests_premise:
        return False
    # any number of tests greater than 2 with an average score of 82 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(tests_premise, tests_hypothesis, average_score))
"
6112,neutral,,neutral,"Amtek employs more than 60 level - 1 employees , 30 of whom are college graduates","Amtek employs 80 level - 1 employees , 30 of whom are college graduates","amtek employs more than 60 level - 1 employees , 30 of whom are college graduates","amtek employs 80 level - 1 employees , 30 of whom are college graduates","min_level1_employees_premise = 60
level1_employees_hypothesis = 80
college_graduates = 30

def entailment_or_contradiction_or_neutral(min_level1_employees_premise, level1_employees_hypothesis, college_graduates):
    # the hypothesis talks about the number of level 1 employees at Amtek, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_level1_employees_premise', by checking if the number of employees from the hypothesis is lower or equal to 'min_level1_employees_premise'
    if level1_employees_hypothesis <= min_level1_employees_premise:
        return False
    # any number of employees greater than 60 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_level1_employees_premise, level1_employees_hypothesis, college_graduates))
"
6392,contradiction,,contradiction,"Sacha runs at a constant speed of 6 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of 3 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 6 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 3 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha_speed_premise = 6
bruno_speed_premise = 5
sacha_speed_hypothesis = 3
bruno_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, sacha_speed_hypothesis, bruno_speed_hypothesis):
    # the hypothesis talks about the constant speed of Sacha and Bruno
    # check if the hypothesis contradicts the premise by checking if the speeds of Sacha and Bruno from the hypothesis are not equal to the speeds from the premise
    if sacha_speed_hypothesis != sacha_speed_premise or bruno_speed_hypothesis != bruno_speed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, sacha_speed_hypothesis, bruno_speed_hypothesis))
"
6066,entailment,,entailment,There was 4 to 5 shops in the town which was build by a builder from Mumbai,There was less than 5 to 5 shops in the town which was build by a builder from Mumbai,there was 4 to 5 shops in the town which was build by a builder from mumbai,there was less than 5 to 5 shops in the town which was build by a builder from mumbai,"min_shops_premise = 4
max_shops_premise = 5
min_shops_hypothesis = 4
max_shops_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_shops_premise, max_shops_premise, min_shops_hypothesis, max_shops_hypothesis):
    # the hypothesis refers to the number of shops in the town mentioned in the premise
    # the hypothesis estimates the number of shops to less or equal to max_shops_hypothesis
    # check if the hypothesis contradicts the premise by checking if the number of shops reported in the premise is out of the range stated in the hypothesis
    if min_shops_premise < min_shops_hypothesis or max_shops_premise > max_shops_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_shops_premise, max_shops_premise, min_shops_hypothesis, max_shops_hypothesis))
"
7128,entailment,,entailment,Anup was asked to find the value of 7 / 12 of a sum of money T,Anup was asked to find the value of more than 4 / 12 of a sum of money T,anup was asked to find the value of 7 / 12 of a sum of money t,anup was asked to find the value of more than 4 / 12 of a sum of money t,"fraction_premise = 7 / 12
min_fraction_hypothesis = 4 / 12

def entailment_or_contradiction_or_neutral(fraction_premise, min_fraction_hypothesis):
    # the hypothesis refers to the fraction of money Anup was asked to find, mentioned in the premise
    # the hypothesis estimates the fraction to be more than 'min_fraction_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the fraction in the premise is lower than or equal to 'min_fraction_hypothesis'
    if fraction_premise <= min_fraction_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(fraction_premise, min_fraction_hypothesis))
"
6304,neutral,,neutral,"Last week James worked a total of more than 11 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of more than 11 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","min_hours_worked_james_premise = 11
hours_worked_james_hypothesis = 41

def entailment_or_contradiction_or_neutral(min_hours_worked_james_premise, hours_worked_james_hypothesis):
    # the hypothesis talks about the number of hours James worked last week, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_hours_worked_james_premise', by checking if the number of hours from the hypothesis is lower or equal to 'min_hours_worked_james_premise'
    if hours_worked_james_hypothesis <= min_hours_worked_james_premise:
        return False
    # any number of hours worked greater than 11 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_worked_james_premise, hours_worked_james_hypothesis))
"
7179,entailment,,entailment,"City A to city B , Andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 5 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 5 hr at 42 mph and for 3 hours at 60 mph","drive_duration_at42mph_premise = 1
drive_duration_at60mph_premise = 3
max_drive_duration_at42mph_hypothesis = 5
drive_duration_at60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_duration_at42mph_premise, drive_duration_at60mph_premise, max_drive_duration_at42mph_hypothesis, drive_duration_at60mph_hypothesis):
    # the hypothesis refers to the driving duration at specific speeds mentioned in the premise
    # the hypothesis estimates the driving duration at 42 mph to less than 'max_drive_duration_at42mph_hypothesis' and at 60 mph to 'drive_duration_at60mph_hypothesis'
    # check if the hypothesis contradicts the premise by checking if driving duration at 42 mph reported in the premise is more than 'max_drive_duration_at42mph_hypothesis' or driving duration at 60 mph is not equal to 'drive_duration_at60mph_hypothesis'
    if drive_duration_at42mph_premise > max_drive_duration_at42mph_hypothesis or drive_duration_at60mph_premise != drive_duration_at60mph_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_duration_at42mph_premise, drive_duration_at60mph_premise, max_drive_duration_at42mph_hypothesis, drive_duration_at60mph_hypothesis))
"
2026,neutral,,neutral,John was thrice as old as Tom more than 5 yrs back,John was thrice as old as Tom 6 yrs back,john was thrice as old as tom more than 5 yrs back,john was thrice as old as tom 6 yrs back,"john_age_difference_premise = 5
john_age_difference_hypothesis = 6

def entailment_or_contradiction_or_neutral(john_age_difference_premise, john_age_difference_hypothesis):
    # the hypothesis discusses the age difference between John and Tom, also mentioned in the premise. 
    # check if the hypothesis contradicts the premise by checking if the age difference from the hypothesis is less than or equal to the age difference from the premise
    if john_age_difference_hypothesis <= john_age_difference_premise:
        return False
    # any age difference greater than 5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(john_age_difference_premise, john_age_difference_hypothesis))
"
7421,contradiction,,contradiction,David gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,David gets on the elevator at the 81 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the 81 th floor of a building and rides up at the rate of 57 floors per minute,"start_floor_premise = 11
start_floor_hypothesis = 81
rate_of_ascent = 57

def entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_of_ascent):
    # the hypothesis talks about the floor David gets on and the rate of ascent, which is also in the premise
    # check if the hypothesis contradicts the premise by checking if the starting floor in the hypothesis is different from the premise
    if start_floor_hypothesis != start_floor_premise:
        return False
    # the rate of ascent is the same in the premise and hypothesis, so it does not influence the decision
    return None

print(entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_of_ascent))
"
7561,neutral,,neutral,"At the faculty of Aerospace Engineering , more than 110 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 310 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 110 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 310 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","min_random_processing_students_premise = 110
random_processing_students_hypothesis = 310
scramjet_students_premise = 232
scramjet_students_hypothesis = 232
both_subjects_students_premise = 112
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(min_random_processing_students_premise, random_processing_students_hypothesis, scramjet_students_premise, scramjet_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis):
    # the hypothesis talks about the number of students studying specific subjects at the Aerospace Engineering faculty, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if there are less students studying each subject according to the hypothesis
    if random_processing_students_hypothesis <= min_random_processing_students_premise or scramjet_students_hypothesis != scramjet_students_premise or both_subjects_students_hypothesis != both_subjects_students_premise:
        return False
    # the hypothesis does not entail the premise, since the number of students studying Random-processing methods in the hypothesis is greater than the minimum number in the premise
    return None

print(entailment_or_contradiction_or_neutral(min_random_processing_students_premise, random_processing_students_hypothesis, scramjet_students_premise, scramjet_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis))
"
6270,entailment,,entailment,Meg and Bob are among the 7 participants in a cycling race,Meg and Bob are among the less than 8 participants in a cycling race,meg and bob are among the 7 participants in a cycling race,meg and bob are among the less than 8 participants in a cycling race,"participants_premise = 7
max_participants_hypothesis = 8

def entailment_or_contradiction_or_neutral(participants_premise, max_participants_hypothesis):
    # the hypothesis refers to the number of participants mentioned in the premise
    # the hypothesis estimates the participants to less than 'max_participants_hypothesis'
    # check if the hypothesis contradicts the premise by checking if participants reported in the premise are greater than or equal to 'max_participants_hypothesis'
    if participants_premise >= max_participants_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(participants_premise, max_participants_hypothesis))
"
6143,contradiction,,contradiction,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 18,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 18,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,"average_score_premise = 18
average_score_hypothesis = 38

def entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis):
    # The hypothesis refers to the average golf score of Scott on his first four rounds, which is mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the average score in the hypothesis is different from the average score in the premise
    if average_score_premise != average_score_hypothesis:
        return False
    # If the average scores are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis))
"
6361,neutral,,neutral,Mike had less than 700 watermelons,Mike had 200 watermelons,mike had less than 700 watermelons,mike had 200 watermelons,"max_watermelons_premise = 700
watermelons_hypothesis = 200

def entailment_or_contradiction_or_neutral(max_watermelons_premise, watermelons_hypothesis):
    # the hypothesis refers to the number of watermelons Mike had, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_watermelons_premise', by checking if the number of watermelons from the hypothesis is greater or equal to 'max_watermelons_premise'
    if watermelons_hypothesis >= max_watermelons_premise:
        return False
    # any number of watermelons less than 700 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_watermelons_premise, watermelons_hypothesis))
"
6330,entailment,,entailment,"If there are 5 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","If there are less than 8 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","if there are 5 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","if there are less than 8 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","boxes_per_case_premise = 5
max_boxes_per_case_hypothesis = 8

def entailment_or_contradiction_or_neutral(boxes_per_case_premise, max_boxes_per_case_hypothesis):
    # The hypothesis refers to the number of boxes per case mentioned in the premise
    # The hypothesis suggests the number of boxes to be less than 'max_boxes_per_case_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the number of boxes reported in the premise is higher than 'max_boxes_per_case_hypothesis'
    if boxes_per_case_premise >= max_boxes_per_case_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(boxes_per_case_premise, max_boxes_per_case_hypothesis))
"
6519,entailment,,entailment,"Jerry travels 8 miles at an average speed of 40 miles per hour , stops for 14 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","Jerry travels more than 5 miles at an average speed of 40 miles per hour , stops for 14 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 8 miles at an average speed of 40 miles per hour , stops for 14 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels more than 5 miles at an average speed of 40 miles per hour , stops for 14 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","miles_traveled_at_40mph_premise = 8
min_miles_traveled_at_40mph_hypothesis = 5
stop_duration = 14
miles_traveled_at_60mph = 20

def entailment_or_contradiction_or_neutral(miles_traveled_at_40mph_premise, min_miles_traveled_at_40mph_hypothesis, stop_duration, miles_traveled_at_60mph):
    # the hypothesis talks about the distance Jerry travels at two different speeds
    # check if the hypothesis contradicts the premise by checking if Jerry traveled less than 'min_miles_traveled_at_40mph_hypothesis' at 40 miles per hour
    if miles_traveled_at_40mph_premise < min_miles_traveled_at_40mph_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(miles_traveled_at_40mph_premise, min_miles_traveled_at_40mph_hypothesis, stop_duration, miles_traveled_at_60mph))
"
6838,neutral,,neutral,more than 4000 which he and Rick earned at the end of one year,9000 which he and Rick earned at the end of one year,more than 4000 which he and rick earned at the end of one year,9000 which he and rick earned at the end of one year,"min_earning_premise = 4000
earning_hypothesis = 9000

def entailment_or_contradiction_or_neutral(min_earning_premise, earning_hypothesis):
    # the hypothesis talks about the earnings of the same two people referred to in the premise
    # check if the hypothesis contradicts the premise by checking if the earning amount from the hypothesis is less or equal to 'min_earning_premise'
    if earning_hypothesis <= min_earning_premise:
        return False
    # any earnings amount greater than 4000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_earning_premise, earning_hypothesis))
"
7457,contradiction,,contradiction,"Maddie has 48 apples , if she give 22 to mike , how many does she have left ?","Maddie has 88 apples , if she give 22 to mike , how many does she have left ?","maddie has 48 apples , if she give 22 to mike , how many does she have left ?","maddie has 88 apples , if she give 22 to mike , how many does she have left ?","apples_maddie_premise = 48
apples_maddie_hypothesis = 88
apples_given_to_mike = 22

def entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike):
    # the hypothesis contradicts the premise if the number of apples Maddie has in the hypothesis is different than the one in the premise
    if apples_maddie_premise != apples_maddie_hypothesis:
        return False
    # the hypothesis entails the premise if the number of apples Maddie has in the hypothesis is the same as the one in the premise
    elif apples_maddie_premise - apples_given_to_mike == apples_maddie_hypothesis - apples_given_to_mike:
        return True
    # if the number of apples Maddie has in the hypothesis is different than the one in the premise, but the number of apples left after giving some to Mike is the same in both cases, it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike))
"
5991,entailment,,entailment,"If gas costs $ 4 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","If gas costs $ more than 2 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","if gas costs $ 4 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","if gas costs $ more than 2 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","gas_cost_per_gallon_premise = 4
min_gas_cost_per_gallon_hypothesis = 2

def entailment_or_contradiction_or_neutral(gas_cost_per_gallon_premise, min_gas_cost_per_gallon_hypothesis):
    # the hypothesis talks about the cost of gas per gallon, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the cost of gas per gallon in the premise is lower than 'min_gas_cost_per_gallon_hypothesis'
    if gas_cost_per_gallon_premise < min_gas_cost_per_gallon_hypothesis:
        return False
    # as the cost of gas per gallon in the premise is more than 'min_gas_cost_per_gallon_hypothesis', the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(gas_cost_per_gallon_premise, min_gas_cost_per_gallon_hypothesis))
"
7406,contradiction,,contradiction,"Mira is making telescopes , each consisting of 2 lenses , 1 tube , and 1 eyepiece","Mira is making telescopes , each consisting of 8 lenses , 1 tube , and 1 eyepiece","mira is making telescopes , each consisting of 2 lenses , 1 tube , and 1 eyepiece","mira is making telescopes , each consisting of 8 lenses , 1 tube , and 1 eyepiece","lenses_per_telescope_premise = 2
lenses_per_telescope_hypothesis = 8

def entailment_or_contradiction_or_neutral(lenses_per_telescope_premise, lenses_per_telescope_hypothesis):
    # the hypothesis refers to the number of lenses per telescope mentioned in the premise
    # the hypothesis states the number of lenses per telescope to be 'lenses_per_telescope_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of lenses per telescope in the hypothesis is different than 'lenses_per_telescope_premise'
    if lenses_per_telescope_hypothesis != lenses_per_telescope_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(lenses_per_telescope_premise, lenses_per_telescope_hypothesis))
"
6558,entailment,,entailment,Jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,Jerry ’ s average ( arithmetic mean ) score on the first less than 6 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first less than 6 of 4 tests is 78,"tests_premise = 3
average_score_premise = 78
tests_hypothesis = 6
average_score_hypothesis = 78

def entailment_or_contradiction_or_neutral(tests_premise, average_score_premise, tests_hypothesis, average_score_hypothesis):
    # the hypothesis refers to the same person and scores mentioned in the premise
    # the hypothesis estimates the average score on the first less than 'tests_hypothesis' tests
    # check if the hypothesis contradicts the premise by checking if number of tests in the hypothesis is less than in the premise
    if tests_hypothesis < tests_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the average score in the hypothesis is different than in the premise
    elif average_score_hypothesis != average_score_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tests_premise, average_score_premise, tests_hypothesis, average_score_hypothesis))
"
5972,contradiction,,contradiction,Henry runs the second leg of the course in 7 seconds,Henry runs the second leg of the course in 6 seconds,henry runs the second leg of the course in 7 seconds,henry runs the second leg of the course in 6 seconds,"second_leg_time_premise = 7
second_leg_time_hypothesis = 6

def entailment_or_contradiction_or_neutral(second_leg_time_premise, second_leg_time_hypothesis):
    # the hypothesis and premise refer to the time Henry takes to run the second leg of the course
    # check if the hypothesis contradicts the premise by checking if the time from the hypothesis is different than the one from the premise
    if second_leg_time_hypothesis != second_leg_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(second_leg_time_premise, second_leg_time_hypothesis))
"
5962,neutral,,neutral,Present ages of Sameer and Anand are in the ratio of more than 1 : 4 respectively,Present ages of Sameer and Anand are in the ratio of 5 : 4 respectively,present ages of sameer and anand are in the ratio of more than 1 : 4 respectively,present ages of sameer and anand are in the ratio of 5 : 4 respectively,"min_ratio_sameer_anand_premise = 1/4
ratio_sameer_anand_hypothesis = 5/4

def entailment_or_contradiction_or_neutral(min_ratio_sameer_anand_premise, ratio_sameer_anand_hypothesis):
    # the hypothesis talks about the ratio of Sameer's age to Anand's age, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is less or equal to the 'min_ratio_sameer_anand_premise'
    if ratio_sameer_anand_hypothesis <= min_ratio_sameer_anand_premise:
        return False
    # any ratio of Sameer's age to Anand's age greater than 1/4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_ratio_sameer_anand_premise, ratio_sameer_anand_hypothesis))
"
6408,entailment,,entailment,"Shop Offered 20 % offer for every Shirt , Smith bought a shirt at Rs","Shop Offered less than 80 % offer for every Shirt , Smith bought a shirt at Rs","shop offered 20 % offer for every shirt , smith bought a shirt at rs","shop offered less than 80 % offer for every shirt , smith bought a shirt at rs","offer_percentage_premise = 20
max_offer_percentage_hypothesis = 80

def entailment_or_contradiction_or_neutral(offer_percentage_premise, max_offer_percentage_hypothesis):
    # the hypothesis refers to the discount offer mentioned in the premise
    # the hypothesis estimates the offer percentage to less than 'max_offer_percentage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if offer percentage reported in the premise is higher than 'max_offer_percentage_hypothesis'
    if offer_percentage_premise > max_offer_percentage_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(offer_percentage_premise, max_offer_percentage_hypothesis))
"
6449,contradiction,,contradiction,In 5 years John will be twice as old as Frank,In 7 years John will be twice as old as Frank,in 5 years john will be twice as old as frank,in 7 years john will be twice as old as frank,"years_future_premise = 5
years_future_hypothesis = 7

def entailment_or_contradiction_or_neutral(years_future_premise, years_future_hypothesis):
    # the hypothesis and premise talk about John's and Frank's ages in the future
    # check if the hypothesis contradicts the premise by checking if the number of years in the future from the hypothesis is different than from the premise
    if years_future_hypothesis != years_future_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(years_future_premise, years_future_hypothesis))
"
6869,contradiction,,contradiction,"In how many ways can you seat 5 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","In how many ways can you seat more than 5 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat 5 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat more than 5 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","people_premise = 5
more_people_hypothesis = 5

def entailment_or_contradiction_or_neutral(people_premise, more_people_hypothesis):
    # the hypothesis talks about the number of people you can seat on a bench, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'people_premise', by checking if the number of people from the hypothesis is less or equal to 'people_premise'
    if more_people_hypothesis <= people_premise:
        return False
    # any number of people greater than 5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(people_premise, more_people_hypothesis))
"
7572,entailment,,entailment,"If Fred walks at a constant speed of 2 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","If Fred walks at a constant speed of less than 7 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","if fred walks at a constant speed of 2 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","if fred walks at a constant speed of less than 7 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","fred_speed_premise = 2
sam_speed_premise = 5
max_fred_speed_hypothesis = 7
sam_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, max_fred_speed_hypothesis, sam_speed_hypothesis):
    # the hypothesis refers to the speed of Fred and Sam mentioned in the premise
    # first, check if the speeds from the hypothesis contradict the speeds from the premise
    if fred_speed_premise > max_fred_speed_hypothesis or sam_speed_premise != sam_speed_hypothesis:
        return False
    # if there is no contradiction, the hypothesis entails the premise because the speed of Fred is less than 7 mph and the speed of Sam is 5 mph in both statements
    return True

print(entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, max_fred_speed_hypothesis, sam_speed_hypothesis))
"
7432,neutral,,neutral,"If the toy store is stocked with more than 1 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","if the toy store is stocked with more than 1 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","min_ball_types_premise = 1
ball_types_hypothesis = 3
board_game_types_premise = 6
board_game_types_hypothesis = 6

def entailment_or_contradiction_or_neutral(min_ball_types_premise, ball_types_hypothesis, board_game_types_premise, board_game_types_hypothesis):
    # the hypothesis refers to the types of balls and board games mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the types of balls or board games in the hypothesis are fewer than the premise
    if ball_types_hypothesis <= min_ball_types_premise or board_game_types_hypothesis != board_game_types_premise:
        return False
    # since the hypothesis has more types of balls and the same types of board games, it doesn't contradict the premise. Thus, it is neutral.
    return None

print(entailment_or_contradiction_or_neutral(min_ball_types_premise, ball_types_hypothesis, board_game_types_premise, board_game_types_hypothesis))
"
7463,contradiction,,contradiction,Amanda goes to the toy store to buy 1 ball and 3 different board games,Amanda goes to the toy store to buy 7 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy 7 ball and 3 different board games,"balls_premise = 1
balls_hypothesis = 7
board_games_premise = 3
board_games_hypothesis = 3

def entailment_or_contradiction_or_neutral(balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis):
    # the hypothesis refers to the number of balls and board games Amanda buys, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of balls or board games bought as reported in the hypothesis is different from the premise
    if balls_premise != balls_hypothesis or board_games_premise != board_games_hypothesis:
        return False
    return None

print(entailment_or_contradiction_or_neutral(balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis))
"
3664,neutral,,neutral,How much loss would Indu has suffered had she given it to Bindu for less than 6 years at 4 % per annum simple interest ?,How much loss would Indu has suffered had she given it to Bindu for 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for less than 6 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 2 years at 4 % per annum simple interest ?,"loan_years_premise = 6
loan_years_hypothesis = 2

def entailment_or_contradiction_or_neutral(loan_years_premise, loan_years_hypothesis):
    # the hypothesis talks about the number of loan years, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'loan_years_premise', by checking if the number of loan years from the hypothesis is greater or equal to 'loan_years_premise'
    if loan_years_hypothesis >= loan_years_premise:
        return False
    # any number of loan years less than 6 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(loan_years_premise, loan_years_hypothesis))
"
6929,contradiction,,contradiction,"Right now , the ratio between the ages of Sandy and Molly is 4 : 3","Right now , the ratio between the ages of Sandy and Molly is 5 : 3","right now , the ratio between the ages of sandy and molly is 4 : 3","right now , the ratio between the ages of sandy and molly is 5 : 3","sandy_molly_ratio_premise = 4 / 3
sandy_molly_ratio_hypothesis = 5 / 3

def entailment_or_contradiction_or_neutral(sandy_molly_ratio_premise, sandy_molly_ratio_hypothesis):
    # the hypothesis talks about the ratio between the ages of Sandy and Molly, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by comparing the two ratios
    if sandy_molly_ratio_premise != sandy_molly_ratio_hypothesis:
        return False
    # if the ratios were equal, the hypothesis would entail the premise
    return None

print(entailment_or_contradiction_or_neutral(sandy_molly_ratio_premise, sandy_molly_ratio_hypothesis))
"
2124,entailment,,entailment,Carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,Carl drove from his home to the beach at an average speed of more than 40 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of more than 40 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,"outbound_speed_premise = 80
inbound_speed_premise = 70
min_outbound_speed_hypothesis = 40
inbound_speed_hypothesis = 70

def entailment_or_contradiction_or_neutral(outbound_speed_premise, inbound_speed_premise, min_outbound_speed_hypothesis, inbound_speed_hypothesis):
    # the hypothesis refers to the speed estimates for both the outbound and inbound trips mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the outbound and inbound speeds in the premise are lower than those in the hypothesis
    if outbound_speed_premise < min_outbound_speed_hypothesis or inbound_speed_premise < inbound_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(outbound_speed_premise, inbound_speed_premise, min_outbound_speed_hypothesis, inbound_speed_hypothesis))
"
7490,contradiction,,contradiction,Anita has 360 apples,Anita has 560 apples,anita has 360 apples,anita has 560 apples,"apples_premise = 360
apples_hypothesis = 560

def entailment_or_contradiction_or_neutral(apples_premise, apples_hypothesis):
    # the hypothesis refers to the number of apples Anita has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of apples in the hypothesis is different from the premise
    if apples_premise != apples_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(apples_premise, apples_hypothesis))
"
7581,entailment,,entailment,"What is the share of Sravan , if Sreedhar alone can do the work in 75 days ?","What is the share of Sravan , if Sreedhar alone can do the work in more than 25 days ?","what is the share of sravan , if sreedhar alone can do the work in 75 days ?","what is the share of sravan , if sreedhar alone can do the work in more than 25 days ?","sreedhar_work_days_premise = 75
min_sreedhar_work_days_hypothesis = 25

def entailment_or_contradiction_or_neutral(sreedhar_work_days_premise, min_sreedhar_work_days_hypothesis):
    # the hypothesis refers to the number of days required for Sreedhar to complete the work alone, which is also mentioned in the premise
    # the hypothesis estimates the work days to more than 'min_sreedhar_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the work days reported in the premise are lower than 'min_sreedhar_work_days_hypothesis'
    if sreedhar_work_days_premise < min_sreedhar_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sreedhar_work_days_premise, min_sreedhar_work_days_hypothesis))
"
6101,contradiction,,contradiction,It will take 16 days for Mary to complete a certain task alone,It will take 76 days for Mary to complete a certain task alone,it will take 16 days for mary to complete a certain task alone,it will take 76 days for mary to complete a certain task alone,"days_task_complete_premise = 16
days_task_complete_hypothesis = 76

def entailment_or_contradiction_or_neutral(days_task_complete_premise, days_task_complete_hypothesis):
    # the hypothesis refers to the time Mary needs to complete a task, also mentioned in the premise
    # check if the hypothesis contradicts the premise time by checking if the number of days from the hypothesis differs from the premise
    if days_task_complete_hypothesis != days_task_complete_premise:
        return False
    # in this case, the hypothesis can't entail the premise information since the number of days differs
    return None

print(entailment_or_contradiction_or_neutral(days_task_complete_premise, days_task_complete_hypothesis))
"
6140,contradiction,,contradiction,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,Kiran travels from A to B by car and returns from B to A by cycle in 1 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in 1 hours,"total_travel_time_premise = 7
total_travel_time_hypothesis = 1

def entailment_or_contradiction_or_neutral(total_travel_time_premise, total_travel_time_hypothesis):
    # the hypothesis refers to the total travel time mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if total travel time reported in the hypothesis is less than total travel time from the premise
    if total_travel_time_hypothesis < total_travel_time_premise:
        return False
    # if the total travel time from the hypothesis is equal or greater than the total travel time from the premise, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_travel_time_premise, total_travel_time_hypothesis))
"
6111,entailment,,entailment,"Amtek employs 80 level - 1 employees , 30 of whom are college graduates","Amtek employs more than 60 level - 1 employees , 30 of whom are college graduates","amtek employs 80 level - 1 employees , 30 of whom are college graduates","amtek employs more than 60 level - 1 employees , 30 of whom are college graduates","level_1_employees_premise = 80
graduates_premise = 30
min_level_1_employees_hypothesis = 60
graduates_hypothesis = 30

def entailment_or_contradiction_or_neutral(level_1_employees_premise, graduates_premise, min_level_1_employees_hypothesis, graduates_hypothesis):
    # the hypothesis refers to the number of level - 1 employees and the number of college graduates mentioned in the premise
    # the hypothesis estimates the number of level - 1 employees to be more than 'min_level_1_employees_hypothesis' and the number of graduates to be 'graduates_hypothesis'
    
    # check if the hypothesis contradicts the premise by checking if the number of employees or graduates reported in the premise is lower than 'min_level_1_employees_hypothesis' or 'graduates_hypothesis'
    if level_1_employees_premise < min_level_1_employees_hypothesis or graduates_premise < graduates_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(level_1_employees_premise, graduates_premise, min_level_1_employees_hypothesis, graduates_hypothesis))
"
6391,neutral,,neutral,"Sacha runs at a constant speed of more than 1 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of 6 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 1 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 6 meters per second , and bruno runs at a constant speed of 5 meters per second","min_speed_sacha_premise = 1
speed_bruno_premise = 5
speed_sacha_hypothesis = 6
speed_bruno_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_bruno_premise, speed_sacha_hypothesis, speed_bruno_hypothesis):
    # the hypothesis refers to the running speeds of Sacha and Bruno mentioned in the premise
    # the hypothesis estimates Sacha's speed to be 'speed_sacha_hypothesis' and Bruno's speed to be 'speed_bruno_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Sacha's speed is lower or equal to 'min_speed_sacha_premise' or Bruno's speed is not equal to 'speed_bruno_premise'
    if speed_sacha_hypothesis <= min_speed_sacha_premise or speed_bruno_hypothesis != speed_bruno_premise:
        return False
    # any speed of Sacha greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_bruno_premise, speed_sacha_hypothesis, speed_bruno_hypothesis))
"
3407,contradiction,,contradiction,Jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 15 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 65 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 15 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 65 % of the cost of the orders she serves,"hourly_wage_premise = 4.00
tip_rate_premise = 0.15
hourly_wage_hypothesis = 4.00
tip_rate_hypothesis = 0.65

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis):
    # the hypothesis refers to Jill's hourly wage and tip rate, both mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the hourly wage and tip rate in the hypothesis and premise
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_premise != tip_rate_hypothesis:
        return False
    # as the hourly wage and tip rate in the hypothesis are the same as in the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis))
"
6362,contradiction,,contradiction,Mike had 200 watermelons,Mike had 100 watermelons,mike had 200 watermelons,mike had 100 watermelons,"watermelons_premise = 200
watermelons_hypothesis = 100

def entailment_or_contradiction_or_neutral(watermelons_premise, watermelons_hypothesis):
    # the hypothesis refers to the number of watermelons Mike had, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of watermelons stated in the hypothesis is not equal to the one stated in the premise
    if watermelons_hypothesis != watermelons_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(watermelons_premise, watermelons_hypothesis))
"
6222,entailment,,entailment,"200 , what will be the difference between Mani and Rani ' s share ?","less than 400 , what will be the difference between Mani and Rani ' s share ?","200 , what will be the difference between mani and rani ' s share ?","less than 400 , what will be the difference between mani and rani ' s share ?","diff_shares_premise = 200
max_diff_shares_hypothesis = 400

def entailment_or_contradiction_or_neutral(diff_shares_premise, max_diff_shares_hypothesis):
    # the hypothesis refers to the difference between Mani and Rani's shares, which is also mentioned in the premise
    # the hypothesis estimates the difference to be less than 'max_diff_shares_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the difference in the premise is greater than 'max_diff_shares_hypothesis'
    if diff_shares_premise > max_diff_shares_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(diff_shares_premise, max_diff_shares_hypothesis))
"
213,entailment,,entailment,"If the average speed of the whole journey was 36 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","If the average speed of the whole journey was less than 76 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","if the average speed of the whole journey was 36 mph , then what is tom ' s speed driving from b to c in miles per hour ?","if the average speed of the whole journey was less than 76 mph , then what is tom ' s speed driving from b to c in miles per hour ?","avg_speed_journey_premise = 36
max_avg_speed_journey_hypothesis = 76

def entailment_or_contradiction_or_neutral(avg_speed_journey_premise, max_avg_speed_journey_hypothesis):
    # Both the premise and hypothesis refer to the average speed of the journey
    # The hypothesis suggests the average speed of the journey is less than 'max_avg_speed_journey_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the average speed in the premise is greater than 'max_avg_speed_journey_hypothesis'
    if avg_speed_journey_premise > max_avg_speed_journey_hypothesis:
        return False
    # If the premise speed is less than the hypothesis speed, there is no contradiction and the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(avg_speed_journey_premise, max_avg_speed_journey_hypothesis))
"
5981,contradiction,,contradiction,"There are 300 seniors at Morse High School , and 50 % of them have cars","There are less than 300 seniors at Morse High School , and 50 % of them have cars","there are 300 seniors at morse high school , and 50 % of them have cars","there are less than 300 seniors at morse high school , and 50 % of them have cars","seniors_premise = 300
seniors_hypothesis = 300

def entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis):
    # the hypothesis contradicts the premise by stating that there are less than 'seniors_hypothesis' seniors
    # check if the number of seniors reported in the premise is equal to 'seniors_hypothesis'
    if seniors_premise == seniors_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis))
"
6879,entailment,,entailment,Q : Robert purchased $ 1500 worth of US saving bonds,Q : Robert purchased $ less than 6500 worth of US saving bonds,q : robert purchased $ 1500 worth of us saving bonds,q : robert purchased $ less than 6500 worth of us saving bonds,"us_bonds_purchased_premise = 1500
max_us_bonds_purchased_hypothesis = 6500

def entailment_or_contradiction_or_neutral(us_bonds_purchased_premise, max_us_bonds_purchased_hypothesis):
    # the hypothesis refers to the number of US saving bonds purchased as mentioned in the premise
    # the hypothesis estimates the purchase to be less or equal to 'max_us_bonds_purchased_hypothesis'
    # check if the hypothesis contradicts the premise by checking if bonds purchased reported in the premise are higher than 'max_us_bonds_purchased_hypothesis'
    if us_bonds_purchased_premise > max_us_bonds_purchased_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(us_bonds_purchased_premise, max_us_bonds_purchased_hypothesis))
"
6968,contradiction,,contradiction,The owner made some additions and the 900 square feet property is now fetching a price of US Dollar 1500,The owner made some additions and the 400 square feet property is now fetching a price of US Dollar 1500,the owner made some additions and the 900 square feet property is now fetching a price of us dollar 1500,the owner made some additions and the 400 square feet property is now fetching a price of us dollar 1500,"property_size_premise = 900
property_size_hypothesis = 400
property_price_premise = 1500
property_price_hypothesis = 1500

def entailment_or_contradiction_or_neutral(property_size_premise, property_size_hypothesis, property_price_premise, property_price_hypothesis):
    # the hypothesis and premise share the same context about a property's size and price  
    # check if the hypothesis contradicts the premise by comparing the property size and price
    if property_size_hypothesis != property_size_premise or property_price_hypothesis != property_price_premise:
        return False
    # if the property size and price in the hypothesis is the same as in the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(property_size_premise, property_size_hypothesis, property_price_premise, property_price_hypothesis))
"
6698,contradiction,,contradiction,2000 and Tony withdraws Rs,7000 and Tony withdraws Rs,2000 and tony withdraws rs,7000 and tony withdraws rs,"withdrawal_premise = 2000
withdrawal_hypothesis = 7000

def entailment_or_contradiction_or_neutral(withdrawal_premise, withdrawal_hypothesis):
    # the hypothesis refers to the amount of money Tony withdraws, which is mentioned in the premise
    # the hypothesis estimates the withdrawal to be 'withdrawal_hypothesis' rupees
    # check if the hypothesis contradicts the premise by checking if the withdrawal amount reported in the premise is lower than 'withdrawal_hypothesis'
    if withdrawal_premise < withdrawal_hypothesis:
        return False
    # any withdrawal amount equal to or higher than 2000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(withdrawal_premise, withdrawal_hypothesis))
"
7556,contradiction,,contradiction,Jim alone cleans the entire house in 6 hours,Jim alone cleans the entire house in 5 hours,jim alone cleans the entire house in 6 hours,jim alone cleans the entire house in 5 hours,"cleaning_time_premise = 6
cleaning_time_hypothesis = 5

def entailment_or_contradiction_or_neutral(cleaning_time_premise, cleaning_time_hypothesis):
    # The hypothesis refers to Jim's cleaning time mentioned in the premise
    # The hypothesis estimates the cleaning time is 'cleaning_time_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if cleaning time reported in the premise is less than 'cleaning_time_hypothesis'
    if cleaning_time_premise < cleaning_time_hypothesis:
        return False
    # Check if the hypothesis entails the premise by checking if cleaning time reported in the premise is greater than 'cleaning_time_hypothesis'
    elif cleaning_time_premise > cleaning_time_hypothesis:
        return False
    # If neither contradiction nor entailment is found, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(cleaning_time_premise, cleaning_time_hypothesis))
"
7562,contradiction,,contradiction,"At the faculty of Aerospace Engineering , 310 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 810 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 310 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 810 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","random_processing_students_premise = 310
random_processing_students_hypothesis = 810
scramjet_engines_students_premise = 232
scramjet_engines_students_hypothesis = 232
both_subjects_students_premise = 112
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(random_processing_students_premise, random_processing_students_hypothesis, scramjet_engines_students_premise, scramjet_engines_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis):
    # the hypothesis talks about the number of students studying each subject, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by comparing the number of students studying each subject in the hypothesis and premise
    if random_processing_students_premise != random_processing_students_hypothesis or scramjet_engines_students_premise != scramjet_engines_students_hypothesis or both_subjects_students_premise != both_subjects_students_hypothesis:
        return False
    # the numbers of students studying each subject in the premise and the hypothesis are the same, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(random_processing_students_premise, random_processing_students_hypothesis, scramjet_engines_students_premise, scramjet_engines_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis))
"
2025,entailment,,entailment,John was thrice as old as Tom 6 yrs back,John was thrice as old as Tom more than 5 yrs back,john was thrice as old as tom 6 yrs back,john was thrice as old as tom more than 5 yrs back,"john_tom_age_difference_premise = 6
john_tom_age_difference_hypothesis = 5

def entailment_or_contradiction_or_neutral(john_tom_age_difference_premise, john_tom_age_difference_hypothesis):
    # the hypothesis refers to the age difference between John and Tom mentioned in the premise
    # the hypothesis estimates the age difference to be more than 'john_tom_age_difference_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the age difference in the premise is less than or equal to 'john_tom_age_difference_hypothesis'
    if john_tom_age_difference_premise <= john_tom_age_difference_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(john_tom_age_difference_premise, john_tom_age_difference_hypothesis))
"
5941,neutral,,neutral,"In a friendship gang Mala has more than 2 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has more than 2 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","min_gangs_premise = 2
gangs_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_gangs_premise, gangs_hypothesis):
    # The hypothesis refers to the number of gangs Mala has, which is also mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of gangs in the hypothesis is lower or equal to 'min_gangs_premise'
    if gangs_hypothesis <= min_gangs_premise:
        return False
    # Any number of gangs greater than 2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_gangs_premise, gangs_hypothesis))
"
6033,entailment,,entailment,"In the city of San Durango , 40 people own cats , dogs , or rabbits","In the city of San Durango , less than 70 people own cats , dogs , or rabbits","in the city of san durango , 40 people own cats , dogs , or rabbits","in the city of san durango , less than 70 people own cats , dogs , or rabbits","pet_owners_premise = 40
max_pet_owners_hypothesis = 70

def entailment_or_contradiction_or_neutral(pet_owners_premise, max_pet_owners_hypothesis):
    # the hypothesis refers to the same pet owners in the city of San Durango as the premise
    # the hypothesis estimates the number of pet owners to be less than 'max_pet_owners_hypothesis'
    # check if the hypothesis contradicts the premise by checking if pet owners reported in the premise are greater than 'max_pet_owners_hypothesis'
    if pet_owners_premise > max_pet_owners_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pet_owners_premise, max_pet_owners_hypothesis))
"
6180,entailment,,entailment,"David obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","David obtained more than 16 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","david obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","david obtained more than 16 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","# Extracting quantities from the premise and hypothesis
english_marks_premise = 86
math_marks_premise = 85
physics_marks_premise = 82
chemistry_marks_premise = 87
biology_marks_premise = 85

english_marks_hypothesis = 16
math_marks_hypothesis = 85
physics_marks_hypothesis = 82
chemistry_marks_hypothesis = 87
biology_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis):
    # Check if the hypothesis contradicts the premise by checking if the marks for each subject in the hypothesis are more than the marks in the premise
    if english_marks_hypothesis > english_marks_premise or math_marks_hypothesis > math_marks_premise or physics_marks_hypothesis > physics_marks_premise or chemistry_marks_hypothesis > chemistry_marks_premise or biology_marks_hypothesis > biology_marks_premise:
        return False
    # Check if the hypothesis is neutral with the premise by checking if the marks for each subject in the hypothesis are equal to the marks in the premise
    elif english_marks_hypothesis == english_marks_premise and math_marks_hypothesis == math_marks_premise and physics_marks_hypothesis == physics_marks_premise and chemistry_marks_hypothesis == chemistry_marks_premise and biology_marks_hypothesis == biology_marks_premise:
        return None
    # If the hypothesis does not contradict or is neutral with the premise, then it must be entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis))
"
6351,entailment,,entailment,If the profit in the business at the end of the year was 22000 how much amount would Mr Praveen have received as the profit ?,If the profit in the business at the end of the year was less than 42000 how much amount would Mr Praveen have received as the profit ?,if the profit in the business at the end of the year was 22000 how much amount would mr praveen have received as the profit ?,if the profit in the business at the end of the year was less than 42000 how much amount would mr praveen have received as the profit ?,"profit_premise = 22000
max_profit_hypothesis = 42000

def entailment_or_contradiction_or_neutral(profit_premise, max_profit_hypothesis):
    # Both premise and hypothesis refer to the profit in a business at year end
    # The hypothesis states that the profit is less than 'max_profit_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the profit reported in the premise is higher than 'max_profit_hypothesis'
    if profit_premise > max_profit_hypothesis:
        return False
    # If not contradictory, since the profit in premise is less than 'max_profit_hypothesis' as stated in hypothesis, it's an entailment
    return True

print(entailment_or_contradiction_or_neutral(profit_premise, max_profit_hypothesis))
"
6173,contradiction,,contradiction,"John paid a 15 % tip over the original price of the dish , while Jane paid the tip over the discounted price for the coupon","John paid a 25 % tip over the original price of the dish , while Jane paid the tip over the discounted price for the coupon","john paid a 15 % tip over the original price of the dish , while jane paid the tip over the discounted price for the coupon","john paid a 25 % tip over the original price of the dish , while jane paid the tip over the discounted price for the coupon","john_tip_percentage_premise = 15
john_tip_percentage_hypothesis = 25

def entailment_or_contradiction_or_neutral(john_tip_percentage_premise, john_tip_percentage_hypothesis):
    # the hypothesis refers to the percentage of the tip John paid for the dish, which is also mentioned in the premise
    # it contradicts the premise if the percentage from the hypothesis is not the same as the one from the premise
    if john_tip_percentage_hypothesis != john_tip_percentage_premise:
        return False
    # if the percentages are the same, the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(john_tip_percentage_premise, john_tip_percentage_hypothesis))
"
7289,contradiction,,contradiction,14000 in a business which he jointly owns with two other persons ( James and Greg ),24000 in a business which he jointly owns with two other persons ( James and Greg ),14000 in a business which he jointly owns with two other persons ( james and greg ),24000 in a business which he jointly owns with two other persons ( james and greg ),"investment_premise = 14000
investment_hypothesis = 24000

def entailment_or_contradiction_or_neutral(investment_premise, investment_hypothesis):
    # the hypothesis talks about the value of an investment in a business, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the investment value according to the hypothesis is less than the investment value according to the premise
    if investment_hypothesis < investment_premise:
        return False
    # if the hypothesis indicates a greater investment value than the premise, it contradicts the premise
    elif investment_hypothesis > investment_premise:
        return False
    # if the investment value is the same in the hypothesis and premise, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(investment_premise, investment_hypothesis))
"
6225,entailment,,entailment,Addison High School ’ s senior class has 300 boys and 240 girls,Addison High School ’ s senior class has less than 400 boys and 240 girls,addison high school ’ s senior class has 300 boys and 240 girls,addison high school ’ s senior class has less than 400 boys and 240 girls,"boys_premise = 300
girls_premise = 240
max_boys_hypothesis = 400
girls_hypothesis = 240

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, max_boys_hypothesis, girls_hypothesis):
    # the hypothesis refers to the number of boys and girls in the senior class of Addison High School mentioned in the premise
    # first, check if the hypothesis contradicts the premise
    # if the number of boys or girls in the premise is greater than the maximum number of boys or girls mentioned in the hypothesis, it's a contradiction
    if boys_premise > max_boys_hypothesis or girls_premise != girls_hypothesis:
        return False
    # if the number of boys and girls in the premise is less than or equal to the number of boys and girls in the hypothesis, it's an entailment
    elif boys_premise <= max_boys_hypothesis and girls_premise == girls_hypothesis:
        return True
    # otherwise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, max_boys_hypothesis, girls_hypothesis))
"
7551,entailment,,entailment,In a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,In a group of more than 2 boys & 4 girls a Committee of 4 persons is to be formed,in a group of 6 boys & 4 girls a committee of 4 persons is to be formed,in a group of more than 2 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
min_boys_hypothesis = 2
girls_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis):
    # the hypothesis refers to the number of boys and girls that can form a committee, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of boys or girls mentioned in the premise are less than those mentioned in the hypothesis
    if boys_premise < min_boys_hypothesis or girls_premise < girls_hypothesis:
        return False
    # if there is no contradiction, check if the hypothesis is entailed by the premise by checking if the number of boys or girls mentioned in the premise are equal to or more than those mentioned in the hypothesis
    elif boys_premise >= min_boys_hypothesis and girls_premise == girls_hypothesis:
        return True
    # if the hypothesis is neither contradicted nor entailed by the premise, it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis))
"
7411,neutral,,neutral,Raman mixed less than 47 kg of butter at Rs,Raman mixed 27 kg of butter at Rs,raman mixed less than 47 kg of butter at rs,raman mixed 27 kg of butter at rs,"max_butter_kg_premise = 47
butter_kg_hypothesis = 27

def entailment_or_contradiction_or_neutral(max_butter_kg_premise, butter_kg_hypothesis):
    # the hypothesis talks about the quantity of butter Raman mixed, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_butter_kg_premise', by checking if the quantity from the hypothesis is greater or equal to 'max_butter_kg_premise'
    if butter_kg_hypothesis >= max_butter_kg_premise:
        return False
    # any quantity of butter less than 47 kg is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_butter_kg_premise, butter_kg_hypothesis))
"
5986,neutral,,neutral,Mark sold more than 1 boxes less than n and Ann sold 2 boxes less than n,Mark sold 6 boxes less than n and Ann sold 2 boxes less than n,mark sold more than 1 boxes less than n and ann sold 2 boxes less than n,mark sold 6 boxes less than n and ann sold 2 boxes less than n,"min_boxes_sold_by_Mark_premise = 1
boxes_sold_by_Mark_hypothesis = 6
boxes_sold_by_Ann_premise = 2
boxes_sold_by_Ann_hypothesis = 2

def entailment_or_contradiction_or_neutral(min_boxes_sold_by_Mark_premise, boxes_sold_by_Mark_hypothesis, boxes_sold_by_Ann_premise, boxes_sold_by_Ann_hypothesis):
    # the hypothesis refers to the number of boxes sold by Mark and Ann, mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_boxes_sold_by_Mark_premise' sold by Mark, by checking if the number of boxes sold by Mark from the hypothesis is less or equal to 'min_boxes_sold_by_Mark_premise'
    if boxes_sold_by_Mark_hypothesis <= min_boxes_sold_by_Mark_premise:
        return False
    # check if the number of boxes sold by Ann contradicts the premise, by checking if the number of boxes sold by Ann from the hypothesis is not equal to 'boxes_sold_by_Ann_premise'
    if boxes_sold_by_Ann_hypothesis != boxes_sold_by_Ann_premise:
        return False
    # any number of boxes sold by Mark greater than 1 and exactly 2 boxes sold by Ann is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_boxes_sold_by_Mark_premise, boxes_sold_by_Mark_hypothesis, boxes_sold_by_Ann_premise, boxes_sold_by_Ann_hypothesis))
"
7440,entailment,,entailment,It takes John exactly 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,It takes John exactly less than 60 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,it takes john exactly 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,it takes john exactly less than 60 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,"john_rake_time_premise = 30
todd_rake_time_premise = todd_rake_time_hypothesis = 60
john_max_rake_time_hypothesis = 60

def entailment_or_contradiction_or_neutral(john_rake_time_premise, todd_rake_time_premise, john_max_rake_time_hypothesis, todd_rake_time_hypothesis):
    # the hypothesis refers to the time it takes John and Todd to rake the lawn, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if John's raking time mentioned in the premise is greater than 'john_max_rake_time_hypothesis' or if Todd's raking time from the premise is different than the one from the hypothesis
    if john_rake_time_premise > john_max_rake_time_hypothesis or todd_rake_time_premise != todd_rake_time_hypothesis:
        return False
    # John's raking time and Todd's raking time from the premise both entail the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(john_rake_time_premise, todd_rake_time_premise, john_max_rake_time_hypothesis, todd_rake_time_hypothesis))
"
5975,contradiction,,contradiction,"Jerry travels 8 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","Jerry travels 6 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 8 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 6 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","first_travel_distance_premise = 8
average_speed_premise = 40
stop_time_premise = 11
second_travel_distance_premise = 20
second_average_speed_premise = 60

first_travel_distance_hypothesis = 6
average_speed_hypothesis = 40
stop_time_hypothesis = 11
second_travel_distance_hypothesis = 20
second_average_speed_hypothesis = 60

def entailment_or_contradiction_or_neutral(first_travel_distance_premise, average_speed_premise, stop_time_premise,
                                           second_travel_distance_premise, second_average_speed_premise,
                                           first_travel_distance_hypothesis, average_speed_hypothesis, stop_time_hypothesis,
                                           second_travel_distance_hypothesis, second_average_speed_hypothesis):
    # the hypothesis talks about Jerry's travel details, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if any of the details in the hypothesis do not match the premise
    if first_travel_distance_premise != first_travel_distance_hypothesis or average_speed_premise != average_speed_hypothesis or stop_time_premise != stop_time_hypothesis or second_travel_distance_premise != second_travel_distance_hypothesis or second_average_speed_premise != second_average_speed_hypothesis:
        return False
    return None

print(entailment_or_contradiction_or_neutral(first_travel_distance_premise, average_speed_premise, stop_time_premise,
                                             second_travel_distance_premise, second_average_speed_premise,
                                             first_travel_distance_hypothesis, average_speed_hypothesis, stop_time_hypothesis,
                                             second_travel_distance_hypothesis, second_average_speed_hypothesis))
"
6091,neutral,,neutral,A “ Sophie Germain ” prime is any positive prime number p for which less than 3 p + 1 is also prime,A “ Sophie Germain ” prime is any positive prime number p for which 2 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which less than 3 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 2 p + 1 is also prime,"premise_val = 3
hypothesis_val = 2

def entailment_or_contradiction_or_neutral(premise_val, hypothesis_val):
    # The hypothesis and premise both talk about the value with which p is evaluated for a number to be considered a ""Sophie Germain"" prime.
    # The premise mentions a value of less than 3, while the hypothesis mentions a value of 2.
    # As 2 is less than 3, the hypothesis does not contradict the premise.
    # However, the premise allows for a value less than 3, but not necessarily 2.
    # Thus, the hypothesis does not necessarily entail the premise, and the relationship is neutral.
    if hypothesis_val > premise_val:
        return False
    elif hypothesis_val < premise_val:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(premise_val, hypothesis_val))
"
5924,contradiction,,contradiction,"If the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","If the trip home took 4 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","if the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","if the trip home took 4 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","trip_home_longer_premise = 1/2
trip_home_longer_hypothesis = 4/2

def entailment_or_contradiction_or_neutral(trip_home_longer_premise, trip_home_longer_hypothesis):
    # the hypothesis refers to the duration of the trip home, which is also mentioned in the premise
    # the hypothesis estimates the trip home to be longer by 'trip_home_longer_hypothesis' hours than the trip to beach
    # check if the hypothesis contradicts the premise by checking if the duration mentioned in the hypothesis is not equal to the duration in the premise
    if trip_home_longer_premise != trip_home_longer_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(trip_home_longer_premise, trip_home_longer_hypothesis))
"
6323,contradiction,,contradiction,There are 4 chess amateurs playing in Villa ' s chess club tournament,There are more than 4 chess amateurs playing in Villa ' s chess club tournament,there are 4 chess amateurs playing in villa ' s chess club tournament,there are more than 4 chess amateurs playing in villa ' s chess club tournament,"chess_players_premise = 4
min_chess_players_hypothesis = 4

def entailment_or_contradiction_or_neutral(chess_players_premise, min_chess_players_hypothesis):
    # the hypothesis refers to the number of chess players mentioned in the premise
    # the hypothesis estimates the number of chess players to more than 'min_chess_players_hypothesis'
    # check if the hypothesis contradicts the premise by checking if number of players reported in the premise is less than or equal to 'min_chess_players_hypothesis'
    if chess_players_premise <= min_chess_players_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(chess_players_premise, min_chess_players_hypothesis))
"
7199,contradiction,,contradiction,"The sides BC , CA , AB of triangle ABC have 3 , 4 , 5 interior points respectively on them","The sides BC , CA , AB of triangle ABC have 7 , 4 , 5 interior points respectively on them","the sides bc , ca , ab of triangle abc have 3 , 4 , 5 interior points respectively on them","the sides bc , ca , ab of triangle abc have 7 , 4 , 5 interior points respectively on them","BC_points_premise = 3
CA_points_premise = 4
AB_points_premise = 5

BC_points_hypothesis = 7
CA_points_hypothesis = 4
AB_points_hypothesis = 5

def entailment_or_contradiction_or_neutral(BC_points_premise, CA_points_premise, AB_points_premise, BC_points_hypothesis, CA_points_hypothesis, AB_points_hypothesis):
    # the hypothesis talks about the number of interior points on the sides of a triangle ABC, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of interior points on the sides of the triangle from the hypothesis are not equal to the ones from the premise
    if BC_points_hypothesis != BC_points_premise or CA_points_hypothesis != CA_points_premise or AB_points_hypothesis != AB_points_premise:
        return False
    # if the number of points are equal, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(BC_points_premise, CA_points_premise, AB_points_premise, BC_points_hypothesis, CA_points_hypothesis, AB_points_hypothesis))
"
7208,contradiction,,contradiction,If the marks secured by Reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as 75 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 75 instead of 99 then find the correct average marks up to two decimal places .,"reema_marks_premise = 35
reema_marks_hypothesis = 75

def entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis):
    # the hypothesis talks about Reema's marks, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the marks from the hypothesis are not equal to the marks from the premise
    if reema_marks_hypothesis != reema_marks_premise:
        return False
    # if the hypothesis marks are equal to the premise marks, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis))
"
6041,contradiction,,contradiction,Xavier starts from P towards Q at a speed of 90 kmph and after every 12 mins increases his speed by 20 kmph,Xavier starts from P towards Q at a speed of more than 90 kmph and after every 12 mins increases his speed by 20 kmph,xavier starts from p towards q at a speed of 90 kmph and after every 12 mins increases his speed by 20 kmph,xavier starts from p towards q at a speed of more than 90 kmph and after every 12 mins increases his speed by 20 kmph,"initial_speed_premise = 90
speed_increment_premise = 20
time_for_increment_premise = 12

initial_speed_hypothesis = 90
speed_increment_hypothesis = 20
time_for_increment_hypothesis = 12

def entailment_or_contradiction_or_neutral(initial_speed_premise, speed_increment_premise, time_for_increment_premise,
                                           initial_speed_hypothesis, speed_increment_hypothesis, time_for_increment_hypothesis):
    # the hypothesis talks about Xavier's speed and speed increment, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of initial speed being 'initial_speed_premise', by checking if the initial speed from the hypothesis is less than or equal to 'initial_speed_premise'
    if initial_speed_hypothesis <= initial_speed_premise:
        return False
    # any initial speed greater than 90, speed increment of 20 kmph and time for increment 12 min is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(initial_speed_premise, speed_increment_premise, time_for_increment_premise,
                                             initial_speed_hypothesis, speed_increment_hypothesis, time_for_increment_hypothesis))
"
6150,entailment,,entailment,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of less than 71 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of less than 71 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","hours_worked_james_premise = 41
max_hours_worked_james_hypothesis = 71

def entailment_or_contradiction_or_neutral(hours_worked_james_premise, max_hours_worked_james_hypothesis):
    # the hypothesis refers to the number of hours James worked last week, as mentioned in the premise
    # the hypothesis estimates the work hours to be less than 'max_hours_worked_james_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work hours reported in the premise are higher than 'max_hours_worked_james_hypothesis'
    if hours_worked_james_premise > max_hours_worked_james_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hours_worked_james_premise, max_hours_worked_james_hypothesis))
"
203,contradiction,,contradiction,They both work together for 5 days and then Sushil goes away,They both work together for more than 5 days and then Sushil goes away,they both work together for 5 days and then sushil goes away,they both work together for more than 5 days and then sushil goes away,"working_days_together_premise = 5
min_working_days_together_hypothesis = 5

def entailment_or_contradiction_or_neutral(working_days_together_premise, min_working_days_together_hypothesis):
    # the hypothesis refers to the number of days Sushil and the other person worked together, mentioned also in the premise
    # it estimates the days of work to be more than 'min_working_days_together_hypothesis'
    # check if the hypothesis contradicts the premise by comparing the days from the premise with 'min_working_days_together_hypothesis'
    if working_days_together_premise <= min_working_days_together_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(working_days_together_premise, min_working_days_together_hypothesis))
"
6164,contradiction,,contradiction,Arun purchased 30 kg of wheat at the rate of Rs,Arun purchased more than 30 kg of wheat at the rate of Rs,arun purchased 30 kg of wheat at the rate of rs,arun purchased more than 30 kg of wheat at the rate of rs,"wheat_kg_premise = 30
min_wheat_kg_hypothesis = 30

def entailment_or_contradiction_or_neutral(wheat_kg_premise, min_wheat_kg_hypothesis):
    # the hypothesis refers to the quantity of wheat purchased by Arun mentioned in the premise
    # the hypothesis estimates the wheat quantity to be more than 'min_wheat_kg_hypothesis'
    # check if the hypothesis contradicts the premise by checking if wheat quantity reported in the premise is lower than 'min_wheat_kg_hypothesis'
    if wheat_kg_premise <= min_wheat_kg_hypothesis:
        return False
    # any quantity of wheat more than 30kg is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(wheat_kg_premise, min_wheat_kg_hypothesis))
"
6206,contradiction,,contradiction,"20 each , are purchased from Ram by Mohan at a price of Rs","more than 20 each , are purchased from Ram by Mohan at a price of Rs","20 each , are purchased from ram by mohan at a price of rs","more than 20 each , are purchased from ram by mohan at a price of rs","quantity_purchased_premise = 20
min_quantity_purchased_hypothesis = 20

def entailment_or_contradiction_or_neutral(quantity_purchased_premise, min_quantity_purchased_hypothesis):
    # the hypothesis refers to the quantity of items purchased, mentioned in the premise
    # the hypothesis estimates the quantity to be more than 'min_quantity_purchased_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the quantity reported in the premise is less than or equal to 'min_quantity_purchased_hypothesis'
    if quantity_purchased_premise <= min_quantity_purchased_hypothesis:
        return False
    # the quantity purchased from the premise is exactly 20, so the hypothesis of more than 20 contradicts the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(quantity_purchased_premise, min_quantity_purchased_hypothesis))
"
3921,entailment,,entailment,A train leaves Delhi at 9 a,A train leaves Delhi at more than 4 a,a train leaves delhi at 9 a,a train leaves delhi at more than 4 a,"train_departure_time_premise = 9
min_train_departure_time_hypothesis = 4

def entailment_or_contradiction_or_neutral(train_departure_time_premise, min_train_departure_time_hypothesis):
    # the hypothesis refers to the departure time of the train mentioned in the premise
    # the hypothesis states the train departure to be greater than 'min_train_departure_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the train departure time in the premise is less than 'min_train_departure_time_hypothesis'
    if train_departure_time_premise <= min_train_departure_time_hypothesis:
        return False
    # since the train departure time in the premise is greater than the 'min_train_departure_time_hypothesis', the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(train_departure_time_premise, min_train_departure_time_hypothesis))
"
6287,contradiction,,contradiction,What must be Robin ' s score on a 10 th test for his average score on the 10 tests to be 83 ?,What must be Robin ' s score on a 30 th test for his average score on the 10 tests to be 83 ?,what must be robin ' s score on a 10 th test for his average score on the 10 tests to be 83 ?,what must be robin ' s score on a 30 th test for his average score on the 10 tests to be 83 ?,"number_of_tests_premise = 10
number_of_tests_hypothesis = 30

def entailment_or_contradiction_or_neutral(number_of_tests_premise, number_of_tests_hypothesis):
    # the hypothesis refers to the number of tests taken by Robin, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of tests in the premise is different from the number of tests in the hypothesis
    if number_of_tests_premise != number_of_tests_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(number_of_tests_premise, number_of_tests_hypothesis))
"
6346,neutral,,neutral,Mr Sharad started a business investing more than 10000,Mr Sharad started a business investing 50000,mr sharad started a business investing more than 10000,mr sharad started a business investing 50000,"min_investment_premise = 10000
investment_hypothesis = 50000

def entailment_or_contradiction_or_neutral(min_investment_premise, investment_hypothesis):
    # the hypothesis talks about the investment of Mr Sharad, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_investment_premise', by checking if the investment from the hypothesis is lower or equal to 'min_investment_premise'
    if investment_hypothesis <= min_investment_premise:
        return False
    # any investment greater than 10000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_investment_premise, investment_hypothesis))
"
7259,contradiction,,contradiction,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 2 : 3 ?,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 8 : 3 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 2 : 3 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 8 : 3 ?,"ratio_AB_BC_premise = [2, 3]  # Ratio of distances between A to B and B to C in the premise
ratio_AB_BC_hypothesis = [8, 3]  # Ratio of distances between A to B and B to C in the hypothesis

def entailment_or_contradiction_or_neutral(ratio_AB_BC_premise, ratio_AB_BC_hypothesis):
    # The hypothesis refers to the ratio of distances between A to B and B to C mentioned in the premise
    # Check if the hypothesis contradicts the premise by comparing the ratios
    if ratio_AB_BC_hypothesis != ratio_AB_BC_premise:
        return False
    # The hypothesis does not entail the premise as it does not provide new information based on the premise. Also, it does not contradict the premise as it does not provide a different ratio. Hence, it is neutral.
    return None

print(entailment_or_contradiction_or_neutral(ratio_AB_BC_premise, ratio_AB_BC_hypothesis))
"
6086,contradiction,,contradiction,Ram and Shyam can do together a piece of work in 20 days,Ram and Shyam can do together a piece of work in 30 days,ram and shyam can do together a piece of work in 20 days,ram and shyam can do together a piece of work in 30 days,"work_days_premise = 20
work_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis):
    # the hypothesis refers to the number of days for work completion mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing work days in the premise and the hypothesis
    if work_days_premise != work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis))
"
6257,contradiction,,contradiction,Luckily Saren negotiated a 20 % discount for the present so that each of them paid 4 dollars less,Luckily Saren negotiated a 50 % discount for the present so that each of them paid 4 dollars less,luckily saren negotiated a 20 % discount for the present so that each of them paid 4 dollars less,luckily saren negotiated a 50 % discount for the present so that each of them paid 4 dollars less,"discount_premise = 20
discount_hypothesis = 50
amount_saved = 4

def entailment_or_contradiction_or_neutral(discount_premise, discount_hypothesis, amount_saved):
    # the hypothesis and premise refer to the same discount negotiation by Saren
    # the hypothesis suggests the discount was 'discount_hypothesis' %, contradicting the premise of 'discount_premise' % 
    if discount_hypothesis != discount_premise:
        return False
    # the saved amount in the hypothesis and premise are the same, which would entail the premise if the discount rates were the same
    return None

print(entailment_or_contradiction_or_neutral(discount_premise, discount_hypothesis, amount_saved))
"
2307,entailment,,entailment,"If Anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","If Anne ’ s speed were doubled , they could clean their house in less than 5 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in less than 5 hours working at their respective rates","# Extracted quantities from the premise and hypothesis
cleaning_time_premise = 3
max_cleaning_time_hypothesis = 5

def entailment_or_contradiction_or_neutral(cleaning_time_premise, max_cleaning_time_hypothesis):
    # The hypothesis refers to the time it would take for Anne and others to clean their house if Anne's speed were doubled
    # The hypothesis estimates the cleaning time to be less than 'max_cleaning_time_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the cleaning time reported in the premise is greater than 'max_cleaning_time_hypothesis'
    if cleaning_time_premise > max_cleaning_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(cleaning_time_premise, max_cleaning_time_hypothesis))
"
7316,contradiction,,contradiction,"After 30 minutes , Jim stops to stretch","After 80 minutes , Jim stops to stretch","after 30 minutes , jim stops to stretch","after 80 minutes , jim stops to stretch","stretch_time_premise = 30
stretch_time_hypothesis = 80

def entailment_or_contradiction_or_neutral(stretch_time_premise, stretch_time_hypothesis):
    # the hypothesis talks about the time when Jim stops to stretch, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the stretch times
    if stretch_time_premise != stretch_time_hypothesis:
        return False
    # the time of the stretch is the same as the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(stretch_time_premise, stretch_time_hypothesis))
"
7347,entailment,,entailment,"Jose joined him 2 months later , investing Rs","Jose joined him less than 8 months later , investing Rs","jose joined him 2 months later , investing rs","jose joined him less than 8 months later , investing rs","join_time_premise = 2
max_join_time_hypothesis = 8

def entailment_or_contradiction_or_neutral(join_time_premise, max_join_time_hypothesis):
    # the hypothesis refers to the time of joining mentioned in the premise
    # the hypothesis estimates the join time to less than 'max_join_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if join time reported in the premise is more than 'max_join_time_hypothesis'
    if join_time_premise > max_join_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(join_time_premise, max_join_time_hypothesis))
"
7291,neutral,,neutral,more than 500 and Greg ' s share is Rs,600 and Greg ' s share is Rs,more than 500 and greg ' s share is rs,600 and greg ' s share is rs,"min_total_premise = 500
total_hypothesis = 600

def entailment_or_contradiction_or_neutral(min_total_premise, total_hypothesis):
    # the hypothesis talks about a total amount, also mentioned in the premise
    # the hypothesis suggests a total of 'total_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'total_hypothesis' is less or equal to 'min_total_premise'
    if total_hypothesis <= min_total_premise:
        return False
    # any total greater than 500 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_total_premise, total_hypothesis))
"
7134,entailment,,entailment,"Triangle STV has sides ST = TV = 10 , and SV = 12","Triangle STV has sides ST = TV = less than 50 , and SV = 12","triangle stv has sides st = tv = 10 , and sv = 12","triangle stv has sides st = tv = less than 50 , and sv = 12","# Triangle sides from premise and hypothesis
ST_TV_premise = 10
SV_premise = 12
max_ST_TV_hypothesis = 50
SV_hypothesis = 12

def entailment_or_contradiction_or_neutral(ST_TV_premise, SV_premise, max_ST_TV_hypothesis, SV_hypothesis):
    # the hypothesis refers to the sizes of the sides of triangle STV, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if any side from the premise is larger than 'max_ST_TV_hypothesis' or different from 'SV_hypothesis'
    if ST_TV_premise > max_ST_TV_hypothesis or SV_premise != SV_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(ST_TV_premise, SV_premise, max_ST_TV_hypothesis, SV_hypothesis))
"
6359,contradiction,,contradiction,"Since you ' re nice , you give John 5 baseball cards","Since you ' re nice , you give John more than 5 baseball cards","since you ' re nice , you give john 5 baseball cards","since you ' re nice , you give john more than 5 baseball cards","cards_given_to_john_premise = 5
min_cards_given_to_john_hypothesis = 5

def entailment_or_contradiction_or_neutral(cards_given_to_john_premise, min_cards_given_to_john_hypothesis):
    # the hypothesis refers to the number of baseball cards given to John mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of cards given in the premise is less than 'min_cards_given_to_john_hypothesis'
    if cards_given_to_john_premise <= min_cards_given_to_john_hypothesis:
        return False
    # any number of cards given greater than 5 would entail the premise, so return None for neutrality
    return None

print(entailment_or_contradiction_or_neutral(cards_given_to_john_premise, min_cards_given_to_john_hypothesis))
"
7025,contradiction,,contradiction,"While driving from City A to City B , Cara drives at a constant speed of 30 miles per hour","While driving from City A to City B , Cara drives at a constant speed of 10 miles per hour","while driving from city a to city b , cara drives at a constant speed of 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of 10 miles per hour","speed_premise = 30
speed_hypothesis = 10

def entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis):
    # the hypothesis makes a claim about the driving speed from City A to City B, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if speed reported in the premise is not equal to the speed in the hypothesis
    if speed_premise != speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis))
"
6349,neutral,,neutral,Four months later Mr Praveen joined the business by investing more than 30000,Four months later Mr Praveen joined the business by investing 90000,four months later mr praveen joined the business by investing more than 30000,four months later mr praveen joined the business by investing 90000,"min_investment_praveen_premise = 30000
investment_praveen_hypothesis = 90000

def entailment_or_contradiction_or_neutral(min_investment_praveen_premise, investment_praveen_hypothesis):
    # the hypothesis talks about the investment made by Mr Praveen, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_investment_praveen_premise', by checking if the investment from the hypothesis is lower or equal to 'min_investment_praveen_premise'
    if investment_praveen_hypothesis <= min_investment_praveen_premise:
        return False
    # any investment greater than 30000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_investment_praveen_premise, investment_praveen_hypothesis))
"
6198,entailment,,entailment,There are 18 stations between Hyderabad and Bangalore,There are less than 48 stations between Hyderabad and Bangalore,there are 18 stations between hyderabad and bangalore,there are less than 48 stations between hyderabad and bangalore,"stations_hyderabad_bangalore_premise = 18
max_stations_hyderabad_bangalore_hypothesis = 48

def entailment_or_contradiction_or_neutral(stations_hyderabad_bangalore_premise, max_stations_hyderabad_bangalore_hypothesis):
    # the hypothesis refers to the number of stations between Hyderabad and Bangalore mentioned in the premise
    # the hypothesis estimates the number of stations to less than 'max_stations_hyderabad_bangalore_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of stations mentioned in the premise is greater or equal to 'max_stations_hyderabad_bangalore_hypothesis'
    if stations_hyderabad_bangalore_premise >= max_stations_hyderabad_bangalore_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stations_hyderabad_bangalore_premise, max_stations_hyderabad_bangalore_hypothesis))
"
6209,contradiction,,contradiction,Preethi has 6 flavors of ice cream in his parlor,Preethi has 1 flavors of ice cream in his parlor,preethi has 6 flavors of ice cream in his parlor,preethi has 1 flavors of ice cream in his parlor,"flavors_premise = 6
flavors_hypothesis = 1

def entailment_or_contradiction_or_neutral(flavors_premise, flavors_hypothesis):
    # the hypothesis refers to the number of ice cream flavors in Preethi's parlor mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of flavors reported in the premise is less than the number mentioned in the hypothesis
    if flavors_premise < flavors_hypothesis:
        return False
    # the hypothesis suggests that Preethi has fewer flavors than mentioned in the premise, hence it contradicts the premise
    elif flavors_premise > flavors_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(flavors_premise, flavors_hypothesis))
"
7074,entailment,,entailment,Veena ranks 65 rd from the top in a class of 182,Veena ranks more than 15 rd from the top in a class of 182,veena ranks 65 rd from the top in a class of 182,veena ranks more than 15 rd from the top in a class of 182,"veena_rank_premise = 65
min_veena_rank_hypothesis = 15

def entailment_or_contradiction_or_neutral(veena_rank_premise, min_veena_rank_hypothesis):
    # the hypothesis refers to Veena's rank from the premise
    # the hypothesis estimates that Veena's rank is more than 'min_veena_rank_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Veena's rank from the premise is lower than or equal to 'min_veena_rank_hypothesis'
    if veena_rank_premise <= min_veena_rank_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(veena_rank_premise, min_veena_rank_hypothesis))
"
6089,contradiction,,contradiction,After they have worked together for 12 days Matt stops and Peter completes the remaining work in 10 days,After they have worked together for 72 days Matt stops and Peter completes the remaining work in 10 days,after they have worked together for 12 days matt stops and peter completes the remaining work in 10 days,after they have worked together for 72 days matt stops and peter completes the remaining work in 10 days,"shared_work_days_premise = 12
shared_work_days_hypothesis = 72
remaining_work_days_hypothesis = 10

def entailment_or_contradiction_or_neutral(shared_work_days_premise, shared_work_days_hypothesis, remaining_work_days_hypothesis):
    # the hypothesis talks about the number of days Matt and Peter worked together and the number of days it took Peter to complete the remaining work
    # check if the hypothesis contradicts the premise by checking if the number of shared work days in the hypothesis is different than the number in the premise
    if shared_work_days_hypothesis != shared_work_days_premise:
        return False
    # if the number of shared work days is the same, the remaining work days are irrelevant because they do not contradict nor entail the premise
    return None

print(entailment_or_contradiction_or_neutral(shared_work_days_premise, shared_work_days_hypothesis, remaining_work_days_hypothesis))
"
6318,entailment,,entailment,"Maddie has 4 apples , if she give 2 to mike , how many does she have left ?","Maddie has less than 7 apples , if she give 2 to mike , how many does she have left ?","maddie has 4 apples , if she give 2 to mike , how many does she have left ?","maddie has less than 7 apples , if she give 2 to mike , how many does she have left ?","apples_maddie_premise = 4
apples_given_to_mike_premise = 2
max_apples_maddie_hypothesis = 7
apples_given_to_mike_hypothesis = 2

def entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike_premise, max_apples_maddie_hypothesis, apples_given_to_mike_hypothesis):
    # first check if the number of apples Maddie has according to the premise is less than the maximum number of apples mentioned in the hypothesis
    if apples_maddie_premise >= max_apples_maddie_hypothesis:
        return False
    # then check if the number of apples given to Mike matches in both premise and hypothesis
    if apples_given_to_mike_premise != apples_given_to_mike_hypothesis:
        return False
    # if both checks pass, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike_premise, max_apples_maddie_hypothesis, apples_given_to_mike_hypothesis))
"
7035,entailment,,entailment,"If Fred walks at a constant speed of 5 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","If Fred walks at a constant speed of less than 8 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","if fred walks at a constant speed of 5 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","if fred walks at a constant speed of less than 8 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","fred_speed_premise = 5
sam_speed_premise = 5
max_fred_speed_hypothesis = 8
sam_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, max_fred_speed_hypothesis, sam_speed_hypothesis):
    # the hypothesis talks about Fred's and Sam's walking speed, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if Fred's speed in the premise is greater than 'max_fred_speed_hypothesis' or Sam's speed in the premise is different than 'sam_speed_hypothesis'
    if fred_speed_premise > max_fred_speed_hypothesis or sam_speed_premise != sam_speed_hypothesis:
        return False
    # the speeds from the hypothesis are consistent with the ones from the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, max_fred_speed_hypothesis, sam_speed_hypothesis))
"
7040,contradiction,,contradiction,"Calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","Calculate the average marks of a student who obtained less than 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","calculate the average marks of a student who obtained less than 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","# define the marks for each subject
geo_marks_premise = 56
hist_marks_premise = 60
gov_marks_premise = 72
art_marks_premise = 85
comp_sci_marks_premise = 80

# define the marks for each subject in the hypothesis
geo_marks_hypothesis = 56
hist_marks_hypothesis = 60
gov_marks_hypothesis = 72
art_marks_hypothesis = 85
comp_sci_marks_hypothesis = 80

# define the function to determine the relationship between the premise and the hypothesis
def entailment_or_contradiction_or_neutral(geo_marks_premise, hist_marks_premise, gov_marks_premise, art_marks_premise, comp_sci_marks_premise, geo_marks_hypothesis, hist_marks_hypothesis, gov_marks_hypothesis, art_marks_hypothesis, comp_sci_marks_hypothesis):
    # the hypothesis refers to the marks obtained by the student in the same subjects as in the premise
    # the hypothesis estimates the marks to be less than those in the premise
    marks_premise = [geo_marks_premise, hist_marks_premise, gov_marks_premise, art_marks_premise, comp_sci_marks_premise]
    marks_hypothesis = [geo_marks_hypothesis, hist_marks_hypothesis, gov_marks_hypothesis, art_marks_hypothesis, comp_sci_marks_hypothesis]
    
    # check if the hypothesis contradicts the premise by comparing the marks for each subject
    for i in range(len(marks_premise)):
        if marks_premise[i] <= marks_hypothesis[i]:
            return False
    # if the hypothesis doesn't contradict the premise, it's neutral
    return None

print(entailment_or_contradiction_or_neutral(geo_marks_premise, hist_marks_premise, gov_marks_premise, art_marks_premise, comp_sci_marks_premise, geo_marks_hypothesis, hist_marks_hypothesis, gov_marks_hypothesis, art_marks_hypothesis, comp_sci_marks_hypothesis))
"
6640,neutral,,neutral,"If Ram and Krish together can complete the same work in more than 20 days , then how long will Bhim take to complete it ?","If Ram and Krish together can complete the same work in 40 days , then how long will Bhim take to complete it ?","if ram and krish together can complete the same work in more than 20 days , then how long will bhim take to complete it ?","if ram and krish together can complete the same work in 40 days , then how long will bhim take to complete it ?","min_days_ram_krish_premise = 20
days_ram_krish_hypothesis = 40

def entailment_or_contradiction_or_neutral(min_days_ram_krish_premise, days_ram_krish_hypothesis):
    # Both premise and hypothesis talk about Ram and Krish working together
    # Check if the hypothesis contradicts the premise estimate of more than 'min_days_ram_krish_premise' days, by checking if 'days_ram_krish_hypothesis' is less than or equal to 'min_days_ram_krish_premise'
    if days_ram_krish_hypothesis <= min_days_ram_krish_premise:
        return False
    # If 'days_ram_krish_hypothesis' is greater than 'min_days_ram_krish_premise', it's consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_days_ram_krish_premise, days_ram_krish_hypothesis))
"
6491,contradiction,,contradiction,Dana borrows 6500 pounds annually for her college education,Dana borrows 1500 pounds annually for her college education,dana borrows 6500 pounds annually for her college education,dana borrows 1500 pounds annually for her college education,"annual_borrow_premise = 6500
annual_borrow_hypothesis = 1500

def entailment_or_contradiction_or_neutral(annual_borrow_premise, annual_borrow_hypothesis):
    # the hypothesis refers to the annual amount borrowed by Dana, mentioned in the premise
    # the hypothesis estimates the borrowed amount to be 'annual_borrow_hypothesis'
    # check if the hypothesis contradicts the premise by checking if borrowed amount reported in the premise is different from 'annual_borrow_hypothesis'
    if annual_borrow_premise != annual_borrow_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(annual_borrow_premise, annual_borrow_hypothesis))
"
6803,contradiction,,contradiction,"If bonds are sold in $ 50 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","If bonds are sold in $ 10 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","if bonds are sold in $ 50 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","if bonds are sold in $ 10 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","bond_denomination_premise = [50, 100]
bond_denomination_hypothesis = [10, 100]

def entailment_or_contradiction_or_neutral(bond_denomination_premise, bond_denomination_hypothesis):
    # the hypothesis and premise both describe the possible denominations of bonds
    # check if the denomination values in the hypothesis contradict the premise
    for denomination in bond_denomination_hypothesis:
        if denomination not in bond_denomination_premise:
            return False
    # if no contradiction is found, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(bond_denomination_premise, bond_denomination_hypothesis))
"
7380,entailment,,entailment,Jithin bought six books at an average price ( arithmetic mean ) of 20 $,Jithin bought six books at an average price ( arithmetic mean ) of less than 60 $,jithin bought six books at an average price ( arithmetic mean ) of 20 $,jithin bought six books at an average price ( arithmetic mean ) of less than 60 $,"books_purchased = 6
average_price_premise = 20
max_average_price_hypothesis = 60

def entailment_or_contradiction_or_neutral(books_purchased, average_price_premise, max_average_price_hypothesis):
    # the hypothesis refers to the average price per book mentioned in the premise
    # the hypothesis estimates the average price per book to be less than 'max_average_price_hypothesis'
    # check if the hypothesis contradicts the premise by checking if average price per book in the premise is greater than 'max_average_price_hypothesis'
    if average_price_premise > max_average_price_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(books_purchased, average_price_premise, max_average_price_hypothesis))
"
7233,entailment,,entailment,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for 2 km each,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for less than 3 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for 2 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for less than 3 km each,"sita_geeta_run_premise = 2
max_sita_geeta_run_hypothesis = 3

def entailment_or_contradiction_or_neutral(sita_geeta_run_premise, max_sita_geeta_run_hypothesis):
    # the hypothesis refers to the distance ran by Sita and Geeta mentioned in the premise
    # the hypothesis estimates the distance to be less or equal to 'max_sita_geeta_run_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance ran reported in the premise is higher than 'max_sita_geeta_run_hypothesis'
    if sita_geeta_run_premise > max_sita_geeta_run_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sita_geeta_run_premise, max_sita_geeta_run_hypothesis))
"
7262,contradiction,,contradiction,"If Carol ' s rectangle measures 12 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","If Carol ' s rectangle measures 32 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","if carol ' s rectangle measures 12 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","if carol ' s rectangle measures 32 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","carol_rectangle_length_premise = 12
carol_rectangle_length_hypothesis = 32

def entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_length_hypothesis):
    # the hypothesis refers to the length of Carol's rectangle mentioned in the premise
    # the hypothesis estimates the length to be 'carol_rectangle_length_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the length reported in the premise is not equal to 'carol_rectangle_length_hypothesis'
    if carol_rectangle_length_premise != carol_rectangle_length_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_length_hypothesis))
"
6813,entailment,,entailment,"If 18 % of all the students at Morse have cars , how many students are in the three lower grades ?","If less than 48 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 18 % of all the students at morse have cars , how many students are in the three lower grades ?","if less than 48 % of all the students at morse have cars , how many students are in the three lower grades ?","car_ownership_premise = 18
max_car_ownership_hypothesis = 48

def entailment_or_contradiction_or_neutral(car_ownership_premise, max_car_ownership_hypothesis):
    # the hypothesis refers to the percentage of students at Morse with cars mentioned in the premise
    # the hypothesis estimates the percentage of students with cars to less than 'max_car_ownership_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the car ownership percentage reported in the premise is greater than 'max_car_ownership_hypothesis'
    if car_ownership_premise > max_car_ownership_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(car_ownership_premise, max_car_ownership_hypothesis))
"
7332,entailment,,entailment,"In ABC limited , 75 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","In ABC limited , more than 25 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","in abc limited , 75 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","in abc limited , more than 25 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","samsung_user_percentage_premise = 75
iphone_user_percentage_premise = 70
new_samsung_user_percentage_premise = 85
min_samsung_user_percentage_hypothesis = 25
iphone_user_percentage_hypothesis = 70
new_samsung_user_percentage_hypothesis = 85

def entailment_or_contradiction_or_neutral(samsung_user_percentage_premise, iphone_user_percentage_premise, new_samsung_user_percentage_premise, min_samsung_user_percentage_hypothesis, iphone_user_percentage_hypothesis, new_samsung_user_percentage_hypothesis):
    # the hypothesis refers to the percentage of Samsung and iPhone users mentioned in the premise
    # the hypothesis estimates the Samsung user percentage to more than 'min_samsung_user_percentage_hypothesis', which is less than the premise's 'samsung_user_percentage_premise'
    # check if the hypothesis contradicts the premise by checking if Samsung user percentage reported in the premise is lower than 'min_samsung_user_percentage_hypothesis'
    if samsung_user_percentage_premise < min_samsung_user_percentage_hypothesis:
        return False
    # the hypothesis also estimates the new Samsung user percentage to be 'new_samsung_user_percentage_hypothesis', which is the same as the premise's 'new_samsung_user_percentage_premise'
    # check if the hypothesis contradicts the premise by checking if new Samsung user percentage reported in the premise is not equal to 'new_samsung_user_percentage_hypothesis'
    if new_samsung_user_percentage_premise != new_samsung_user_percentage_hypothesis:
        return False
    # the hypothesis also estimates the iPhone user percentage to be 'iphone_user_percentage_hypothesis', which is the same as the premise's 'iphone_user_percentage_premise'
    # check if the hypothesis contradicts the premise by checking if iPhone user percentage reported in the premise is not equal to 'iphone_user_percentage_hypothesis'
    if iphone_user_percentage_premise != iphone_user_percentage_hypothesis:
        return False
    # if none of the checks fail, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(samsung_user_percentage_premise, iphone_user_percentage_premise, new_samsung_user_percentage_premise, min_samsung_user_percentage_hypothesis, iphone_user_percentage_hypothesis, new_samsung_user_percentage_hypothesis))
"
7272,entailment,,entailment,Kyle is a lumberjack with 12 trees to cut down,Kyle is a lumberjack with less than 72 trees to cut down,kyle is a lumberjack with 12 trees to cut down,kyle is a lumberjack with less than 72 trees to cut down,"trees_to_cut_premise = 12
max_trees_to_cut_hypothesis = 72

def entailment_or_contradiction_or_neutral(trees_to_cut_premise, max_trees_to_cut_hypothesis):
    # the hypothesis refers to the number of trees the lumberjack mentioned in the premise has to cut
    # the hypothesis estimates the number of trees to be less than 'max_trees_to_cut_hypothesis'
    # check if the hypothesis contradicts the premise by checking if trees to cut reported in the premise are greater than 'max_trees_to_cut_hypothesis'
    if trees_to_cut_premise > max_trees_to_cut_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(trees_to_cut_premise, max_trees_to_cut_hypothesis))
"
7363,neutral,,neutral,Deepa bought a calculator at more than 10 % discount on the listed price,Deepa bought a calculator at 30 % discount on the listed price,deepa bought a calculator at more than 10 % discount on the listed price,deepa bought a calculator at 30 % discount on the listed price,"min_discount_premise = 10
discount_hypothesis = 30

def entailment_or_contradiction_or_neutral(min_discount_premise, discount_hypothesis):
    # the hypothesis talks about the discount with which Deepa bought a calculator, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_discount_premise' by checking if the discount from the hypothesis is lower or equal to 'min_discount_premise'
    if discount_hypothesis <= min_discount_premise:
        return False
    # any discount greater than 10 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_discount_premise, discount_hypothesis))
"
6741,entailment,,entailment,"While driving from City A to City B , Ed drives at a constant speed of 30 miles per hour","While driving from City A to City B , Ed drives at a constant speed of more than 20 miles per hour","while driving from city a to city b , ed drives at a constant speed of 30 miles per hour","while driving from city a to city b , ed drives at a constant speed of more than 20 miles per hour","speed_premise = 30
min_speed_hypothesis = 20

def entailment_or_contradiction_or_neutral(speed_premise, min_speed_hypothesis):
    # the hypothesis refers to the speed of driving from City A to City B
    # the hypothesis estimates the speed to be more than 'min_speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if speed reported in the premise is lower than or equal to 'min_speed_hypothesis'
    if speed_premise <= min_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, min_speed_hypothesis))
"
6842,contradiction,,contradiction,"20,000 for 6 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for more than 6 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for 6 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","20,000 for more than 6 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","investment_period_premise = 6
min_investment_period_hypothesis = 6

def entailment_or_contradiction_or_neutral(investment_period_premise, min_investment_period_hypothesis):
    # The hypothesis asserts that the investment period was longer than 'min_investment_period_hypothesis' months.
    # We need to check if this contradicts the premise, which states it was 'investment_period_premise' months.
    if investment_period_premise <= min_investment_period_hypothesis:
        return False
    # The hypothesis does not contradict the premise, but it does not fully entail it either. 
    # The premise specifies 6 months, while the hypothesis states it was more than 6 months.
    # Therefore, the hypothesis is neutral with respect to the premise.
    return None

print(entailment_or_contradiction_or_neutral(investment_period_premise, min_investment_period_hypothesis))
"
6902,contradiction,,contradiction,"Shop Offered 30 % offer for every Shirt , Smith bought a shirt at Rs","Shop Offered 80 % offer for every Shirt , Smith bought a shirt at Rs","shop offered 30 % offer for every shirt , smith bought a shirt at rs","shop offered 80 % offer for every shirt , smith bought a shirt at rs","offer_premise = 30
offer_hypothesis = 80

def entailment_or_contradiction_or_neutral(offer_premise, offer_hypothesis):
    # the hypothesis refers to the discount percentage offered by the shop mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the discount offered in the premise is less than the discount mentioned in the hypothesis
    if offer_premise < offer_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(offer_premise, offer_hypothesis))
"
6590,contradiction,,contradiction,Steve gets on the elevator at the 11 th floor of a building and rides up at a rate of 87 floors per minute,Steve gets on the elevator at the 71 th floor of a building and rides up at a rate of 87 floors per minute,steve gets on the elevator at the 11 th floor of a building and rides up at a rate of 87 floors per minute,steve gets on the elevator at the 71 th floor of a building and rides up at a rate of 87 floors per minute,"start_floor_premise = 11
start_floor_hypothesis = 71
rate_premise = 87
rate_hypothesis = 87

def entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_premise, rate_hypothesis):
    # the hypothesis talks about the start floor and rate of elevator ride, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the start floor or rate in the hypothesis are different from the ones in the premise
    if start_floor_premise != start_floor_hypothesis or rate_premise != rate_hypothesis:
        return False
    # if the start floor and rate are the same as in the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_premise, rate_hypothesis))
"
7097,contradiction,,contradiction,Nitin ranks 15 th in a class of 47 students,Nitin ranks 65 th in a class of 47 students,nitin ranks 15 th in a class of 47 students,nitin ranks 65 th in a class of 47 students,"class_size_premise = 47
nitin_rank_premise = 15
nitin_rank_hypothesis = 65

def entailment_or_contradiction_or_neutral(class_size_premise, nitin_rank_premise,nitin_rank_hypothesis):
    # the hypothesis refers to Nitin's rank, same as the premise
    # check if the hypothesis contradicts the premise by checking if Nitin's rank from the hypothesis is greater than the class size from the premise
    if nitin_rank_hypothesis > class_size_premise:
        return False
    # if Nitin's rank from the hypothesis is less than or equal to the class size from the premise, then check if it matches Nitin's rank from the premise
    elif nitin_rank_hypothesis == nitin_rank_premise:
        return True
    else:
        # any rank within the class size that does not match Nitin's rank from the premise is neutral to the premise
        return None

print(entailment_or_contradiction_or_neutral(class_size_premise, nitin_rank_premise,nitin_rank_hypothesis))
"
6308,contradiction,,contradiction,Rahim bought 65 books for Rs,Rahim bought more than 65 books for Rs,rahim bought 65 books for rs,rahim bought more than 65 books for rs,"books_premise = 65
min_books_hypothesis = 65

def entailment_or_contradiction_or_neutral(books_premise, min_books_hypothesis):
    # the hypothesis talks about the number of books Rahim bought, which is also mentioned in the premise
    # the hypothesis states Rahim bought more than 'min_books_hypothesis' books
    # check if the hypothesis contradicts the premise by checking if the number of books in the premise is less than or equal to 'min_books_hypothesis'
    if books_premise <= min_books_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(books_premise, min_books_hypothesis))
"
7175,contradiction,,contradiction,"Faiza has 8 purses , she gives 3 purse as gift","Faiza has 4 purses , she gives 3 purse as gift","faiza has 8 purses , she gives 3 purse as gift","faiza has 4 purses , she gives 3 purse as gift","initial_purses_faiza_premise = 8
gift_purses_premise = 3
initial_purses_faiza_hypothesis = 4
gift_purses_hypothesis = 3

def entailment_or_contradiction_or_neutral(initial_purses_faiza_premise, gift_purses_premise, initial_purses_faiza_hypothesis, gift_purses_hypothesis):
    # Check if the initial number of purses or the number of gifted purses from the hypothesis contradicts the premise
    if initial_purses_faiza_hypothesis != initial_purses_faiza_premise or gift_purses_hypothesis != gift_purses_premise:
        return False
    # If not, check if the hypothesis entails the premise
    # In this case, as the initial number of purses and the number of gifted purses are the same in both the premise and the hypothesis, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(initial_purses_faiza_premise, gift_purses_premise, initial_purses_faiza_hypothesis, gift_purses_hypothesis))
"
7357,neutral,,neutral,"The total of the ages of Amar , Akbar and Anthony is more than 35 years","The total of the ages of Amar , Akbar and Anthony is 45 years","the total of the ages of amar , akbar and anthony is more than 35 years","the total of the ages of amar , akbar and anthony is 45 years","min_total_age_premise = 35
total_age_hypothesis = 45

def entailment_or_contradiction_or_neutral(min_total_age_premise, total_age_hypothesis):
    # the hypothesis refers to the total age of Amar, Akbar and Anthony mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_total_age_premise', by checking if the total age from the hypothesis is lower or equal to 'min_total_age_premise'
    if total_age_hypothesis <= min_total_age_premise:
        return False
    # total age greater than 35 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_total_age_premise, total_age_hypothesis))
"
7141,neutral,,neutral,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than more than 40 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than more than 40 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","min_departure_rate_premise = 40
min_departure_rate_hypothesis = 50

def entailment_or_contradiction_or_neutral(min_departure_rate_premise, min_departure_rate_hypothesis):
    # the hypothesis talks about the on-time departure rate, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_departure_rate_premise', by checking if the on-time departure rate from the hypothesis is less than or equal to 'min_departure_rate_premise'
    if min_departure_rate_hypothesis <= min_departure_rate_premise:
        return False
    # any on-time departure rate greater than 40% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_departure_rate_premise, min_departure_rate_hypothesis))
"
7050,entailment,,entailment,"1300 , Deepak ' s share is :","less than 4300 , Deepak ' s share is :","1300 , deepak ' s share is :","less than 4300 , deepak ' s share is :","deepak_share_premise = 1300
max_deepak_share_hypothesis = 4300

def entailment_or_contradiction_or_neutral(deepak_share_premise, max_deepak_share_hypothesis):
    # the hypothesis refers to Deepak's share mentioned in the premise
    # the hypothesis estimates Deepak's share to be less than 'max_deepak_share_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Deepak's share reported in the premise is greater than 'max_deepak_share_hypothesis'
    if deepak_share_premise > max_deepak_share_hypothesis:
        return False
    # since Deepak's share in the premise is less than 'max_deepak_share_hypothesis' in the hypothesis, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(deepak_share_premise, max_deepak_share_hypothesis))
"
7110,entailment,,entailment,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of less than 51 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of less than 51 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 41 
max_james_work_hours_hypothesis = 51

def entailment_or_contradiction_or_neutral(james_work_hours_premise, max_james_work_hours_hypothesis):
    # the hypothesis refers to the number of hours James worked last week, which is also mentioned in the premise
    # the hypothesis estimates the hours to be less than 'max_james_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if James worked hours reported in the premise are more than 'max_james_work_hours_hypothesis'
    if james_work_hours_premise > max_james_work_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, max_james_work_hours_hypothesis))
"
7281,entailment,,entailment,"Carolyn bought 16 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","Carolyn bought less than 46 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","carolyn bought 16 gumballs , lew bought 14 gumballs , and carey bought x gumballs","carolyn bought less than 46 gumballs , lew bought 14 gumballs , and carey bought x gumballs","carolyn_gumballs_premise = 16
lew_gumballs_premise = 14
max_carolyn_gumballs_hypothesis = 46
lew_gumballs_hypothesis = 14

def entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, max_carolyn_gumballs_hypothesis, lew_gumballs_hypothesis):
    # the hypothesis talks about the number of gumballs bought by Carolyn, Lew and Carey, referenced also in the premise
    # check if the hypothesis contradicts the premise estimates by checking if Carolyn bought more than 'max_carolyn_gumballs_hypothesis' or if Lew bought a different number of gumballs
    if carolyn_gumballs_premise > max_carolyn_gumballs_hypothesis or lew_gumballs_premise != lew_gumballs_hypothesis:
        return False
    # since the premise numbers of gumballs bought by Carolyn and Lew are within the limits set by the hypothesis, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, max_carolyn_gumballs_hypothesis, lew_gumballs_hypothesis))
"
7217,contradiction,,contradiction,"A truck uses 60 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","A truck uses 10 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","a truck uses 60 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","a truck uses 10 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","fuel_tank_premise = 60
fuel_tank_hypothesis = 10

def entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis):
    # the hypothesis talks about the fuel tank of a truck, which is referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'fuel_tank_premise', by checking if the fuel tank from the hypothesis is greater than 'fuel_tank_premise'
    if fuel_tank_hypothesis > fuel_tank_premise:
        return False
    # the fuel tank size in the hypothesis is less than in the premise, so the hypothesis contradicts the premise
    elif fuel_tank_hypothesis < fuel_tank_premise:
        return False
    # if fuel tank size in the hypothesis is the same as in the premise, it would entail the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis))
"
7558,neutral,,neutral,Marcella has less than 65 pairs of shoes,Marcella has 25 pairs of shoes,marcella has less than 65 pairs of shoes,marcella has 25 pairs of shoes,"max_shoes_premise = 65
shoes_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_shoes_premise, shoes_hypothesis):
    # the hypothesis refers to the number of shoes owned by Marcella, mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of shoes from the hypothesis is greater or equal to 'max_shoes_premise'
    if shoes_hypothesis >= max_shoes_premise:
        return False
    # any number of shoes less than 65 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_shoes_premise, shoes_hypothesis))
"
6774,entailment,,entailment,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 4 : 2 ?,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is more than 1 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 4 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is more than 1 : 2 ?,"ratio_distance_premise = 4/2
min_ratio_distance_hypothesis = 1/2

def entailment_or_contradiction_or_neutral(ratio_distance_premise, min_ratio_distance_hypothesis):
    # the hypothesis refers to the ratio of distances mentioned in the premise
    # it provides an estimate of the ratio of distances to be more than 'min_ratio_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio of distances in the premise is less than or equal to 'min_ratio_distance_hypothesis'
    if ratio_distance_premise <= min_ratio_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(ratio_distance_premise, min_ratio_distance_hypothesis))
"
6696,entailment,,entailment,2000 and Tony withdraws Rs,less than 5000 and Tony withdraws Rs,2000 and tony withdraws rs,less than 5000 and tony withdraws rs,"tony_withdraw_premise = 2000
max_tony_withdraw_hypothesis = 5000

def entailment_or_contradiction_or_neutral(tony_withdraw_premise, max_tony_withdraw_hypothesis):
    # the hypothesis talks about the amount Tony withdraws, mentioned also in the premise
    # the hypothesis estimates Tony's withdrawal to be less than 'max_tony_withdraw_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Tony's withdrawal reported in the premise is higher than 'max_tony_withdraw_hypothesis'
    if tony_withdraw_premise > max_tony_withdraw_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tony_withdraw_premise, max_tony_withdraw_hypothesis))
"
6447,entailment,,entailment,In 5 years John will be twice as old as Frank,In less than 8 years John will be twice as old as Frank,in 5 years john will be twice as old as frank,in less than 8 years john will be twice as old as frank,"years_premise = 5
max_years_hypothesis = 8

def entailment_or_contradiction_or_neutral(years_premise, max_years_hypothesis):
    # the hypothesis talks about the number of years when John will be twice as old as Frank, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'years_premise', by checking if the number of years from the hypothesis is less than 'years_premise'
    if max_years_hypothesis < years_premise:
        return False
    # any number of years less than or equal to 8 is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(years_premise, max_years_hypothesis))
"
6826,neutral,,neutral,"At present , the ratio between the ages of Arun and Deepak is more than 3 : 3","At present , the ratio between the ages of Arun and Deepak is 4 : 3","at present , the ratio between the ages of arun and deepak is more than 3 : 3","at present , the ratio between the ages of arun and deepak is 4 : 3","# The premise and hypothesis give ratios of ages of two people, Arun and Deepak
# Extract the ratios as two separate variables from the premise and hypothesis

ratio_premise = (3, 3)
ratio_hypothesis = (4, 3)

def entailment_or_contradiction_or_neutral(ratio_premise, ratio_hypothesis):
    # The hypothesis refers to the ratio between the ages of Arun and Deepak
    # The hypothesis states the ratio is 4:3
    # Check if the hypothesis contradicts the premise by checking if the ratio of ages in the premise is less than or equal to the ratio in the hypothesis
    # If the ratio in the hypothesis is greater than the minimum ratio from the premise, then it contradicts the premise
    if ratio_premise[0] / ratio_premise[1] >= ratio_hypothesis[0] / ratio_hypothesis[1]:
        return False
    # If the ratio in the hypothesis is greater than the ratio in the premise, then it is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(ratio_premise, ratio_hypothesis))
"
6725,contradiction,,contradiction,3600 from Anwar at 6 % p,more than 3600 from Anwar at 6 % p,3600 from anwar at 6 % p,more than 3600 from anwar at 6 % p,"loan_amount_premise = 3600
min_loan_amount_hypothesis = 3600

def entailment_or_contradiction_or_neutral(loan_amount_premise, min_loan_amount_hypothesis):
    # the hypothesis refers to the loan amount from Anwar mentioned in the premise
    # the hypothesis estimates the loan amount to be more than 'min_loan_amount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if loan amount in the premise is lower than 'min_loan_amount_hypothesis'
    if loan_amount_premise <= min_loan_amount_hypothesis:
        return False
    # if loan_amount_premise is more than min_loan_amount_hypothesis, then it entails the hypothesis
    elif loan_amount_premise > min_loan_amount_hypothesis:
        return True
    # else, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(loan_amount_premise, min_loan_amount_hypothesis))
"
6422,contradiction,,contradiction,"Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","english_marks_premise = 76
math_marks_premise = 65
chem_marks_premise = 82
bio_marks_premise = 67
physics_marks_premise = 85

english_marks_hypothesis = 46
math_marks_hypothesis = 65
chem_marks_hypothesis = 82
bio_marks_hypothesis = 67
physics_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chem_marks_premise, bio_marks_premise, physics_marks_premise, english_marks_hypothesis, math_marks_hypothesis, chem_marks_hypothesis, bio_marks_hypothesis, physics_marks_hypothesis):
    # the hypothesis talks about the same marks than the premise
    # check if the hypothesis contradicts the premise in any of the marks
    if english_marks_premise != english_marks_hypothesis or math_marks_premise != math_marks_hypothesis or chem_marks_premise != chem_marks_hypothesis or bio_marks_premise != bio_marks_hypothesis or physics_marks_premise != physics_marks_hypothesis:
        return False
    # if there is no contradiction, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chem_marks_premise, bio_marks_premise, physics_marks_premise, english_marks_hypothesis, math_marks_hypothesis, chem_marks_hypothesis, bio_marks_hypothesis, physics_marks_hypothesis))
"
5948,contradiction,,contradiction,If DON is coded as 18 and MASS is coded as 29 Then KING is coded as,If DON is coded as less than 18 and MASS is coded as 29 Then KING is coded as,if don is coded as 18 and mass is coded as 29 then king is coded as,if don is coded as less than 18 and mass is coded as 29 then king is coded as,"don_code_premise = 18
mass_code_premise = 29
don_code_hypothesis = 18
mass_code_hypothesis = 29

def entailment_or_contradiction_or_neutral(don_code_premise, mass_code_premise, don_code_hypothesis, mass_code_hypothesis):
    # the hypothesis refers to the codes of DON and MASS mentioned in the premise
    # the hypothesis suggests that the code for DON is less than 'don_code_hypothesis' and the code for MASS is equal to 'mass_code_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the code for DON in the premise is less than 'don_code_hypothesis' and if the code for MASS in the premise is equal to 'mass_code_hypothesis'
    if don_code_premise >= don_code_hypothesis and mass_code_premise == mass_code_hypothesis:
        return False
    # if the above condition is not met, then the hypothesis does not contradict or entail the premise
    return None

print(entailment_or_contradiction_or_neutral(don_code_premise, mass_code_premise, don_code_hypothesis, mass_code_hypothesis))
"
6711,entailment,,entailment,Mike gives you another 17 balls,Mike gives you another less than 77 balls,mike gives you another 17 balls,mike gives you another less than 77 balls,"balls_given_by_mike_premise = 17
max_balls_given_by_mike_hypothesis = 77

def entailment_or_contradiction_or_neutral(balls_given_by_mike_premise, max_balls_given_by_mike_hypothesis):
    # the hypothesis refers to the number of balls given by Mike mentioned in the premise
    # the hypothesis estimates the balls given to less than 'max_balls_given_by_mike_hypothesis'
    # check if the hypothesis contradicts the premise by checking if balls given by Mike reported in the premise are more than 'max_balls_given_by_mike_hypothesis'
    if balls_given_by_mike_premise > max_balls_given_by_mike_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(balls_given_by_mike_premise, max_balls_given_by_mike_hypothesis))
"
7333,neutral,,neutral,"In ABC limited , more than 25 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","In ABC limited , 75 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","in abc limited , more than 25 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","in abc limited , 75 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","min_samsung_users_premise = 25
samsung_users_hypothesis = 75

def entailment_or_contradiction_or_neutral(min_samsung_users_premise, samsung_users_hypothesis):
    # the hypothesis refers to the number of Samsung users in ABC limited, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_samsung_users_premise', by checking if the number of Samsung users from the hypothesis is lower or equal to 'min_samsung_users_premise'
    if samsung_users_hypothesis <= min_samsung_users_premise:
        return False
    # any number of Samsung users greater than 25% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_samsung_users_premise, samsung_users_hypothesis))
"
6843,entailment,,entailment,"Sacha runs at a constant speed of 7 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of more than 4 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 7 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 4 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha_speed_premise = 7
bruno_speed_premise = 5
min_sacha_speed_hypothesis = 4
bruno_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis):
    # the hypothesis refers to the constant speeds of Sacha and Bruno, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if Sacha's speed mentioned in the premise is lower than 'min_sacha_speed_hypothesis' or if Bruno's speed in the premise is different from 'bruno_speed_hypothesis'
    if sacha_speed_premise < min_sacha_speed_hypothesis or bruno_speed_premise != bruno_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis))
"
6591,entailment,,entailment,At the same time Joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,At the same time Joyce gets on an elevator on the more than 51 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the more than 51 st floor of the same building and rides down at a rate of 93 floors per minute,"floor_joystart_premise = 71
min_floor_joystart_hypothesis = 51
rate_joyride_premise = 93
rate_joyride_hypothesis = 93

def entailment_or_contradiction_or_neutral(floor_joystart_premise, min_floor_joystart_hypothesis, rate_joyride_premise, rate_joyride_hypothesis):
    # the hypothesis refers to the floor Joyce starts from and the rate of her ride, both mentioned in the premise
    # first, check if the hypothesis contradicts the premise by checking if Joyce starts from a lower floor or if she rides at a different speed
    if floor_joystart_premise < min_floor_joystart_hypothesis or rate_joyride_premise != rate_joyride_hypothesis:
        return False
    # if there's no contradiction, check if the hypothesis entails the premise by checking if Joyce starts from the exact same floor and rides at the same speed
    elif floor_joystart_premise > min_floor_joystart_hypothesis and rate_joyride_premise == rate_joyride_hypothesis:
        return True
    # if the floor Joyce starts from or the speed of her ride are not specified in the hypothesis, then it is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(floor_joystart_premise, min_floor_joystart_hypothesis, rate_joyride_premise, rate_joyride_hypothesis))
"
6903,entailment,,entailment,"If Rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","If Rahul paid a total of $ less than 360 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ less than 360 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","total_paid_premise = 160
max_total_paid_hypothesis = 360

def entailment_or_contradiction_or_neutral(total_paid_premise, max_total_paid_hypothesis):
    # the hypothesis refers to the total amount paid by Rahul mentioned in the premise
    # the hypothesis estimates the total amount paid as less than 'max_total_paid_hypothesis'
    # check if the hypothesis contradicts the premise by checking if total paid reported in the premise is higher than 'max_total_paid_hypothesis'
    if total_paid_premise > max_total_paid_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_paid_premise, max_total_paid_hypothesis))
"
6433,neutral,,neutral,Sachi invested amount of more than 5000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,Sachi invested amount of 8000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,sachi invested amount of more than 5000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,sachi invested amount of 8000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,"min_investment_premise = 5000
investment_hypothesis = 8000

def entailment_or_contradiction_or_neutral(min_investment_premise, investment_hypothesis):
    # the hypothesis refers to the investment amount mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_investment_premise', by checking if the investment amount from the hypothesis is lower or equal to 'min_investment_premise'
    if investment_hypothesis <= min_investment_premise:
        return False
    # an investment amount of 8000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_investment_premise, investment_hypothesis))
"
3247,neutral,,neutral,more than 50 students represent x percent of the boys at Jones Elementary School,90 students represent x percent of the boys at Jones Elementary School,more than 50 students represent x percent of the boys at jones elementary school,90 students represent x percent of the boys at jones elementary school,"min_students_premise = 50
students_hypothesis = 90

def entailment_or_contradiction_or_neutral(min_students_premise, students_hypothesis):
    # the hypothesis refers to the number of students representing x percent of boys at Jones Elementary School, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of students in the hypothesis is less or equal to the 'min_students_premise'
    if students_hypothesis <= min_students_premise:
        return False
    # any number more than 50 students is in line with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_students_premise, students_hypothesis))
"
6462,entailment,,entailment,"At the faculty of Aerospace Engineering , 302 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , more than 102 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 302 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 102 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","students_random_processing_premise = 302
students_scramjet_engines_premise = 232
students_both_premise = 112

min_students_random_processing_hypothesis = 102
students_scramjet_engines_hypothesis = 232
students_both_hypothesis = 112

def entailment_or_contradiction_or_neutral(students_random_processing_premise, students_scramjet_engines_premise, students_both_premise, min_students_random_processing_hypothesis, students_scramjet_engines_hypothesis, students_both_hypothesis):
    # The hypothesis refers to the number of students studying different subjects mentioned in the premise
    # First, check if the hypothesis contradicts the premise by checking if the number of students studying each subject reported in the premise is less than the numbers mentioned in the hypothesis
    if students_random_processing_premise < min_students_random_processing_hypothesis or students_scramjet_engines_premise < students_scramjet_engines_hypothesis or students_both_premise < students_both_hypothesis:
        return False
    # If there is no contradiction, the hypothesis entails the premise, as all the numbers in the hypothesis are less than or equal to the numbers in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(students_random_processing_premise, students_scramjet_engines_premise, students_both_premise, min_students_random_processing_hypothesis, students_scramjet_engines_hypothesis, students_both_hypothesis))
"
576,entailment,,entailment,"While driving from City A to City B , Bob drives at a constant speed of 40 miles per hour","While driving from City A to City B , Bob drives at a constant speed of less than 70 miles per hour","while driving from city a to city b , bob drives at a constant speed of 40 miles per hour","while driving from city a to city b , bob drives at a constant speed of less than 70 miles per hour","bob_speed_premise = 40
max_bob_speed_hypothesis = 70

def entailment_or_contradiction_or_neutral(bob_speed_premise, max_bob_speed_hypothesis):
    # the hypothesis refers to Bob's speed, which is also mentioned in the premise
    # the hypothesis estimates that Bob's speed is less than 'max_bob_speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Bob's speed in the premise is higher than 'max_bob_speed_hypothesis'
    if bob_speed_premise > max_bob_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(bob_speed_premise, max_bob_speed_hypothesis))
"
6926,contradiction,,contradiction,"In a friendship gang Andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Andrew has less than 8 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has less than 8 gang , in how many ways can he invite one or more of the gang to his house ?","andrew_gang_premise = 8
andrew_gang_hypothesis = 8

def entailment_or_contradiction_or_neutral(andrew_gang_premise, andrew_gang_hypothesis):
    # the hypothesis refers to the number of gangs Andrew has, mentioned in the premise
    # the hypothesis states that Andrew has less than 'andrew_gang_hypothesis' gangs
    # check if the hypothesis contradicts the premise by checking if the number of gangs mentioned in the premise is less than 'andrew_gang_hypothesis'
    if andrew_gang_premise < andrew_gang_hypothesis:
        return False
    # if the number of gangs in the premise is equal to or more than 'andrew_gang_hypothesis', it means the hypothesis is contradicted
    elif andrew_gang_premise >= andrew_gang_hypothesis:
        return False
    # if the number of gangs in the premise is less than 'andrew_gang_hypothesis', the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(andrew_gang_premise, andrew_gang_hypothesis))
"
6611,contradiction,,contradiction,Molly ' s age in 18 years will be six times her age seven years ago,Molly ' s age in more than 18 years will be six times her age seven years ago,molly ' s age in 18 years will be six times her age seven years ago,molly ' s age in more than 18 years will be six times her age seven years ago,"years_future_premise = 18
years_future_hypothesis = 18

def entailment_or_contradiction_or_neutral(years_future_premise, years_future_hypothesis):
    # the hypothesis talks about the same situation as the premise but in a time frame longer than that of the premise
    # check if the hypothesis contradicts the premise by checking if the years_future_hypothesis is less or equal to years_future_premise
    if years_future_hypothesis <= years_future_premise:
        return False
    # any number of years greater than 18 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(years_future_premise, years_future_hypothesis))
"
6852,entailment,,entailment,"Matt is touring a nation in which coins are issued in two amounts , 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","Matt is touring a nation in which coins are issued in two amounts , less than 3 ¢ and 5 ¢ , which are made of iron and copper , respectively","matt is touring a nation in which coins are issued in two amounts , 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","matt is touring a nation in which coins are issued in two amounts , less than 3 ¢ and 5 ¢ , which are made of iron and copper , respectively","coin1_premise = 2
coin2_premise = 5
coin1_hypothesis = 3
coin2_hypothesis = 5

def entailment_or_contradiction_or_neutral(coin1_premise, coin2_premise, coin1_hypothesis, coin2_hypothesis):
    # the hypothesis refers to the same scenario from the premise
    # the hypothesis estimates the value of the first coin to be less than 'coin1_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the value of the first coin in the premise is greater or equal to 'coin1_hypothesis'
    if coin1_premise >= coin1_hypothesis:
        return False
    # check if the second coin value in the hypothesis is consistent with the premise
    if coin2_premise == coin2_hypothesis:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(coin1_premise, coin2_premise, coin1_hypothesis, coin2_hypothesis))
"
6625,neutral,,neutral,"The ratio between the number of sheep and the number of horses at the Stewart farm is more than 1 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","The ratio between the number of sheep and the number of horses at the Stewart farm is 6 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is more than 1 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is 6 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","min_sheep_to_horse_ratio_premise = 1/7
sheep_to_horse_ratio_hypothesis = 6/7
horse_food_per_day = 230
total_horse_food_per_day = 12880

def entailment_or_contradiction_or_neutral(min_sheep_to_horse_ratio_premise, sheep_to_horse_ratio_hypothesis, horse_food_per_day, total_horse_food_per_day):
    # the hypothesis talks about the ratio between the number of sheep and the number of horses at a farm, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_sheep_to_horse_ratio_premise', by checking if the ratio from the hypothesis is lower or equal to 'min_sheep_to_horse_ratio_premise'
    if sheep_to_horse_ratio_hypothesis <= min_sheep_to_horse_ratio_premise:
        return False
    # the number of horses can be determined by the total horse food per day divided by the horse food per horse per day
    number_of_horses = total_horse_food_per_day / horse_food_per_day
    # the number of sheep can be determined by the number of horses multiplied by the sheep to horse ratio
    number_of_sheep_hypothesis = number_of_horses * sheep_to_horse_ratio_hypothesis
    number_of_sheep_premise = number_of_horses * min_sheep_to_horse_ratio_premise
    # if the number of sheep from the hypothesis is not equal to the number of sheep from the premise, then the hypothesis is neutral to the premise
    if number_of_sheep_hypothesis != number_of_sheep_premise:
        return None
    # if all conditions are met, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_sheep_to_horse_ratio_premise, sheep_to_horse_ratio_hypothesis, horse_food_per_day, total_horse_food_per_day))
"
6407,contradiction,,contradiction,Angela has 15 pairs of matched socks,Angela has 75 pairs of matched socks,angela has 15 pairs of matched socks,angela has 75 pairs of matched socks,"matched_socks_premise = 15
matched_socks_hypothesis = 75

def entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis):
    # the hypothesis mentions the number of socks that Angela has, which is also mentioned in the premise
    # the hypothesis suggests that Angela has 'matched_socks_hypothesis' pairs of socks
    # check if the hypothesis contradicts the premise by checking if the number of socks reported in the premise is less than 'matched_socks_hypothesis'
    if matched_socks_premise < matched_socks_hypothesis:
        return False
    # if premise is equal to or more than the hypothesis, then it's an entailment
    elif matched_socks_premise >= matched_socks_hypothesis:
        return True
    # if premise doesn't contradict or entail the hypothesis, it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis))
"
6796,neutral,,neutral,Lucy deposited $ more than 22500 in an investment fund that provided 8 percent annual return compounded quarterly,Lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ more than 22500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,"min_deposit_premise = 22500
deposit_hypothesis = 62500

def entailment_or_contradiction_or_neutral(min_deposit_premise, deposit_hypothesis):
    # the hypothesis talks about the amount deposited by Lucy, as referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_deposit_premise',
    # by checking if the deposit amount in the hypothesis is lower or equal to 'min_deposit_premise'
    if deposit_hypothesis <= min_deposit_premise:
        return False
    # any deposit amount greater than 22500 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_deposit_premise, deposit_hypothesis))
"
6547,neutral,,neutral,The distance between West - Town to East - Town is less than 85 kilometers,The distance between West - Town to East - Town is 15 kilometers,the distance between west - town to east - town is less than 85 kilometers,the distance between west - town to east - town is 15 kilometers,"max_distance_premise = 85
distance_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis talks about the same distance mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the distance from the hypothesis is greater than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    # any distance less than or equal to 85 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
6787,neutral,,neutral,"Last week James worked a total of more than 21 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of more than 21 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","min_hours_worked_james_premise = 21
hours_worked_james_hypothesis = 41

def entailment_or_contradiction_or_neutral(min_hours_worked_james_premise, hours_worked_james_hypothesis):
    # the hypothesis refers to the number of hours worked by James last week, mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_hours_worked_james_premise', by checking if the number of hours from the hypothesis is lower or equal to 'min_hours_worked_james_premise'
    if hours_worked_james_hypothesis <= min_hours_worked_james_premise:
        return False
    # any number of hours greater than 21 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_worked_james_premise, hours_worked_james_hypothesis))
"
6884,contradiction,,contradiction,"If bonds are sold in $ 50 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","If bonds are sold in $ 70 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","if bonds are sold in $ 50 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","if bonds are sold in $ 70 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","bond_denomination_premise = [50, 100]
bond_denomination_hypothesis = [70, 100]

def entailment_or_contradiction_or_neutral(bond_denomination_premise, bond_denomination_hypothesis):
    # the hypothesis refers to the denomination of bonds mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the bond denomination values
    if bond_denomination_premise != bond_denomination_hypothesis:
        return False
    # if the bond denominations are the same, the hypothesis entails the premise
    elif bond_denomination_premise == bond_denomination_hypothesis:
        return True
    # in other cases, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(bond_denomination_premise, bond_denomination_hypothesis))
"
6837,entailment,,entailment,9000 which he and Rick earned at the end of one year,more than 4000 which he and Rick earned at the end of one year,9000 which he and rick earned at the end of one year,more than 4000 which he and rick earned at the end of one year,"earnings_premise = 9000
min_earnings_hypothesis = 4000

def entailment_or_contradiction_or_neutral(earnings_premise, min_earnings_hypothesis):
    # the hypothesis talks about the earnings at the end of the year, referenced also in the premise
    # check if the hypothesis contradicts the premise by comparing 'earnings_premise' with 'min_earnings_hypothesis'
    if earnings_premise < min_earnings_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(earnings_premise, min_earnings_hypothesis))
"
3051,entailment,,entailment,James took a 3 - hour bike ride,James took a more than 1 - hour bike ride,james took a 3 - hour bike ride,james took a more than 1 - hour bike ride,"bike_ride_premise = 3
min_bike_ride_hypothesis = 1

def entailment_or_contradiction_or_neutral(bike_ride_premise, min_bike_ride_hypothesis):
    # the hypothesis refers to the duration of the bike ride mentioned in the premise
    # the hypothesis estimates the bike ride to be more than 'min_bike_ride_hypothesis'
    # check if the hypothesis contradicts the premise by checking if bike ride duration in the premise is less than 'min_bike_ride_hypothesis'
    if bike_ride_premise <= min_bike_ride_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(bike_ride_premise, min_bike_ride_hypothesis))
"
7518,entailment,,entailment,"If the boys at Jones Elementary make up 30 % of the total school population of x students , what is x ?","If the boys at Jones Elementary make up more than 10 % of the total school population of x students , what is x ?","if the boys at jones elementary make up 30 % of the total school population of x students , what is x ?","if the boys at jones elementary make up more than 10 % of the total school population of x students , what is x ?","percent_boys_premise = 30
min_percent_boys_hypothesis = 10

def entailment_or_contradiction_or_neutral(percent_boys_premise, min_percent_boys_hypothesis):
    # the hypothesis refers to the percentage of boys in the total school population as given in the premise
    # the hypothesis estimates the percentage to be more than 'min_percent_boys_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage of boys in the premise is less than 'min_percent_boys_hypothesis'
    if percent_boys_premise < min_percent_boys_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(percent_boys_premise, min_percent_boys_hypothesis))
"
6456,entailment,,entailment,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of less than 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of less than 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","outfit_shirts_premise = 1
max_outfit_shirts_hypothesis = 5

def entailment_or_contradiction_or_neutral(outfit_shirts_premise, max_outfit_shirts_hypothesis):
    # the hypothesis refers to the number of shirts in an outfit mentioned in the premise
    # the hypothesis estimates the number of shirts in an outfit to be less than 'max_outfit_shirts_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shirts in the premise outfit is more than 'max_outfit_shirts_hypothesis'
    if outfit_shirts_premise > max_outfit_shirts_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(outfit_shirts_premise, max_outfit_shirts_hypothesis))
"
6687,entailment,,entailment,"Bookman purchased 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","Bookman purchased more than 40 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","bookman purchased 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","bookman purchased more than 40 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","total_books_purchased_premise = 60
min_books_purchased_hypothesis = 40

def entailment_or_contradiction_or_neutral(total_books_purchased_premise, min_books_purchased_hypothesis):
    # the hypothesis refers to the number of books purchased mentioned in the premise
    # the hypothesis estimates the total books purchased to be more than 'min_books_purchased_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total books purchased reported in the premise are less than 'min_books_purchased_hypothesis'
    if total_books_purchased_premise < min_books_purchased_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_books_purchased_premise, min_books_purchased_hypothesis))
"
6423,entailment,,entailment,Marie has 248 $ in her account of the bank,Marie has less than 548 $ in her account of the bank,marie has 248 $ in her account of the bank,marie has less than 548 $ in her account of the bank,"marie_account_premise = 248
max_marie_account_hypothesis = 548

def entailment_or_contradiction_or_neutral(marie_account_premise, max_marie_account_hypothesis):
    # the hypothesis refers to Marie's bank account balance, also mentioned in the premise
    # the hypothesis estimates the balance to less than 'max_marie_account_hypothesis'
    # check if the hypothesis contradicts the premise by checking if balance reported in the premise is more than 'max_marie_account_hypothesis'
    if marie_account_premise > max_marie_account_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(marie_account_premise, max_marie_account_hypothesis))
"
4209,entailment,,entailment,He will be 5 / 3 times as old as Tom 6 years hence,He will be less than 7 / 3 times as old as Tom 6 years hence,he will be 5 / 3 times as old as tom 6 years hence,he will be less than 7 / 3 times as old as tom 6 years hence,"his_future_age_ratio_to_tom_premise = 5 / 3
max_his_future_age_ratio_to_tom_hypothesis = 7 / 3

def entailment_or_contradiction_or_neutral(his_future_age_ratio_to_tom_premise, max_his_future_age_ratio_to_tom_hypothesis):
    # the hypothesis refers to the ratio of their future ages mentioned in the premise
    # the hypothesis estimates that the age ratio will be less than 'max_his_future_age_ratio_to_tom_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the age ratio in the premise is greater than 'max_his_future_age_ratio_to_tom_hypothesis'
    if his_future_age_ratio_to_tom_premise > max_his_future_age_ratio_to_tom_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(his_future_age_ratio_to_tom_premise, max_his_future_age_ratio_to_tom_hypothesis))
"
7060,neutral,,neutral,Dan leaves City A more than 20 minutes after Cara,Dan leaves City A 90 minutes after Cara,dan leaves city a more than 20 minutes after cara,dan leaves city a 90 minutes after cara,"min_delay_premise = 20
delay_hypothesis = 90

def entailment_or_contradiction_or_neutral(min_delay_premise, delay_hypothesis):
    # the hypothesis refers to the delay between Dan and Cara's departure times mentioned in the premise 
    # the hypothesis estimates the delay to be 'delay_hypothesis' minutes
    # check if the hypothesis contradicts the premise by checking if the delay reported in the hypothesis is less or equal to the 'min_delay_premise'
    if delay_hypothesis <= min_delay_premise:
        return False
    # any delay greater than 20 minutes is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_delay_premise, delay_hypothesis))
"
7276,neutral,,neutral,Molly and Max are driving at a rate of less than 400 kilometers per hour,Molly and Max are driving at a rate of 100 kilometers per hour,molly and max are driving at a rate of less than 400 kilometers per hour,molly and max are driving at a rate of 100 kilometers per hour,"max_speed_premise = 400
speed_hypothesis = 100

def entailment_or_contradiction_or_neutral(max_speed_premise, speed_hypothesis):
    # the hypothesis refers to the speed of Molly and Max mentioned in the premise
    # the hypothesis estimates the speed to be 'speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the speed from the hypothesis is greater than 'max_speed_premise'
    if speed_hypothesis > max_speed_premise:
        return False
    # any speed less than 400 kilometers per hour is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_speed_premise, speed_hypothesis))
"
6338,contradiction,,contradiction,Jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 15 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 45 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 15 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 4.00 per hour and a standard tip rate of 45 % of the cost of the orders she serves,"hourly_wage_premise = 4.00
tip_rate_premise = 15

hourly_wage_hypothesis = 4.00
tip_rate_hypothesis = 45

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis):
    # both the hypothesis and premise mention the hourly wage and the tip rate
    # first, check if the hourly wage in the hypothesis contradicts the one in the premise
    if hourly_wage_hypothesis != hourly_wage_premise:
        return False
    # then, check if the tip rate in the hypothesis contradicts the one in the premise
    if tip_rate_hypothesis != tip_rate_premise:
        return False
    # if neither the hourly wage nor the tip rate contradict the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis))
"
7120,neutral,,neutral,The price of a car and AC are in the ratio more than 2 : 2,The price of a car and AC are in the ratio 3 : 2,the price of a car and ac are in the ratio more than 2 : 2,the price of a car and ac are in the ratio 3 : 2,"min_car_ac_ratio_premise = 2/2
car_ac_ratio_hypothesis = 3/2

def entailment_or_contradiction_or_neutral(min_car_ac_ratio_premise, car_ac_ratio_hypothesis):
    # the hypothesis refers to the ratio of car and AC prices mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is less or equal to 'min_car_ac_ratio_premise'
    if car_ac_ratio_hypothesis <= min_car_ac_ratio_premise:
        return False
    # any ratio greater than 1 (2 : 2) is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_car_ac_ratio_premise, car_ac_ratio_hypothesis))
"
7242,entailment,,entailment,Ayisha ' s father ' s age will be twice Shankar ' s age after 10 years,Ayisha ' s father ' s age will be twice Shankar ' s age after less than 80 years,ayisha ' s father ' s age will be twice shankar ' s age after 10 years,ayisha ' s father ' s age will be twice shankar ' s age after less than 80 years,"future_years_premise = 10
max_future_years_hypothesis = 80

def entailment_or_contradiction_or_neutral(future_years_premise, max_future_years_hypothesis):
    # the hypothesis refers to the future age difference between Ayisha's father and Shankar mentioned in the premise
    # the hypothesis estimates this difference to occur in less than 'max_future_years_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of years is greater than 'max_future_years_hypothesis'
    if future_years_premise > max_future_years_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(future_years_premise, max_future_years_hypothesis))
"
7353,entailment,,entailment,"In a friendship gang Andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Andrew has more than 3 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has more than 3 gang , in how many ways can he invite one or more of the gang to his house ?","gang_members_premise = 8
min_gang_members_hypothesis = 3

def entailment_or_contradiction_or_neutral(gang_members_premise, min_gang_members_hypothesis):
    # the hypothesis refers to the number of gang members mentioned in the premise
    # the hypothesis estimates the gang members to more than 'min_gang_members_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the gang members reported in the premise are lower than 'min_gang_members_hypothesis'
    if gang_members_premise < min_gang_members_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(gang_members_premise, min_gang_members_hypothesis))
"
7044,entailment,,entailment,Raman travelled for 10 hours,Raman travelled for less than 20 hours,raman travelled for 10 hours,raman travelled for less than 20 hours,"travel_time_premise = 10
max_travel_time_hypothesis = 20

def entailment_or_contradiction_or_neutral(travel_time_premise, max_travel_time_hypothesis):
    # the hypothesis refers to the amount of time Raman travelled, which is also mentioned in the premise
    # the hypothesis estimates the travel time to be less than 'max_travel_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Raman's travel time in the premise is greater than 'max_travel_time_hypothesis'
    if travel_time_premise > max_travel_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travel_time_premise, max_travel_time_hypothesis))
"
7266,entailment,,entailment,Bruce and Bhishma are running on a circular track of length 600 m,Bruce and Bhishma are running on a circular track of length more than 200 m,bruce and bhishma are running on a circular track of length 600 m,bruce and bhishma are running on a circular track of length more than 200 m,"track_length_premise = 600
min_track_length_hypothesis = 200

def entailment_or_contradiction_or_neutral(track_length_premise, min_track_length_hypothesis):
    # the hypothesis refers to the length of the track mentioned in the premise
    # the hypothesis estimates the track length to be more than 'min_track_length_hypothesis'
    # check if the hypothesis contradicts the premise by checking if track length reported in the premise is lower than 'min_track_length_hypothesis'
    if track_length_premise < min_track_length_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(track_length_premise, min_track_length_hypothesis))
"
6379,neutral,,neutral,"Each week , Harry is paid x dollars per hour for the first more than 10 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 30 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first more than 10 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 30 hours and 1.5 x dollars for each additional hour worked that week","min_hours_premise = 10
hours_hypothesis = 30

def entailment_or_contradiction_or_neutral(min_hours_premise, hours_hypothesis):
    # the hypothesis talks about the number of hours Harry is paid x dollars for, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'min_hours_premise', by checking if the number of hours from the hypothesis is lower or equal to 'min_hours_premise'
    if hours_hypothesis <= min_hours_premise:
        return False
    # any number of hours greater than 'min_hours_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_premise, hours_hypothesis))
"
6278,contradiction,,contradiction,There are 15 stations between Hyderabad and Bangalore,There are 75 stations between Hyderabad and Bangalore,there are 15 stations between hyderabad and bangalore,there are 75 stations between hyderabad and bangalore,"stations_premise = 15
stations_hypothesis = 75

def entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis):
    # The hypothesis suggests a higher number of stations than the premise.
    # Check if the hypothesis contradicts the premise by checking if the stations reported in the hypothesis are more than in the premise
    if stations_hypothesis > stations_premise:
        return False
    # If the number of stations in the hypothesis equals the number mentioned in the premise, it would entail the premise
    elif stations_hypothesis == stations_premise:
        return True
    # If the number of stations in the hypothesis is less than in the premise, it would be neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis))
"
6369,entailment,,entailment,Diane find 4 cans of paint are just enough to paint one third of her room,Diane find less than 8 cans of paint are just enough to paint one third of her room,diane find 4 cans of paint are just enough to paint one third of her room,diane find less than 8 cans of paint are just enough to paint one third of her room,"cans_of_paint_premise = 4
max_cans_of_paint_hypothesis = 8

def entailment_or_contradiction_or_neutral(cans_of_paint_premise, max_cans_of_paint_hypothesis):
    # Both the premise and the hypothesis refer to the number of cans of paint needed to paint one third of Diane's room
    # The hypothesis mentions that less than 'max_cans_of_paint_hypothesis' are needed
    # Check if the hypothesis contradicts the premise by checking if the number of cans of paint mentioned in the premise is more than 'max_cans_of_paint_hypothesis'
    if cans_of_paint_premise > max_cans_of_paint_hypothesis:
        return False
    # If 'cans_of_paint_premise' is less than 'max_cans_of_paint_hypothesis', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(cans_of_paint_premise, max_cans_of_paint_hypothesis))
"
7394,contradiction,,contradiction,How much loss would Indu has suffered had she given it to Bindu for 2 years at 4 % per annum simple interest ?,How much loss would Indu has suffered had she given it to Bindu for less than 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for less than 2 years at 4 % per annum simple interest ?,"loan_term_years_premise = 2
loan_term_years_hypothesis = 2

def entailment_or_contradiction_or_neutral(loan_term_years_premise, loan_term_years_hypothesis):
    # the hypothesis is talking about a loan term that is less than the one mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the loan term years are more than or equal to 'loan_term_years_premise'
    if loan_term_years_hypothesis >= loan_term_years_premise:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(loan_term_years_premise, loan_term_years_hypothesis))
"
7005,entailment,,entailment,Claire has a total of 96 pets consisting of gerbils and hamsters only,Claire has a total of more than 56 pets consisting of gerbils and hamsters only,claire has a total of 96 pets consisting of gerbils and hamsters only,claire has a total of more than 56 pets consisting of gerbils and hamsters only,"total_pets_claire_premise = 96
min_total_pets_claire_hypothesis = 56

def entailment_or_contradiction_or_neutral(total_pets_claire_premise, min_total_pets_claire_hypothesis):
    # the hypothesis refers to the total number of pets that Claire has, mentioned in the premise
    # the hypothesis estimates the total number of pets to more than 'min_total_pets_claire_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total number of pets in the premise is lower than 'min_total_pets_claire_hypothesis'
    if total_pets_claire_premise < min_total_pets_claire_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_pets_claire_premise, min_total_pets_claire_hypothesis))
"
6239,contradiction,,contradiction,John has 10 pairs of matched socks,John has 20 pairs of matched socks,john has 10 pairs of matched socks,john has 20 pairs of matched socks,"matched_socks_premise = 10
matched_socks_hypothesis = 20

def entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis):
    # the hypothesis refers to the number of matched socks John has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of matched socks from the hypothesis is higher than from the premise
    if matched_socks_hypothesis > matched_socks_premise:
        return False
    # since the number of socks in the hypothesis is not less than the premise, it doesn't contradict it
    # but it also doesn't entail the premise, as it doesn't confirm or deny it, hence it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis))
"
7237,neutral,,neutral,"On the first day of her vacation , Louisa traveled less than 440 miles","On the first day of her vacation , Louisa traveled 240 miles","on the first day of her vacation , louisa traveled less than 440 miles","on the first day of her vacation , louisa traveled 240 miles","max_travel_distance_premise = 440
travel_distance_hypothesis = 240

def entailment_or_contradiction_or_neutral(max_travel_distance_premise, travel_distance_hypothesis):
    # the hypothesis talks about the travel distance in Louisa's first day of vacation, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_travel_distance_premise', by checking if the travel distance from the hypothesis is greater or equal to 'max_travel_distance_premise'
    if travel_distance_hypothesis >= max_travel_distance_premise:
        return False
    # any travel distance less than 440 miles is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_travel_distance_premise, travel_distance_hypothesis))
"
6846,entailment,,entailment,The compound interest earned by Sunil on a certain amount at the end of two years at the rate of 8 % p,The compound interest earned by Sunil on a certain amount at the end of two years at the rate of more than 7 % p,the compound interest earned by sunil on a certain amount at the end of two years at the rate of 8 % p,the compound interest earned by sunil on a certain amount at the end of two years at the rate of more than 7 % p,"interest_rate_premise = 8
min_interest_rate_hypothesis = 7

def entailment_or_contradiction_or_neutral(interest_rate_premise, min_interest_rate_hypothesis):
    # The hypothesis refers to the interest rate mentioned in the premise
    # The hypothesis estimates the interest rate to be more than 'min_interest_rate_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the interest rate in the premise is less than or equal to 'min_interest_rate_hypothesis'
    if interest_rate_premise <= min_interest_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(interest_rate_premise, min_interest_rate_hypothesis))
"
6594,entailment,,entailment,In a certain province in France there are 9 cities,In a certain province in France there are more than 1 cities,in a certain province in france there are 9 cities,in a certain province in france there are more than 1 cities,"cities_premise = 9
min_cities_hypothesis = 1

def entailment_or_contradiction_or_neutral(cities_premise, min_cities_hypothesis):
    # the hypothesis refers to the number of cities in a certain province in France, as mentioned in the premise
    # the hypothesis estimates the number of cities to be more than 'min_cities_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of cities reported in the premise are less than or equal to 'min_cities_hypothesis'
    if cities_premise <= min_cities_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(cities_premise, min_cities_hypothesis))
"
6906,entailment,,entailment,"City A to city B , Andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 2 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 2 hr at 44 mph and for 3 hours at 60 mph","drive_time_at_44mph_premise = 1
drive_time_at_60mph_premise = 3
max_drive_time_at_44mph_hypothesis = 2
drive_time_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_time_at_44mph_premise, drive_time_at_60mph_premise, max_drive_time_at_44mph_hypothesis, drive_time_at_60mph_hypothesis):
    # the hypothesis refers to the driving time at both 44mph and 60mph mentioned in the premise.
    # check if the hypothesis contradicts the premise by checking if driving time at 44mph in the premise is greater than the 'max_drive_time_at_44mph_hypothesis'
    if drive_time_at_44mph_premise > max_drive_time_at_44mph_hypothesis:
        return False
    # then, check if the driving time at 60mph contradicts between hypothesis and premise
    elif drive_time_at_60mph_premise != drive_time_at_60mph_hypothesis:
        return False
    # if there is no contradiction, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_time_at_44mph_premise, drive_time_at_60mph_premise, max_drive_time_at_44mph_hypothesis, drive_time_at_60mph_hypothesis))
"
6990,entailment,,entailment,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for 12 km each,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for less than 52 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for 12 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for less than 52 km each,"distance_run_by_each_sister_premise = 12
max_distance_run_by_each_sister_hypothesis = 52

def entailment_or_contradiction_or_neutral(distance_run_by_each_sister_premise, max_distance_run_by_each_sister_hypothesis):
    # the hypothesis talks about the distance run by the sisters, which is also mentioned in the premise
    # the hypothesis estimates the distance to be less than 'max_distance_run_by_each_sister_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance run by each sister in the premise is greater than 'max_distance_run_by_each_sister_hypothesis'
    if distance_run_by_each_sister_premise > max_distance_run_by_each_sister_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_run_by_each_sister_premise, max_distance_run_by_each_sister_hypothesis))
"
6872,contradiction,,contradiction,"Mary has 2 puppies , 9 birds , 4 fishes","Mary has 8 puppies , 9 birds , 4 fishes","mary has 2 puppies , 9 birds , 4 fishes","mary has 8 puppies , 9 birds , 4 fishes","puppies_premise = 2
birds_premise = 9
fishes_premise = 4
puppies_hypothesis = 8
birds_hypothesis = 9
fishes_hypothesis = 4

def entailment_or_contradiction_or_neutral(puppies_premise, birds_premise, fishes_premise, puppies_hypothesis, birds_hypothesis, fishes_hypothesis):
    # the hypothesis refers to the number of pets Mary has mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if any number of pets reported in the hypothesis is different than the one in the premise
    if puppies_premise != puppies_hypothesis or birds_premise != birds_hypothesis or fishes_premise != fishes_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(puppies_premise, birds_premise, fishes_premise, puppies_hypothesis, birds_hypothesis, fishes_hypothesis))
"
6771,entailment,,entailment,Murali travelled from city A to city B at a speed of 40 kmph and from city B to city C at 60 kmph,Murali travelled from city A to city B at a speed of less than 50 kmph and from city B to city C at 60 kmph,murali travelled from city a to city b at a speed of 40 kmph and from city b to city c at 60 kmph,murali travelled from city a to city b at a speed of less than 50 kmph and from city b to city c at 60 kmph,"speed_AB_premise = 40
speed_BC_premise = 60
max_speed_AB_hypothesis = 50
speed_BC_hypothesis = 60

def entailment_or_contradiction_or_neutral(speed_AB_premise, speed_BC_premise, max_speed_AB_hypothesis, speed_BC_hypothesis):
    # the hypothesis refers to the speeds of Murali's travels mentioned in the premise
    # the hypothesis estimates the speed from city A to city B to less than 'max_speed_AB_hypothesis' and speed from city B to city C to be 'speed_BC_hypothesis'
    # check if the hypothesis contradicts the premise by checking if speed from city A to city B reported in the premise is higher than 'max_speed_AB_hypothesis' or speed from city B to city C is not equal to 'speed_BC_hypothesis'
    if speed_AB_premise > max_speed_AB_hypothesis or speed_BC_premise != speed_BC_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_AB_premise, speed_BC_premise, max_speed_AB_hypothesis, speed_BC_hypothesis))
"
6660,entailment,,entailment,Jones gave 40 % of the money he had to his wife,Jones gave less than 70 % of the money he had to his wife,jones gave 40 % of the money he had to his wife,jones gave less than 70 % of the money he had to his wife,"money_percentage_given_premise = 40
max_money_percentage_given_hypothesis = 70

def entailment_or_contradiction_or_neutral(money_percentage_given_premise, max_money_percentage_given_hypothesis):
    # the hypothesis refers to the percentage of money given by Jones, mentioned in the premise
    # the hypothesis estimates the percentage as less than 'max_money_percentage_given_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage in the premise is higher than the 'max_money_percentage_given_hypothesis'
    if money_percentage_given_premise > max_money_percentage_given_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(money_percentage_given_premise, max_money_percentage_given_hypothesis))
"
6693,entailment,,entailment,"14000 after 8 months , John withdraws Rs","less than 44000 after 8 months , John withdraws Rs","14000 after 8 months , john withdraws rs","less than 44000 after 8 months , john withdraws rs","withdrawn_premise = 14000
max_withdrawn_hypothesis = 44000

def entailment_or_contradiction_or_neutral(withdrawn_premise, max_withdrawn_hypothesis):
    # the hypothesis talks about the amount of money John withdraws after 8 months, which is also mentioned in the premise
    # the hypothesis estimates that John withdrew less than 'max_withdrawn_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the amount withdrawn in the premise is greater than 'max_withdrawn_hypothesis'
    if withdrawn_premise > max_withdrawn_hypothesis:
        return False
    # if the amount from the premise is less than 'max_withdrawn_hypothesis', the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(withdrawn_premise, max_withdrawn_hypothesis))
"
6881,contradiction,,contradiction,Q : Robert purchased $ 1500 worth of US saving bonds,Q : Robert purchased $ 7500 worth of US saving bonds,q : robert purchased $ 1500 worth of us saving bonds,q : robert purchased $ 7500 worth of us saving bonds,"saving_bonds_purchased_premise = 1500
saving_bonds_purchased_hypothesis = 7500

def entailment_or_contradiction_or_neutral(saving_bonds_purchased_premise, saving_bonds_purchased_hypothesis):
    # both hypothesis and premise refer to the amount of saving bonds purchased by Robert
    # check if the hypothesis contradicts the premise by checking if the amount of bonds purchased in the hypothesis is not equal to the amount in the premise
    if saving_bonds_purchased_hypothesis != saving_bonds_purchased_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(saving_bonds_purchased_premise, saving_bonds_purchased_hypothesis))
"
6442,neutral,,neutral,Andrew purchased more than 1 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,Andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased more than 1 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,"min_grapes_kg_premise = 1
grapes_kg_hypothesis = 7
grapes_rate_per_kg = 68
mangoes_kg = 9
mangoes_rate_per_kg = 48

def entailment_or_contradiction_or_neutral(min_grapes_kg_premise, grapes_kg_hypothesis, grapes_rate_per_kg, mangoes_kg, mangoes_rate_per_kg):
    # the hypothesis talks about the quantity of grapes and mangoes Andrew purchased, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the quantity of grapes from the hypothesis is lower or equal to 'min_grapes_kg_premise'
    if grapes_kg_hypothesis <= min_grapes_kg_premise:
        return False
    # any quantity of grapes greater than 1 kg is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_grapes_kg_premise, grapes_kg_hypothesis, grapes_rate_per_kg, mangoes_kg, mangoes_rate_per_kg))
"
5979,entailment,,entailment,"There are 300 seniors at Morse High School , and 50 % of them have cars","There are less than 600 seniors at Morse High School , and 50 % of them have cars","there are 300 seniors at morse high school , and 50 % of them have cars","there are less than 600 seniors at morse high school , and 50 % of them have cars","seniors_premise = 300
max_seniors_hypothesis = 600

def entailment_or_contradiction_or_neutral(seniors_premise, max_seniors_hypothesis):
    # the hypothesis talks about the number of seniors at Morse High School, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of seniors from the premise is greater than 'max_seniors_hypothesis'
    if seniors_premise > max_seniors_hypothesis:
        return False
    # the number of seniors from the premise is less than 'max_seniors_hypothesis', so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(seniors_premise, max_seniors_hypothesis))
"
6413,contradiction,,contradiction,"If there are 55 possible combinations in which Michael is not selected , what is the value of w ?","If there are 45 possible combinations in which Michael is not selected , what is the value of w ?","if there are 55 possible combinations in which michael is not selected , what is the value of w ?","if there are 45 possible combinations in which michael is not selected , what is the value of w ?","combinations_no_Michael_premise = 55
combinations_no_Michael_hypothesis = 45

def entailment_or_contradiction_or_neutral(combinations_no_Michael_premise, combinations_no_Michael_hypothesis):
    # the premise and hypothesis discuss the number of combinations in which Michael is not selected
    # check if the hypothesis contradicts the premise by comparing the number of combinations in which Michael is not selected
    if combinations_no_Michael_premise != combinations_no_Michael_hypothesis:
        return False
    # if the number of combinations in both the premise and hypothesis is the same, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(combinations_no_Michael_premise, combinations_no_Michael_hypothesis))
"
6782,contradiction,,contradiction,"Each week , Harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 80 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 80 hours and 2 x dollars for each additional hour worked that week","standard_hours_premise = 30
standard_hours_hypothesis = 80

def entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis):
    # the hypothesis refers to the payment system mentioned in the premise
    # the hypothesis suggests the standard payment applies to the first 'standard_hours_hypothesis' hours
    # check if the hypothesis contradicts the premise by checking if 'standard_hours_hypothesis' is less than 'standard_hours_premise'
    if standard_hours_hypothesis < standard_hours_premise:
        return False
    # 'standard_hours_hypothesis' being greater than 'standard_hours_premise' is inconsistent with the premise, so the hypothesis contradicts the premise
    elif standard_hours_hypothesis > standard_hours_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis))
"
7377,entailment,,entailment,Mr Yadav spends 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,Mr Yadav spends more than 20 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,mr yadav spends 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,mr yadav spends more than 20 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,"consumable_items_spend_premise = 60
consumable_items_spend_hypothesis = 20

def entailment_or_contradiction_or_neutral(consumable_items_spend_premise, consumable_items_spend_hypothesis):
    # the hypothesis talks about the percent of salary Mr Yadav spends on consumable items
    # check if the hypothesis contradicts the premise by checking if the percent spent on consumable items in the premise is less than the percent in the hypothesis
    if consumable_items_spend_premise < consumable_items_spend_hypothesis:
        return False
    # if not, check if the percent spent on consumable items in the premise is greater than or equal to the percent in the hypothesis
    elif consumable_items_spend_premise >= consumable_items_spend_hypothesis:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(consumable_items_spend_premise, consumable_items_spend_hypothesis))
"
6437,contradiction,,contradiction,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 65 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 65 % of the cost of the orders she serves,"hourly_wage_premise = 6.00
tip_rate_premise = 0.35
hourly_wage_hypothesis = 6.00
tip_rate_hypothesis = 0.65

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis):
    # the hypothesis refers to Jill's hourly wage and tip rate mentioned in the premise
    # it contradicts the premise if either the hourly wage or the tip rate in the hypothesis do not match those in the premise
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_premise != tip_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis))
"
6557,contradiction,,contradiction,"Last year no members of the club traveled to both England and France , 6 members traveled to both England and Italy , and 11 members traveled to both France and Italy","Last year no members of the club traveled to both England and France , 2 members traveled to both England and Italy , and 11 members traveled to both France and Italy","last year no members of the club traveled to both england and france , 6 members traveled to both england and italy , and 11 members traveled to both france and italy","last year no members of the club traveled to both england and france , 2 members traveled to both england and italy , and 11 members traveled to both france and italy","england_france_premise = 0
england_italy_premise = 6
france_italy_premise = 11

england_france_hypothesis = 0
england_italy_hypothesis = 2
france_italy_hypothesis = 11

def entailment_or_contradiction_or_neutral(england_france_premise, england_italy_premise, france_italy_premise, england_france_hypothesis, england_italy_hypothesis, france_italy_hypothesis):
    # the hypothesis talks about the number of club members traveling to certain countries
    # check if the hypothesis contradicts the premise counts of travelers by comparing them
    if england_france_premise != england_france_hypothesis or england_italy_premise != england_italy_hypothesis or france_italy_premise != france_italy_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(england_france_premise, england_italy_premise, france_italy_premise, england_france_hypothesis, england_italy_hypothesis, france_italy_hypothesis))
"
6885,entailment,,entailment,"Kiran has 85 currency notes in all , some of which were of Rs","Kiran has more than 55 currency notes in all , some of which were of Rs","kiran has 85 currency notes in all , some of which were of rs","kiran has more than 55 currency notes in all , some of which were of rs","total_notes_premise = 85
min_notes_hypothesis = 55

def entailment_or_contradiction_or_neutral(total_notes_premise, min_notes_hypothesis):
    # the hypothesis refers to the total number of currency notes Kiran has
    # check if the hypothesis contradicts the premise by checking if the number of notes in the premise is less than 'min_notes_hypothesis'
    if total_notes_premise < min_notes_hypothesis:
        return False
    # since the premise clearly states that Kiran has 85 notes, any number less than or equal to 85 is implied by the premise, so it is entailed
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_notes_premise, min_notes_hypothesis))
"
3303,entailment,,entailment,Dan ’ s car gets 32 miles per gallon,Dan ’ s car gets less than 62 miles per gallon,dan ’ s car gets 32 miles per gallon,dan ’ s car gets less than 62 miles per gallon,"mileage_premise = 32
max_mileage_hypothesis = 62

def entailment_or_contradiction_or_neutral(mileage_premise, max_mileage_hypothesis):
    # the hypothesis refers to the car's mileage mentioned in the premise
    # the hypothesis estimates the mileage to less than 'max_mileage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if mileage reported in the premise is more than 'max_mileage_hypothesis'
    if mileage_premise > max_mileage_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(mileage_premise, max_mileage_hypothesis))
"
6807,entailment,,entailment,"If Yolanda ' s walking rate was 3 miles per hour and Bob т ' s was 4 miles per hour , how many miles had Bob walked when they met ?","If Yolanda ' s walking rate was less than 5 miles per hour and Bob т ' s was 4 miles per hour , how many miles had Bob walked when they met ?","if yolanda ' s walking rate was 3 miles per hour and bob т ' s was 4 miles per hour , how many miles had bob walked when they met ?","if yolanda ' s walking rate was less than 5 miles per hour and bob т ' s was 4 miles per hour , how many miles had bob walked when they met ?","yolanda_speed_premise = 3
bob_speed_premise = 4

max_yolanda_speed_hypothesis = 5
bob_speed_hypothesis = 4

def entailment_or_contradiction_or_neutral(yolanda_speed_premise, bob_speed_premise, max_yolanda_speed_hypothesis, bob_speed_hypothesis):
    # the hypothesis talks about the walking rates of Yolanda and Bob, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Yolanda's speed in the premise is higher than 'max_yolanda_speed_hypothesis' or if Bob's speed in the premise is different from 'bob_speed_hypothesis'
    if yolanda_speed_premise > max_yolanda_speed_hypothesis or bob_speed_premise != bob_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(yolanda_speed_premise, bob_speed_premise, max_yolanda_speed_hypothesis, bob_speed_hypothesis))
"
6495,entailment,,entailment,A bus started its journey from Mumbai and reached Pune in 44 min with its average speed of 50 km / hr,A bus started its journey from Mumbai and reached Pune in more than 24 min with its average speed of 50 km / hr,a bus started its journey from mumbai and reached pune in 44 min with its average speed of 50 km / hr,a bus started its journey from mumbai and reached pune in more than 24 min with its average speed of 50 km / hr,"journey_time_premise = 44
min_journey_time_hypothesis = 24

def entailment_or_contradiction_or_neutral(journey_time_premise, min_journey_time_hypothesis):
    # the hypothesis refers to the journey time mentioned in the premise
    # the hypothesis estimates the journey time to more or equal to 'min_journey_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if journey time reported in the premise is lower than 'min_journey_time_hypothesis'
    if journey_time_premise < min_journey_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(journey_time_premise, min_journey_time_hypothesis))
"
6526,neutral,,neutral,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than more than 20 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 60 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than more than 20 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 60 % ?","# The premise and hypothesis are identical, except for the desired on-time departure rate.
# The premise seeks a rate higher than 20%, while the hypothesis seeks a rate higher than 60%.
# Hence, the hypothesis doesn't contradict or entail the premise.

def entailment_or_contradiction_or_neutral():
    return None

print(entailment_or_contradiction_or_neutral())
"
6466,neutral,,neutral,"If there are more than 1 peanuts in a box and Mary puts 12 more peanuts inside , how many peanuts are in the box ?","If there are 4 peanuts in a box and Mary puts 12 more peanuts inside , how many peanuts are in the box ?","if there are more than 1 peanuts in a box and mary puts 12 more peanuts inside , how many peanuts are in the box ?","if there are 4 peanuts in a box and mary puts 12 more peanuts inside , how many peanuts are in the box ?","initial_peanuts_premise = 1
additional_peanuts_premise = 12
initial_peanuts_hypothesis = 4
additional_peanuts_hypothesis = 12

def entailment_or_contradiction_or_neutral(initial_peanuts_premise, additional_peanuts_premise, initial_peanuts_hypothesis, additional_peanuts_hypothesis):
    # the hypothesis is about the same situation as the premise, but with different initial number of peanuts
    # check if the initial number of peanuts in the hypothesis is less or equal to the initial number of peanuts in the premise
    if initial_peanuts_hypothesis <= initial_peanuts_premise:
        return False
    # the hypothesis talks about the same number of additional peanuts as the premise, so it is neutral about the number of additional peanuts
    # the hypothesis has a larger initial number of peanuts, but the premise allows for more than 1 peanut, so the hypothesis is neutral about the number of peanuts
    return None

print(entailment_or_contradiction_or_neutral(initial_peanuts_premise, additional_peanuts_premise, initial_peanuts_hypothesis, additional_peanuts_hypothesis))
"
6644,contradiction,,contradiction,Marcella has 27 pairs of shoes,Marcella has more than 27 pairs of shoes,marcella has 27 pairs of shoes,marcella has more than 27 pairs of shoes,"shoes_premise = 27
min_shoes_hypothesis = 27

def entailment_or_contradiction_or_neutral(shoes_premise, min_shoes_hypothesis):
    # the hypothesis talks about Marcella's number of shoe pairs
    # the hypothesis suggests more shoe pairs than 'min_shoes_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shoe pairs from the premise is less than or equal to 'min_shoes_hypothesis'
    if shoes_premise <= min_shoes_hypothesis:
        return False
    else:
        return None # when the premise and hypothesis do not contradict, but the hypothesis does not entail the premise, we return None for neutrality

print(entailment_or_contradiction_or_neutral(shoes_premise, min_shoes_hypothesis))
"
6506,contradiction,,contradiction,"While driving from City A to City B , Bob drives at a constant speed of 40 miles per hour","While driving from City A to City B , Bob drives at a constant speed of 10 miles per hour","while driving from city a to city b , bob drives at a constant speed of 40 miles per hour","while driving from city a to city b , bob drives at a constant speed of 10 miles per hour","speed_premise = 40
speed_hypothesis = 10

def entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis):
    # the hypothesis refers to the speed Bob drives at, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the speeds
    if speed_premise != speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis))
"
6936,entailment,,entailment,Stalin gets on the elevator at the 11 th floor of a building and rides up at a rate of 57 floors per minute,Stalin gets on the elevator at the less than 31 th floor of a building and rides up at a rate of 57 floors per minute,stalin gets on the elevator at the 11 th floor of a building and rides up at a rate of 57 floors per minute,stalin gets on the elevator at the less than 31 th floor of a building and rides up at a rate of 57 floors per minute,"# Extract quantities from the premise and the hypothesis
floor_stalin_premise = 11
rate_stalin_premise = 57
max_floor_stalin_hypothesis = 31
rate_stalin_hypothesis = 57

def entailment_or_contradiction_or_neutral(floor_stalin_premise, rate_stalin_premise, max_floor_stalin_hypothesis, rate_stalin_hypothesis):
    # Check if the hypothesis contradicts the premise by checking if the floor where Stalin gets on is greater than max_floor_stalin_hypothesis
    if floor_stalin_premise > max_floor_stalin_hypothesis:
        return False
    # Check if the rates are different, this would contradict the premise
    if rate_stalin_premise != rate_stalin_hypothesis:
        return False
    # If above conditions are not met, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(floor_stalin_premise, rate_stalin_premise, max_floor_stalin_hypothesis, rate_stalin_hypothesis))
"
6635,contradiction,,contradiction,A train leaves Delhi at 9 a,A train leaves Delhi at 1 a,a train leaves delhi at 9 a,a train leaves delhi at 1 a,"departure_time_premise = 9
departure_time_hypothesis = 1

def entailment_or_contradiction_or_neutral(departure_time_premise, departure_time_hypothesis):
    # both the premise and the hypothesis refer to the departure time of a train from Delhi
    # the hypothesis contradicts the premise if the departure time is different 
    if departure_time_hypothesis != departure_time_premise:
        return False
    return True

print(entailment_or_contradiction_or_neutral(departure_time_premise, departure_time_hypothesis))
"
6775,neutral,,neutral,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is more than 1 : 2 ?,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 4 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is more than 1 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 4 : 2 ?,"AB_to_BC_ratio_premise = 1 / 2
AB_to_BC_ratio_hypothesis = 4 / 2

def entailment_or_contradiction_or_neutral(AB_to_BC_ratio_premise, AB_to_BC_ratio_hypothesis):
    # the hypothesis talks about the ratio of distances between A to B and B to C, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'AB_to_BC_ratio_premise', by checking if the ratio from the hypothesis is lower or equal to 'AB_to_BC_ratio_premise'
    if AB_to_BC_ratio_hypothesis <= AB_to_BC_ratio_premise:
        return False
    # any ratio of distances greater than 1:2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(AB_to_BC_ratio_premise, AB_to_BC_ratio_hypothesis))
"
6697,neutral,,neutral,less than 5000 and Tony withdraws Rs,2000 and Tony withdraws Rs,less than 5000 and tony withdraws rs,2000 and tony withdraws rs,"max_withdrawal_premise = 5000
withdrawal_hypothesis = 2000

def entailment_or_contradiction_or_neutral(max_withdrawal_premise, withdrawal_hypothesis):
    # the hypothesis talks about the amount Tony withdraws, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the amount withdrawn is more than the premise
    if withdrawal_hypothesis > max_withdrawal_premise:
        return False
    # any amount less than or equal to 5000 is consistent with the premise, so the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_withdrawal_premise, withdrawal_hypothesis))
"
7559,contradiction,,contradiction,Marcella has 25 pairs of shoes,Marcella has less than 25 pairs of shoes,marcella has 25 pairs of shoes,marcella has less than 25 pairs of shoes,"shoes_premise = 25
max_shoes_hypothesis = 25

def entailment_or_contradiction_or_neutral(shoes_premise, max_shoes_hypothesis):
    # the hypothesis refers to the number of shoes Marcella has, mentioned in the premise
    # the hypothesis estimates the number of shoes to be less than 'max_shoes_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shoes in the premise is more than or equal to 'max_shoes_hypothesis'
    if shoes_premise >= max_shoes_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shoes_premise, max_shoes_hypothesis))
"
6446,contradiction,,contradiction,Frank is 14 years younger then John,Frank is 54 years younger then John,frank is 14 years younger then john,frank is 54 years younger then john,"john_age_difference_premise = 14
john_age_difference_hypothesis = 54

def entailment_or_contradiction_or_neutral(john_age_difference_premise, john_age_difference_hypothesis):
    # the hypothesis talks about the age difference between Frank and John, the same as in the premise
    # check if the hypothesis contradicts the premise by checking if the age difference from the hypothesis is not equal the one from the premise
    if john_age_difference_hypothesis != john_age_difference_premise:
        return False
    # if the age difference from the hypothesis is the same as the one from the premise, then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(john_age_difference_premise, john_age_difference_hypothesis))
"
6967,neutral,,neutral,The owner made some additions and the more than 800 square feet property is now fetching a price of US Dollar 1500,The owner made some additions and the 900 square feet property is now fetching a price of US Dollar 1500,the owner made some additions and the more than 800 square feet property is now fetching a price of us dollar 1500,the owner made some additions and the 900 square feet property is now fetching a price of us dollar 1500,"min_property_size_premise = 800
property_size_hypothesis = 900

def entailment_or_contradiction_or_neutral(min_property_size_premise, property_size_hypothesis):
    # the hypothesis talks about the same property as in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_property_size_premise', by checking if the size of the property from the hypothesis is lower or equal to 'min_property_size_premise'
    if property_size_hypothesis <= min_property_size_premise:
        return False
    # any property size greater than 800 square feet is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_property_size_premise, property_size_hypothesis))
"
7508,contradiction,,contradiction,"If it takes Pat 20 minutes to stretch and Cara continues to run during this time , how many minutes will it take Pat to catch up to Cara ?","If it takes Pat 80 minutes to stretch and Cara continues to run during this time , how many minutes will it take Pat to catch up to Cara ?","if it takes pat 20 minutes to stretch and cara continues to run during this time , how many minutes will it take pat to catch up to cara ?","if it takes pat 80 minutes to stretch and cara continues to run during this time , how many minutes will it take pat to catch up to cara ?","stretch_time_pat_premise = 20
stretch_time_pat_hypothesis = 80

def entailment_or_contradiction_or_neutral(stretch_time_pat_premise, stretch_time_pat_hypothesis):
    # the hypothesis talks about Pat's stretching time which is also referred to in the premise
    # check if the hypothesis contradicts the premise by checking if the stretching time from the hypothesis is equal to the stretching time from the premise
    if stretch_time_pat_hypothesis == stretch_time_pat_premise:
        return True
    # if the stretching time from the hypothesis is not equal to the stretching time from the premise, it contradicts the premise
    return False

print(entailment_or_contradiction_or_neutral(stretch_time_pat_premise, stretch_time_pat_hypothesis))
"
6664,neutral,,neutral,"At a meeting of the more than 6 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","At a meeting of the 7 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","at a meeting of the more than 6 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","at a meeting of the 7 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","min_joint_chiefs_premise = 6
joint_chiefs_hypothesis = 7

def entailment_or_contradiction_or_neutral(min_joint_chiefs_premise, joint_chiefs_hypothesis):
    # the hypothesis talks about the number of Joint Chiefs of Staff at a meeting, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_joint_chiefs_premise', by checking if the number from the hypothesis is lower or equal to 'min_joint_chiefs_premise'
    if joint_chiefs_hypothesis <= min_joint_chiefs_premise:
        return False
    # any number of Joint Chiefs of Staff greater than 6 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_joint_chiefs_premise, joint_chiefs_hypothesis))
"
6724,neutral,,neutral,more than 1600 from Anwar at 6 % p,3600 from Anwar at 6 % p,more than 1600 from anwar at 6 % p,3600 from anwar at 6 % p,"min_money_from_anwar_premise = 1600
money_from_anwar_hypothesis = 3600

def entailment_or_contradiction_or_neutral(min_money_from_anwar_premise, money_from_anwar_hypothesis):
    # the hypothesis talks about the money borrowed from Anwar, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_money_from_anwar_premise', by checking if the money from the hypothesis is lower or equal to 'min_money_from_anwar_premise'
    if money_from_anwar_hypothesis <= min_money_from_anwar_premise:
        return False
    # any number greater than 1600 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_money_from_anwar_premise, money_from_anwar_hypothesis))
"
7448,contradiction,,contradiction,"Ratio between Rahul and Deepak is 4 : 3 , After 6 Years Rahul age will be 26 years","Ratio between Rahul and Deepak is 2 : 3 , After 6 Years Rahul age will be 26 years","ratio between rahul and deepak is 4 : 3 , after 6 years rahul age will be 26 years","ratio between rahul and deepak is 2 : 3 , after 6 years rahul age will be 26 years","# extract quantities from premise and hypothesis
rahul_deepak_ratio_premise = [4, 3]
rahul_age_future_premise = 26

rahul_deepak_ratio_hypothesis = [2, 3]
rahul_age_future_hypothesis = 26

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_age_future_premise, rahul_deepak_ratio_hypothesis, rahul_age_future_hypothesis):
    # the hypothesis refers to the ratio between Rahul and Deepak and Rahul's future age, both mentioned also in the premise

    # check if the ratio between Rahul and Deepak from the hypothesis contradicts the one from the premise
    if rahul_deepak_ratio_hypothesis != rahul_deepak_ratio_premise:
        return False

    # check if Rahul's future age from the hypothesis contradicts the one from the premise 
    if rahul_age_future_hypothesis != rahul_age_future_premise:
        return False

    # if there's no contradiction, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_age_future_premise, rahul_deepak_ratio_hypothesis, rahul_age_future_hypothesis))
"
6827,contradiction,,contradiction,"At present , the ratio between the ages of Arun and Deepak is 4 : 3","At present , the ratio between the ages of Arun and Deepak is 1 : 3","at present , the ratio between the ages of arun and deepak is 4 : 3","at present , the ratio between the ages of arun and deepak is 1 : 3","arun_to_deepak_age_ratio_premise = 4/3
arun_to_deepak_age_ratio_hypothesis = 1/3

def entailment_or_contradiction_or_neutral(arun_to_deepak_age_ratio_premise, arun_to_deepak_age_ratio_hypothesis):
    # the hypothesis talks about the ratio of ages of Arun and Deepak, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the ratios are not equal
    if arun_to_deepak_age_ratio_premise != arun_to_deepak_age_ratio_hypothesis:
        return False
    # if the hypothesis ratio was equal to the premise ratio, it would entail the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(arun_to_deepak_age_ratio_premise, arun_to_deepak_age_ratio_hypothesis))
"
7252,neutral,,neutral,Suraj has a certain average of runs for more than 5 innings,Suraj has a certain average of runs for 8 innings,suraj has a certain average of runs for more than 5 innings,suraj has a certain average of runs for 8 innings,"min_innings_premise = 5
innings_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_innings_premise, innings_hypothesis):
    # the hypothesis talks about the number of innings Suraj has played, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_innings_premise', by checking if the number of innings from the hypothesis is lower or equal to 'min_innings_premise'
    if innings_hypothesis <= min_innings_premise:
        return False
    # any number of innings greater than 5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_innings_premise, innings_hypothesis))
"
6973,neutral,,neutral,There are less than 58 stations between Hyderabad and Bangalore,There are 18 stations between Hyderabad and Bangalore,there are less than 58 stations between hyderabad and bangalore,there are 18 stations between hyderabad and bangalore,"max_stations_premise = 58
stations_hypothesis = 18

def entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis):
    # the hypothesis refers to the number of stations between two cities mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_stations_premise', by checking if the number of stations from the hypothesis is greater than 'max_stations_premise'
    if stations_hypothesis > max_stations_premise:
        return False
    # any number of stations less than 58 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis))
"
7083,entailment,,entailment,"Annie , working alone , can do the same job in just 10 hours","Annie , working alone , can do the same job in just less than 20 hours","annie , working alone , can do the same job in just 10 hours","annie , working alone , can do the same job in just less than 20 hours","job_duration_premise = 10
max_job_duration_hypothesis = 20

def entailment_or_contradiction_or_neutral(job_duration_premise, max_job_duration_hypothesis):
    # the hypothesis is referring to the duration of a job done by Annie mentioned in the premise
    # the hypothesis estimates the job duration to be less than 'max_job_duration_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the job duration reported in the premise is higher than 'max_job_duration_hypothesis'
    if job_duration_premise > max_job_duration_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(job_duration_premise, max_job_duration_hypothesis))
"
6862,neutral,,neutral,"One hour after Matthew started waking from r to y , a distance of more than 35 km , Johnny started walking along the same road from y to r","One hour after Matthew started waking from r to y , a distance of 45 km , Johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of more than 35 km , johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of 45 km , johnny started walking along the same road from y to r","min_distance_premise = 35
distance_hypothesis = 45

def entailment_or_contradiction_or_neutral(min_distance_premise, distance_hypothesis):
    # the hypothesis refers to the distance from r to y mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_distance_premise', by checking if the distance from the hypothesis is less or equal to 'min_distance_premise'
    if distance_hypothesis <= min_distance_premise:
        return False
    # any distance greater than 35 km is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_distance_premise, distance_hypothesis))
"
7192,neutral,,neutral,"Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at less than 82 noon","Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at 12 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at less than 82 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at 12 noon","train_departure_time_premise = 82
train_departure_time_hypothesis = 12

def entailment_or_contradiction_or_neutral(train_departure_time_premise, train_departure_time_hypothesis):
    # the hypothesis refers to the departure time of the train mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the departure time in the hypothesis is greater than or equal to the departure time in the premise
    if train_departure_time_hypothesis >= train_departure_time_premise:
        return False
    # any departure time less than 82 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(train_departure_time_premise, train_departure_time_hypothesis))
"
7203,entailment,,entailment,If the marks secured by Reema was written as 50 instead of 85 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as less than 60 instead of 85 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 50 instead of 85 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as less than 60 instead of 85 then find the correct average marks up to two decimal places .,"marks_reema_premise = 50
marks_reema_hypothesis = 60
correct_marks_reema = 85

def entailment_or_contradiction_or_neutral(marks_reema_premise, marks_reema_hypothesis, correct_marks_reema):
    # the hypothesis refers to the wrong marks of Reema mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if wrong marks reported in the premise are greater than or equal to 'marks_reema_hypothesis'
    if marks_reema_premise >= marks_reema_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if wrong marks reported in the premise are less than 'marks_reema_hypothesis'
    elif marks_reema_premise < marks_reema_hypothesis:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(marks_reema_premise, marks_reema_hypothesis, correct_marks_reema))
"
6755,contradiction,,contradiction,Ana goes before 8 P,Ana goes before less than 8 P,ana goes before 8 p,ana goes before less than 8 p,"ana_go_time_premise = 8
max_ana_go_time_hypothesis = 8

def entailment_or_contradiction_or_neutral(ana_go_time_premise, max_ana_go_time_hypothesis):
    # the hypothesis talks about the time Ana goes, referencing the same event from the premise
    # the hypothesis contradicts the premise if Ana goes at the 'max_ana_go_time_hypothesis' or later
    if ana_go_time_premise >= max_ana_go_time_hypothesis:
        return False
    # if the 'ana_go_time_premise' is less than 'max_ana_go_time_hypothesis', Ana goes before the time stated in the hypothesis, so the premise entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(ana_go_time_premise, max_ana_go_time_hypothesis))
"
6980,contradiction,,contradiction,Each of three charities in Novel Grove Estates has 8 persons serving on its board of directors,Each of three charities in Novel Grove Estates has more than 8 persons serving on its board of directors,each of three charities in novel grove estates has 8 persons serving on its board of directors,each of three charities in novel grove estates has more than 8 persons serving on its board of directors,"directors_each_charity_premise = 8
min_directors_each_charity_hypothesis = 8

def entailment_or_contradiction_or_neutral(directors_each_charity_premise, min_directors_each_charity_hypothesis):
    # the hypothesis contradicts the premise by stating the number of directors is more than 8, which is the exact number stated in the premise
    return False

print(entailment_or_contradiction_or_neutral(directors_each_charity_premise, min_directors_each_charity_hypothesis))
"
7579,neutral,,neutral,"With the help of Pavan , they completed the work in more than 7 days and earned Rs","With the help of Pavan , they completed the work in 8 days and earned Rs","with the help of pavan , they completed the work in more than 7 days and earned rs","with the help of pavan , they completed the work in 8 days and earned rs","min_days_to_complete_work_premise = 7
days_to_complete_work_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_days_to_complete_work_premise, days_to_complete_work_hypothesis):
    # the hypothesis talks about the number of days to complete work, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_days_to_complete_work_premise', by checking if the number of days from the hypothesis is lower or equal to 'min_days_to_complete_work_premise'
    if days_to_complete_work_hypothesis <= min_days_to_complete_work_premise:
        return False
    # any number of days greater than 7 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_days_to_complete_work_premise, days_to_complete_work_hypothesis))
"
7439,contradiction,,contradiction,The London Racetrack needs to submit its 3 fastest horses to the Kentucky Derby out of 25 horses,The London Racetrack needs to submit its 4 fastest horses to the Kentucky Derby out of 25 horses,the london racetrack needs to submit its 3 fastest horses to the kentucky derby out of 25 horses,the london racetrack needs to submit its 4 fastest horses to the kentucky derby out of 25 horses,"fastest_horses_premise = 3
fastest_horses_hypothesis = 4

def entailment_or_contradiction_or_neutral(fastest_horses_premise, fastest_horses_hypothesis):
    # the hypothesis talks about the number of fastest horses the London Racetrack needs to submit to the Kentucky Derby, the same as the premise
    # check if the hypothesis contradicts the premise by checking if 'fastest_horses_hypothesis' is not equal to 'fastest_horses_premise'
    if fastest_horses_hypothesis != fastest_horses_premise:
        return False
    # if the number of horses from the hypothesis matches the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(fastest_horses_premise, fastest_horses_hypothesis))
"
5938,neutral,,neutral,"At Veridux Corporation , there are less than 280 employees","At Veridux Corporation , there are 180 employees","at veridux corporation , there are less than 280 employees","at veridux corporation , there are 180 employees","max_employees_premise = 280
employees_hypothesis = 180

def entailment_or_contradiction_or_neutral(max_employees_premise, employees_hypothesis):
    # the hypothesis speaks about the number of employees at Veridux Corporation, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_employees_premise', by checking if the number of employees from the hypothesis is greater than 'max_employees_premise'
    if employees_hypothesis > max_employees_premise:
        return False
    # any number of employees less than 280 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_employees_premise, employees_hypothesis))
"
6792,entailment,,entailment,"In an exam , Dibi scored 25 percent , Balan scored 38 percent and Cristen 23 percent","In an exam , Dibi scored less than 35 percent , Balan scored 38 percent and Cristen 23 percent","in an exam , dibi scored 25 percent , balan scored 38 percent and cristen 23 percent","in an exam , dibi scored less than 35 percent , balan scored 38 percent and cristen 23 percent","dibi_score_premise = 25
balan_score_premise = 38
cristen_score_premise = 23

max_dibi_score_hypothesis = 35
balan_score_hypothesis = 38
cristen_score_hypothesis = 23

def entailment_or_contradiction_or_neutral(dibi_score_premise, balan_score_premise, cristen_score_premise, max_dibi_score_hypothesis, balan_score_hypothesis, cristen_score_hypothesis):
    # the hypothesis talks about the exam scores of Dibi, Balan and Cristen, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if Dibi's score in the premise is higher than 'max_dibi_score_hypothesis', or if Balan's or Cristen's scores are not the same as in the premise
    if dibi_score_premise > max_dibi_score_hypothesis or balan_score_premise != balan_score_hypothesis or cristen_score_premise != cristen_score_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dibi_score_premise, balan_score_premise, cristen_score_premise, max_dibi_score_hypothesis, balan_score_hypothesis, cristen_score_hypothesis))
"
6403,neutral,,neutral,"Of the more than 30 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by Machine A and the remaining 20 percent would be most efficiently manufactured by Machine B , though either machine could manufacture any of the 60 components","Of the 60 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by Machine A and the remaining 20 percent would be most efficiently manufactured by Machine B , though either machine could manufacture any of the 60 components","of the more than 30 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by machine a and the remaining 20 percent would be most efficiently manufactured by machine b , though either machine could manufacture any of the 60 components","of the 60 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by machine a and the remaining 20 percent would be most efficiently manufactured by machine b , though either machine could manufacture any of the 60 components","# quantity of electronic components to be manufactured as mentioned in premise
components_premise = 30
# quantity of electronic components to be manufactured as mentioned in hypothesis
components_hypothesis = 60

def entailment_or_contradiction_or_neutral(components_premise, components_hypothesis):
    # the hypothesis talks about the number of electronic components a factory must manufacture, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'components_premise', by checking if the number of components from the hypothesis is lower or equal to 'components_premise'
    if components_hypothesis <= components_premise:
        return False
    # any number of components greater than 30 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(components_premise, components_hypothesis))
"
5969,contradiction,,contradiction,Dawson runs the first leg of the course in 38 seconds,Dawson runs the first leg of the course in 68 seconds,dawson runs the first leg of the course in 38 seconds,dawson runs the first leg of the course in 68 seconds,"first_leg_time_premise = 38
first_leg_time_hypothesis = 68

def entailment_or_contradiction_or_neutral(first_leg_time_premise, first_leg_time_hypothesis):
    # the hypothesis talks about Dawson's running time on the first leg of the course, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the time from the hypothesis is not equal to the time from the premise
    if first_leg_time_hypothesis != first_leg_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(first_leg_time_premise, first_leg_time_hypothesis))
"
7362,entailment,,entailment,Deepa bought a calculator at 30 % discount on the listed price,Deepa bought a calculator at more than 10 % discount on the listed price,deepa bought a calculator at 30 % discount on the listed price,deepa bought a calculator at more than 10 % discount on the listed price,"discount_rate_premise = 30
min_discount_rate_hypothesis = 10

def entailment_or_contradiction_or_neutral(discount_rate_premise, min_discount_rate_hypothesis):
    # the hypothesis refers to the discount rate on a calculator, also mentioned in the premise
    # the hypothesis estimates the discount rate to be higher than 'min_discount_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the discount rate in the premise is lower than 'min_discount_rate_hypothesis'
    if discount_rate_premise < min_discount_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(discount_rate_premise, min_discount_rate_hypothesis))
"
7578,entailment,,entailment,"With the help of Pavan , they completed the work in 8 days and earned Rs","With the help of Pavan , they completed the work in more than 7 days and earned Rs","with the help of pavan , they completed the work in 8 days and earned rs","with the help of pavan , they completed the work in more than 7 days and earned rs","work_days_premise = 8
min_work_days_hypothesis = 7

def entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis):
    # the hypothesis talks about the number of days to complete a work, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'work_days_premise', by checking if the number of days from the hypothesis is lower or equal to 'work_days_premise'
    if min_work_days_hypothesis > work_days_premise:
        return False
    # any number of days greater than 7 and less than or equal to 8 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis))
"
6917,contradiction,,contradiction,"Carolyn bought 17 gumballs , Lew bought 12 gumballs , and Carey bought X gumballs","Carolyn bought 57 gumballs , Lew bought 12 gumballs , and Carey bought X gumballs","carolyn bought 17 gumballs , lew bought 12 gumballs , and carey bought x gumballs","carolyn bought 57 gumballs , lew bought 12 gumballs , and carey bought x gumballs","carolyn_gumballs_premise = 17
lew_gumballs_premise = 12
carey_gumballs_premise = 'X'

carolyn_gumballs_hypothesis = 57
lew_gumballs_hypothesis = 12
carey_gumballs_hypothesis = 'X'

def entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, carey_gumballs_premise,
                                           carolyn_gumballs_hypothesis, lew_gumballs_hypothesis, carey_gumballs_hypothesis):
    # The hypothesis talks about the number of gumballs each person bought, which is also referenced in the premise
    
    # Check if the hypothesis contradicts the premise by comparing the number of gumballs each person bought
    if carolyn_gumballs_premise != carolyn_gumballs_hypothesis:
        return False
    elif lew_gumballs_premise != lew_gumballs_hypothesis:
        return False
    elif carey_gumballs_premise != carey_gumballs_hypothesis:
        return False
    # If none of the conditions are met, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, carey_gumballs_premise,
                                             carolyn_gumballs_hypothesis, lew_gumballs_hypothesis, carey_gumballs_hypothesis))
"
6614,contradiction,,contradiction,"At the faculty of Aerospace Engineering , 312 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 212 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 312 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 212 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","random_processing_students_premise = 312
scramjet_rocket_students_premise = 234
both_subjects_students_premise = 112

random_processing_students_hypothesis = 212
scramjet_rocket_students_hypothesis = 234
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_rocket_students_premise, 
                                           both_subjects_students_premise, random_processing_students_hypothesis,
                                           scramjet_rocket_students_hypothesis, both_subjects_students_hypothesis):
    # the hypothesis refers to the number of students studying each of the mentioned subjects, as reported also in the premise
    # check if the hypothesis contradicts the premise by checking if the numbers of students reported in the hypothesis are different from the ones in the premise
    if random_processing_students_hypothesis != random_processing_students_premise or \
    scramjet_rocket_students_hypothesis != scramjet_rocket_students_premise or \
    both_subjects_students_hypothesis != both_subjects_students_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_rocket_students_premise, 
                                             both_subjects_students_premise, random_processing_students_hypothesis, 
                                             scramjet_rocket_students_hypothesis, both_subjects_students_hypothesis))
"
6754,neutral,,neutral,Ana goes before more than 2 P,Ana goes before 8 P,ana goes before more than 2 p,ana goes before 8 p,"min_ana_positions_premise = 2
ana_position_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_ana_positions_premise, ana_position_hypothesis):
    # the hypothesis refers to Ana's position mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the position in the hypothesis is lower than or equal to 'min_ana_positions_premise'
    if ana_position_hypothesis <= min_ana_positions_premise:
        return False
    # any position greater than 2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_ana_positions_premise, ana_position_hypothesis))
"
6705,entailment,,entailment,"Yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","Yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 8 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 8 : 3 : 1","red_green_blue_ratio_premise = 4 / 1
max_red_green_blue_ratio_hypothesis = 8 / 1

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, max_red_green_blue_ratio_hypothesis):
    # the hypothesis refers to the ratio of red, green, and blue toy bricks used by Yali to build a tower, as mentioned in the premise
    # the hypothesis estimates the ratio of red to blue bricks to be less than 'max_red_green_blue_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio mentioned in the premise is greater than 'max_red_green_blue_ratio_hypothesis'
    if red_green_blue_ratio_premise > max_red_green_blue_ratio_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, max_red_green_blue_ratio_hypothesis))
"
6806,contradiction,,contradiction,"One hour after Yolanda started walking from X to Y , a distance of 31 miles , Bob started walking along the same road from Y to X","One hour after Yolanda started walking from X to Y , a distance of 61 miles , Bob started walking along the same road from Y to X","one hour after yolanda started walking from x to y , a distance of 31 miles , bob started walking along the same road from y to x","one hour after yolanda started walking from x to y , a distance of 61 miles , bob started walking along the same road from y to x","distance_X_to_Y_premise = 31
distance_X_to_Y_hypothesis = 61

def entailment_or_contradiction_or_neutral(distance_X_to_Y_premise, distance_X_to_Y_hypothesis):
    # the hypothesis and premise describe the same event, with the distance between X and Y being a key detail
    # check if the hypothesis contradicts the premise by comparing 'distance_X_to_Y_premise' with 'distance_X_to_Y_hypothesis'
    if distance_X_to_Y_premise != distance_X_to_Y_hypothesis:
        return False
    # if the distances were equal, the hypothesis would entail the premise
    return None

print(entailment_or_contradiction_or_neutral(distance_X_to_Y_premise, distance_X_to_Y_hypothesis))
"
6402,entailment,,entailment,"Of the 60 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by Machine A and the remaining 20 percent would be most efficiently manufactured by Machine B , though either machine could manufacture any of the 60 components","Of the more than 30 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by Machine A and the remaining 20 percent would be most efficiently manufactured by Machine B , though either machine could manufacture any of the 60 components","of the 60 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by machine a and the remaining 20 percent would be most efficiently manufactured by machine b , though either machine could manufacture any of the 60 components","of the more than 30 electronics components that a factory must manufacture , 80 percent would be most e ¢ ciently manufactured by machine a and the remaining 20 percent would be most efficiently manufactured by machine b , though either machine could manufacture any of the 60 components","total_components_premise = 60
min_total_components_hypothesis = 30
machine_a_efficiency_premise = 0.8
machine_b_efficiency_premise = 0.2
machine_a_efficiency_hypothesis = 0.8
machine_b_efficiency_hypothesis = 0.2

def entailment_or_contradiction_or_neutral(total_components_premise, min_total_components_hypothesis, machine_a_efficiency_premise, machine_b_efficiency_premise, machine_a_efficiency_hypothesis, machine_b_efficiency_hypothesis):
    # Both the premise and the hypothesis talk about the number of components a factory must manufacture and the efficiency of machines A and B in manufacturing them
    # First, check if the hypothesis contradicts the premise by checking if the number of components mentioned in the hypothesis is more than the total in the premise
    if min_total_components_hypothesis > total_components_premise:
        return False
    # Then, check if the efficiency of machines A and B in the hypothesis contradicts that in the premise
    elif machine_a_efficiency_hypothesis != machine_a_efficiency_premise or machine_b_efficiency_hypothesis != machine_b_efficiency_premise:
        return False
    # If the hypothesis does not contradict the premise, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_components_premise, min_total_components_hypothesis, machine_a_efficiency_premise, machine_b_efficiency_premise, machine_a_efficiency_hypothesis, machine_b_efficiency_hypothesis))
"
6453,entailment,,entailment,"Calculate the average mark scored by Andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","Calculate the average mark scored by Andrea if he had the following scores in an examination : less than 76 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : less than 76 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?","# individual scores in each subject from the premise
english_premise = 66
mathematics_premise = 60
chemistry_premise = 72
biology_premise = 77
french_language_premise = 55
physics_premise = 85

# individual scores in each subject from the hypothesis
english_hypothesis = 76

def entailment_or_contradiction_or_neutral(english_premise, english_hypothesis):
    # the hypothesis refers to the English score mentioned in the premise
    # the hypothesis estimates the English score to be less than 'english_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the English score reported in the premise is higher or equal to 'english_hypothesis'
    if english_premise >= english_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(english_premise, english_hypothesis))
"
6246,entailment,,entailment,Raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,Raviraj invested an amount of less than 600000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of less than 600000 at compound interest rate of 10 pcpa for a period of three years,"invested_amount_premise = 100000
max_invested_amount_hypothesis = 600000

def entailment_or_contradiction_or_neutral(invested_amount_premise, max_invested_amount_hypothesis):
    # the hypothesis refers to the invested amount mentioned in the premise
    # the hypothesis estimates the invested amount to be less than or equal to 'max_invested_amount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the invested amount in the premise is higher than 'max_invested_amount_hypothesis'
    if invested_amount_premise > max_invested_amount_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(invested_amount_premise, max_invested_amount_hypothesis))
"
6124,neutral,,neutral,"In a group of more than 20 people , 35 have visited Iceland and 23 have visited Norway","In a group of 60 people , 35 have visited Iceland and 23 have visited Norway","in a group of more than 20 people , 35 have visited iceland and 23 have visited norway","in a group of 60 people , 35 have visited iceland and 23 have visited norway","min_people_group_premise = 20
people_group_hypothesis = 60
iceland_visitors_premise = 35
iceland_visitors_hypothesis = 35
norway_visitors_premise = 23
norway_visitors_hypothesis = 23

def entailment_or_contradiction_or_neutral(min_people_group_premise, people_group_hypothesis, iceland_visitors_premise, iceland_visitors_hypothesis, norway_visitors_premise, norway_visitors_hypothesis):
    # The hypothesis gives a specific number of people in the group, which is also referred to in the premise
    # Check if the hypothesis contradicts the premise estimate of more than 'min_people_group_premise', by checking if the number of people from the hypothesis is lower or equal to 'min_people_group_premise'
    if people_group_hypothesis <= min_people_group_premise:
        return False
    # The number of Iceland and Norway visitors from the hypothesis should match the premise
    if iceland_visitors_premise != iceland_visitors_hypothesis or norway_visitors_premise != norway_visitors_hypothesis:
        return False
    # Any number of people greater than 20 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_people_group_premise, people_group_hypothesis, iceland_visitors_premise, iceland_visitors_hypothesis, norway_visitors_premise, norway_visitors_hypothesis))
"
7248,entailment,,entailment,Lilly has 10 fish and Rosy has 9 fish,Lilly has less than 60 fish and Rosy has 9 fish,lilly has 10 fish and rosy has 9 fish,lilly has less than 60 fish and rosy has 9 fish,"lilly_fish_premise = 10
rosy_fish_premise = 9
max_lilly_fish_hypothesis = 60
rosy_fish_hypothesis = 9

def entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, max_lilly_fish_hypothesis, rosy_fish_hypothesis):
    # the hypothesis refers to the number of fish of Lilly and Rosy mentioned in the premise
    # the hypothesis estimates the fish of Lilly to be less than 'max_lilly_fish_hypothesis' and the fish of Rosy to be equal to 'rosy_fish_hypothesis'
    # check if the hypothesis contradicts the premise by checking if fish of Lilly reported in the premise are more than 'max_lilly_fish_hypothesis' or fish of Rosy reported in the premise are not equal to 'rosy_fish_hypothesis'
    if lilly_fish_premise > max_lilly_fish_hypothesis or rosy_fish_premise != rosy_fish_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, max_lilly_fish_hypothesis, rosy_fish_hypothesis))
"
7308,entailment,,entailment,How many minutes does it take James to type 8 words if he types at the rate of 4 words per minute ?,How many minutes does it take James to type more than 7 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type 8 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type more than 7 words if he types at the rate of 4 words per minute ?,"words_to_type_premise = 8
words_per_minute = 4
words_to_type_hypothesis = 7

def entailment_or_contradiction_or_neutral(words_to_type_premise, words_per_minute, words_to_type_hypothesis):
    # First, calculate the time it takes James to type the words in both the premise and the hypothesis
    time_to_type_premise = words_to_type_premise / words_per_minute
    time_to_type_hypothesis = words_to_type_hypothesis / words_per_minute
    # The hypothesis is about the time it takes to type more than 'words_to_type_hypothesis' words
    # Check if the hypothesis contradicts the premise by checking if the time calculated from the hypothesis is greater than the time calculated from the premise
    if time_to_type_hypothesis > time_to_type_premise:
        return False
    # If the time to type the words in the hypothesis is less or equal to the time to type the words in the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(words_to_type_premise, words_per_minute, words_to_type_hypothesis))
"
6186,entailment,,entailment,How many liters of blue paint must be added to 16 liters of Fuchsia to change it to Mauve paint ?,How many liters of blue paint must be added to less than 86 liters of Fuchsia to change it to Mauve paint ?,how many liters of blue paint must be added to 16 liters of fuchsia to change it to mauve paint ?,how many liters of blue paint must be added to less than 86 liters of fuchsia to change it to mauve paint ?,"fuchsia_liters_premise = 16
max_fuchsia_liters_hypothesis = 86

def entailment_or_contradiction_or_neutral(fuchsia_liters_premise, max_fuchsia_liters_hypothesis):
    # The hypothesis refers to the volume of Fuchsia in the premise
    # The hypothesis estimates that the volume of Fuchsia is less than 'max_fuchsia_liters_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if Fuchsia volume reported in the premise is greater than 'max_fuchsia_liters_hypothesis'
    if fuchsia_liters_premise > max_fuchsia_liters_hypothesis:
        return False
    # if the Fuchsia volume in the premise is less than 'max_fuchsia_liters_hypothesis', it entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(fuchsia_liters_premise, max_fuchsia_liters_hypothesis))
"
6467,contradiction,,contradiction,"If there are 4 peanuts in a box and Mary puts 12 more peanuts inside , how many peanuts are in the box ?","If there are 2 peanuts in a box and Mary puts 12 more peanuts inside , how many peanuts are in the box ?","if there are 4 peanuts in a box and mary puts 12 more peanuts inside , how many peanuts are in the box ?","if there are 2 peanuts in a box and mary puts 12 more peanuts inside , how many peanuts are in the box ?","initial_peanuts_premise = 4
added_peanuts_premise = 12
initial_peanuts_hypothesis = 2
added_peanuts_hypothesis = 12

def entailment_or_contradiction_or_neutral(initial_peanuts_premise, added_peanuts_premise, initial_peanuts_hypothesis, added_peanuts_hypothesis):
    # the hypothesis talks about the number of peanuts in a box, which is also referenced in the premise
    # the hypothesis contradicts the premise if the initial number of peanuts or the added number of peanuts do not match with the premise
    if initial_peanuts_premise != initial_peanuts_hypothesis or added_peanuts_premise != added_peanuts_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(initial_peanuts_premise, added_peanuts_premise, initial_peanuts_hypothesis, added_peanuts_hypothesis))
"
6576,entailment,,entailment,Vijay bought 160 shirts at the rate of Rs,Vijay bought less than 560 shirts at the rate of Rs,vijay bought 160 shirts at the rate of rs,vijay bought less than 560 shirts at the rate of rs,"shirts_bought_premise = 160
max_shirts_bought_hypothesis = 560

def entailment_or_contradiction_or_neutral(shirts_bought_premise, max_shirts_bought_hypothesis):
    # the hypothesis talks about the number of shirts bought by Vijay, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of shirts bought in the premise is greater than 'max_shirts_bought_hypothesis'
    if shirts_bought_premise > max_shirts_bought_hypothesis:
        return False
    # if the number of shirts bought is less than or equal to 'max_shirts_bought_hypothesis', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(shirts_bought_premise, max_shirts_bought_hypothesis))
"
6217,neutral,,neutral,There are less than 85 stations between Delhi and Chennai,There are 25 stations between Delhi and Chennai,there are less than 85 stations between delhi and chennai,there are 25 stations between delhi and chennai,"max_stations_premise = 85
stations_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis):
    # the hypothesis states a specific number of stations between Delhi and Chennai, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_stations_premise', by checking if the number of stations from the hypothesis is greater than 'max_stations_premise'
    if stations_hypothesis > max_stations_premise:
        return False
    # any number of stations less than 85 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis))
"
6357,entailment,,entailment,"Since you ' re nice , you give John 5 baseball cards","Since you ' re nice , you give John more than 2 baseball cards","since you ' re nice , you give john 5 baseball cards","since you ' re nice , you give john more than 2 baseball cards","cards_given_to_john_premise = 5
min_cards_given_to_john_hypothesis = 2

def entailment_or_contradiction_or_neutral(cards_given_to_john_premise, min_cards_given_to_john_hypothesis):
    # the hypothesis refers to the number of baseball cards given to John mentioned in the premise
    # the hypothesis estimates the baseball cards given to John to be more than 'min_cards_given_to_john_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of baseball cards given in the premise is less than 'min_cards_given_to_john_hypothesis'
    if cards_given_to_john_premise < min_cards_given_to_john_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(cards_given_to_john_premise, min_cards_given_to_john_hypothesis))
"
5968,neutral,,neutral,Dawson runs the first leg of the course in more than 28 seconds,Dawson runs the first leg of the course in 38 seconds,dawson runs the first leg of the course in more than 28 seconds,dawson runs the first leg of the course in 38 seconds,"min_run_time_premise = 28
run_time_hypothesis = 38

def entailment_or_contradiction_or_neutral(min_run_time_premise, run_time_hypothesis):
    # the hypothesis talks about the run time of the first leg of the course, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_run_time_premise', by checking if the run time from the hypothesis is lower or equal to 'min_run_time_premise'
    if run_time_hypothesis <= min_run_time_premise:
        return False
    # any run time greater than 28 seconds is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_run_time_premise, run_time_hypothesis))
"
7236,entailment,,entailment,"On the first day of her vacation , Louisa traveled 240 miles","On the first day of her vacation , Louisa traveled less than 440 miles","on the first day of her vacation , louisa traveled 240 miles","on the first day of her vacation , louisa traveled less than 440 miles","travelled_miles_premise = 240
max_travelled_miles_hypothesis = 440

def entailment_or_contradiction_or_neutral(travelled_miles_premise, max_travelled_miles_hypothesis):
    # the hypothesis talks about the miles travelled by Louisa on the first day of vacation, referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the miles travelled mentioned in the premise are more than 'max_travelled_miles_hypothesis'
    if travelled_miles_premise > max_travelled_miles_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travelled_miles_premise, max_travelled_miles_hypothesis))
"
7131,entailment,,entailment,Patanjali walked for 3 days,Patanjali walked for more than 2 days,patanjali walked for 3 days,patanjali walked for more than 2 days,"days_walked_patanjali_premise = 3
min_days_walked_patanjali_hypothesis = 2

def entailment_or_contradiction_or_neutral(days_walked_patanjali_premise, min_days_walked_patanjali_hypothesis):
    # the hypothesis refers to the number of days Patanjali walked mentioned in the premise
    # the hypothesis estimates the walking duration to be more than 'min_days_walked_patanjali_hypothesis'
    # check if the hypothesis contradicts the premise by checking if walking days reported in the premise are lower than or equal to 'min_days_walked_patanjali_hypothesis'
    if days_walked_patanjali_premise <= min_days_walked_patanjali_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(days_walked_patanjali_premise, min_days_walked_patanjali_hypothesis))
"
7020,entailment,,entailment,"If 20 % of all the students at Morse have cars , how many students are in the three lower grades ?","If less than 50 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 20 % of all the students at morse have cars , how many students are in the three lower grades ?","if less than 50 % of all the students at morse have cars , how many students are in the three lower grades ?","car_owners_percentage_premise = 20
max_car_owners_percentage_hypothesis = 50

def entailment_or_contradiction_or_neutral(car_owners_percentage_premise, max_car_owners_percentage_hypothesis):
    # the hypothesis and premise both refer to the percentage of students at Morse who own cars
    # check if the hypothesis contradicts the premise by checking if the percentage reported in the premise is greater than 'max_car_owners_percentage_hypothesis'
    if car_owners_percentage_premise > max_car_owners_percentage_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(car_owners_percentage_premise, max_car_owners_percentage_hypothesis))
"
7154,contradiction,,contradiction,"In Kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","In Kaya ' s teacher ' s desk there are 3 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are 3 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","pink_highlighters_premise = 9
yellow_highlighters_premise = 8
blue_highlighters_premise = 5

pink_highlighters_hypothesis = 3
yellow_highlighters_hypothesis = 8
blue_highlighters_hypothesis = 5

def entailment_or_contradiction_or_neutral(pink_highlighters_premise, yellow_highlighters_premise, blue_highlighters_premise, pink_highlighters_hypothesis, yellow_highlighters_hypothesis, blue_highlighters_hypothesis):
    # the hypothesis talks about the number of pink, yellow, and blue highlighters in Kaya's teacher's desk, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the number of each color highlighter in both
    if pink_highlighters_hypothesis != pink_highlighters_premise or yellow_highlighters_hypothesis != yellow_highlighters_premise or blue_highlighters_hypothesis != blue_highlighters_premise:
        return False
    # if all the numbers match, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(pink_highlighters_premise, yellow_highlighters_premise, blue_highlighters_premise, pink_highlighters_hypothesis, yellow_highlighters_hypothesis, blue_highlighters_hypothesis))
"
6378,entailment,,entailment,"Each week , Harry is paid x dollars per hour for the first 30 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first more than 10 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 30 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first more than 10 hours and 1.5 x dollars for each additional hour worked that week","standard_hours_premise = 30
standard_hours_hypothesis = 10

def entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis):
    # the hypothesis and premise both talk about the number of standard hours Harry is paid for
    # the hypothesis suggests Harry is paid for more than 'standard_hours_hypothesis' hours, which is less than the premise hours
    # check if the hypothesis contradicts the premise by checking if the standard hours in the hypothesis are greater than the premise hours
    if standard_hours_hypothesis > standard_hours_premise:
        return False
    # since the hypothesis suggests that Harry works for more than 10 hours, and the premise states that he works for the first 30 hours, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis))
"
7105,neutral,,neutral,"Each week , Harry is paid x dollars per hour for the first less than 80 hours and 2 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first less than 80 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","hours_regular_pay_premise = 80
hours_regular_pay_hypothesis = 30

def entailment_or_contradiction_or_neutral(hours_regular_pay_premise, hours_regular_pay_hypothesis):
    # the hypothesis talks about the number of hours for which Harry receives regular pay, which is also referenced in the premise
    # the premise says Harry gets regular pay for less than 80 hours, while the hypothesis says it's for the first 30 hours
    # these two facts do not contradict, as 30 hours is less than 80 hours. However, they do not entail each other either, as the premise does not specify the exact number of hours for regular pay
    # therefore, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(hours_regular_pay_premise, hours_regular_pay_hypothesis))
"
7045,neutral,,neutral,Raman travelled for less than 20 hours,Raman travelled for 10 hours,raman travelled for less than 20 hours,raman travelled for 10 hours,"max_travel_duration_premise = 20
travel_duration_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_travel_duration_premise, travel_duration_hypothesis):
    # the hypothesis talks about the travel duration of Raman, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_travel_duration_premise' hours, by checking if the travel duration from the hypothesis is greater than 'max_travel_duration_premise'
    if travel_duration_hypothesis >= max_travel_duration_premise:
        return False
    # any travel duration less than 20 hours is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_travel_duration_premise, travel_duration_hypothesis))
"
7267,neutral,,neutral,Bruce and Bhishma are running on a circular track of length more than 200 m,Bruce and Bhishma are running on a circular track of length 600 m,bruce and bhishma are running on a circular track of length more than 200 m,bruce and bhishma are running on a circular track of length 600 m,"min_track_length_premise = 200
track_length_hypothesis = 600

def entailment_or_contradiction_or_neutral(min_track_length_premise, track_length_hypothesis):
    # The hypothesis refers to the track length mentioned in the premise
    # It provides a specific length for the track
    # Check if the hypothesis contradicts the premise by checking if track length in the hypothesis is less than or equal to 'min_track_length_premise'
    if track_length_hypothesis <= min_track_length_premise:
        return False
    # Any track length greater than 200 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_track_length_premise, track_length_hypothesis))
"
6760,neutral,,neutral,If the marks secured by Reema was written as less than 56 instead of 56 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as 46 instead of 56 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as less than 56 instead of 56 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 46 instead of 56 then find the correct average marks up to two decimal places .,"marks_reema_premise = 56
marks_reema_hypothesis = 46

def entailment_or_contradiction_or_neutral(marks_reema_premise, marks_reema_hypothesis):
    # the hypothesis talks about the marks of Reema, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'marks_reema_premise', by checking if the marks of Reema from the hypothesis is greater or equal to 'marks_reema_premise'
    if marks_reema_hypothesis >= marks_reema_premise:
        return False
    # any number of marks less than 56 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(marks_reema_premise, marks_reema_hypothesis))
"
6863,contradiction,,contradiction,"One hour after Matthew started waking from r to y , a distance of 45 km , Johnny started walking along the same road from y to r","One hour after Matthew started waking from r to y , a distance of 85 km , Johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of 45 km , johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of 85 km , johnny started walking along the same road from y to r","matthew_distance_premise = 45
matthew_distance_hypothesis = 85

def entailment_or_contradiction_or_neutral(matthew_distance_premise, matthew_distance_hypothesis):
    # The hypothesis and premise both describe the distance Matthew walked
    # If the distance in the hypothesis is different from the premise, it contradicts the premise
    if matthew_distance_premise != matthew_distance_hypothesis:
        return False
    # If the distance in the hypothesis is the same as in the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(matthew_distance_premise, matthew_distance_hypothesis))
"
7160,contradiction,,contradiction,"After 6 years , Sandy ’ s age will be 38 years","After 4 years , Sandy ’ s age will be 38 years","after 6 years , sandy ’ s age will be 38 years","after 4 years , sandy ’ s age will be 38 years","sandy_age_future_premise = 38
years_future_premise = 6
sandy_age_future_hypothesis = 38
years_future_hypothesis = 4

def entailment_or_contradiction_or_neutral(sandy_age_future_premise, years_future_premise, sandy_age_future_hypothesis, years_future_hypothesis):
    # the hypothesis refers to the age of Sandy in the future, mentioned also in the premise
    # check if the hypothesis contradicts the premise by comparing the future ages and respective years
    if sandy_age_future_hypothesis == sandy_age_future_premise and years_future_hypothesis != years_future_premise:
        return False
    # if the hypothesis does not contradict the premise, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(sandy_age_future_premise, years_future_premise, sandy_age_future_hypothesis, years_future_hypothesis))
"
7202,contradiction,,contradiction,Angela has 13 pairs of matched socks,Angela has 83 pairs of matched socks,angela has 13 pairs of matched socks,angela has 83 pairs of matched socks,"matched_socks_premise = 13
matched_socks_hypothesis = 83

def entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis):
    # the hypothesis refers to the number of matched socks Angela has
    # the hypothesis estimates the socks to be 'matched_socks_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of socks reported in the premise is less than 'matched_socks_hypothesis'
    if matched_socks_premise < matched_socks_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(matched_socks_premise, matched_socks_hypothesis))
"
7193,contradiction,,contradiction,"Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at 12 noon","Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at less than 12 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at 12 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at less than 12 noon","train_departure_time_premise = 12
max_train_departure_time_hypothesis = 12

def entailment_or_contradiction_or_neutral(train_departure_time_premise, max_train_departure_time_hypothesis):
    # the hypothesis talks about the departure time of a train, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of exactly 'train_departure_time_premise', by checking if the departure time from the hypothesis is greater or equal to 'train_departure_time_premise'
    if max_train_departure_time_hypothesis >= train_departure_time_premise:
        return False
    # departure time of less than 12 noon contradicts the premise, so the hypothesis contradicts the premise
    return False

print(entailment_or_contradiction_or_neutral(train_departure_time_premise, max_train_departure_time_hypothesis))
"
7313,contradiction,,contradiction,"Jim runs at 6 miles per hour , and Cara runs at 5 miles per hour","Jim runs at less than 6 miles per hour , and Cara runs at 5 miles per hour","jim runs at 6 miles per hour , and cara runs at 5 miles per hour","jim runs at less than 6 miles per hour , and cara runs at 5 miles per hour","jim_speed_premise = 6
cara_speed_premise = 5
jim_speed_hypothesis = 6
cara_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(jim_speed_premise, cara_speed_premise, jim_speed_hypothesis, cara_speed_hypothesis):
    # the hypothesis refers to the speed of Jim and Cara mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speed of Jim in the hypothesis is equal or greater than 'jim_speed_premise' and if speed of Cara in hypothesis is equal to 'cara_speed_premise'
    if jim_speed_hypothesis >= jim_speed_premise and cara_speed_hypothesis == cara_speed_premise:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(jim_speed_premise, cara_speed_premise, jim_speed_hypothesis, cara_speed_hypothesis))
"
6549,entailment,,entailment,"Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of 4 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of less than 7 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of 4 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of less than 7 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","west_town_bird_speed_premise = 4
east_town_bird_speed_premise = 1
max_west_town_bird_speed_hypothesis = 7
east_town_bird_speed_hypothesis = 1

def entailment_or_contradiction_or_neutral(west_town_bird_speed_premise, east_town_bird_speed_premise, max_west_town_bird_speed_hypothesis, east_town_bird_speed_hypothesis):
    # the hypothesis refers to the speeds of the birds mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if premise speeds are more than hypothesis speeds
    if west_town_bird_speed_premise > max_west_town_bird_speed_hypothesis or east_town_bird_speed_premise > east_town_bird_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(west_town_bird_speed_premise, east_town_bird_speed_premise, max_west_town_bird_speed_hypothesis, east_town_bird_speed_hypothesis))
"
6458,contradiction,,contradiction,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","outfit_shirt_premise = 1
outfit_shirt_hypothesis = 5
jeans_premise = 1
jeans_hypothesis = 1
sneakers_premise = 1
sneakers_hypothesis = 1

def entailment_or_contradiction_or_neutral(outfit_shirt_premise, outfit_shirt_hypothesis, jeans_premise, jeans_hypothesis, sneakers_premise, sneakers_hypothesis):
    # the hypothesis talks about the number of shirts, jeans, and sneakers in an outfit, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate by checking if the number of shirts, jeans, and sneakers from the hypothesis is different than the premise
    if outfit_shirt_hypothesis == outfit_shirt_premise and jeans_hypothesis == jeans_premise and sneakers_hypothesis == sneakers_premise:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(outfit_shirt_premise, outfit_shirt_hypothesis, jeans_premise, jeans_hypothesis, sneakers_premise, sneakers_hypothesis))
"
6518,contradiction,,contradiction,He will be 5 / 3 times as old as Tom 6 years hence,He will be more than 5 / 3 times as old as Tom 6 years hence,he will be 5 / 3 times as old as tom 6 years hence,he will be more than 5 / 3 times as old as tom 6 years hence,"# Extracted quantities
future_age_ratio_premise = 5 / 3
future_age_ratio_hypothesis = 5 / 3

def entailment_or_contradiction_or_neutral(future_age_ratio_premise, future_age_ratio_hypothesis):
    # The hypothesis talks about the age ratio in the future, referenced also in the premise
    # Check if the hypothesis contradicts the premise estimate of 'future_age_ratio_premise' by checking if the age ratio from the hypothesis is lower or equal to 'future_age_ratio_premise'
    if future_age_ratio_hypothesis <= future_age_ratio_premise:
        return False
    # An age ratio greater than 5 / 3 is inconsistent with the premise, so the hypothesis contradicts the premise
    return False

print(entailment_or_contradiction_or_neutral(future_age_ratio_premise, future_age_ratio_hypothesis))
"
6689,contradiction,,contradiction,"Bookman purchased 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","Bookman purchased less than 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","bookman purchased 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","bookman purchased less than 60 copies of a new book released recently , 10 of which are hardback and sold for $ 20 each , and rest are paperback and sold for $ 10 each","total_copies_book_premise = 60
hardback_copies_premise = 10
paperback_copies_premise = total_copies_book_premise - hardback_copies_premise

total_copies_book_hypothesis = 60
hardback_copies_hypothesis = 10
paperback_copies_hypothesis = total_copies_book_hypothesis - hardback_copies_hypothesis

def entailment_or_contradiction_or_neutral(total_copies_book_premise, hardback_copies_premise, paperback_copies_premise, total_copies_book_hypothesis, hardback_copies_hypothesis, paperback_copies_hypothesis):
    # the hypothesis refers to the total number of books purchased by Bookman, the number of hardback and paperback books
    # the hypothesis states that the total number of books purchased by Bookman is less than 'total_copies_book_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total number of books purchased in the premise is equal to or more than 'total_copies_book_hypothesis'
    if total_copies_book_premise >= total_copies_book_hypothesis:
        # the hypothesis contradicts the premise
        return False
    else:
        # the hypothesis does not contradict or entail the premise
        return None

print(entailment_or_contradiction_or_neutral(total_copies_book_premise, hardback_copies_premise, paperback_copies_premise, total_copies_book_hypothesis, hardback_copies_hypothesis, paperback_copies_hypothesis))
"
6969,entailment,,entailment,There are 8 stations between Vijayawada and Chennai,There are more than 4 stations between Vijayawada and Chennai,there are 8 stations between vijayawada and chennai,there are more than 4 stations between vijayawada and chennai,"stations_between_premise = 8
min_stations_between_hypothesis = 4

def entailment_or_contradiction_or_neutral(stations_between_premise, min_stations_between_hypothesis):
    # the hypothesis refers to the number of stations between the mentioned cities
    # the hypothesis estimates the number of stations to more than 'min_stations_between_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of stations reported in the premise is lower than or equal to 'min_stations_between_hypothesis'
    if stations_between_premise <= min_stations_between_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stations_between_premise, min_stations_between_hypothesis))
"
7446,entailment,,entailment,"Ratio between Rahul and Deepak is 4 : 3 , After 6 Years Rahul age will be 26 years","Ratio between Rahul and Deepak is more than 1 : 3 , After 6 Years Rahul age will be 26 years","ratio between rahul and deepak is 4 : 3 , after 6 years rahul age will be 26 years","ratio between rahul and deepak is more than 1 : 3 , after 6 years rahul age will be 26 years","rahul_deepak_ratio_premise = 4 / 3
rahul_future_age_premise = 26
min_rahul_deepak_ratio_hypothesis = 1 / 3
rahul_future_age_hypothesis = 26

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_future_age_premise, min_rahul_deepak_ratio_hypothesis, rahul_future_age_hypothesis):
    # the hypothesis talks about Rahul's and Deepak's age ratio and Rahul's future age, both referenced in the premise
    # check if the hypothesis contradicts the premise, by checking if the ratio between Rahul's and Deepak's ages from the hypothesis is lower than the one in the premise
    if min_rahul_deepak_ratio_hypothesis > rahul_deepak_ratio_premise:
        return False
    # check if the hypothesis contradicts the premise, by checking if Rahul's future age from the hypothesis is different than the one in the premise
    elif rahul_future_age_hypothesis != rahul_future_age_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_future_age_premise, min_rahul_deepak_ratio_hypothesis, rahul_future_age_hypothesis))
"
6699,entailment,,entailment,4500 find the share of Tony .,less than 6500 find the share of Tony .,4500 find the share of tony .,less than 6500 find the share of tony .,"tony_share_premise = 4500
max_tony_share_hypothesis = 6500

def entailment_or_contradiction_or_neutral(tony_share_premise, max_tony_share_hypothesis):
    # the hypothesis refers to the share of Tony mentioned in the premise
    # the hypothesis states that the share of Tony is less than 'max_tony_share_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the share of Tony reported in the premise is greater than 'max_tony_share_hypothesis'
    if tony_share_premise > max_tony_share_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tony_share_premise, max_tony_share_hypothesis))
"
5922,entailment,,entailment,"If the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","If the trip home took less than 3 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","if the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","if the trip home took less than 3 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","extra_time_home_premise = 1 / 2
max_extra_time_home_hypothesis = 3 / 2

def entailment_or_contradiction_or_neutral(extra_time_home_premise, max_extra_time_home_hypothesis):
    # the hypothesis refers to the extra time it took Carl to drive home compared to driving to the beach
    # it estimates this extra time to be less than 'max_extra_time_home_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the extra time reported in the premise is greater than 'max_extra_time_home_hypothesis'
    if extra_time_home_premise > max_extra_time_home_hypothesis:
        return False
    # if the extra time from the premise is less than 'max_extra_time_home_hypothesis', then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(extra_time_home_premise, max_extra_time_home_hypothesis))
"
5973,entailment,,entailment,"Jerry travels 8 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","Jerry travels more than 4 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels 8 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","jerry travels more than 4 miles at an average speed of 40 miles per hour , stops for 11 minutes , and then travels another 20 miles at an average speed of 60 miles per hour","travel_distance_premise = 8
min_travel_distance_hypothesis = 4

def entailment_or_contradiction_or_neutral(travel_distance_premise, min_travel_distance_hypothesis):
    # the hypothesis talks about the distance travelled mentioned in the premise
    # the hypothesis estimates the travel distance to more than 'min_travel_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if travel distance reported in the premise is lower than 'min_travel_distance_hypothesis'
    if travel_distance_premise < min_travel_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travel_distance_premise, min_travel_distance_hypothesis))
"
6788,contradiction,,contradiction,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 31 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 31 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 41
james_work_hours_hypothesis = 31

def entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis):
    # the hypothesis refers to the number of hours James worked last week, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the work hours from the hypothesis with the work hours from the premise
    if james_work_hours_hypothesis != james_work_hours_premise:
        return False
    # if the hours worked by James are the same in the premise and hypothesis, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis))
"
6419,contradiction,,contradiction,"In a friendship gang Angel has 3 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Angel has 7 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang angel has 3 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang angel has 7 gang , in how many ways can he invite one or more of the gang to his house ?","gangs_premise = 3
gangs_hypothesis = 7

def entailment_or_contradiction_or_neutral(gangs_premise, gangs_hypothesis):
    # The hypothesis refers to the number of gangs Angel has, mentioned in the premise
    # The hypothesis estimates the number of gangs to be 'gangs_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if number of gangs reported in the premise is not equal to 'gangs_hypothesis'
    if gangs_premise != gangs_hypothesis:
        return False
    # Since the hypothesis contradicts the premise, we don't need to check for entailment or neutrality
    return None

print(entailment_or_contradiction_or_neutral(gangs_premise, gangs_hypothesis))
"
7456,neutral,,neutral,"Maddie has more than 18 apples , if she give 22 to mike , how many does she have left ?","Maddie has 48 apples , if she give 22 to mike , how many does she have left ?","maddie has more than 18 apples , if she give 22 to mike , how many does she have left ?","maddie has 48 apples , if she give 22 to mike , how many does she have left ?","min_apples_maddie_premise = 18
apples_maddie_hypothesis = 48
apples_given_to_mike = 22

def entailment_or_contradiction_or_neutral(min_apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike):
    # the hypothesis talks about the number of apples Maddie has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_apples_maddie_premise', by checking if the number of apples from the hypothesis is lower or equal to 'min_apples_maddie_premise'
    if apples_maddie_hypothesis <= min_apples_maddie_premise:
        return False
    # the hypothesis also refers to the number of apples Maddie gives to Mike, which is the same as in the premise
    # if the number of apples Maddie has according to the hypothesis is greater than the apples she gives to Mike, the hypothesis is consistent with the premise
    # any number of apples greater than 22 is consistent with the premise, so the hypothesis is neutral to the premise
    if apples_maddie_hypothesis > apples_given_to_mike:
        return None
    # if the number of apples Maddie has according to the hypothesis is less than or equal to the apples she gives to Mike, the hypothesis contradicts the premise
    return False

print(entailment_or_contradiction_or_neutral(min_apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike))
"
6839,contradiction,,contradiction,9000 which he and Rick earned at the end of one year,less than 9000 which he and Rick earned at the end of one year,9000 which he and rick earned at the end of one year,less than 9000 which he and rick earned at the end of one year,"earnings_premise = 9000
earnings_hypothesis = 9000

def entailment_or_contradiction_or_neutral(earnings_premise, earnings_hypothesis):
    # the hypothesis refers to the earnings mentioned in the premise
    # the hypothesis estimates the earnings to be less than 'earnings_hypothesis'
    # check if the hypothesis contradicts the premise by checking if earnings reported in the premise are equal or greater than 'earnings_hypothesis'
    if earnings_premise >= earnings_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(earnings_premise, earnings_hypothesis))
"
5957,contradiction,,contradiction,"Last year 26 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","Last year 86 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","last year 26 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","last year 86 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","members_england_premise = 26
members_france_premise = 26
members_italy_premise = 32

members_england_hypothesis = 86
members_france_hypothesis = 26
members_italy_hypothesis = 32

def entailment_or_contradiction_or_neutral(members_england_premise, members_france_premise, members_italy_premise, members_england_hypothesis, members_france_hypothesis, members_italy_hypothesis):
    # the hypothesis contains the number of members who traveled to England, France and Italy
    # check if the hypothesis contradicts the premise by comparing the number of members who traveled to each country in the hypothesis with the corresponding numbers in the premise
    if members_england_hypothesis != members_england_premise or members_france_hypothesis != members_france_premise or members_italy_hypothesis != members_italy_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(members_england_premise, members_france_premise, members_italy_premise, members_england_hypothesis, members_france_hypothesis, members_italy_hypothesis))
"
7433,contradiction,,contradiction,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","If the toy store is stocked with 5 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","if the toy store is stocked with 5 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","ball_types_premise = 3
board_game_types_premise = 6
total_items_premise = ball_types_premise + board_game_types_premise

ball_types_hypothesis = 5
board_game_types_hypothesis = 6
total_items_hypothesis = ball_types_hypothesis + board_game_types_hypothesis

selections_premise = 4
selections_hypothesis = 4

def entailment_or_contradiction_or_neutral(total_items_premise, total_items_hypothesis, selections_premise, selections_hypothesis):
    # the hypothesis refers to the number of different types of toys and selections mentioned in the premise
    # the hypothesis estimates the total items to be 'total_items_hypothesis' and selections to be 'selections_hypothesis'
    # check if the hypothesis contradicts the premise by checking if total items or selections reported in the premise are different than 'total_items_hypothesis' and 'selections_hypothesis'
    if total_items_premise != total_items_hypothesis or selections_premise != selections_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_items_premise, total_items_hypothesis, selections_premise, selections_hypothesis))
"
7522,neutral,,neutral,John has more than 5 friends who want to ride in his new car that can accommodate only 5 people at a time ( John plus 4 passengers ),John has 6 friends who want to ride in his new car that can accommodate only 5 people at a time ( John plus 4 passengers ),john has more than 5 friends who want to ride in his new car that can accommodate only 5 people at a time ( john plus 4 passengers ),john has 6 friends who want to ride in his new car that can accommodate only 5 people at a time ( john plus 4 passengers ),"min_friends_premise = 5
friends_hypothesis = 6

def entailment_or_contradiction_or_neutral(min_friends_premise, friends_hypothesis):
    # the hypothesis talks about the number of John's friends, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_friends_premise', by checking if the number of friends from the hypothesis is lower or equal to 'min_friends_premise'
    if friends_hypothesis <= min_friends_premise:
        return False
    # any number of friends greater than 5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_friends_premise, friends_hypothesis))
"
6979,neutral,,neutral,Each of three charities in Novel Grove Estates has more than 4 persons serving on its board of directors,Each of three charities in Novel Grove Estates has 8 persons serving on its board of directors,each of three charities in novel grove estates has more than 4 persons serving on its board of directors,each of three charities in novel grove estates has 8 persons serving on its board of directors,"min_persons_board_premise = 4
persons_board_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_persons_board_premise, persons_board_hypothesis):
    # the hypothesis talks about the number of persons serving on the board of charities, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_persons_board_premise', by checking if the number of persons from the hypothesis is lower or equal to 'min_persons_board_premise'
    if persons_board_hypothesis <= min_persons_board_premise:
        return False
    # any number of persons serving on the board of charities greater than 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_persons_board_premise, persons_board_hypothesis))
"
6868,neutral,,neutral,"In how many ways can you seat more than 2 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","In how many ways can you seat 5 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat more than 2 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat 5 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","min_people_bench_premise = 2
people_bench_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_people_bench_premise, people_bench_hypothesis):
    # the hypothesis refers to the number of people that can be seated on a bench, mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_people_bench_premise', by checking if the number of people from the hypothesis is lower or equal to 'min_people_bench_premise'
    if people_bench_hypothesis <= min_people_bench_premise:
        return False
    # any number of people greater than 2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_people_bench_premise, people_bench_hypothesis))
"
7407,entailment,,entailment,Sam wrote 7 letters on Tuesday and 3 letters on Wednesday,Sam wrote more than 4 letters on Tuesday and 3 letters on Wednesday,sam wrote 7 letters on tuesday and 3 letters on wednesday,sam wrote more than 4 letters on tuesday and 3 letters on wednesday,"letters_tuesday_premise = 7
letters_wednesday_premise = 3
min_letters_tuesday_hypothesis = 4
letters_wednesday_hypothesis = 3

def entailment_or_contradiction_or_neutral(letters_tuesday_premise, letters_wednesday_premise, min_letters_tuesday_hypothesis, letters_wednesday_hypothesis):
    # the hypothesis refers to the number of letters Sam wrote on Tuesday and Wednesday mentioned in the premise
    # the hypothesis estimates the number of letters written on Tuesday to be more than 'min_letters_tuesday_hypothesis' and on Wednesday to be 'letters_wednesday_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of letters written on Tuesday in the premise is less than or equal to 'min_letters_tuesday_hypothesis' or if the number of letters written on Wednesday in the premise is not equal to 'letters_wednesday_hypothesis'
    if letters_tuesday_premise <= min_letters_tuesday_hypothesis or letters_wednesday_premise != letters_wednesday_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(letters_tuesday_premise, letters_wednesday_premise, min_letters_tuesday_hypothesis, letters_wednesday_hypothesis))
"
5990,contradiction,,contradiction,Dan ’ s car gets 32 miles per gallon,Dan ’ s car gets 82 miles per gallon,dan ’ s car gets 32 miles per gallon,dan ’ s car gets 82 miles per gallon,"miles_per_gallon_premise = 32
miles_per_gallon_hypothesis = 82

def entailment_or_contradiction_or_neutral(miles_per_gallon_premise, miles_per_gallon_hypothesis):
    # the hypothesis talks about the number of miles per gallon Dan's car gets, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the miles per gallon from the hypothesis is not equal to miles per gallon from the premise
    if miles_per_gallon_hypothesis != miles_per_gallon_premise:
        return False
    # any equal number of miles per gallon is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(miles_per_gallon_premise, miles_per_gallon_hypothesis))
"
2125,neutral,,neutral,Carl drove from his home to the beach at an average speed of more than 40 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,Carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of more than 40 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,"min_speed_to_beach_premise = 40
speed_to_beach_hypothesis = 80
speed_from_beach_premise = speed_from_beach_hypothesis = 70

def entailment_or_contradiction_or_neutral(min_speed_to_beach_premise, speed_to_beach_hypothesis, speed_from_beach_premise, speed_from_beach_hypothesis):
    # the hypothesis specifies the speed of Carl's trip to and from the beach, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speed to the beach in the hypothesis is less than or equal to the 'min_speed_to_beach_premise', or if the speed from the beach in the hypothesis is not equal to 'speed_from_beach_premise'
    if speed_to_beach_hypothesis <= min_speed_to_beach_premise or speed_from_beach_hypothesis != speed_from_beach_premise:
        return False
    # the speeds in the hypothesis are consistent with the premise, but do not specify the exact same speeds, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_to_beach_premise, speed_to_beach_hypothesis, speed_from_beach_premise, speed_from_beach_hypothesis))
"
7491,entailment,,entailment,"If there are 4 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","If there are more than 1 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are 4 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are more than 1 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","initial_peanuts_premise = 4
additional_peanuts_premise = 8
min_initial_peanuts_hypothesis = 1
additional_peanuts_hypothesis = 8

def entailment_or_contradiction_or_neutral(initial_peanuts_premise, additional_peanuts_premise, min_initial_peanuts_hypothesis, additional_peanuts_hypothesis):
    # the hypothesis talks about the number of peanuts in a box, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the initial number of peanuts from the hypothesis is higher than the initial number of peanuts in the premise
    if min_initial_peanuts_hypothesis > initial_peanuts_premise:
        return False
    # check if the added peanuts in the hypothesis is less than in the premise, which would contradict the premise
    elif additional_peanuts_hypothesis < additional_peanuts_premise:
        return False
    # if none of the above conditions are met, the hypothesis entails the premise as all quantities and details in the hypothesis are in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(initial_peanuts_premise, additional_peanuts_premise, min_initial_peanuts_hypothesis, additional_peanuts_hypothesis))
"
6390,entailment,,entailment,"Sacha runs at a constant speed of 6 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of more than 1 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 6 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 1 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha_speed_premise = 6
bruno_speed_premise = 5
min_sacha_speed_hypothesis = 1
bruno_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis):
    # the hypothesis talks about the constant speed of Sacha and Bruno, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Sacha's speed in the premise is lower than 'min_sacha_speed_hypothesis' or Bruno's speed in the premise is not equal to 'bruno_speed_hypothesis'
    if sacha_speed_premise < min_sacha_speed_hypothesis or bruno_speed_premise != bruno_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis))
"
2548,neutral,,neutral,Murali travelled from city A to city B at a speed of more than 30 kmph and from city B to city C at 60 kmph,Murali travelled from city A to city B at a speed of 40 kmph and from city B to city C at 60 kmph,murali travelled from city a to city b at a speed of more than 30 kmph and from city b to city c at 60 kmph,murali travelled from city a to city b at a speed of 40 kmph and from city b to city c at 60 kmph,"min_speed_A_to_B_premise = 30
speed_A_to_B_hypothesis = 40
speed_B_to_C_premise = 60
speed_B_to_C_hypothesis = 60

def entailment_or_contradiction_or_neutral(min_speed_A_to_B_premise, speed_A_to_B_hypothesis, speed_B_to_C_premise, speed_B_to_C_hypothesis):
    # the hypothesis refers to the speed of travel from city A to B and from B to C, as mentioned in the premise
    # first, check if the hypothesis contradicts the premise by checking if the speed from A to B in the hypothesis is less than or equal to the minimum speed from A to B in the premise
    if speed_A_to_B_hypothesis <= min_speed_A_to_B_premise:
        return False
    # next, check if the speed from B to C in the hypothesis contradicts the speed from B to C in the premise
    elif speed_B_to_C_hypothesis != speed_B_to_C_premise:
        return False
    # if there are no contradictions, the hypothesis is consistent with the premise, so it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_speed_A_to_B_premise, speed_A_to_B_hypothesis, speed_B_to_C_premise, speed_B_to_C_hypothesis))
"
7188,entailment,,entailment,A train leaves Jammu for Chennai exactly at 12 noon everyday of the week,A train leaves Jammu for Chennai exactly at less than 42 noon everyday of the week,a train leaves jammu for chennai exactly at 12 noon everyday of the week,a train leaves jammu for chennai exactly at less than 42 noon everyday of the week,"departure_time_premise = 12
max_departure_time_hypothesis = 42

def entailment_or_contradiction_or_neutral(departure_time_premise, max_departure_time_hypothesis):
    # the hypothesis speaks about the departure time of the train mentioned in the premise
    # the hypothesis estimates the departure time to be less than 'max_departure_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the departure time reported in the premise is greater than 'max_departure_time_hypothesis'
    if departure_time_premise > max_departure_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(departure_time_premise, max_departure_time_hypothesis))
"
7219,neutral,,neutral,Lena ’ s grade was in the more than 30 th percentile out of 120 grades in her class,Lena ’ s grade was in the 80 th percentile out of 120 grades in her class,lena ’ s grade was in the more than 30 th percentile out of 120 grades in her class,lena ’ s grade was in the 80 th percentile out of 120 grades in her class,"min_percentile_premise = 30
percentile_hypothesis = 80

def entailment_or_contradiction_or_neutral(min_percentile_premise, percentile_hypothesis):
    # the hypothesis talks about Lena's grade percentile, the same as the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_percentile_premise', by checking if the percentile from the hypothesis is lower or equal to 'min_percentile_premise'
    if percentile_hypothesis <= min_percentile_premise:
        return False
    # any percentile greater than 30 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_percentile_premise, percentile_hypothesis))
"
7359,entailment,,entailment,"In John ' s School , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","In John ' s School , there are more than 20 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are more than 20 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","boys_14_premise = 80
boys_15_premise = 70
boys_13_premise = 50
boys_12_premise = 60

min_boys_14_hypothesis = 20
boys_15_hypothesis = 70
boys_13_hypothesis = 50
boys_12_hypothesis = 60

def entailment_or_contradiction_or_neutral(boys_14_premise, boys_15_premise, boys_13_premise, boys_12_premise, min_boys_14_hypothesis, boys_15_hypothesis, boys_13_hypothesis, boys_12_hypothesis):
    # the hypothesis talks about the boys of different ages in John's school, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of boys of each age from the hypothesis is greater than the number of boys of the same age from the premise or if the number of 14 years old boys is less than 'min_boys_14_hypothesis'
    if boys_14_premise < min_boys_14_hypothesis or boys_15_hypothesis > boys_15_premise or boys_13_hypothesis > boys_13_premise or boys_12_hypothesis > boys_12_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(boys_14_premise, boys_15_premise, boys_13_premise, boys_12_premise, min_boys_14_hypothesis, boys_15_hypothesis, boys_13_hypothesis, boys_12_hypothesis))
"
6363,entailment,,entailment,After Sally left mike had 136 watermelons,After Sally left mike had less than 536 watermelons,after sally left mike had 136 watermelons,after sally left mike had less than 536 watermelons,"watermelons_mike_premise = 136
max_watermelons_mike_hypothesis = 536

def entailment_or_contradiction_or_neutral(watermelons_mike_premise, max_watermelons_mike_hypothesis):
    # the hypothesis refers to the number of watermelons Mike has after Sally left, mentioned in the premise
    # the hypothesis estimates the number of watermelons to be less than 'max_watermelons_mike_hypothesis'
    # check if the hypothesis contradicts the premise by checking if watermelons reported in the premise are greater than 'max_watermelons_mike_hypothesis'
    if watermelons_mike_premise > max_watermelons_mike_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(watermelons_mike_premise, max_watermelons_mike_hypothesis))
"
7590,entailment,,entailment,"While driving from City A to City B , Cara drives at a constant speed of 30 miles per hour","While driving from City A to City B , Cara drives at a constant speed of less than 50 miles per hour","while driving from city a to city b , cara drives at a constant speed of 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of less than 50 miles per hour","speed_drive_premise = 30
max_speed_drive_hypothesis = 50

def entailment_or_contradiction_or_neutral(speed_drive_premise, max_speed_drive_hypothesis):
    # the hypothesis refers to the speed of driving mentioned in the premise
    # the hypothesis estimates the driving speed to be less than 'max_speed_drive_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the speed in the premise is greater than 'max_speed_drive_hypothesis'
    if speed_drive_premise > max_speed_drive_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_drive_premise, max_speed_drive_hypothesis))
"
5916,entailment,,entailment,"If Jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","If Jerry wants to raise his average by less than 7 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by less than 7 points , what score must he earn on the fourth test ?","desired_avg_increase_premise = 2
max_desired_avg_increase_hypothesis = 7

def entailment_or_contradiction_or_neutral(desired_avg_increase_premise, max_desired_avg_increase_hypothesis):
    # the hypothesis refers to the number of points to be raised for Jerry's average mentioned in the premise
    # the hypothesis claims that the increase should be less than 'max_desired_avg_increase_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the desired average increase in the premise is greater than 'max_desired_avg_increase_hypothesis'
    if desired_avg_increase_premise > max_desired_avg_increase_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(desired_avg_increase_premise, max_desired_avg_increase_hypothesis))
"
7481,contradiction,,contradiction,"Each week , Harry is paid x dollars per hour for the first 24 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 54 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 24 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 54 hours and 1.5 x dollars for each additional hour worked that week","# These are the paid hours and overtime according to the premise and hypothesis
paid_hours_premise = 24
overtime_premise = 1.5
paid_hours_hypothesis = 54
overtime_hypothesis = 1.5

def entailment_or_contradiction_or_neutral(paid_hours_premise, overtime_premise, paid_hours_hypothesis, overtime_hypothesis):
    # the hypothesis contradicts the premise if the paid hours or the overtime are different
    if paid_hours_premise != paid_hours_hypothesis or overtime_premise != overtime_hypothesis:
        return False
    # if the paid hours and the overtime are the same, the hypothesis entails the premise
    elif paid_hours_premise == paid_hours_hypothesis and overtime_premise == overtime_hypothesis:
        return True
    # if the paid hours and overtime are neither the same nor different, the hypothesis is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(paid_hours_premise, overtime_premise, paid_hours_hypothesis, overtime_hypothesis))
"
5947,neutral,,neutral,If DON is coded as less than 58 and MASS is coded as 29 Then KING is coded as,If DON is coded as 18 and MASS is coded as 29 Then KING is coded as,if don is coded as less than 58 and mass is coded as 29 then king is coded as,if don is coded as 18 and mass is coded as 29 then king is coded as,"don_code_premise = 58
don_code_hypothesis = 18
mass_code_premise = 29
mass_code_hypothesis = 29

def entailment_or_contradiction_or_neutral(don_code_premise, don_code_hypothesis, mass_code_premise, mass_code_hypothesis):
    # the hypothesis talks about the codes for DON and MASS, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'don_code_premise', by checking if the code for DON from the hypothesis is greater than 'don_code_premise'
    if don_code_hypothesis > don_code_premise:
        return False
    # check if the code for MASS from the hypothesis contradicts the code from the premise
    if mass_code_hypothesis != mass_code_premise:
        return False
    # if no contradictions have been found, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(don_code_premise, don_code_hypothesis, mass_code_premise, mass_code_hypothesis))
"
6050,contradiction,,contradiction,I want to give 95 $ to John,I want to give 55 $ to John,i want to give 95 $ to john,i want to give 55 $ to john,"money_to_john_premise = 95
money_to_john_hypothesis = 55

def entailment_or_contradiction_or_neutral(money_to_john_premise, money_to_john_hypothesis):
    # the hypothesis refers to the amount of money given to John as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the money amount in the hypothesis is different from the premise
    if money_to_john_premise != money_to_john_hypothesis:
        return False
    # if the amounts are the same, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(money_to_john_premise, money_to_john_hypothesis))
"
6281,contradiction,,contradiction,"Rajat , Vikas and Abhishek are submitting questions in the ratio 7 : 3 : 2","Rajat , Vikas and Abhishek are submitting questions in the ratio 5 : 3 : 2","rajat , vikas and abhishek are submitting questions in the ratio 7 : 3 : 2","rajat , vikas and abhishek are submitting questions in the ratio 5 : 3 : 2","# Extracting the individual quantities from the premise and hypothesis
rajat_vikas_abhishek_ratio_premise = [7, 3, 2]
rajat_vikas_abhishek_ratio_hypothesis = [5, 3, 2]

def entailment_or_contradiction_or_neutral(rajat_vikas_abhishek_ratio_premise, rajat_vikas_abhishek_ratio_hypothesis):
    # The hypothesis talks about the ratio of questions submitted by Rajat, Vikas and Abhishek
    # Check if the hypothesis contradicts the premise by comparing the ratios.
    # If the ratio from the hypothesis differs from the premise, the hypothesis contradicts the premise
    if rajat_vikas_abhishek_ratio_premise != rajat_vikas_abhishek_ratio_hypothesis:
        return False
    # If the ratio from the hypothesis is same as the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(rajat_vikas_abhishek_ratio_premise, rajat_vikas_abhishek_ratio_hypothesis))
"
6110,contradiction,,contradiction,Level - 1 college graduates account for 15 % of Amtek ' s sales staff,Level - more than 1 college graduates account for 15 % of Amtek ' s sales staff,level - 1 college graduates account for 15 % of amtek ' s sales staff,level - more than 1 college graduates account for 15 % of amtek ' s sales staff,"level_1_graduates_premise = 15
level_more_than_1_graduates_hypothesis = 15

def entailment_or_contradiction_or_neutral(level_1_graduates_premise, level_more_than_1_graduates_hypothesis):
    # the hypothesis talks about the percentage of Level more than 1 college graduates in Amtek's sales staff
    # the premise talks about the percentage of Level 1 college graduates in Amtek's sales staff
    # check if the hypothesis contradicts the premise estimate of 15% level 1 graduates, by checking if the percentage of Level more than 1 graduates is equal to level 1 graduates
    if level_more_than_1_graduates_hypothesis == level_1_graduates_premise:
        return False
    # the hypothesis is not entailed by the premise
    return None

print(entailment_or_contradiction_or_neutral(level_1_graduates_premise, level_more_than_1_graduates_hypothesis))
"
7472,contradiction,,contradiction,"Listco employs 72 level - 1 employees , 30 of whom are college graduates","Listco employs 62 level - 1 employees , 30 of whom are college graduates","listco employs 72 level - 1 employees , 30 of whom are college graduates","listco employs 62 level - 1 employees , 30 of whom are college graduates","level_1_employees_premise = 72
level_1_employees_hypothesis = 62

def entailment_or_contradiction_or_neutral(level_1_employees_premise, level_1_employees_hypothesis):
    # The premise and hypothesis both provide a number for level-1 employees at Listco
    # If the number of employees in the hypothesis is less than the number in the premise, it contradicts the premise
    if level_1_employees_hypothesis < level_1_employees_premise:
        return False
    # If the number of employees in the hypothesis is the same or more than the number in the premise, it entails the premise
    elif level_1_employees_hypothesis >= level_1_employees_premise:
        return True
    # If none of the above conditions are met, the hypothesis is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(level_1_employees_premise, level_1_employees_hypothesis))
"
6238,neutral,,neutral,John has less than 40 pairs of matched socks,John has 10 pairs of matched socks,john has less than 40 pairs of matched socks,john has 10 pairs of matched socks,"max_socks_premise = 40
socks_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_socks_premise, socks_hypothesis):
    # the hypothesis talks about the number of John's socks, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_socks_premise', by checking if the number of socks from the hypothesis is greater than 'max_socks_premise'
    if socks_hypothesis > max_socks_premise:
        return False
    # any number of socks less than 40 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_socks_premise, socks_hypothesis))
"
7263,entailment,,entailment,There are 4 more women than men on Centerville ' s board of education,There are less than 6 more women than men on Centerville ' s board of education,there are 4 more women than men on centerville ' s board of education,there are less than 6 more women than men on centerville ' s board of education,"more_women_than_men_premise = 4
max_more_women_than_men_hypothesis = 6

def entailment_or_contradiction_or_neutral(more_women_than_men_premise, max_more_women_than_men_hypothesis):
    # the hypothesis refers to the gender distribution on the board of education mentioned in the premise
    # the hypothesis estimates the number of women more than men to be less than 'max_more_women_than_men_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of women more than men in the premise is greater than 'max_more_women_than_men_hypothesis'
    if more_women_than_men_premise > max_more_women_than_men_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(more_women_than_men_premise, max_more_women_than_men_hypothesis))
"
7290,entailment,,entailment,600 and Greg ' s share is Rs,more than 500 and Greg ' s share is Rs,600 and greg ' s share is rs,more than 500 and greg ' s share is rs,"greg_share_premise = 600
min_greg_share_hypothesis = 500

def entailment_or_contradiction_or_neutral(greg_share_premise, min_greg_share_hypothesis):
    # the hypothesis refers to Greg's share mentioned in the premise
    # the hypothesis estimates the share to more or equal to 'min_greg_share_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Greg's share reported in the premise is lower than 'min_greg_share_hypothesis'
    if greg_share_premise < min_greg_share_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(greg_share_premise, min_greg_share_hypothesis))
"
7041,entailment,,entailment,"Susan weighs 10 pounds more than Anna does , and together they weigh a total of 110 pounds","Susan weighs less than 40 pounds more than Anna does , and together they weigh a total of 110 pounds","susan weighs 10 pounds more than anna does , and together they weigh a total of 110 pounds","susan weighs less than 40 pounds more than anna does , and together they weigh a total of 110 pounds","weight_difference_premise = 10
total_weight_premise = 110
max_weight_difference_hypothesis = 40
total_weight_hypothesis = 110

def entailment_or_contradiction_or_neutral(weight_difference_premise, total_weight_premise, max_weight_difference_hypothesis, total_weight_hypothesis):
    # the hypothesis refers to the weight difference between Susan and Anna, and their total weight
    # check if the hypothesis contradicts the premise by checking if the total weight mentioned in the hypothesis is not equal to the total weight from the premise
    if total_weight_hypothesis != total_weight_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the weight difference mentioned in the hypothesis is less than the weight difference from the premise
    if max_weight_difference_hypothesis < weight_difference_premise:
        return False
    # since the total weight and the weight difference from the hypothesis do not contradict the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(weight_difference_premise, total_weight_premise, max_weight_difference_hypothesis, total_weight_hypothesis))
"
7150,neutral,,neutral,"At a meeting of the more than 4 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","At a meeting of the 5 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","at a meeting of the more than 4 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","at a meeting of the 5 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","min_joint_chiefs_premise = 4
joint_chiefs_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_joint_chiefs_premise, joint_chiefs_hypothesis):
    # the hypothesis talks about the number of Joint Chiefs of Staff at a meeting, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_joint_chiefs_premise', by checking if the number of chiefs from the hypothesis is lower or equal to 'min_joint_chiefs_premise'
    if joint_chiefs_hypothesis <= min_joint_chiefs_premise:
        return False
    # any number of chiefs greater than 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_joint_chiefs_premise, joint_chiefs_hypothesis))
"
6701,contradiction,,contradiction,4500 find the share of Tony .,7500 find the share of Tony .,4500 find the share of tony .,7500 find the share of tony .,"tony_share_premise = 4500
tony_share_hypothesis = 7500

def entailment_or_contradiction_or_neutral(tony_share_premise, tony_share_hypothesis):
    # the hypothesis talks about the share of Tony, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the share of Tony in the hypothesis is not equal to the share of Tony in the premise
    if tony_share_premise != tony_share_hypothesis:
        return False
    # if the shares are equal, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(tony_share_premise, tony_share_hypothesis))
"
6523,neutral,,neutral,"Reeya obtained more than 45 , 67 , 76 , 82 and 85 out of 100 in different subjects , What will be the average","Reeya obtained 55 , 67 , 76 , 82 and 85 out of 100 in different subjects , What will be the average","reeya obtained more than 45 , 67 , 76 , 82 and 85 out of 100 in different subjects , what will be the average","reeya obtained 55 , 67 , 76 , 82 and 85 out of 100 in different subjects , what will be the average","min_scores_premise = [45, 67, 76, 82, 85]
scores_hypothesis = [55, 67, 76, 82, 85]

def entailment_or_contradiction_or_neutral(min_scores_premise, scores_hypothesis):
    # the hypothesis talks about the scores obtained by Reeya, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than the scores in 'min_scores_premise', by checking if any score from the hypothesis is lower than the respective score in the premise
    for premise_score, hypothesis_score in zip(min_scores_premise, scores_hypothesis):
        if hypothesis_score < premise_score:
            return False
    # any set of scores consistent with the premise results in a neutral hypothesis
    return None

print(entailment_or_contradiction_or_neutral(min_scores_premise, scores_hypothesis))
"
6463,neutral,,neutral,"At the faculty of Aerospace Engineering , more than 102 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 302 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 102 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 302 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","min_students_random_processing_premise = 102
students_scramjet_premise = 232
students_both_premise = 112

students_random_processing_hypothesis = 302
students_scramjet_hypothesis = 232
students_both_hypothesis = 112

def entailment_or_contradiction_or_neutral(min_students_random_processing_premise, students_scramjet_premise, students_both_premise, students_random_processing_hypothesis, students_scramjet_hypothesis, students_both_hypothesis):
    # the hypothesis talks about the number of students studying different subjects at the faculty of Aerospace Engineering, referenced also in the premise
    # check if the hypothesis contradicts the premise estimates by checking if the number of students from the hypothesis is lower than the minimum number of students from the premise or if the number of students studying both topics differs in the premise and the hypothesis
    if students_random_processing_hypothesis < min_students_random_processing_premise or students_scramjet_hypothesis != students_scramjet_premise or students_both_hypothesis != students_both_premise:
        return False
    # the hypothesis suggests a number of students studying random processing methods that is greater than the minimum number suggested by the premise; hence, it neither contradicts nor entails the premise.
    return None

print(entailment_or_contradiction_or_neutral(min_students_random_processing_premise, students_scramjet_premise, students_both_premise, students_random_processing_hypothesis, students_scramjet_hypothesis, students_both_hypothesis))
"
5909,contradiction,,contradiction,"Shekar scored 76 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","Shekar scored more than 76 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","shekar scored 76 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","shekar scored more than 76 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","math_marks_premise = 76
science_marks_premise = 65
social_studies_marks_premise = 82
english_marks_premise = 67
biology_marks_premise = 75

math_marks_hypothesis = 76
science_marks_hypothesis = 65
social_studies_marks_hypothesis = 82
english_marks_hypothesis = 67
biology_marks_hypothesis = 75

def entailment_or_contradiction_or_neutral(math_marks_premise, science_marks_premise, social_studies_marks_premise,
                                           english_marks_premise, biology_marks_premise, 
                                           math_marks_hypothesis, science_marks_hypothesis,
                                           social_studies_marks_hypothesis, english_marks_hypothesis,
                                           biology_marks_hypothesis):
    # the hypothesis says that Shekar scored more than the marks given in the premise for each subject
    # check if the hypothesis contradicts the premise by checking if Shekar's marks from the premise are higher or equal to the marks from the hypothesis for each subject
    if math_marks_premise >= math_marks_hypothesis or science_marks_premise >= science_marks_hypothesis or \
    social_studies_marks_premise >= social_studies_marks_hypothesis or english_marks_premise >= english_marks_hypothesis or \
    biology_marks_premise >= biology_marks_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, then it is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(math_marks_premise, science_marks_premise, social_studies_marks_premise,
                                             english_marks_premise, biology_marks_premise, 
                                             math_marks_hypothesis, science_marks_hypothesis,
                                             social_studies_marks_hypothesis, english_marks_hypothesis,
                                             biology_marks_hypothesis))
"
6764,contradiction,,contradiction,Patrick has a lock that contains a 3 digit password,Patrick has a lock that contains a 7 digit password,patrick has a lock that contains a 3 digit password,patrick has a lock that contains a 7 digit password,"password_digits_premise = 3
password_digits_hypothesis = 7

def entailment_or_contradiction_or_neutral(password_digits_premise, password_digits_hypothesis):
    # both the premise and hypothesis refer to Patrick's lock password length
    # check if the hypothesis contradicts the premise by comparing the number of password digits from the hypothesis with the number of digits from the premise
    if password_digits_hypothesis != password_digits_premise:
        return False
    # if the number of digits are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(password_digits_premise, password_digits_hypothesis))
"
3246,entailment,,entailment,90 students represent x percent of the boys at Jones Elementary School,more than 50 students represent x percent of the boys at Jones Elementary School,90 students represent x percent of the boys at jones elementary school,more than 50 students represent x percent of the boys at jones elementary school,"students_representing_X_percent_premise = 90
min_students_representing_X_percent_hypothesis = 50

def entailment_or_contradiction_or_neutral(students_representing_X_percent_premise, min_students_representing_X_percent_hypothesis):
    # the hypothesis refers to the number of students that represent X percent of boys at Jones Elementary School
    # the hypothesis estimates the number of students to be more than 'min_students_representing_X_percent_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of students reported in the premise are lower than 'min_students_representing_X_percent_hypothesis'
    if students_representing_X_percent_premise < min_students_representing_X_percent_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(students_representing_X_percent_premise, min_students_representing_X_percent_hypothesis))
"
6610,neutral,,neutral,Molly ' s age in less than 88 years will be six times her age seven years ago,Molly ' s age in 18 years will be six times her age seven years ago,molly ' s age in less than 88 years will be six times her age seven years ago,molly ' s age in 18 years will be six times her age seven years ago,"future_age_premise = 88
future_age_hypothesis = 18
past_age_multiplier = 6
past_age_years = 7

def entailment_or_contradiction_or_neutral(future_age_premise, future_age_hypothesis, past_age_multiplier, past_age_years):
    # the hypothesis refers to Molly's age in a future year, which is also mentioned in the premise
    # the hypothesis estimates Molly's age in a future year will be six times her age seven years ago
    # check if the hypothesis contradicts the premise by checking if the future age from the hypothesis is greater than or equal to the future age from the premise
    if future_age_hypothesis >= future_age_premise:
        return False
    # if the hypothesis future age is less than the premise future age, it is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(future_age_premise, future_age_hypothesis, past_age_multiplier, past_age_years))
"
6572,contradiction,,contradiction,In a class of boys and girls Vikas ' s rank is 9 th and Tanvi ' s rank is 17 th,In a class of boys and girls Vikas ' s rank is more than 9 th and Tanvi ' s rank is 17 th,in a class of boys and girls vikas ' s rank is 9 th and tanvi ' s rank is 17 th,in a class of boys and girls vikas ' s rank is more than 9 th and tanvi ' s rank is 17 th,"vikas_rank_premise = 9
tanvi_rank_premise = 17
vikas_min_rank_hypothesis = 10
tanvi_rank_hypothesis = 17

def entailment_or_contradiction_or_neutral(vikas_rank_premise, tanvi_rank_premise, vikas_min_rank_hypothesis, tanvi_rank_hypothesis):
    # the hypothesis refers to the ranks of Vikas and Tanvi mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Vikas's rank reported in the premise is lower than 'vikas_min_rank_hypothesis' and if Tanvi's rank in the premise is not the same as in the hypothesis
    if vikas_rank_premise < vikas_min_rank_hypothesis or tanvi_rank_premise != tanvi_rank_hypothesis:
        return False
    else:
        # since the ranks mentioned in the hypothesis are greater or equal to those mentioned in the premise, the hypothesis entails the premise
        return True

print(entailment_or_contradiction_or_neutral(vikas_rank_premise, tanvi_rank_premise, vikas_min_rank_hypothesis, tanvi_rank_hypothesis))
"
5958,entailment,,entailment,"Last year 6 members of the club traveled to both England and France , no members traveled to both England and Italy , and 11 members traveled to both France and Italy","Last year less than 8 members of the club traveled to both England and France , no members traveled to both England and Italy , and 11 members traveled to both France and Italy","last year 6 members of the club traveled to both england and france , no members traveled to both england and italy , and 11 members traveled to both france and italy","last year less than 8 members of the club traveled to both england and france , no members traveled to both england and italy , and 11 members traveled to both france and italy","england_france_premise = 6
england_italy_premise = 0
france_italy_premise = 11

max_england_france_hypothesis = 8
england_italy_hypothesis = 0
france_italy_hypothesis = 11

def entailment_or_contradiction_or_neutral(england_france_premise, england_italy_premise, france_italy_premise, max_england_france_hypothesis, england_italy_hypothesis, france_italy_hypothesis):
    # The hypothesis refers to the members traveling to different countries mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of travelers reported in the premise is greater than 'max_england_france_hypothesis'
    if england_france_premise > max_england_france_hypothesis:
        return False
    # Check if the hypothesis contradicts the premise by checking if the number of travelers reported in the premise is not equal to 'england_italy_hypothesis' or 'france_italy_hypothesis'
    elif england_italy_premise != england_italy_hypothesis or france_italy_premise != france_italy_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(england_france_premise, england_italy_premise, france_italy_premise, max_england_france_hypothesis, england_italy_hypothesis, france_italy_hypothesis))
"
7216,neutral,,neutral,"A truck uses more than 20 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","A truck uses 60 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","a truck uses more than 20 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","a truck uses 60 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","min_fuel_tank_premise = 20
fuel_tank_hypothesis = 60

def entailment_or_contradiction_or_neutral(min_fuel_tank_premise, fuel_tank_hypothesis):
    # the hypothesis talks about the fuel tank capacity of a truck that is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the fuel tank capacity from the hypothesis is less than or equal to 'min_fuel_tank_premise'
    if fuel_tank_hypothesis <= min_fuel_tank_premise:
        return False
    # any fuel tank capacity greater than 'min_fuel_tank_premise' gallons is consistent with the premise, 
    # so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_fuel_tank_premise, fuel_tank_hypothesis))
"
7187,contradiction,,contradiction,"Catherina works 5 hours per day on Monday , Wednesday and Friday , and 10 hours per day on Tuesday and Thursday","Catherina works 6 hours per day on Monday , Wednesday and Friday , and 10 hours per day on Tuesday and Thursday","catherina works 5 hours per day on monday , wednesday and friday , and 10 hours per day on tuesday and thursday","catherina works 6 hours per day on monday , wednesday and friday , and 10 hours per day on tuesday and thursday","work_hours_per_day_mwf_premise = 5
work_hours_per_day_tt_premise = 10
work_hours_per_day_mwf_hypothesis = 6
work_hours_per_day_tt_hypothesis = 10

def entailment_or_contradiction_or_neutral(work_hours_per_day_mwf_premise, work_hours_per_day_tt_premise, work_hours_per_day_mwf_hypothesis, work_hours_per_day_tt_hypothesis):
    # the hypothesis provides a different estimate for the hours worked on Monday, Wednesday, and Friday compared to the premise
    # check if the hypothesis contradicts the premise by checking if the work hours on Monday, Wednesday, and Friday in the premise are not equal to the work hours in the hypothesis
    if work_hours_per_day_mwf_premise != work_hours_per_day_mwf_hypothesis:
        return False
    # the hypothesis provides the same estimate for the hours worked on Tuesday and Thursday as the premise
    # check if the hypothesis contradicts the premise by checking if the work hours on Tuesday and Thursday in the premise are not equal to the work hours in the hypothesis
    if work_hours_per_day_tt_premise != work_hours_per_day_tt_hypothesis:
        return False
    # if none of the above conditions are met, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(work_hours_per_day_mwf_premise, work_hours_per_day_tt_premise, work_hours_per_day_mwf_hypothesis, work_hours_per_day_tt_hypothesis))
"
7356,entailment,,entailment,"The total of the ages of Amar , Akbar and Anthony is 45 years","The total of the ages of Amar , Akbar and Anthony is more than 35 years","the total of the ages of amar , akbar and anthony is 45 years","the total of the ages of amar , akbar and anthony is more than 35 years","total_age_premise = 45
min_total_age_hypothesis = 35

def entailment_or_contradiction_or_neutral(total_age_premise, min_total_age_hypothesis):
    # the hypothesis refers to the total age of Amar, Akbar and Anthony mentioned in the premise
    # the hypothesis estimates the total age to be more than 'min_total_age_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total age reported in the premise is lower than 'min_total_age_hypothesis'
    if total_age_premise < min_total_age_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_age_premise, min_total_age_hypothesis))
"
7307,contradiction,,contradiction,"Mary works 9 hours per day on Monday , Wednesday and Friday , and 5 hours per day on Tuesday and Thursday","Mary works 5 hours per day on Monday , Wednesday and Friday , and 5 hours per day on Tuesday and Thursday","mary works 9 hours per day on monday , wednesday and friday , and 5 hours per day on tuesday and thursday","mary works 5 hours per day on monday , wednesday and friday , and 5 hours per day on tuesday and thursday","mon_wed_fri_work_hours_premise = 9
tue_thurs_work_hours_premise = 5
mon_wed_fri_work_hours_hypothesis = 5
tue_thurs_work_hours_hypothesis = 5

def entailment_or_contradiction_or_neutral(mon_wed_fri_work_hours_premise, tue_thurs_work_hours_premise, mon_wed_fri_work_hours_hypothesis, tue_thurs_work_hours_hypothesis):
    # the hypothesis refers to Mary's work hours on Monday, Wednesday, Friday and Tuesday, Thursday
    # contradict the premise by checking if the work hours reported in the hypothesis are higher than the premise or if the work hours are lower
    if mon_wed_fri_work_hours_hypothesis > mon_wed_fri_work_hours_premise or mon_wed_fri_work_hours_hypothesis < mon_wed_fri_work_hours_premise or tue_thurs_work_hours_hypothesis > tue_thurs_work_hours_premise or tue_thurs_work_hours_hypothesis < tue_thurs_work_hours_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(mon_wed_fri_work_hours_premise, tue_thurs_work_hours_premise, mon_wed_fri_work_hours_hypothesis, tue_thurs_work_hours_hypothesis))
"
7280,contradiction,,contradiction,"At Veridux Corporation , there are 210 employees","At Veridux Corporation , there are less than 210 employees","at veridux corporation , there are 210 employees","at veridux corporation , there are less than 210 employees","employees_premise = 210
max_employees_hypothesis = 210

def entailment_or_contradiction_or_neutral(employees_premise, max_employees_hypothesis):
    # the hypothesis refers to the number of employees at Veridux Corporation mentioned in the premise
    # the hypothesis estimates the number of employees to be less than 'max_employees_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of employees reported in the premise is greater or equal to 'max_employees_hypothesis'
    if employees_premise >= max_employees_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_premise, max_employees_hypothesis))
"
6249,entailment,,entailment,From a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,From a group of more than 5 boys & 4 girls a Committee of 4 persons is to be formed,from a group of 6 boys & 4 girls a committee of 4 persons is to be formed,from a group of more than 5 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
min_boys_hypothesis = 5
girls_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis):
    # The hypothesis refers to the number of boys and girls in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of boys or girls in the premise is lower than in the hypothesis
    if boys_premise < min_boys_hypothesis or girls_premise < girls_hypothesis:
        return False
    # Check if the hypothesis entails the premise by checking if the number of boys or girls in the premise is greater than or equal to in the hypothesis
    elif boys_premise >= min_boys_hypothesis and girls_premise >= girls_hypothesis:
        return True
    # If the hypothesis neither contradicts nor entails the premise, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis))
"
6319,neutral,,neutral,"Maddie has less than 7 apples , if she give 2 to mike , how many does she have left ?","Maddie has 4 apples , if she give 2 to mike , how many does she have left ?","maddie has less than 7 apples , if she give 2 to mike , how many does she have left ?","maddie has 4 apples , if she give 2 to mike , how many does she have left ?","max_apples_maddie_premise = 7
apples_given_to_mike = 2
apples_maddie_hypothesis = 4

def entailment_or_contradiction_or_neutral(max_apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis):
    # the hypothesis talks about the number of apples Maddie has, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_apples_maddie_premise', by checking if the number of apples from the hypothesis is greater or equal to 'max_apples_maddie_premise'
    if apples_maddie_hypothesis >= max_apples_maddie_premise:
        return False
    # if Maddie has 'apples_maddie_hypothesis' apples and gives 'apples_given_to_mike' to Mike, she should have 'apples_maddie_hypothesis' - 'apples_given_to_mike' left
    apples_left_hypothesis = apples_maddie_hypothesis - apples_given_to_mike
    # any number of apples left less than 'max_apples_maddie_premise' - 'apples_given_to_mike' is consistent with the premise, so the hypothesis is neutral to the premise
    if apples_left_hypothesis < max_apples_maddie_premise - apples_given_to_mike:
        return None
    # if the number of apples left is equal to 'max_apples_maddie_premise' - 'apples_given_to_mike', the hypothesis is entailed by the premise
    if apples_left_hypothesis == max_apples_maddie_premise - apples_given_to_mike:
        return True
    # if the number of apples left is greater than 'max_apples_maddie_premise' - 'apples_given_to_mike', the hypothesis contradicts the premise
    if apples_left_hypothesis > max_apples_maddie_premise - apples_given_to_mike:
        return False

print(entailment_or_contradiction_or_neutral(max_apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis))
"
7075,neutral,,neutral,Veena ranks more than 15 rd from the top in a class of 182,Veena ranks 65 rd from the top in a class of 182,veena ranks more than 15 rd from the top in a class of 182,veena ranks 65 rd from the top in a class of 182,"min_rank_premise = 15
rank_hypothesis = 65
total_students = 182

def entailment_or_contradiction_or_neutral(min_rank_premise, rank_hypothesis, total_students):
    # the hypothesis talks about Veena's rank in the class, referenced also in the premise
    # first, check if the hypothesis contradicts the premise estimate of more than 'min_rank_premise', by checking if the rank from the hypothesis is lower or equal to 'min_rank_premise'
    if rank_hypothesis <= min_rank_premise:
        return False
    # then, check if the rank from the hypothesis is valid in the context of total students
    if rank_hypothesis > total_students:
        return False
    # any rank greater than 15 and less than or equal to total students is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_rank_premise, rank_hypothesis, total_students))
"
6259,neutral,,neutral,Dan can do a job alone in less than 25 hours,Dan can do a job alone in 15 hours,dan can do a job alone in less than 25 hours,dan can do a job alone in 15 hours,"max_hours_dan_premise = 25
hours_dan_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_hours_dan_premise, hours_dan_hypothesis):
    # the hypothesis talks about the time Dan can do a job alone, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_hours_dan_premise', by checking if the time from the hypothesis is greater than 'max_hours_dan_premise'
    if hours_dan_hypothesis > max_hours_dan_premise:
        return False
    # any number of hours less than 25 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_hours_dan_premise, hours_dan_hypothesis))
"
7086,entailment,,entailment,"If Dan works alone for 6 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for less than 8 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for 6 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for less than 8 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_hours_premise = 6
max_dan_work_hours_hypothesis = 8

def entailment_or_contradiction_or_neutral(dan_work_hours_premise, max_dan_work_hours_hypothesis):
    # the hypothesis refers to the hours Dan has worked, which is also mentioned in the premise
    # the hypothesis states that Dan has worked less than 'max_dan_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the hours Dan worked, as stated in the premise, are more than 'max_dan_work_hours_hypothesis'
    if dan_work_hours_premise > max_dan_work_hours_hypothesis:
        return False
    # else, the information in the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_work_hours_premise, max_dan_work_hours_hypothesis))
"
7317,entailment,,entailment,"If it takes Jim 18 minutes to stretch and Cara continues to run during this time , how many minutes will it take Jim to catch up to Cara ?","If it takes Jim less than 78 minutes to stretch and Cara continues to run during this time , how many minutes will it take Jim to catch up to Cara ?","if it takes jim 18 minutes to stretch and cara continues to run during this time , how many minutes will it take jim to catch up to cara ?","if it takes jim less than 78 minutes to stretch and cara continues to run during this time , how many minutes will it take jim to catch up to cara ?","stretch_time_premise = 18
max_stretch_time_hypothesis = 78

def entailment_or_contradiction_or_neutral(stretch_time_premise, max_stretch_time_hypothesis):
    # the hypothesis and premise refer to the time it takes Jim to stretch
    # the hypothesis estimates this time to be less than 'max_stretch_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the stretch time reported in the premise is greater than 'max_stretch_time_hypothesis'
    if stretch_time_premise > max_stretch_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stretch_time_premise, max_stretch_time_hypothesis))
"
6218,contradiction,,contradiction,There are 25 stations between Delhi and Chennai,There are 55 stations between Delhi and Chennai,there are 25 stations between delhi and chennai,there are 55 stations between delhi and chennai,"stations_premise = 25
stations_hypothesis = 55

def entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis):
    # the hypothesis refers to the number of stations between Delhi and Chennai mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of stations in the hypothesis is not equal to the one in the premise
    if stations_hypothesis != stations_premise:
        return False
    # if both the numbers are same, then hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis))
"
6199,neutral,,neutral,There are less than 48 stations between Hyderabad and Bangalore,There are 18 stations between Hyderabad and Bangalore,there are less than 48 stations between hyderabad and bangalore,there are 18 stations between hyderabad and bangalore,"max_stations_premise = 48
stations_hypothesis = 18

def entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis):
    # the hypothesis makes a claim about the number of stations between Hyderabad and Bangalore, as does the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_stations_premise', by checking if the number of stations from the hypothesis is greater or equal to 'max_stations_premise'
    if stations_hypothesis >= max_stations_premise:
        return False
    # any number of stations less than 48 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis))
"
7548,entailment,,entailment,John ' s Bank ' s saving amount is decreased 30 % due to loan payment and current balance is Rs,John ' s Bank ' s saving amount is decreased less than 80 % due to loan payment and current balance is Rs,john ' s bank ' s saving amount is decreased 30 % due to loan payment and current balance is rs,john ' s bank ' s saving amount is decreased less than 80 % due to loan payment and current balance is rs,"decrease_percentage_premise = 30
max_decrease_percentage_hypothesis = 80

def entailment_or_contradiction_or_neutral(decrease_percentage_premise, max_decrease_percentage_hypothesis):
    # the hypothesis refers to the decrease in saving amount mentioned in the premise
    # the hypothesis estimates the decrease in saving amount to be less than or equal to 'max_decrease_percentage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if decrease percentage reported in the premise is greater than 'max_decrease_percentage_hypothesis'
    if decrease_percentage_premise > max_decrease_percentage_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(decrease_percentage_premise, max_decrease_percentage_hypothesis))
"
6822,entailment,,entailment,Lilly has 10 fish and Rosy has 8 fish,Lilly has less than 80 fish and Rosy has 8 fish,lilly has 10 fish and rosy has 8 fish,lilly has less than 80 fish and rosy has 8 fish,"lilly_fish_premise = 10
rosy_fish_premise = 8
max_lilly_fish_hypothesis = 80
rosy_fish_hypothesis = 8

def entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, max_lilly_fish_hypothesis, rosy_fish_hypothesis):
    # the hypothesis talks about the number of fish Lilly and Rosy have, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate by checking if Lilly's or Rosy's fish from the hypothesis is not equal to the premise
    if lilly_fish_premise > max_lilly_fish_hypothesis or rosy_fish_premise != rosy_fish_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, max_lilly_fish_hypothesis, rosy_fish_hypothesis))
"
7092,entailment,,entailment,"Ratio between Rahul and Deepak is 5 : 2 , After 6 Years Rahul age will be 26 years","Ratio between Rahul and Deepak is less than 8 : 2 , After 6 Years Rahul age will be 26 years","ratio between rahul and deepak is 5 : 2 , after 6 years rahul age will be 26 years","ratio between rahul and deepak is less than 8 : 2 , after 6 years rahul age will be 26 years","rahul_deepak_ratio_premise = 5 / 2
rahul_age_future_premise = 26
max_rahul_deepak_ratio_hypothesis = 8 / 2
rahul_age_future_hypothesis = 26

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_age_future_premise, max_rahul_deepak_ratio_hypothesis, rahul_age_future_hypothesis):
    # the hypothesis talks about the ratio between Rahul and Deepak's ages, and Rahul's future age, both of which are also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is greater than the ratio in the premise
    if max_rahul_deepak_ratio_hypothesis < rahul_deepak_ratio_premise:
        return False
    # check if the future age of Rahul in the hypothesis contradicts the future age of Rahul in the premise
    if rahul_age_future_hypothesis != rahul_age_future_premise:
        return False
        
    # if there are no contradictions, check if the hypothesis entails the premise by checking if the ratio and future age in the hypothesis are the same as in the premise
    if max_rahul_deepak_ratio_hypothesis >= rahul_deepak_ratio_premise and rahul_age_future_hypothesis == rahul_age_future_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_age_future_premise, max_rahul_deepak_ratio_hypothesis, rahul_age_future_hypothesis))
"
7212,entailment,,entailment,"Roslin played the game , getting at least one score of each of 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","Roslin played the game , getting at least one score of each of less than 8 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","roslin played the game , getting at least one score of each of 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","roslin played the game , getting at least one score of each of less than 8 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","min_score_premise = 1
max_score_premise = 5
min_score_hypothesis = 1
max_score_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_score_premise, max_score_premise, min_score_hypothesis, max_score_hypothesis):
    # the hypothesis refers to Roslin's game scores mentioned in the premise
    # the hypothesis estimates the game scores to be between 'min_score_hypothesis' and 'max_score_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the min or max scores reported in the premise are outside the range given in the hypothesis
    if min_score_premise < min_score_hypothesis or max_score_premise > max_score_hypothesis:
        return False
    # if not, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_score_premise, max_score_premise, min_score_hypothesis, max_score_hypothesis))
"
6933,entailment,,entailment,"Jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","Jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 45 percent commission","jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 45 percent commission","old_salary_premise = 75000
new_base_salary_premise = 45000
commission_premise = 15

old_salary_hypothesis = 75000
new_base_salary_hypothesis = 45000
max_commission_hypothesis = 45

def entailment_or_contradiction_or_neutral(old_salary_premise, new_base_salary_premise, commission_premise, old_salary_hypothesis, new_base_salary_hypothesis, max_commission_hypothesis):
    # the hypothesis talks about Jerry's old and new job salaries, which are also mentioned in the premise
    # first, check if the old and new base salaries in the hypothesis contradict the premise
    if old_salary_hypothesis != old_salary_premise or new_base_salary_hypothesis != new_base_salary_premise:
        return False
    # next, check if the commission percentage in the hypothesis is less than the one in the premise
    if commission_premise > max_commission_hypothesis:
        return False
    # since all the details in the hypothesis entail the premise information, return True
    return True

print(entailment_or_contradiction_or_neutral(old_salary_premise, new_base_salary_premise, commission_premise, old_salary_hypothesis, new_base_salary_hypothesis, max_commission_hypothesis))
"
6630,entailment,,entailment,"How many seconds does Sandy take to cover a distance of 500 meters , if Sandy runs at a speed of 15 km / hr ?","How many seconds does Sandy take to cover a distance of less than 800 meters , if Sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of 500 meters , if sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of less than 800 meters , if sandy runs at a speed of 15 km / hr ?","distance_covered_premise = 500  # in meters
speed_premise = 15  # in km/hr
max_distance_covered_hypothesis = 800  # in meters

def entailment_or_contradiction_or_neutral(distance_covered_premise, speed_premise, max_distance_covered_hypothesis):
    # Convert speed from km/hr to m/sec
    speed_premise_m_sec = speed_premise * 1000 / 3600

    # Calculate time taken to cover the distance in premise
    time_taken_premise = distance_covered_premise / speed_premise_m_sec

    # Calculate maximum time it would take to cover the distance in hypothesis
    max_time_taken_hypothesis = max_distance_covered_hypothesis / speed_premise_m_sec

    # the hypothesis refers to the time taken to cover a certain distance which is less than the one in the premise
    # check if the hypothesis contradicts the premise by checking if the maximum time calculated from the hypothesis is less than the time taken in the premise
    if max_time_taken_hypothesis < time_taken_premise:
        return False
    # if the maximum time taken in the hypothesis is greater or equal to the time taken in premise, it means the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(distance_covered_premise, speed_premise, max_distance_covered_hypothesis))
"
6873,entailment,,entailment,Jhon works for 60 days,Jhon works for more than 40 days,jhon works for 60 days,jhon works for more than 40 days,"working_days_premise = 60
min_working_days_hypothesis = 40

def entailment_or_contradiction_or_neutral(working_days_premise, min_working_days_hypothesis):
    # the hypothesis talks about the number of days Jhon works, which is also mentioned in the premise
    # the hypothesis estimates the working days to more than 'min_working_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the working days reported in the premise are lower than 'min_working_days_hypothesis'
    if working_days_premise < min_working_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(working_days_premise, min_working_days_hypothesis))
"
7055,contradiction,,contradiction,"In an exam , Amar scored 64 percent , Bhavan scored 36 percent and Chetan 44 percent","In an exam , Amar scored 24 percent , Bhavan scored 36 percent and Chetan 44 percent","in an exam , amar scored 64 percent , bhavan scored 36 percent and chetan 44 percent","in an exam , amar scored 24 percent , bhavan scored 36 percent and chetan 44 percent","amar_score_premise = 64
amar_score_hypothesis = 24
bhavan_score_premise = 36
bhavan_score_hypothesis = 36
chetan_score_premise = 44
chetan_score_hypothesis = 44

def entailment_or_contradiction_or_neutral(amar_score_premise, amar_score_hypothesis, bhavan_score_premise, bhavan_score_hypothesis, chetan_score_premise, chetan_score_hypothesis):
    # the hypothesis refers to the scores of Amar, Bhavan and Chetan in an exam, similar to the premise
    # check if the hypothesis contradicts the premise by comparing the scores of each individual
    if amar_score_hypothesis != amar_score_premise or bhavan_score_hypothesis != bhavan_score_premise or chetan_score_hypothesis != chetan_score_premise:
        return False
    # if the scores mentioned in the hypothesis match exactly with the scores in the premise, it is an entailment
    else:
        return True

print(entailment_or_contradiction_or_neutral(amar_score_premise, amar_score_hypothesis, bhavan_score_premise, bhavan_score_hypothesis, chetan_score_premise, chetan_score_hypothesis))
"
7395,entailment,,entailment,"Tom drives from town R to town B , driving at a constant speed of 60 miles per hour","Tom drives from town R to town B , driving at a constant speed of more than 50 miles per hour","tom drives from town r to town b , driving at a constant speed of 60 miles per hour","tom drives from town r to town b , driving at a constant speed of more than 50 miles per hour","speed_premise = 60
min_speed_hypothesis = 50

def entailment_or_contradiction_or_neutral(speed_premise, min_speed_hypothesis):
    # the hypothesis refers to the speed of the car mentioned in the premise
    # the hypothesis estimates the speed to more than 'min_speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if speed reported in the premise is lower than 'min_speed_hypothesis'
    if speed_premise < min_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, min_speed_hypothesis))
"
6228,entailment,,entailment,"In a friendship gang Andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Andrew has more than 7 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has 8 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang andrew has more than 7 gang , in how many ways can he invite one or more of the gang to his house ?","gangs_premise = 8
min_gangs_hypothesis = 7

def entailment_or_contradiction_or_neutral(gangs_premise, min_gangs_hypothesis):
    # the hypothesis talks about Andrew's gangs, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if number of gangs in the premise is less than 'min_gangs_hypothesis'
    if gangs_premise < min_gangs_hypothesis:
        return False
    # if there is no contradiction, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(gangs_premise, min_gangs_hypothesis))
"
7030,neutral,,neutral,"If Bill needs to walk from the corner of less than 7 nd Rd and 3 rd Ave to the corner of 9 th Rd and 6 th Ave in the shortest possible time , how many different routes could he take ?","If Bill needs to walk from the corner of 2 nd Rd and 3 rd Ave to the corner of 9 th Rd and 6 th Ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of less than 7 nd rd and 3 rd ave to the corner of 9 th rd and 6 th ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 2 nd rd and 3 rd ave to the corner of 9 th rd and 6 th ave in the shortest possible time , how many different routes could he take ?","start_location_premise = 7
end_location_premise = 9
start_location_hypothesis = 2

def entailment_or_contradiction_or_neutral(start_location_premise, end_location_premise, start_location_hypothesis):
    # The hypothesis is referring to the same route as the premise, except the starting point is different.
    # The hypothesis argues that the starting point is at 2nd Rd, which is less than the starting point in the premise.
    # Check if the hypothesis contradicts the premise by checking if the starting point in the hypothesis is greater than or equal to the starting point in the premise
    if start_location_hypothesis >= start_location_premise:
        return False
    # Since the hypothesis starting point is less than the premise, it doesn't entail the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(start_location_premise, end_location_premise, start_location_hypothesis))
"
7121,contradiction,,contradiction,The price of a car and AC are in the ratio 3 : 2,The price of a car and AC are in the ratio 8 : 2,the price of a car and ac are in the ratio 3 : 2,the price of a car and ac are in the ratio 8 : 2,"# Ratio of car to AC price as per premise
car_to_AC_ratio_premise = 3 / 2

# Ratio of car to AC price as per hypothesis
car_to_AC_ratio_hypothesis = 8 / 2

def entailment_or_contradiction_or_neutral(car_to_AC_ratio_premise, car_to_AC_ratio_hypothesis):
    # the hypothesis talks about the ratio of car to AC price which is also referenced in the premise
    # check if the hypothesis contradicts the premise by comparing the ratios
    if car_to_AC_ratio_premise != car_to_AC_ratio_hypothesis:
        return False
    # if the ratios were the same then the hypothesis would entail the premise
    return None

print(entailment_or_contradiction_or_neutral(car_to_AC_ratio_premise, car_to_AC_ratio_hypothesis))
"
7061,contradiction,,contradiction,Dan leaves City A 90 minutes after Cara,Dan leaves City A 80 minutes after Cara,dan leaves city a 90 minutes after cara,dan leaves city a 80 minutes after cara,"dan_leaving_time_premise = 90
dan_leaving_time_hypothesis = 80

def entailment_or_contradiction_or_neutral(dan_leaving_time_premise, dan_leaving_time_hypothesis):
    # the hypothesis contradicts the premise as the premise states Dan leaves 90 minutes after Cara, while the hypothesis states he leaves 80 minutes after Cara.
    if dan_leaving_time_hypothesis != dan_leaving_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_leaving_time_premise, dan_leaving_time_hypothesis))
"
7366,neutral,,neutral,"If Jack walked more than 2 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked more than 2 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","min_miles_walked_premise = 2
miles_walked_hypothesis = 7

def entailment_or_contradiction_or_neutral(min_miles_walked_premise, miles_walked_hypothesis):
    # the hypothesis talks about the distance walked by Jack, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the distance walked in the hypothesis is less than or equal to 'min_miles_walked_premise'
    if miles_walked_hypothesis <= min_miles_walked_premise:
        return False
    # any distance greater than 2 miles is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_miles_walked_premise, miles_walked_hypothesis))
"
7226,contradiction,,contradiction,"If OA = 2 , AC = 4 and BD = 6 , determine the length of OB .","If OA = more than 2 , AC = 4 and BD = 6 , determine the length of OB .","if oa = 2 , ac = 4 and bd = 6 , determine the length of ob .","if oa = more than 2 , ac = 4 and bd = 6 , determine the length of ob .","OA_premise = 2
OA_hypothesis = 2

def entailment_or_contradiction_or_neutral(OA_premise, OA_hypothesis):
    # the hypothesis refers to the length of OA mentioned in the premise
    # the hypothesis estimates the length of OA to more than 'OA_hypothesis'
    # check if the hypothesis contradicts the premise by checking if OA length in the premise is lower or equal to 'OA_hypothesis'
    if OA_premise <= OA_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(OA_premise, OA_hypothesis))
"
7277,contradiction,,contradiction,Molly and Max are driving at a rate of 100 kilometers per hour,Molly and Max are driving at a rate of less than 100 kilometers per hour,molly and max are driving at a rate of 100 kilometers per hour,molly and max are driving at a rate of less than 100 kilometers per hour,"driving_rate_premise = 100
max_driving_rate_hypothesis = 100

def entailment_or_contradiction_or_neutral(driving_rate_premise, max_driving_rate_hypothesis):
    # the hypothesis refers to the driving rate mentioned in the premise
    # the hypothesis estimates the driving rate to be less than 'max_driving_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the driving rate reported in the premise is greater than 'max_driving_rate_hypothesis'
    if driving_rate_premise >= max_driving_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(driving_rate_premise, max_driving_rate_hypothesis))
"
6546,entailment,,entailment,The distance between West - Town to East - Town is 15 kilometers,The distance between West - Town to East - Town is less than 85 kilometers,the distance between west - town to east - town is 15 kilometers,the distance between west - town to east - town is less than 85 kilometers,"distance_west_east_premise = 15
max_distance_west_east_hypothesis = 85

def entailment_or_contradiction_or_neutral(distance_west_east_premise, max_distance_west_east_hypothesis):
    # the hypothesis refers to the same distance as the premise
    # check if the hypothesis contradicts the premise by checking if distance in the premise is greater than 'max_distance_west_east_hypothesis'
    if distance_west_east_premise > max_distance_west_east_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_west_east_premise, max_distance_west_east_hypothesis))
"
6426,entailment,,entailment,450 and she sold that to George for Rs,less than 750 and she sold that to George for Rs,450 and she sold that to george for rs,less than 750 and she sold that to george for rs,"price_premise = 450
max_price_hypothesis = 750

def entailment_or_contradiction_or_neutral(price_premise, max_price_hypothesis):
    # the hypothesis refers to the price of the item sold to George
    # the hypothesis estimates the price to be less than or equal to 'max_price_hypothesis'
    # check if the hypothesis contradicts the premise by checking if price reported in the premise is higher than 'max_price_hypothesis'
    if price_premise > max_price_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(price_premise, max_price_hypothesis))
"
6566,contradiction,,contradiction,Carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,Carl drove from his home to the beach at an average speed of 60 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of 60 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,"speed_to_beach_premise = 80
speed_back_home_premise = 70
speed_to_beach_hypothesis = 60
speed_back_home_hypothesis = 70

def entailment_or_contradiction_or_neutral(speed_to_beach_premise, speed_back_home_premise, speed_to_beach_hypothesis, speed_back_home_hypothesis):
    # the hypothesis refers to the average speed of Carl's drive to the beach and back home
    # check if the hypothesis contradicts the premise by checking if the average speeds mentioned in the hypothesis are lower/higher than the speeds in the premise
    if speed_to_beach_hypothesis != speed_to_beach_premise or speed_back_home_hypothesis != speed_back_home_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_to_beach_premise, speed_back_home_premise, speed_to_beach_hypothesis, speed_back_home_hypothesis))
"
6406,neutral,,neutral,Angela has less than 35 pairs of matched socks,Angela has 15 pairs of matched socks,angela has less than 35 pairs of matched socks,angela has 15 pairs of matched socks,"max_pairs_of_socks_premise = 35
pairs_of_socks_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_pairs_of_socks_premise, pairs_of_socks_hypothesis):
    # the hypothesis talks about the number of pairs of socks Angela has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_pairs_of_socks_premise', by checking if the number of pairs of socks from the hypothesis is greater or equal to 'max_pairs_of_socks_premise'
    if pairs_of_socks_hypothesis >= max_pairs_of_socks_premise:
        return False
    # any number of pairs of socks less than 35 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_pairs_of_socks_premise, pairs_of_socks_hypothesis))
"
6735,entailment,,entailment,Rohit and Rohan can complete a work in 12 days and 6 days respectively,Rohit and Rohan can complete a work in less than 22 days and 6 days respectively,rohit and rohan can complete a work in 12 days and 6 days respectively,rohit and rohan can complete a work in less than 22 days and 6 days respectively,"rohit_work_days_premise = 12
rohan_work_days_premise = 6
max_rohit_work_days_hypothesis = 22
rohan_work_days_hypothesis = 6

def entailment_or_contradiction_or_neutral(rohit_work_days_premise, rohan_work_days_premise, max_rohit_work_days_hypothesis, rohan_work_days_hypothesis):
    # the hypothesis talks about the number of days Rohit and Rohan can complete a work
    # check if the hypothesis contradicts the premise by checking if the number of days for Rohit are lower in the premise than in the hypothesis or if the number of days for Rohan are not equal
    if rohit_work_days_premise > max_rohit_work_days_hypothesis or rohan_work_days_premise != rohan_work_days_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if the number of days for Rohit are equal or less in the premise than in the hypothesis and if the number of days for Rohan are equal
    elif rohit_work_days_premise <= max_rohit_work_days_hypothesis and rohan_work_days_premise == rohan_work_days_hypothesis:
        return True
    # if none of the above conditions are met, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(rohit_work_days_premise, rohan_work_days_premise, max_rohit_work_days_hypothesis, rohan_work_days_hypothesis))
"
6686,contradiction,,contradiction,Vinod climbs 60 steps in 40 seconds,Vinod climbs 80 steps in 40 seconds,vinod climbs 60 steps in 40 seconds,vinod climbs 80 steps in 40 seconds,"steps_climbed_premise = 60
steps_climbed_hypothesis = 80

def entailment_or_contradiction_or_neutral(steps_climbed_premise, steps_climbed_hypothesis):
    # the hypothesis talks about the number of steps climbed, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if steps climbed in the hypothesis are more than in the premise
    if steps_climbed_hypothesis > steps_climbed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(steps_climbed_premise, steps_climbed_hypothesis))
"
7568,contradiction,,contradiction,"If she worked four 12 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four 42 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 12 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four 42 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shifts_premise = 12 * 4  # total hours worked based on the premise
shifts_hypothesis = 42 * 4  # total hours worked based on the hypothesis
orders_per_hour = 40  # average orders per hour

def entailment_or_contradiction_or_neutral(shifts_premise, shifts_hypothesis, orders_per_hour):
    # the hypothesis refers to the duration of Jill's shifts and her earnings
    # check if the hypothesis contradicts the premise by comparing the total number of hours worked
    if shifts_premise != shifts_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shifts_premise, shifts_hypothesis, orders_per_hour))
"
6604,neutral,,neutral,"At the end of ' n ' years , Sandy got back less than 3 times the original investment","At the end of ' n ' years , Sandy got back 2 times the original investment","at the end of ' n ' years , sandy got back less than 3 times the original investment","at the end of ' n ' years , sandy got back 2 times the original investment","max_return_premise = 3
return_hypothesis = 2

def entailment_or_contradiction_or_neutral(max_return_premise, return_hypothesis):
    # the hypothesis talks about the return on investment at the end of 'n' years, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the return on investment from the hypothesis is greater or equal to 'max_return_premise'
    if return_hypothesis >= max_return_premise:
        return False
    # any return less than 3 times the original investment is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_return_premise, return_hypothesis))
"
6692,contradiction,,contradiction,Rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,Rakesh travelled 7800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled 7800 kilometre by air which formed 3 / 5 of the total journey,"air_travel_distance_premise = 1800
air_travel_distance_hypothesis = 7800

def entailment_or_contradiction_or_neutral(air_travel_distance_premise, air_travel_distance_hypothesis):
    # the hypothesis refers to the distance travelled by air mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if air travel distance reported in the premise is different from the air travel distance in the hypothesis
    if air_travel_distance_premise != air_travel_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(air_travel_distance_premise, air_travel_distance_hypothesis))
"
6552,entailment,,entailment,"Last year 30 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","Last year less than 70 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","last year 30 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","last year less than 70 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","members_to_england_premise = 30
members_to_france_premise = 26
members_to_italy_premise = 32

max_members_to_england_hypothesis = 70
members_to_france_hypothesis = 26
members_to_italy_hypothesis = 32

def entailment_or_contradiction_or_neutral(members_to_england_premise, members_to_france_premise, members_to_italy_premise, max_members_to_england_hypothesis, members_to_france_hypothesis, members_to_italy_hypothesis):
    # the hypothesis refers to the number of club members who traveled to various countries, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of members who traveled to England, France, and Italy are not the same as in the premise
    if members_to_england_premise > max_members_to_england_hypothesis or members_to_france_premise != members_to_france_hypothesis or members_to_italy_premise != members_to_italy_hypothesis:
        return False
    # if there is no contradiction, check if the hypothesis entails the premise by checking if the number of members who traveled to the countries are the same as in the premise
    elif members_to_england_premise <= max_members_to_england_hypothesis and members_to_france_premise == members_to_france_hypothesis and members_to_italy_premise == members_to_italy_hypothesis:
        return True
    # if the hypothesis is neither a contradiction nor an entailment, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(members_to_england_premise, members_to_france_premise, members_to_italy_premise, max_members_to_england_hypothesis, members_to_france_hypothesis, members_to_italy_hypothesis))
"
6715,neutral,,neutral,Sachin Tendulkar bough a red ferrari with a strange less than 7 digit numbered plate,Sachin Tendulkar bough a red ferrari with a strange 5 digit numbered plate,sachin tendulkar bough a red ferrari with a strange less than 7 digit numbered plate,sachin tendulkar bough a red ferrari with a strange 5 digit numbered plate,"max_plate_digits_premise = 7
plate_digits_hypothesis = 5

def entailment_or_contradiction_or_neutral(max_plate_digits_premise, plate_digits_hypothesis):
    # the hypothesis talks about the number of digits of the plate of the car bought by Sachin Tendulkar
    # the premise establishes that the number of digits of the plate is less than 'max_plate_digits_premise'
    # check if the hypothesis contradicts the premise by checking if the number of digits of the plate in the hypothesis is greater or equal to 'max_plate_digits_premise'
    if plate_digits_hypothesis >= max_plate_digits_premise:
        return False
    # any number of digits less than 7 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_plate_digits_premise, plate_digits_hypothesis))
"
6816,entailment,,entailment,Tina has 5 socks and 3 pair of shoes,Tina has more than 1 socks and 3 pair of shoes,tina has 5 socks and 3 pair of shoes,tina has more than 1 socks and 3 pair of shoes,"socks_premise = 5
shoes_premise = 3
min_socks_hypothesis = 1
shoes_hypothesis = 3

def entailment_or_contradiction_or_neutral(socks_premise, shoes_premise, min_socks_hypothesis, shoes_hypothesis):
    # the hypothesis refers to the number of socks and pairs of shoes owned by Tina, mentioned in the premise
    # the hypothesis estimates the sock count to be more than 'min_socks_hypothesis' and shoe pairs to be 'shoes_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the sock count reported in the premise is lower than 'min_socks_hypothesis'
    # or if the shoe pairs reported in the premise is different than 'shoes_hypothesis'
    if socks_premise <= min_socks_hypothesis or shoes_premise != shoes_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(socks_premise, shoes_premise, min_socks_hypothesis, shoes_hypothesis))
"
7479,entailment,,entailment,"Each week , Harry is paid x dollars per hour for the first 24 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first less than 84 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 24 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first less than 84 hours and 1.5 x dollars for each additional hour worked that week","premise_hours = 24
hypothesis_hours = 84

def entailment_or_contradiction_or_neutral(premise_hours, hypothesis_hours):
    # the hypothesis refers to the hours Harry works each week, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the premise_hours are more than the hypothesis_hours
    if premise_hours > hypothesis_hours:
        return False
    # if premise_hours are less than or equal to the hypothesis_hours, it is consistent with the hypothesis, hence entailment
    else:
        return True

print(entailment_or_contradiction_or_neutral(premise_hours, hypothesis_hours))
"
7539,entailment,,entailment,Amanda goes to the toy store to buy 1 ball and 3 different board games,Amanda goes to the toy store to buy less than 6 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy less than 6 ball and 3 different board games,"ball_premise = 1
board_games_premise = 3
max_ball_hypothesis = 6
board_games_hypothesis = 3

def entailment_or_contradiction_or_neutral(ball_premise, board_games_premise, max_ball_hypothesis, board_games_hypothesis):
    # the hypothesis talks about the number of balls and board games that Amanda buys, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if Amanda buys more balls or different number of board games than mentioned in the premise.
    if max_ball_hypothesis < ball_premise or board_games_hypothesis != board_games_premise:
        return False
    # if there is no contradiction, check if the hypothesis entails the premise by checking if Amanda buys less than or equal to the number of balls mentioned in the premise and exactly the number of board games mentioned in the premise.
    elif max_ball_hypothesis >= ball_premise and board_games_hypothesis == board_games_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, it is neutral.
    else:
        return None

print(entailment_or_contradiction_or_neutral(ball_premise, board_games_premise, max_ball_hypothesis, board_games_hypothesis))
"
6956,contradiction,,contradiction,"The average number of shirts with Salman , Ambani and Dalmiya is 40 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","The average number of shirts with Salman , Ambani and Dalmiya is less than 40 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is 40 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is less than 40 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","initial_avg_shirts_premise = 40
shirts_each_shopped_premise = 8

initial_avg_shirts_hypothesis = 40
shirts_each_shopped_hypothesis = 8

def entailment_or_contradiction_or_neutral(initial_avg_shirts_premise, shirts_each_shopped_premise, initial_avg_shirts_hypothesis, shirts_each_shopped_hypothesis):
    # the hypothesis and premise both talk about the average number of shirts each person has before and after shopping
    # first, check if the initial average number of shirts stated in the hypothesis contradicts the premise
    if initial_avg_shirts_hypothesis >= initial_avg_shirts_premise:
        return False
    # then, check if the number of shirts each person shopped contradicts the premise
    if shirts_each_shopped_hypothesis != shirts_each_shopped_premise:
        return False
    # finally, compute the new average number of shirts after shopping based on the premise
    new_avg_shirts_premise = initial_avg_shirts_premise + shirts_each_shopped_premise
    # and check if the new average number of shirts stated in the hypothesis contradicts the premise
    if initial_avg_shirts_hypothesis + shirts_each_shopped_hypothesis >= new_avg_shirts_premise:
        return False
    # if there is no contradiction, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(initial_avg_shirts_premise, shirts_each_shopped_premise, initial_avg_shirts_hypothesis, shirts_each_shopped_hypothesis))
"
7431,entailment,,entailment,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","If the toy store is stocked with more than 1 types of balls and 6 types of board games , how many different selections R of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","if the toy store is stocked with more than 1 types of balls and 6 types of board games , how many different selections r of the 4 items can amanda make ?","types_of_balls_premise = 3
types_of_board_games_premise = 6

types_of_balls_hypothesis = 1
types_of_board_games_hypothesis = 6

def entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis):
    # check if the hypothesis contradicts the premise by checking if the number of types of balls in the hypothesis is greater than in the premise or if the number of types of board games is different
    if types_of_balls_hypothesis > types_of_balls_premise or types_of_board_games_hypothesis != types_of_board_games_premise:
        return False
    # if no contradiction, check if the hypothesis entails the premise by checking if the number of types of balls in the hypothesis is less than or equal to in the premise and if the number of types of board games is the same
    elif types_of_balls_hypothesis <= types_of_balls_premise and types_of_board_games_hypothesis == types_of_board_games_premise:
        return True
    # if neither contradiction nor entailment, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis))
"
6887,contradiction,,contradiction,"Kiran has 85 currency notes in all , some of which were of Rs","Kiran has 15 currency notes in all , some of which were of Rs","kiran has 85 currency notes in all , some of which were of rs","kiran has 15 currency notes in all , some of which were of rs","total_notes_premise = 85
total_notes_hypothesis = 15

def entailment_or_contradiction_or_neutral(total_notes_premise, total_notes_hypothesis):
    # Both the premise and hypothesis refer to the total number of currency notes Kiran has
    # Check if the hypothesis contradicts the premise by comparing the number of notes
    if total_notes_hypothesis != total_notes_premise:
        return False
    # If the numbers were equal, the hypothesis would entail the premise, but as they are not, it is a contradiction

print(entailment_or_contradiction_or_neutral(total_notes_premise, total_notes_hypothesis))
"
6712,neutral,,neutral,Mike gives you another less than 77 balls,Mike gives you another 17 balls,mike gives you another less than 77 balls,mike gives you another 17 balls,"max_balls_premise = 77
balls_hypothesis = 17

def entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis):
    # the hypothesis talks about the number of balls Mike gives, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_balls_premise', by checking if the number of balls from the hypothesis is greater or equal to 'max_balls_premise'
    if balls_hypothesis >= max_balls_premise:
        return False
    # the hypothesis does not contradict the premise, but it does not necessarily entail it either, since it only specifies a specific number of balls, not a range 
    return None

print(entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis))
"
6444,entailment,,entailment,Frank is 14 years younger then John,Frank is less than 84 years younger then John,frank is 14 years younger then john,frank is less than 84 years younger then john,"john_minus_frank_age_premise = 14
max_john_minus_frank_age_hypothesis = 84

def entailment_or_contradiction_or_neutral(john_minus_frank_age_premise, max_john_minus_frank_age_hypothesis):
    # The hypothesis refers to the age difference between John and Frank stated in the premise.
    # The hypothesis estimates the age difference to be less than 'max_john_minus_frank_age_hypothesis'.
    # We can check if the hypothesis contradicts the premise by checking if the age difference in the premise is greater than 'max_john_minus_frank_age_hypothesis'.
    if john_minus_frank_age_premise > max_john_minus_frank_age_hypothesis:
        return False
    else:
        # If the age difference in the premise is less than the maximum age difference in the hypothesis, it means that the premise is entailed by the hypothesis.
        return True

print(entailment_or_contradiction_or_neutral(john_minus_frank_age_premise, max_john_minus_frank_age_hypothesis))
"
6483,entailment,,entailment,"If the distance between their homes is 20 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is less than 80 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is 20 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is less than 80 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","distance_homes_premise = 20
distance_homes_hypothesis = 80
maxwell_speed_premise = 4
maxwell_speed_hypothesis = 4
brad_speed_premise = 6
brad_speed_hypothesis = 6

def entailment_or_contradiction_or_neutral(distance_homes_premise, distance_homes_hypothesis, maxwell_speed_premise, maxwell_speed_hypothesis, brad_speed_premise, brad_speed_hypothesis):
    # the hypothesis talks about the same scenario as the premise, but with a different distance between the homes
    # the hypothesis states that the distance is less than 'distance_homes_hypothesis', so we check if 'distance_homes_premise' is greater than 'distance_homes_hypothesis'
    if distance_homes_premise > distance_homes_hypothesis:
        return False
    # the hypothesis also reiterates the speeds of Maxwell and Brad, so we check if they are the same as in the premise
    elif maxwell_speed_premise != maxwell_speed_hypothesis or brad_speed_premise != brad_speed_hypothesis:
        return False
    # if the conditions are met, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_homes_premise, distance_homes_hypothesis, maxwell_speed_premise, maxwell_speed_hypothesis, brad_speed_premise, brad_speed_hypothesis))
"
7251,entailment,,entailment,Suraj has a certain average of runs for 8 innings,Suraj has a certain average of runs for more than 5 innings,suraj has a certain average of runs for 8 innings,suraj has a certain average of runs for more than 5 innings,"innings_premise = 8
min_innings_hypothesis = 5

def entailment_or_contradiction_or_neutral(innings_premise, min_innings_hypothesis):
    # the hypothesis talks about the number of innings Suraj has played, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if 'innings_premise' is less than 'min_innings_hypothesis'
    if innings_premise < min_innings_hypothesis:
        return False
    # the hypothesis is entailed by the premise, as the number of innings in the hypothesis is less than that in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(innings_premise, min_innings_hypothesis))
"
6603,entailment,,entailment,"At the end of ' n ' years , Sandy got back 2 times the original investment","At the end of ' n ' years , Sandy got back less than 3 times the original investment","at the end of ' n ' years , sandy got back 2 times the original investment","at the end of ' n ' years , sandy got back less than 3 times the original investment","investment_multiplier_premise = 2
max_investment_multiplier_hypothesis = 3

def entailment_or_contradiction_or_neutral(investment_multiplier_premise, max_investment_multiplier_hypothesis):
    # the hypothesis refers to the return on investment mentioned in the premise
    # the hypothesis estimates the return on investment to be less than 'max_investment_multiplier_hypothesis' times the original investment
    # check if the hypothesis contradicts the premise by checking if return on investment reported in the premise is greater or equal to 'max_investment_multiplier_hypothesis'
    if investment_multiplier_premise >= max_investment_multiplier_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(investment_multiplier_premise, max_investment_multiplier_hypothesis))
"
6592,neutral,,neutral,At the same time Joyce gets on an elevator on the more than 51 st floor of the same building and rides down at a rate of 93 floors per minute,At the same time Joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the more than 51 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,"min_floor_premise = 51
floor_hypothesis = 71
rate_premise = 93
rate_hypothesis = 93

def entailment_or_contradiction_or_neutral(min_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis):
    # the hypothesis refers to the floor Joyce starts on and the rate at which she rides down, both mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the floor in the hypothesis is lower than or equal to the 'min_floor_premise' or if the rate in the hypothesis is different from the 'rate_premise'
    if floor_hypothesis <= min_floor_premise or rate_hypothesis != rate_premise:
        return False
    # any floor higher than 51 and the same rate is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis))
"
2534,contradiction,,contradiction,"5 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","more than 5 % people of a village in Sri Lanka died by bombardment , 15 % of the remainder left the village on account of fear","5 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","more than 5 % people of a village in sri lanka died by bombardment , 15 % of the remainder left the village on account of fear","death_rate_premise = 5  # percentage
death_rate_hypothesis = 5  # percentage

def entailment_or_contradiction_or_neutral(death_rate_premise, death_rate_hypothesis):
    # the hypothesis refers to the percentage of people who died in a village in Sri Lanka, as mentioned in the premise
    # check if the death rate in the hypothesis contradicts the one in the premise by checking if it is lower than the premise
    if death_rate_hypothesis <= death_rate_premise:
        return False
    # if the death rate in the hypothesis is more than the one in the premise, it is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(death_rate_premise, death_rate_hypothesis))
"
7191,entailment,,entailment,"Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at 12 noon","Similarly , there ' s a train that leaves Chennai bound for Jammu on everyday of the week exactly at less than 82 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at 12 noon","similarly , there ' s a train that leaves chennai bound for jammu on everyday of the week exactly at less than 82 noon","departure_time_premise = 12
max_departure_time_hypothesis = 82

def entailment_or_contradiction_or_neutral(departure_time_premise, max_departure_time_hypothesis):
    # the hypothesis refers to the departure time of a train from Chennai to Jammu mentioned in the premise
    # the hypothesis estimates the departure time to be less than 'max_departure_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the departure time reported in the premise is higher than 'max_departure_time_hypothesis'
    if departure_time_premise > max_departure_time_hypothesis:
        return False
    # if the departure time reported in the premise is less than 'max_departure_time_hypothesis', the hypothesis is true
    elif departure_time_premise < max_departure_time_hypothesis:
        return True
    # if the departure time reported in the premise is equal to 'max_departure_time_hypothesis', the hypothesis is still true as the departure time is exactly at 'max_departure_time_hypothesis', which is not less than 'max_departure_time_hypothesis'
    else:
        return True

print(entailment_or_contradiction_or_neutral(departure_time_premise, max_departure_time_hypothesis))
"
7340,contradiction,,contradiction,"If Sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","If Sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","if sanoop returned 5 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","if sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","returned_shirts_premise = 5
returned_shirts_hypothesis = 4

def entailment_or_contradiction_or_neutral(returned_shirts_premise, returned_shirts_hypothesis):
    # the hypothesis talks about the number of t-shirts returned to the retailer, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'returned_shirts_premise', by checking if the number of returned shirts from the hypothesis is not equal to 'returned_shirts_premise'
    if returned_shirts_hypothesis != returned_shirts_premise:
        return False
    # any number of returned shirts equal to 'returned_shirts_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(returned_shirts_premise, returned_shirts_hypothesis))
"
6840,entailment,,entailment,"20,000 for 6 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for less than 7 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for 6 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","20,000 for less than 7 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","investment_period_premise = 6
investment_period_hypothesis = 7

def entailment_or_contradiction_or_neutral(investment_period_premise, investment_period_hypothesis):
    # Both the premise and hypothesis are about the same context
    # The hypothesis suggests that the investment period was less than 'investment_period_hypothesis' months
    # Check if the hypothesis contradicts the premise by checking if the investment period mentioned in the premise is greater or equal to 'investment_period_hypothesis'
    if investment_period_premise >= investment_period_hypothesis:
        return False
    # If not, it means that the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(investment_period_premise, investment_period_hypothesis))
"
6652,neutral,,neutral,"Maddie has less than 88 apples , if she give 12 to mike , how many does she have left ?","Maddie has 18 apples , if she give 12 to mike , how many does she have left ?","maddie has less than 88 apples , if she give 12 to mike , how many does she have left ?","maddie has 18 apples , if she give 12 to mike , how many does she have left ?","max_apples_maddie_premise = 88
apples_maddie_hypothesis = 18
apples_given_to_mike = 12

def entailment_or_contradiction_or_neutral(max_apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike):
    # the hypothesis refers to the number of apples Maddie has, mentioned in the premise
    # it also mentions the number of apples given to Mike, which is the same in both the premise and the hypothesis
    # check if the hypothesis contradicts the premise by checking if the number of apples Maddie has according to the hypothesis is greater than 'max_apples_maddie_premise'
    if apples_maddie_hypothesis > max_apples_maddie_premise:
        return False
    # if there is no contradiction, calculate the number of apples Maddie has left after giving some to Mike, according to the hypothesis
    apples_left_hypothesis = apples_maddie_hypothesis - apples_given_to_mike
    # any number of apples less than 88 and greater than or equal to 0 is consistent with the premise, so the hypothesis is neutral to the premise
    if apples_left_hypothesis >= 0:
        return None

print(entailment_or_contradiction_or_neutral(max_apples_maddie_premise, apples_maddie_hypothesis, apples_given_to_mike))
"
7200,entailment,,entailment,Angela has 13 pairs of matched socks,Angela has less than 83 pairs of matched socks,angela has 13 pairs of matched socks,angela has less than 83 pairs of matched socks,"matched_socks_premise = 13
max_matched_socks_hypothesis = 83

def entailment_or_contradiction_or_neutral(matched_socks_premise, max_matched_socks_hypothesis):
    # the hypothesis refers to the number of matched socks Angela has, which is also mentioned in the premise
    # the hypothesis estimates the number of matched socks to be less than 'max_matched_socks_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of matched socks reported in the premise is more than 'max_matched_socks_hypothesis'
    if matched_socks_premise > max_matched_socks_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(matched_socks_premise, max_matched_socks_hypothesis))
"
6016,neutral,,neutral,Jane started baby - sitting when she was less than 40 years old,Jane started baby - sitting when she was 20 years old,jane started baby - sitting when she was less than 40 years old,jane started baby - sitting when she was 20 years old,"max_age_premise = 40
age_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_age_premise, age_hypothesis):
    # the hypothesis refers to the age when Jane started baby-sitting, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_age_premise', by checking if the age from the hypothesis is greater or equal to 'max_age_premise'
    if age_hypothesis >= max_age_premise:
        return False
    # any age less than 40 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_age_premise, age_hypothesis))
"
6892,neutral,,neutral,Smita Was Making A Cube With Dimensions more than 3 * 5 * 5 Using 1 * 1 * 1 Cubes,Smita Was Making A Cube With Dimensions 5 * 5 * 5 Using 1 * 1 * 1 Cubes,smita was making a cube with dimensions more than 3 * 5 * 5 using 1 * 1 * 1 cubes,smita was making a cube with dimensions 5 * 5 * 5 using 1 * 1 * 1 cubes,"# dimensions of the cube Smita was making according to the premise
length_premise = 3
width_premise = 5
height_premise = 5

# dimensions of the cube Smita was making according to the hypothesis
length_hypothesis = 5
width_hypothesis = 5
height_hypothesis = 5

def entailment_or_contradiction_or_neutral(length_premise, width_premise, height_premise, length_hypothesis, width_hypothesis, height_hypothesis):
    # the hypothesis talks about the dimensions of a cube that Smita was making
    # check if the hypothesis contradicts the premise by checking if any of the dimensions in the hypothesis are less than in the premise
    if length_hypothesis < length_premise or width_hypothesis < width_premise or height_hypothesis < height_premise:
        return False
    # if the dimensions in the hypothesis are equal to or greater than in the premise, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(length_premise, width_premise, height_premise, length_hypothesis, width_hypothesis, height_hypothesis))
"
6387,entailment,,entailment,John gives you another 100 balls,John gives you another less than 300 balls,john gives you another 100 balls,john gives you another less than 300 balls,"balls_john_gives_premise = 100
max_balls_john_gives_hypothesis = 300

def entailment_or_contradiction_or_neutral(balls_john_gives_premise, max_balls_john_gives_hypothesis):
    # the hypothesis refers to the number of balls John gives, mentioned in the premise
    # the hypothesis estimates the number of balls to be less than 'max_balls_john_gives_hypothesis'
    # check if the hypothesis contradicts the premise by checking if balls given by John in the premise are more than 'max_balls_john_gives_hypothesis'
    if balls_john_gives_premise > max_balls_john_gives_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(balls_john_gives_premise, max_balls_john_gives_hypothesis))
"
6637,neutral,,neutral,"Ram , Krish and Bhim can complete a work in less than 50 days","Ram , Krish and Bhim can complete a work in 30 days","ram , krish and bhim can complete a work in less than 50 days","ram , krish and bhim can complete a work in 30 days","max_days_premise = 50
work_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_days_premise, work_days_hypothesis):
    # the hypothesis refers to the number of days it takes for Ram, Krish and Bhim to complete a work, mentioned also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_days_premise', by checking if the number of days from the hypothesis is greater than 'max_days_premise'
    if work_days_hypothesis > max_days_premise:
        return False
    # any number of days less than 50 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_days_premise, work_days_hypothesis))
"
6791,contradiction,,contradiction,"If the distance between their homes is 50 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is more than 50 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is 50 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is more than 50 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","home_distance_premise = 50
home_distance_hypothesis = 50
maxwell_speed = 4
brad_speed = 6

def entailment_or_contradiction_or_neutral(home_distance_premise, home_distance_hypothesis, maxwell_speed, brad_speed):
    # the hypothesis refers to the same situation as the premise, with the only difference being the specified distance between homes
    # the hypothesis specifies a distance greater than 'home_distance_hypothesis', whereas the premise specifies it as exactly 'home_distance_premise'
    # if the distance from the hypothesis is less than or equal to 'home_distance_premise', the hypothesis contradicts the premise
    if home_distance_hypothesis <= home_distance_premise:
        return False
    # the premise does not provide information about what happens for distances greater than 'home_distance_premise', so the hypothesis is neutral
    return None

print(entailment_or_contradiction_or_neutral(home_distance_premise, home_distance_hypothesis, maxwell_speed, brad_speed))
"
6156,entailment,,entailment,Present ages of Sameer and Anand are in the ratio of 5 : 4 respectively,Present ages of Sameer and Anand are in the ratio of more than 3 : 4 respectively,present ages of sameer and anand are in the ratio of 5 : 4 respectively,present ages of sameer and anand are in the ratio of more than 3 : 4 respectively,"sameer_anand_ratio_premise = 5/4
min_sameer_anand_ratio_hypothesis = 3/4

def entailment_or_contradiction_or_neutral(sameer_anand_ratio_premise, min_sameer_anand_ratio_hypothesis):
    # the hypothesis refers to the Sameer and Anand ages ratio presented in the premise
    # the hypothesis assumes the ratio to be more than 'min_sameer_anand_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio from the premise is lower or equal to 'min_sameer_anand_ratio_hypothesis'
    if sameer_anand_ratio_premise <= min_sameer_anand_ratio_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sameer_anand_ratio_premise, min_sameer_anand_ratio_hypothesis))
"
6047,contradiction,,contradiction,"The pilot of a small aircraft with a 40 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","The pilot of a small aircraft with a 50 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","the pilot of a small aircraft with a 40 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","the pilot of a small aircraft with a 50 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","fuel_tank_premise = 40
fuel_tank_hypothesis = 50

def entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis):
    # the hypothesis refers to the fuel tank size in the premise
    # it suggests a different fuel tank size
    # check if the fuel tank size in the hypothesis contradicts the one in the premise
    if fuel_tank_premise != fuel_tank_hypothesis:
        return False
    # if the fuel tank sizes match, the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis))
"
6983,contradiction,,contradiction,Nitin borrowed some money at the rate of 6 % p,Nitin borrowed some money at the rate of 8 % p,nitin borrowed some money at the rate of 6 % p,nitin borrowed some money at the rate of 8 % p,"borrow_rate_premise = 6
borrow_rate_hypothesis = 8

def entailment_or_contradiction_or_neutral(borrow_rate_premise, borrow_rate_hypothesis):
    # the hypothesis refers to the rate of borrowing mentioned in the premise
    # the hypothesis estimates the borrow rate to be 'borrow_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the borrow rate in the premise is different than 'borrow_rate_hypothesis'
    if borrow_rate_premise != borrow_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(borrow_rate_premise, borrow_rate_hypothesis))
"
6777,entailment,,entailment,"In an exam , Bright scored 60 percent , Bivi scored 65 percent and Lisa 45 percent","In an exam , Bright scored more than 40 percent , Bivi scored 65 percent and Lisa 45 percent","in an exam , bright scored 60 percent , bivi scored 65 percent and lisa 45 percent","in an exam , bright scored more than 40 percent , bivi scored 65 percent and lisa 45 percent","bright_score_premise = 60 
bivi_score_premise = 65 
lisa_score_premise = 45 

bright_score_hypothesis = 40
bivi_score_hypothesis = 65
lisa_score_hypothesis = 45

def entailment_or_contradiction_or_neutral(bright_score_premise, bivi_score_premise, lisa_score_premise, bright_score_hypothesis, bivi_score_hypothesis, lisa_score_hypothesis):
    # the hypothesis refers to the scores of three individuals mentioned in the premise
    # check if the scores mentioned in the hypothesis contradicts the scores mentioned in the premise
    if bright_score_premise < bright_score_hypothesis or bivi_score_premise != bivi_score_hypothesis or lisa_score_premise != lisa_score_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(bright_score_premise, bivi_score_premise, lisa_score_premise, bright_score_hypothesis, bivi_score_hypothesis, lisa_score_hypothesis))
"
6965,contradiction,,contradiction,"In a locality , the prevailing price of a 700 square feet property last year was US Dollar 1000","In a locality , the prevailing price of a less than 700 square feet property last year was US Dollar 1000","in a locality , the prevailing price of a 700 square feet property last year was us dollar 1000","in a locality , the prevailing price of a less than 700 square feet property last year was us dollar 1000","property_price_premise = 1000
property_area_premise = 700
property_price_hypothesis = 1000
property_area_hypothesis = 700

def entailment_or_contradiction_or_neutral(property_price_premise, property_area_premise, property_price_hypothesis, property_area_hypothesis):
    # the hypothesis refers to the price and area of property mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the area of the property from the hypothesis is equal to the area of the property from the premise
    if property_area_hypothesis == property_area_premise:
        return False
    # check if the price mentioned in the hypothesis is same as the price mentioned in the premise
    elif property_price_hypothesis == property_price_premise:
        return True
    # if neither contradiction nor entailment, return None for neutrality
    else:
        return None

print(entailment_or_contradiction_or_neutral(property_price_premise, property_area_premise, property_price_hypothesis, property_area_hypothesis))
"
7126,neutral,,neutral,How many miles from home can Aaron jog so that he spends a total of more than 1 hours jogging and walking ?,How many miles from home can Aaron jog so that he spends a total of 3 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of more than 1 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of 3 hours jogging and walking ?,"min_hours_jog_walk_premise = 1
hours_jog_walk_hypothesis = 3

def entailment_or_contradiction_or_neutral(min_hours_jog_walk_premise, hours_jog_walk_hypothesis):
    # the hypothesis talks about the time Aaron spends jogging and walking, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_hours_jog_walk_premise', by checking if the time from the hypothesis is lower or equal to 'min_hours_jog_walk_premise'
    if hours_jog_walk_hypothesis <= min_hours_jog_walk_premise:
        return False
    # any number of hours greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_hours_jog_walk_premise, hours_jog_walk_hypothesis))
"
7374,entailment,,entailment,"If she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four less than 36 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four less than 36 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shifts_premise = 16 * 4 # Jill worked for 64 hours in total
orders_per_hour = 40
max_shifts_hypothesis = 36 * 4 # The hypothesis states that Jill could have worked for less than 144 hours

def entailment_or_contradiction_or_neutral(shifts_premise, max_shifts_hypothesis, orders_per_hour):
    # the hypothesis also refers to the number of hours Jill worked this week
    # it suggests that she could have worked for less than 'max_shifts_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'shifts_premise' is more than 'max_shifts_hypothesis'
    if shifts_premise > max_shifts_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shifts_premise, max_shifts_hypothesis, orders_per_hour))
"
7177,neutral,,neutral,"more than 3800 among John , Jose & Binoy in the ration 2 : 4 : 6","4800 among John , Jose & Binoy in the ration 2 : 4 : 6","more than 3800 among john , jose & binoy in the ration 2 : 4 : 6","4800 among john , jose & binoy in the ration 2 : 4 : 6","# Extracted quantities
min_people_premise = 3800
people_hypothesis = 4800

def entailment_or_contradiction_or_neutral(min_people_premise, people_hypothesis):
    # The hypothesis refers to the number of people mentioned in the premise
    # The hypothesis states the number of people to be 'people_hypothesis'
    # Check if the hypothesis contradicts the premise by checking if the number of people reported in the hypothesis is less than or equal to 'min_people_premise'
    if people_hypothesis <= min_people_premise:
        return False
    # Any number of people greater than 3800 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_people_premise, people_hypothesis))
"
6119,contradiction,,contradiction,Sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of Rs,Sanoop bought more than 8 t - shirts at an average price ( arithmetic mean ) of Rs,sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of rs,sanoop bought more than 8 t - shirts at an average price ( arithmetic mean ) of rs,"tshirts_bought_premise = 8
tshirts_bought_hypothesis = 9

def entailment_or_contradiction_or_neutral(tshirts_bought_premise, tshirts_bought_hypothesis):
    # the hypothesis refers to the number of t-shirts bought by Sanoop mentioned in the premise
    # the hypothesis estimates the t-shirts bought to more than 'tshirts_bought_premise'
    # check if the hypothesis contradicts the premise by checking if t-shirts bought reported in the premise are less than 'tshirts_bought_hypothesis'
    if tshirts_bought_premise < tshirts_bought_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(tshirts_bought_premise, tshirts_bought_hypothesis))
"
6288,entailment,,entailment,Smitha bought 8 Kg of kiwi fruit at an average rate of 360,Smitha bought more than 5 Kg of kiwi fruit at an average rate of 360,smitha bought 8 kg of kiwi fruit at an average rate of 360,smitha bought more than 5 kg of kiwi fruit at an average rate of 360,"kiwi_weight_premise = 8
min_kiwi_weight_hypothesis = 5

def entailment_or_contradiction_or_neutral(kiwi_weight_premise, min_kiwi_weight_hypothesis):
    # the hypothesis refers to the weight of kiwi fruit mentioned in the premise
    # the hypothesis estimates the weight of kiwi fruit to be more than 'min_kiwi_weight_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the weight reported in the premise is less than 'min_kiwi_weight_hypothesis'
    if kiwi_weight_premise < min_kiwi_weight_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(kiwi_weight_premise, min_kiwi_weight_hypothesis))
"
7335,entailment,,entailment,Sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of Rs,Sanoop bought more than 3 t - shirts at an average price ( arithmetic mean ) of Rs,sanoop bought 8 t - shirts at an average price ( arithmetic mean ) of rs,sanoop bought more than 3 t - shirts at an average price ( arithmetic mean ) of rs,"t_shirts_bought_premise = 8
min_t_shirts_bought_hypothesis = 3

def entailment_or_contradiction_or_neutral(t_shirts_bought_premise, min_t_shirts_bought_hypothesis):
    # the hypothesis refers to the number of t-shirts bought, mentioned in the premise
    # the hypothesis estimates the number of t-shirts bought to be more than 'min_t_shirts_bought_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of t-shirts bought reported in the premise is less than 'min_t_shirts_bought_hypothesis'
    if t_shirts_bought_premise < min_t_shirts_bought_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(t_shirts_bought_premise, min_t_shirts_bought_hypothesis))
"
6059,contradiction,,contradiction,"Anita , Indu and Geeta can do a piece of work in 18 days , 27 days and 36 days respectively","Anita , Indu and Geeta can do a piece of work in 58 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in 18 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in 58 days , 27 days and 36 days respectively","anita_work_premise = 18
indu_work_premise = 27
geeta_work_premise = 36

anita_work_hypothesis = 58
indu_work_hypothesis = 27
geeta_work_hypothesis = 36

def entailment_or_contradiction_or_neutral(anita_work_premise, indu_work_premise, geeta_work_premise, anita_work_hypothesis, indu_work_hypothesis, geeta_work_hypothesis):
    # the hypothesis refers to the amount of work each person can do, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the workdays for each person
    if anita_work_hypothesis != anita_work_premise or indu_work_hypothesis != indu_work_premise or geeta_work_hypothesis != geeta_work_premise:
        return False
    # if all workdays are the same, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(anita_work_premise, indu_work_premise, geeta_work_premise, anita_work_hypothesis, indu_work_hypothesis, geeta_work_hypothesis))
"
7184,contradiction,,contradiction,"If 1 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","If 3 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if 3 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","north_american_passengers_premise = 1/12
european_passengers = 1/8
african_passengers = 1/3
asian_passengers = 1/6
other_passengers = 35

north_american_passengers_hypothesis = 3/12

def entailment_or_contradiction_or_neutral(north_american_passengers_premise, european_passengers, african_passengers, asian_passengers, other_passengers, north_american_passengers_hypothesis):
    # The hypothesis refers to the proportion of passengers from different continents on the same ship as mentioned in the premise
    # The hypothesis contradicts the premise about the fraction of North American passengers
    if north_american_passengers_premise != north_american_passengers_hypothesis:
        return False

    # if the fractions are equal, then there is no contradiction
    return None

print(entailment_or_contradiction_or_neutral(north_american_passengers_premise, european_passengers, african_passengers, asian_passengers, other_passengers, north_american_passengers_hypothesis))
"
7244,contradiction,,contradiction,Ayisha ' s father ' s age will be twice Shankar ' s age after 10 years,Ayisha ' s father ' s age will be twice Shankar ' s age after 30 years,ayisha ' s father ' s age will be twice shankar ' s age after 10 years,ayisha ' s father ' s age will be twice shankar ' s age after 30 years,"shankar_age_increase_premise = 10
shankar_age_increase_hypothesis = 30

def entailment_or_contradiction_or_neutral(shankar_age_increase_premise, shankar_age_increase_hypothesis):
    # the hypothesis refers to the comparison of Ayisha's father's age and Shankar's age after a certain number of years
    # check if the hypothesis contradicts the premise by checking if shankar_age_increase_hypothesis is different than shankar_age_increase_premise
    if shankar_age_increase_hypothesis != shankar_age_increase_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(shankar_age_increase_premise, shankar_age_increase_hypothesis))
"
7304,contradiction,,contradiction,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 58,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 78,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 58,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 78,"average_score_premise = 58
average_score_hypothesis = 78

def entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis):
    # the hypothesis refers to Scott's average golf score, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the average golf score reported in the hypothesis is different from the one in the premise
    if average_score_premise != average_score_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis))
"
7215,entailment,,entailment,"A truck uses 60 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","A truck uses more than 20 - gallon fuel tank wants to travel to Cleveland , which is 480 miles away","a truck uses 60 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","a truck uses more than 20 - gallon fuel tank wants to travel to cleveland , which is 480 miles away","fuel_tank_premise = 60
min_fuel_tank_hypothesis = 20

def entailment_or_contradiction_or_neutral(fuel_tank_premise, min_fuel_tank_hypothesis):
    # the hypothesis refers to the size of the fuel tank mentioned in the premise
    # the hypothesis estimates the fuel tank to be more than 'min_fuel_tank_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the fuel tank size in the premise is lower than 'min_fuel_tank_hypothesis'
    if fuel_tank_premise < min_fuel_tank_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(fuel_tank_premise, min_fuel_tank_hypothesis))
"
7275,entailment,,entailment,Molly and Max are driving at a rate of 100 kilometers per hour,Molly and Max are driving at a rate of less than 400 kilometers per hour,molly and max are driving at a rate of 100 kilometers per hour,molly and max are driving at a rate of less than 400 kilometers per hour,"driving_rate_premise = 100
max_driving_rate_hypothesis = 400

def entailment_or_contradiction_or_neutral(driving_rate_premise, max_driving_rate_hypothesis):
    # the hypothesis refers to the driving rate mentioned in the premise
    # the hypothesis estimates the driving rate to less than 'max_driving_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if driving rate reported in the premise is higher than 'max_driving_rate_hypothesis'
    if driving_rate_premise > max_driving_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(driving_rate_premise, max_driving_rate_hypothesis))
"
7330,neutral,,neutral,"Hali builds a tower using only red , green , and blue toy bricks in a ratio of more than 3 : 3 : 1","Hali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","hali builds a tower using only red , green , and blue toy bricks in a ratio of more than 3 : 3 : 1","hali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","red_green_blue_ratio_premise = (3, 3, 1)
red_green_blue_ratio_hypothesis = (4, 3, 1)

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis):
    # the hypothesis talks about the ratio of red, green and blue bricks used to build a tower
    # check if the hypothesis contradicts the premise by comparing the given ratios
    if red_green_blue_ratio_hypothesis[0] <= red_green_blue_ratio_premise[0] or red_green_blue_ratio_hypothesis[1] != red_green_blue_ratio_premise[1] or red_green_blue_ratio_hypothesis[2] != red_green_blue_ratio_premise[2]:
        return False
    # the number of red bricks is larger in the hypothesis than in the premise, but this is consistent with the premise stating ""more than 3:3:1"", so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis))
"
6018,entailment,,entailment,"Jane is currently 32 years old , and she stopped baby - sitting 10 years ago","Jane is currently less than 42 years old , and she stopped baby - sitting 10 years ago","jane is currently 32 years old , and she stopped baby - sitting 10 years ago","jane is currently less than 42 years old , and she stopped baby - sitting 10 years ago","jane_age_premise = 32
jane_age_hypothesis = 42
babysitting_stop_premise = 10
babysitting_stop_hypothesis = 10

def entailment_or_contradiction_or_neutral(jane_age_premise, jane_age_hypothesis, babysitting_stop_premise, babysitting_stop_hypothesis):
    # the hypothesis talks about Jane's age and when she stopped babysitting, which is also referenced in the premise
    # first, check if the information about when Jane stopped babysitting contradicts each other
    if babysitting_stop_premise != babysitting_stop_hypothesis:
        return False
    # then, check if Jane's age in the hypothesis contradicts her age in the premise by checking if the hypothesis age is less than the premise age
    if jane_age_hypothesis < jane_age_premise:
        return False
    # if there are no contradictions, then Jane's age in the hypothesis entails the information in the premise, since the premise age is less than the hypothesis age, and the babysitting information is the same
    return True

print(entailment_or_contradiction_or_neutral(jane_age_premise, jane_age_hypothesis, babysitting_stop_premise, babysitting_stop_hypothesis))
"
7311,entailment,,entailment,"Jim runs at 6 miles per hour , and Cara runs at 5 miles per hour","Jim runs at more than 2 miles per hour , and Cara runs at 5 miles per hour","jim runs at 6 miles per hour , and cara runs at 5 miles per hour","jim runs at more than 2 miles per hour , and cara runs at 5 miles per hour","jim_speed_premise = 6
cara_speed_premise = 5
min_jim_speed_hypothesis = 2
cara_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(jim_speed_premise, cara_speed_premise, min_jim_speed_hypothesis, cara_speed_hypothesis):
    # the hypothesis refers to Jim's and Cara's running speeds mentioned in the premise
    # the hypothesis estimates Jim's speed to more than 'min_jim_speed_hypothesis' and Cara's speed to 'cara_speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Jim's speed reported in the premise is lower than 'min_jim_speed_hypothesis'
    # or if Cara's speed reported in the premise is not equal to 'cara_speed_hypothesis'
    if jim_speed_premise < min_jim_speed_hypothesis or cara_speed_premise != cara_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(jim_speed_premise, cara_speed_premise, min_jim_speed_hypothesis, cara_speed_hypothesis))
"
7016,contradiction,,contradiction,The present ages of Lewis and Brown are in the ratio 1 : 2,The present ages of Lewis and Brown are in the ratio less than 1 : 2,the present ages of lewis and brown are in the ratio 1 : 2,the present ages of lewis and brown are in the ratio less than 1 : 2,"lewis_brown_ratio_premise = 1/2
lewis_brown_ratio_hypothesis = 'less than 1/2'

def entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, lewis_brown_ratio_hypothesis):
    # the hypothesis talks about the ratio of ages of Lewis and Brown, also mentioned in the premise
    # here, the hypothesis suggests that the ratio is less than the one mentioned in the premise
    # as per the definition, if the ratio in the hypothesis is less than the premise, it contradicts the premise
    # therefore, return False
    return False

print(entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, lewis_brown_ratio_hypothesis))
"
7387,neutral,,neutral,Mary can do a piece of work in less than 81 days,Mary can do a piece of work in 11 days,mary can do a piece of work in less than 81 days,mary can do a piece of work in 11 days,"max_work_days_premise = 81
work_days_hypothesis = 11

def entailment_or_contradiction_or_neutral(max_work_days_premise, work_days_hypothesis):
    # the hypothesis talks about the number of work days Mary needs, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_work_days_premise', by checking if the number of work days from the hypothesis is higher or equal to 'max_work_days_premise'
    if work_days_hypothesis >= max_work_days_premise:
        return False
    # any number of work days less than 81 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_work_days_premise, work_days_hypothesis))
"
6561,entailment,,entailment,"If Jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","If Jerry wants to raise his average by less than 6 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by less than 6 points , what score must he earn on the fourth test ?","desired_avg_increase_premise = 2
max_desired_avg_increase_hypothesis = 6

def entailment_or_contradiction_or_neutral(desired_avg_increase_premise, max_desired_avg_increase_hypothesis):
    # the hypothesis is about the desired average increase mentioned in the premise
    # the hypothesis estimates the desired average increase to be lower than or equal to 'max_desired_avg_increase_hypothesis'
    # check if the hypothesis contradicts the premise by checking if desired average increase from the premise is higher than 'max_desired_avg_increase_hypothesis'
    if desired_avg_increase_premise > max_desired_avg_increase_hypothesis:
        return False
    else:
        return True  # the desired average increase from the premise is included in the range from the hypothesis

print(entailment_or_contradiction_or_neutral(desired_avg_increase_premise, max_desired_avg_increase_hypothesis))
"
6470,contradiction,,contradiction,20 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,40 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,20 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,40 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,"carpet_coverage_premise = 0.20
carpet_coverage_hypothesis = 0.40

def entailment_or_contradiction_or_neutral(carpet_coverage_premise, carpet_coverage_hypothesis):
    # the hypothesis refers to the percentage of carpet coverage mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the carpet coverage percentage in the hypothesis is greater than in the premise
    if carpet_coverage_hypothesis > carpet_coverage_premise:
        return False
    # if the carpet coverage percentage in the hypothesis is less or equal to the percentage in the premise, it is consistent with the premise
    elif carpet_coverage_hypothesis <= carpet_coverage_premise:
        return True

print(entailment_or_contradiction_or_neutral(carpet_coverage_premise, carpet_coverage_hypothesis))
"
7361,contradiction,,contradiction,"In John ' s School , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","In John ' s School , there are 50 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are 50 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","# Extracting the quantitative information from the premise
boys_age_14_premise = 80
boys_age_15_premise = 70
boys_age_13_premise = 50
boys_age_12_premise = 60

# Extracting the quantitative information from the hypothesis
boys_age_14_hypothesis = 50
boys_age_15_hypothesis = 70
boys_age_13_hypothesis = 50
boys_age_12_hypothesis = 60

def entailment_or_contradiction_or_neutral(boys_age_14_premise, boys_age_15_premise, boys_age_13_premise, boys_age_12_premise, boys_age_14_hypothesis, boys_age_15_hypothesis, boys_age_13_hypothesis, boys_age_12_hypothesis):
    # The hypothesis is referring to the number of boys in different age group in John's school, which is also referred in the premise
    # The hypothesis contradicts the premise for age group of 14 as the number of boys in age 14 in premise is higher than that in hypothesis
    if boys_age_14_premise > boys_age_14_hypothesis:
        return False
    # For other age groups, the number of boys are same in both premise and hypothesis, hence there is no contradiction
    elif boys_age_15_premise != boys_age_15_hypothesis or boys_age_13_premise != boys_age_13_hypothesis or boys_age_12_premise != boys_age_12_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(boys_age_14_premise, boys_age_15_premise, boys_age_13_premise, boys_age_12_premise, boys_age_14_hypothesis, boys_age_15_hypothesis, boys_age_13_hypothesis, boys_age_12_hypothesis))
"
7265,contradiction,,contradiction,There are 4 more women than men on Centerville ' s board of education,There are 7 more women than men on Centerville ' s board of education,there are 4 more women than men on centerville ' s board of education,there are 7 more women than men on centerville ' s board of education,"women_more_than_men_premise = 4
women_more_than_men_hypothesis = 7

def entailment_or_contradiction_or_neutral(women_more_than_men_premise, women_more_than_men_hypothesis):
    # the hypothesis talks about the difference between the number of women and men on the Centerville ' s board of education, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'women_more_than_men_premise', by checking if the difference from the hypothesis is not equal to 'women_more_than_men_premise'
    if women_more_than_men_hypothesis != women_more_than_men_premise:
        return False
    # if the hypothesis difference is equal to the premise difference, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(women_more_than_men_premise, women_more_than_men_hypothesis))
"
6298,neutral,,neutral,"Each week , Harry is paid x dollars per hour for the first less than 82 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first less than 82 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","base_hours_premise = 82
base_hours_hypothesis = 12

def entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis):
    # the hypothesis talks about the number of base hours Harry is paid x dollars for, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'base_hours_premise', by checking if the number of base hours from the hypothesis is greater or equal to 'base_hours_premise'
    if base_hours_hypothesis >= base_hours_premise:
        return False
    # any number of base hours less than 82 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis))
"
6109,neutral,,neutral,Level - less than 4 college graduates account for 15 % of Amtek ' s sales staff,Level - 1 college graduates account for 15 % of Amtek ' s sales staff,level - less than 4 college graduates account for 15 % of amtek ' s sales staff,level - 1 college graduates account for 15 % of amtek ' s sales staff,"max_level_premise = 4
level_hypothesis = 1

def entailment_or_contradiction_or_neutral(max_level_premise, level_hypothesis):
    # the hypothesis refers to the level of college graduates mentioned in the premise
    # the hypothesis specifies the level of college graduates as 'level_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'level_hypothesis' is higher than 'max_level_premise'
    if level_hypothesis >= max_level_premise:
        return False
    # any level less than 'max_level_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_level_premise, level_hypothesis))
"
7143,entailment,,entailment,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 48,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 48,"average_score_premise = 38
max_average_score_hypothesis = 48

def entailment_or_contradiction_or_neutral(average_score_premise, max_average_score_hypothesis):
    # the hypothesis refers to the golf score mentioned in the premise
    # the hypothesis estimates the average score to less than 'max_average_score_hypothesis'
    # check if the hypothesis contradicts the premise by checking if average score reported in the premise are higher than 'max_average_score_hypothesis'
    if average_score_premise > max_average_score_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(average_score_premise, max_average_score_hypothesis))
"
2974,neutral,,neutral,Dan can do a job alone in less than 85 hours,Dan can do a job alone in 15 hours,dan can do a job alone in less than 85 hours,dan can do a job alone in 15 hours,"max_hours_dan_premise = 85
hours_dan_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_hours_dan_premise, hours_dan_hypothesis):
    # the hypothesis talks about the number of hours Dan can do a job alone, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_hours_dan_premise', by checking if the number of hours from the hypothesis is greater or equal to 'max_hours_dan_premise'
    if hours_dan_hypothesis >= max_hours_dan_premise:
        return False
    # any number of hours less than 85 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_hours_dan_premise, hours_dan_hypothesis))
"
7283,contradiction,,contradiction,"Carolyn bought 16 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","Carolyn bought 66 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","carolyn bought 16 gumballs , lew bought 14 gumballs , and carey bought x gumballs","carolyn bought 66 gumballs , lew bought 14 gumballs , and carey bought x gumballs","carolyn_gumballs_premise = 16
lew_gumballs_premise = 14
carolyn_gumballs_hypothesis = 66
lew_gumballs_hypothesis = 14

def entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, carolyn_gumballs_hypothesis, lew_gumballs_hypothesis):
    # the hypothesis talks about the gumballs bought by Carolyn, Lew, and Carey, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of gumballs bought by Carolyn and Lew in the hypothesis is the same as in the premise
    if carolyn_gumballs_hypothesis != carolyn_gumballs_premise or lew_gumballs_hypothesis != lew_gumballs_premise:
        return False
    # if the number of gumballs bought by Carolyn and Lew in the hypothesis is the same as in the premise, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(carolyn_gumballs_premise, lew_gumballs_premise, carolyn_gumballs_hypothesis, lew_gumballs_hypothesis))
"
7296,entailment,,entailment,"When the river is running at 2 km / h , it takes the rower 1 hour to row to Big Rock and back","When the river is running at more than 1 km / h , it takes the rower 1 hour to row to Big Rock and back","when the river is running at 2 km / h , it takes the rower 1 hour to row to big rock and back","when the river is running at more than 1 km / h , it takes the rower 1 hour to row to big rock and back","river_speed_premise = 2
min_river_speed_hypothesis = 1
time_premise = time_hypothesis = 1

def entailment_or_contradiction_or_neutral(river_speed_premise, min_river_speed_hypothesis, time_premise, time_hypothesis):
    # the hypothesis refers to the river speed and rowing time mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the river speed reported in the premise is lower than 'min_river_speed_hypothesis' 
    # or if the time reported in the premise differs from time_hypothesis
    if river_speed_premise < min_river_speed_hypothesis or time_premise != time_hypothesis:
        return False
    # the premise entails the hypothesis as the river speed is higher than 'min_river_speed_hypothesis' and the time is equal to 'time_hypothesis'
    return True

print(entailment_or_contradiction_or_neutral(river_speed_premise, min_river_speed_hypothesis, time_premise, time_hypothesis))
"
6107,contradiction,,contradiction,"Jane is currently 32 years old , and she stopped baby - sitting 12 years ago","Jane is currently more than 32 years old , and she stopped baby - sitting 12 years ago","jane is currently 32 years old , and she stopped baby - sitting 12 years ago","jane is currently more than 32 years old , and she stopped baby - sitting 12 years ago","age_premise = 32
age_hypothesis = 32
years_since_babysitting_premise = 12
years_since_babysitting_hypothesis = 12

def entailment_or_contradiction_or_neutral(age_premise, age_hypothesis, years_since_babysitting_premise, years_since_babysitting_hypothesis):
    # The hypothesis and premise both talk about Jane's current age and when she stopped babysitting
    # First, check if the hypothesis contradicts the premise by checking 
    # if the age from the hypothesis is less than or equal to the age from the premise
    if age_hypothesis <= age_premise:
        return False
    # Next, check if the years since babysitting in the hypothesis contradicts the premise
    if years_since_babysitting_hypothesis != years_since_babysitting_premise:
        return False
    # if there are no contradictions, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(age_premise, age_hypothesis, years_since_babysitting_premise, years_since_babysitting_hypothesis))
"
6498,entailment,,entailment,"One hour after Matthew started waking from t to y , a distance of 45 km , Johnny started walking along the same road from y to t","One hour after Matthew started waking from t to y , a distance of more than 35 km , Johnny started walking along the same road from y to t","one hour after matthew started waking from t to y , a distance of 45 km , johnny started walking along the same road from y to t","one hour after matthew started waking from t to y , a distance of more than 35 km , johnny started walking along the same road from y to t","distance_walked_premise = 45
min_distance_walked_hypothesis = 35

def entailment_or_contradiction_or_neutral(distance_walked_premise, min_distance_walked_hypothesis):
    # the hypothesis refers to the distance walked by Matthew mentioned in the premise
    # the hypothesis estimates the distance walked to be more than 'min_distance_walked_hypothesis'
    # check if the hypothesis contradicts the premise by checking if distance walked reported in the premise is less than 'min_distance_walked_hypothesis'
    if distance_walked_premise < min_distance_walked_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_walked_premise, min_distance_walked_hypothesis))
"
6776,contradiction,,contradiction,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 4 : 2 ?,What is the average speed of Murali from A to C given that the ratio of distances between A to B and B to C is 3 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 4 : 2 ?,what is the average speed of murali from a to c given that the ratio of distances between a to b and b to c is 3 : 2 ?,"ratio_distances_premise = [4, 2]
ratio_distances_hypothesis = [3, 2]

def entailment_or_contradiction_or_neutral(ratio_distances_premise, ratio_distances_hypothesis):
    # the hypothesis talks about the ratio of distances, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'ratio_distances_premise', by checking if the ratio of distances from the hypothesis matches the premise
    if ratio_distances_hypothesis != ratio_distances_premise:
        return False
    # if the ratio of distances matches, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(ratio_distances_premise, ratio_distances_hypothesis))
"
6875,contradiction,,contradiction,Jhon works for 60 days,Jhon works for less than 60 days,jhon works for 60 days,jhon works for less than 60 days,"work_days_premise = 60
max_work_days_hypothesis = 60

def entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis):
    # the hypothesis refers to the number of work days mentioned in the premise
    # the hypothesis estimates the work days to less than 'max_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work days reported in the premise are more than 'max_work_days_hypothesis'
    if work_days_premise >= max_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis))
"
6667,neutral,,neutral,Kamal will complete work in less than 40 days,Kamal will complete work in 20 days,kamal will complete work in less than 40 days,kamal will complete work in 20 days,"max_days_work_premise = 40
days_work_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_days_work_premise, days_work_hypothesis):
    # the hypothesis talks about the number of days Kamal will work, a topic also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_days_work_premise', by checking if the number of days from the hypothesis is greater or equal to 'max_days_work_premise'
    if days_work_hypothesis >= max_days_work_premise:
        return False
    # any number of days less than 40 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_days_work_premise, days_work_hypothesis))
"
6964,neutral,,neutral,"In a locality , the prevailing price of a less than 800 square feet property last year was US Dollar 1000","In a locality , the prevailing price of a 700 square feet property last year was US Dollar 1000","in a locality , the prevailing price of a less than 800 square feet property last year was us dollar 1000","in a locality , the prevailing price of a 700 square feet property last year was us dollar 1000","max_property_size_premise = 800
property_price_premise = 1000
property_size_hypothesis = 700
property_price_hypothesis = 1000

def entailment_or_contradiction_or_neutral(max_property_size_premise, property_price_premise, property_size_hypothesis, property_price_hypothesis):
    # the hypothesis talks about a property price and its size, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_property_size_premise', by checking if the property size from the hypothesis is greater
    if property_size_hypothesis > max_property_size_premise:
        return False
    # check if the hypothesis contradicts the premise price
    elif property_price_hypothesis != property_price_premise:
        return False
    # the size and price from the hypothesis are both consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_property_size_premise, property_price_premise, property_size_hypothesis, property_price_hypothesis))
"
7434,entailment,,entailment,"Store Z : $ 90 , a 20 % sales tax , and $ 10 rebate after tax
Isaac can purchase a certain item in four different ways , as shown in the table","Store Z : $ more than 70 , a 20 % sales tax , and $ 10 rebate after tax Isaac can purchase a certain item in four different ways , as shown in the table","store z : $ 90 , a 20 % sales tax , and $ 10 rebate after taxisaac can purchase a certain item in four different ways , as shown in the table","store z : $ more than 70 , a 20 % sales tax , and $ 10 rebate after tax isaac can purchase a certain item in four different ways , as shown in the table","item_cost_premise = 90
min_item_cost_hypothesis = 70

def entailment_or_contradiction_or_neutral(item_cost_premise, min_item_cost_hypothesis):
    # the hypothesis talks about the cost of an item at Store Z, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the cost in the premise is less than 'min_item_cost_hypothesis'
    if item_cost_premise < min_item_cost_hypothesis:
        return False
    # check if the hypothesis is entailed by the premise by checking if the cost in the premise is more than 'min_item_cost_hypothesis'
    elif item_cost_premise >= min_item_cost_hypothesis:
        return True
    # if the cost in the premise is exactly 'min_item_cost_hypothesis', the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(item_cost_premise, min_item_cost_hypothesis))
"
6587,contradiction,,contradiction,Sony and Johnny caught 60 fishes,Sony and Johnny caught 30 fishes,sony and johnny caught 60 fishes,sony and johnny caught 30 fishes,"fishes_caught_premise = 60
fishes_caught_hypothesis = 30

def entailment_or_contradiction_or_neutral(fishes_caught_premise, fishes_caught_hypothesis):
    # the hypothesis talks about the number of fishes caught by Sony and Johnny, also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the number of fishes caught, according to the hypothesis, is less than the number of fishes caught according to the premise
    if fishes_caught_hypothesis < fishes_caught_premise:
        return False
    # if the number of fishes caught according to the hypothesis is equal to the number of fishes caught according to the premise, the hypothesis is entailed by the premise
    elif fishes_caught_hypothesis == fishes_caught_premise:
        return True
    # any number of fishes caught greater than 60 is consistent with the premise, so the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(fishes_caught_premise, fishes_caught_hypothesis))
"
7511,contradiction,,contradiction,"City A to city B , Andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 7 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hour at 50 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 7 hour at 50 mph and for 3 hours at 60 mph","# Defining the driving hours and speeds for both the premise and the hypothesis.
drive_hours_at_50mph_premise = 1
drive_hours_at_60mph_premise = 3
drive_hours_at_50mph_hypothesis = 7
drive_hours_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_hours_at_50mph_premise, drive_hours_at_60mph_premise, drive_hours_at_50mph_hypothesis, drive_hours_at_60mph_hypothesis):
    # The hypothesis refers to the driving hours from city A to city B, also mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the total driving hours in the hypothesis are more than those in the premise.
    if (drive_hours_at_50mph_hypothesis > drive_hours_at_50mph_premise) or (drive_hours_at_60mph_hypothesis > drive_hours_at_60mph_premise):
        return False
    # If the total driving hours in the hypothesis are equal to or less than those mentioned in the premise, the hypothesis is entailed by the premise.
    elif (drive_hours_at_50mph_hypothesis <= drive_hours_at_50mph_premise) and (drive_hours_at_60mph_hypothesis <= drive_hours_at_60mph_premise):
        return True
    # If the total driving hours in the hypothesis are not exactly mentioned in the premise, the hypothesis is neutral to the premise.
    else:
        return None

print(entailment_or_contradiction_or_neutral(drive_hours_at_50mph_premise, drive_hours_at_60mph_premise, drive_hours_at_50mph_hypothesis, drive_hours_at_60mph_hypothesis))
"
6616,neutral,,neutral,There are less than 28 stations between Hyderabad and Bangalore,There are 18 stations between Hyderabad and Bangalore,there are less than 28 stations between hyderabad and bangalore,there are 18 stations between hyderabad and bangalore,"max_stations_premise = 28
stations_hypothesis = 18

def entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis):
    # the hypothesis gives an exact number of stations between two cities, also discussed in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_stations_premise', by checking if the number of stations from the hypothesis is greater or equal to 'max_stations_premise'
    if stations_hypothesis >= max_stations_premise:
        return False
    # any number of stations less than 28 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_stations_premise, stations_hypothesis))
"
6636,entailment,,entailment,"Ram , Krish and Bhim can complete a work in 30 days","Ram , Krish and Bhim can complete a work in less than 50 days","ram , krish and bhim can complete a work in 30 days","ram , krish and bhim can complete a work in less than 50 days","work_days_premise = 30
max_work_days_hypothesis = 50

def entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis):
    # the hypothesis refers to the time Ram, Krish and Bhim take to complete a work mentioned in the premise
    # the hypothesis estimates the work completion time to be less than 'max_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if work completion time reported in the premise is more than 'max_work_days_hypothesis'
    if work_days_premise > max_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis))
"
7574,contradiction,,contradiction,"If Fred walks at a constant speed of 2 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","If Fred walks at a constant speed of more than 2 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","if fred walks at a constant speed of 2 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","if fred walks at a constant speed of more than 2 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","fred_speed_premise = 2
sam_speed_premise = 5
min_fred_speed_hypothesis = 2
sam_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, min_fred_speed_hypothesis, sam_speed_hypothesis):
    # the hypothesis talks about the speed of Fred and Sam from the premise
    # check if the hypothesis contradicts the premise by checking if Fred's speed from the premise is less than 'min_fred_speed_hypothesis' or Sam's speed from the premise is not equal to 'sam_speed_hypothesis'
    if fred_speed_premise <= min_fred_speed_hypothesis or sam_speed_premise != sam_speed_hypothesis:
        return False
    # If the speeds of Fred and Sam in the hypothesis are not less than or greater than the speeds in premise, then it does not contradict the premise.
    # Hence, it is neutral to the premise.
    return None

print(entailment_or_contradiction_or_neutral(fred_speed_premise, sam_speed_premise, min_fred_speed_hypothesis, sam_speed_hypothesis))
"
5940,entailment,,entailment,"In a friendship gang Mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Mala has more than 2 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has more than 2 gang , in how many ways can he invite one or more of the gang to his house ?","gangs_mala_premise = 5
min_gangs_mala_hypothesis = 2

def entailment_or_contradiction_or_neutral(gangs_mala_premise, min_gangs_mala_hypothesis):
    # the hypothesis refers to the number of gangs Mala has, mentioned in the premise
    # the hypothesis estimates the number of gangs to be more than 'min_gangs_mala_hypothesis'
    # check if the hypothesis contradicts the premise by checking if number of gangs reported in the premise are lower than 'min_gangs_mala_hypothesis'
    if gangs_mala_premise < min_gangs_mala_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(gangs_mala_premise, min_gangs_mala_hypothesis))
"
6554,contradiction,,contradiction,"Last year 30 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","Last year more than 30 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","last year 30 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","last year more than 30 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","club_members_england_premise = 30
club_members_england_hypothesis = 30
club_members_france_premise = 26
club_members_france_hypothesis = 26
club_members_italy_premise = 32
club_members_italy_hypothesis = 32

def entailment_or_contradiction_or_neutral(club_members_england_premise, club_members_england_hypothesis, club_members_france_premise, club_members_france_hypothesis, club_members_italy_premise, club_members_italy_hypothesis):
    # the hypothesis refers to the number of club members who traveled to England, France and Italy last year, which is also mentioned in the premise
    # the hypothesis estimates the number of members who traveled to England to be more than 'club_members_england_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of members who traveled to England as per the premise is less than or equal to 'club_members_england_hypothesis'
    if club_members_england_premise <= club_members_england_hypothesis:
        return False
    # the hypothesis also mentions the exact number of members who traveled to France and Italy, which is the same as in the premise
    # as the number of members who traveled to France and Italy as per the hypothesis is the same as the premise, these parts of the hypothesis are entailed by the premise
    if club_members_france_premise == club_members_france_hypothesis and club_members_italy_premise == club_members_italy_hypothesis:
        return True
    # if none of the above conditions are met, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(club_members_england_premise, club_members_england_hypothesis, club_members_france_premise, club_members_france_hypothesis, club_members_italy_premise, club_members_italy_hypothesis))
"
5987,contradiction,,contradiction,Mark sold 6 boxes less than n and Ann sold 2 boxes less than n,Mark sold less than 6 boxes less than n and Ann sold 2 boxes less than n,mark sold 6 boxes less than n and ann sold 2 boxes less than n,mark sold less than 6 boxes less than n and ann sold 2 boxes less than n,"mark_boxes_premise = 6
ann_boxes_premise = 2
mark_boxes_hypothesis = 6

def entailment_or_contradiction_or_neutral(mark_boxes_premise, ann_boxes_premise, mark_boxes_hypothesis):
    # the hypothesis refers to the number of boxes sold by Mark and Ann, which are also mentioned in the premise
    # the hypothesis estimates that Mark sold less than 'mark_boxes_hypothesis' boxes less than n
    # check if the hypothesis contradicts the premise by checking if Mark's sold boxes reported in the premise are more than or equal to 'mark_boxes_hypothesis'
    if mark_boxes_premise >= mark_boxes_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, check if it entails the premise information
    # check if the number of boxes sold by Ann in the premise is equal to the one stated in the hypothesis
    elif ann_boxes_premise == ann_boxes_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(mark_boxes_premise, ann_boxes_premise, mark_boxes_hypothesis))
"
7410,entailment,,entailment,Raman mixed 27 kg of butter at Rs,Raman mixed less than 47 kg of butter at Rs,raman mixed 27 kg of butter at rs,raman mixed less than 47 kg of butter at rs,"butter_kg_premise = 27
max_butter_kg_hypothesis = 47

def entailment_or_contradiction_or_neutral(butter_kg_premise, max_butter_kg_hypothesis):
    # the hypothesis refers to the quantity of butter Raman mixed as mentioned in the premise.
    # the hypothesis estimates the butter weight to be less than 'max_butter_kg_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the butter weight in the premise is greater than 'max_butter_kg_hypothesis'
    if butter_kg_premise > max_butter_kg_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(butter_kg_premise, max_butter_kg_hypothesis))
"
7501,neutral,,neutral,"Pat runs at more than 1 miles per hour , and Cara runs at 5 miles per hour","Pat runs at 9 miles per hour , and Cara runs at 5 miles per hour","pat runs at more than 1 miles per hour , and cara runs at 5 miles per hour","pat runs at 9 miles per hour , and cara runs at 5 miles per hour","min_speed_pat_premise = 1
speed_cara_premise = 5
speed_pat_hypothesis = 9
speed_cara_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_speed_pat_premise, speed_cara_premise, speed_pat_hypothesis, speed_cara_hypothesis):
    # the hypothesis gives specific speeds for Pat and Cara, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Pat's speed is less or equal to 'min_speed_pat_premise' or Cara's speed is not equal to 'speed_cara_premise'
    if speed_pat_hypothesis <= min_speed_pat_premise or speed_cara_hypothesis != speed_cara_premise:
        return False
    # any value for Pat's speed greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_pat_premise, speed_cara_premise, speed_pat_hypothesis, speed_cara_hypothesis))
"
6886,neutral,,neutral,"Kiran has more than 55 currency notes in all , some of which were of Rs","Kiran has 85 currency notes in all , some of which were of Rs","kiran has more than 55 currency notes in all , some of which were of rs","kiran has 85 currency notes in all , some of which were of rs","min_notes_premise = 55
notes_hypothesis = 85

def entailment_or_contradiction_or_neutral(min_notes_premise, notes_hypothesis):
    # the hypothesis talks about the total number of currency notes Kiran has, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_notes_premise', by checking if the number of notes from the hypothesis is lower or equal to 'min_notes_premise'
    if notes_hypothesis <= min_notes_premise:
        return False
    # any number of notes greater than 55 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_notes_premise, notes_hypothesis))
"
7535,contradiction,,contradiction,"If Leo gains 10 pounds , he will weigh 50 % more than his sister Kendra","If Leo gains 80 pounds , he will weigh 50 % more than his sister Kendra","if leo gains 10 pounds , he will weigh 50 % more than his sister kendra","if leo gains 80 pounds , he will weigh 50 % more than his sister kendra","leo_weight_gain_premise = 10
leo_weight_gain_hypothesis = 80

def entailment_or_contradiction_or_neutral(leo_weight_gain_premise, leo_weight_gain_hypothesis):
    # the hypothesis refers to the weight gain of Leo mentioned in the premise
    # the hypothesis estimates the weight gain to be equal to 'leo_weight_gain_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the weight gain reported in the premise is different from 'leo_weight_gain_hypothesis'
    if leo_weight_gain_premise != leo_weight_gain_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(leo_weight_gain_premise, leo_weight_gain_hypothesis))
"
6748,neutral,,neutral,Raman mixed less than 84 kg of butter at Rs,Raman mixed 44 kg of butter at Rs,raman mixed less than 84 kg of butter at rs,raman mixed 44 kg of butter at rs,"max_butter_kg_premise = 84
butter_kg_hypothesis = 44

def entailment_or_contradiction_or_neutral(max_butter_kg_premise, butter_kg_hypothesis):
    # the hypothesis talks about the amount of butter mixed by Raman, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_butter_kg_premise', by checking if the amount of butter from the hypothesis is greater than 'max_butter_kg_premise'
    if butter_kg_hypothesis > max_butter_kg_premise:
        return False
    # any amount of butter less than 84 kg is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_butter_kg_premise, butter_kg_hypothesis))
"
6824,contradiction,,contradiction,Lilly has 10 fish and Rosy has 8 fish,Lilly has 40 fish and Rosy has 8 fish,lilly has 10 fish and rosy has 8 fish,lilly has 40 fish and rosy has 8 fish,"lilly_fish_premise = 10
rosy_fish_premise = 8
lilly_fish_hypothesis = 40
rosy_fish_hypothesis = 8

def entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, lilly_fish_hypothesis, rosy_fish_hypothesis):
    # the hypothesis refers to the number of fish Lilly and Rosy have, as stated in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of fish Lilly or Rosy have in the hypothesis is different from the premise
    if lilly_fish_premise != lilly_fish_hypothesis or rosy_fish_premise != rosy_fish_hypothesis:
        return False
    # if the numbers match, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, lilly_fish_hypothesis, rosy_fish_hypothesis))
"
7424,contradiction,,contradiction,"At the same time , Albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","At the same time , Albert gets on an elevator at the 81 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the 81 st floor of the same building and rides down at the rate of 63 floors per minute","albert_start_floor_premise = 51
albert_start_floor_hypothesis = 81
albert_rate_down = 63

def entailment_or_contradiction_or_neutral(albert_start_floor_premise, albert_start_floor_hypothesis, albert_rate_down):
    # the hypothesis refers to Albert's starting floor in the premise
    # the hypothesis states that Albert starts at the 'albert_start_floor_hypothesis' floor
    # check if the hypothesis contradicts the premise by checking if Albert's starting floor in the premise is different than 'albert_start_floor_hypothesis'
    if albert_start_floor_premise != albert_start_floor_hypothesis:
        return False
    # if the floors are the same, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(albert_start_floor_premise, albert_start_floor_hypothesis, albert_rate_down))
"
7475,contradiction,,contradiction,A “ Sophie Germain ” prime is any positive prime number p for which 2 p + 1 is also prime,A “ Sophie Germain ” prime is any positive prime number p for which 8 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 2 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 8 p + 1 is also prime,"# The quantities in this case are not numeric but rather mathematical expressions, here represented as Python functions

def prime_premise(p):
    return is_prime(2*p + 1)

def prime_hypothesis(p):
    return is_prime(8*p + 1)

def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

def entailment_or_contradiction_or_neutral(prime_premise, prime_hypothesis):
    # the hypothesis talks about a special kind of prime numbers, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if for all prime numbers 'p', the premise and hypothesis functions return different results
    p = 2
    while True:
        if prime_premise(p) != prime_hypothesis(p):
            return False
        p += 1

# The function entailment_or_contradiction_or_neutral will return False as soon as it finds a prime number for which the premise and hypothesis disagree
# The function is_prime checks if a number is prime using the mathematical definition of a prime number
print(entailment_or_contradiction_or_neutral(prime_premise, prime_hypothesis))
"
6488,contradiction,,contradiction,"During the first two weeks of March , the total rainfall in Springdale was 25 inches","During the first two weeks of March , the total rainfall in Springdale was more than 25 inches","during the first two weeks of march , the total rainfall in springdale was 25 inches","during the first two weeks of march , the total rainfall in springdale was more than 25 inches","rainfall_premise = 25
min_rainfall_hypothesis = 25

def entailment_or_contradiction_or_neutral(rainfall_premise, min_rainfall_hypothesis):
    # the hypothesis refers to the rainfall during the first two weeks of March in Springdale, also mentioned in the premise
    # the hypothesis estimates the rainfall to be more than 'min_rainfall_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the rainfall reported in the premise is lower than or equal to 'min_rainfall_hypothesis'
    if rainfall_premise <= min_rainfall_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(rainfall_premise, min_rainfall_hypothesis))
"
6997,neutral,,neutral,"Sacha runs at a constant speed of more than 1 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of 9 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 1 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 9 meters per second , and bruno runs at a constant speed of 5 meters per second","min_speed_sacha_premise = 1
speed_bruno_premise = 5
speed_sacha_hypothesis = 9
speed_bruno_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_bruno_premise, speed_sacha_hypothesis, speed_bruno_hypothesis):
    # the hypothesis talks about the speed at which Sacha and Bruno run, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if Sacha's speed in the hypothesis is lesser or equal to the 'min_speed_sacha_premise' or Bruno's speed in the hypothesis is not equal to 'speed_bruno_premise'
    if speed_sacha_hypothesis <= min_speed_sacha_premise or speed_bruno_hypothesis != speed_bruno_premise:
        return False
    # any speed of Sacha greater than 1 is consistent with the premise, and Bruno's speed is the same in both premise and hypothesis, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_bruno_premise, speed_sacha_hypothesis, speed_bruno_hypothesis))
"
5911,neutral,,neutral,"The ratio between the number of sheep and the number of horses at the Stewart farm is less than 6 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","The ratio between the number of sheep and the number of horses at the Stewart farm is 1 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is less than 6 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is 1 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","ratio_sheep_horses_premise = 6/7
ratio_sheep_horses_hypothesis = 1/7

def entailment_or_contradiction_or_neutral(ratio_sheep_horses_premise, ratio_sheep_horses_hypothesis):
    # the hypothesis refers to the ratio between the number of sheep and horses at the farm, which is also mentioned in the premise
    # the hypothesis proposes a ratio of 'ratio_sheep_horses_hypothesis'
    # check if the ratio proposed by the hypothesis contradicts the premise by checking if 'ratio_sheep_horses_hypothesis' is greater than 'ratio_sheep_horses_premise'
    if ratio_sheep_horses_hypothesis > ratio_sheep_horses_premise:
        return False
    # if the ratio proposed by the hypothesis is smaller or equal to the premise, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(ratio_sheep_horses_premise, ratio_sheep_horses_hypothesis))
"
6719,contradiction,,contradiction,"Four different children have jelly beans : Aaron has 5 , Bianca has 7 , Callie has 8 , and Dante has 13","Four different children have jelly beans : Aaron has 2 , Bianca has 7 , Callie has 8 , and Dante has 13","four different children have jelly beans : aaron has 5 , bianca has 7 , callie has 8 , and dante has 13","four different children have jelly beans : aaron has 2 , bianca has 7 , callie has 8 , and dante has 13","aaron_jelly_beans_premise = 5
bianca_jelly_beans_premise = 7
callie_jelly_beans_premise = 8
dante_jelly_beans_premise = 13

aaron_jelly_beans_hypothesis = 2
bianca_jelly_beans_hypothesis = 7
callie_jelly_beans_hypothesis = 8
dante_jelly_beans_hypothesis = 13

def entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis):
    # the hypothesis refers to the number of jelly beans each child has, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of jelly beans each child has in the hypothesis matches the premise
    if aaron_jelly_beans_premise != aaron_jelly_beans_hypothesis or bianca_jelly_beans_premise != bianca_jelly_beans_hypothesis or callie_jelly_beans_premise != callie_jelly_beans_hypothesis or dante_jelly_beans_premise != dante_jelly_beans_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis))
"
6830,contradiction,,contradiction,"After 6 years , Arun ' s age will be 26 years","After 3 years , Arun ' s age will be 26 years","after 6 years , arun ' s age will be 26 years","after 3 years , arun ' s age will be 26 years","future_age_premise = 26
future_years_premise = 6
future_age_hypothesis = 26
future_years_hypothesis = 3

def entailment_or_contradiction_or_neutral(future_age_premise, future_years_premise, future_age_hypothesis, future_years_hypothesis):
    # the premise and the hypothesis talk about Arun's age in the future
    # check if the hypothesis contradicts the premise by checking if the future age in the hypothesis is reached in a different number of years than in the premise
    if future_age_premise == future_age_hypothesis and future_years_premise != future_years_hypothesis:
        return False
    # if the future age in the hypothesis is reached in the same number of years as in the premise, the hypothesis entails the premise
    elif future_age_premise == future_age_hypothesis and future_years_premise == future_years_hypothesis:
        return True
    # if neither contradiction nor entailment are found, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(future_age_premise, future_years_premise, future_age_hypothesis, future_years_hypothesis))
"
6133,neutral,,neutral,"Each week , James is paid x dollars per per hour for the first less than 60 hours and 2 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first less than 60 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","max_regular_hours_premise = 60
regular_hours_hypothesis = 40

def entailment_or_contradiction_or_neutral(max_regular_hours_premise, regular_hours_hypothesis):
    # the hypothesis talks about the number of regular pay hours James works, which is also mentioned in the premise
    # the hypothesis suggests James works 'regular_hours_hypothesis', which is less than the 'max_regular_hours_premise'
    # check if the hypothesis contradicts the premise estimate of less than 'max_regular_hours_premise', by checking if the number of regular hours from the hypothesis is greater or equal to 'max_regular_hours_premise'
    if regular_hours_hypothesis >= max_regular_hours_premise:
        return False
    # any number of regular hours less than 60 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_regular_hours_premise, regular_hours_hypothesis))
"
6861,entailment,,entailment,"One hour after Matthew started waking from r to y , a distance of 45 km , Johnny started walking along the same road from y to r","One hour after Matthew started waking from r to y , a distance of more than 35 km , Johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of 45 km , johnny started walking along the same road from y to r","one hour after matthew started waking from r to y , a distance of more than 35 km , johnny started walking along the same road from y to r","distance_walked_premise = 45
min_distance_walked_hypothesis = 35

def entailment_or_contradiction_or_neutral(distance_walked_premise, min_distance_walked_hypothesis):
    # the hypothesis refers to the distance walked mentioned in the premise
    # the hypothesis estimates the distance walked to be more than 'min_distance_walked_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance walked reported in the premise is less than 'min_distance_walked_hypothesis'
    if distance_walked_premise < min_distance_walked_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_walked_premise, min_distance_walked_hypothesis))
"
6762,entailment,,entailment,Patrick has a lock that contains a 3 digit password,Patrick has a lock that contains a less than 7 digit password,patrick has a lock that contains a 3 digit password,patrick has a lock that contains a less than 7 digit password,"password_length_premise = 3
max_password_length_hypothesis = 7

def entailment_or_contradiction_or_neutral(password_length_premise, max_password_length_hypothesis):
    # the hypothesis refers to the password length of Patrick's lock, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if password length in the premise is greater than 'max_password_length_hypothesis'
    if password_length_premise > max_password_length_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(password_length_premise, max_password_length_hypothesis))
"
7389,entailment,,entailment,Rosy is 10 % more efficient than Mary,Rosy is less than 30 % more efficient than Mary,rosy is 10 % more efficient than mary,rosy is less than 30 % more efficient than mary,"efficiency_difference_premise = 10
max_efficiency_difference_hypothesis = 30

def entailment_or_contradiction_or_neutral(efficiency_difference_premise, max_efficiency_difference_hypothesis):
    # the hypothesis refers to the efficiency difference between Rosy and Mary mentioned in the premise
    # the hypothesis estimates the efficiency difference to be less than 'max_efficiency_difference_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the efficiency difference reported in the premise is greater than 'max_efficiency_difference_hypothesis'
    if efficiency_difference_premise > max_efficiency_difference_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(efficiency_difference_premise, max_efficiency_difference_hypothesis))
"
6374,contradiction,,contradiction,Shreehari has 125 pencils,Shreehari has 525 pencils,shreehari has 125 pencils,shreehari has 525 pencils,"pencils_shreehari_premise = 125
pencils_shreehari_hypothesis = 525

def entailment_or_contradiction_or_neutral(pencils_shreehari_premise, pencils_shreehari_hypothesis):
    # the hypothesis refers to the number of pencils Shreehari has, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of pencils in the hypothesis is different from the one in the premise
    if pencils_shreehari_premise != pencils_shreehari_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pencils_shreehari_premise, pencils_shreehari_hypothesis))
"
5964,entailment,,entailment,Yesterday it took Robert 4 hours to drive from City A to City B,Yesterday it took Robert less than 8 hours to drive from City A to City B,yesterday it took robert 4 hours to drive from city a to city b,yesterday it took robert less than 8 hours to drive from city a to city b,"drive_time_premise = 4
max_drive_time_hypothesis = 8

def entailment_or_contradiction_or_neutral(drive_time_premise, max_drive_time_hypothesis):
    # the hypothesis talks about the time it took Robert to drive from City A to City B, as mentioned in the premise
    # the hypothesis estimates the time to be less than 'max_drive_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the drive time from the premise is greater than 'max_drive_time_hypothesis'
    if drive_time_premise > max_drive_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_time_premise, max_drive_time_hypothesis))
"
5935,neutral,,neutral,"The pilot of a small aircraft with a more than 20 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","The pilot of a small aircraft with a 60 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","the pilot of a small aircraft with a more than 20 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","the pilot of a small aircraft with a 60 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","min_fuel_tank_premise = 20
fuel_tank_hypothesis = 60

def entailment_or_contradiction_or_neutral(min_fuel_tank_premise, fuel_tank_hypothesis):
    # the hypothesis talks about the size of a fuel tank in a plane, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_fuel_tank_premise', by checking if the tank size from the hypothesis is lower or equal to 'min_fuel_tank_premise'
    if fuel_tank_hypothesis <= min_fuel_tank_premise:
        return False
    # any tank size greater than 20 gallons is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_fuel_tank_premise, fuel_tank_hypothesis))
"
6944,contradiction,,contradiction,"Jill , who lives in City C , plans to visit 7 different cities , M , L , P , I , Y , B and S","Jill , who lives in City C , plans to visit 6 different cities , M , L , P , I , Y , B and S","jill , who lives in city c , plans to visit 7 different cities , m , l , p , i , y , b and s","jill , who lives in city c , plans to visit 6 different cities , m , l , p , i , y , b and s","cities_to_visit_premise = 7
cities_to_visit_hypothesis = 6

def entailment_or_contradiction_or_neutral(cities_to_visit_premise, cities_to_visit_hypothesis):
    # the hypothesis talks about the number of cities Jill plans to visit, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of cities Jill plans to visit in the hypothesis is different from the one in the premise
    if cities_to_visit_hypothesis != cities_to_visit_premise:
        return False
    # if the number of cities Jill plans to visit in the hypothesis is the same as the one in the premise, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(cities_to_visit_premise, cities_to_visit_hypothesis))
"
6804,entailment,,entailment,"One hour after Yolanda started walking from X to Y , a distance of 31 miles , Bob started walking along the same road from Y to X","One hour after Yolanda started walking from X to Y , a distance of less than 81 miles , Bob started walking along the same road from Y to X","one hour after yolanda started walking from x to y , a distance of 31 miles , bob started walking along the same road from y to x","one hour after yolanda started walking from x to y , a distance of less than 81 miles , bob started walking along the same road from y to x","distance_X_Y_premise = 31
max_distance_X_Y_hypothesis = 81

def entailment_or_contradiction_or_neutral(distance_X_Y_premise, max_distance_X_Y_hypothesis):
    # the hypothesis talks about the distance from X to Y which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the distance in the premise is greater than the 'max_distance_X_Y_hypothesis'
    if distance_X_Y_premise > max_distance_X_Y_hypothesis:
        return False
    # if the premise distance is less than or equal to the 'max_distance_X_Y_hypothesis', it is entailed in the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_X_Y_premise, max_distance_X_Y_hypothesis))
"
7400,contradiction,,contradiction,"If the average speed of the whole journey was 36 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","If the average speed of the whole journey was less than 36 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","if the average speed of the whole journey was 36 mph , then what is tom ' s speed driving from b to c in miles per hour ?","if the average speed of the whole journey was less than 36 mph , then what is tom ' s speed driving from b to c in miles per hour ?","avg_speed_journey_premise = 36
max_avg_speed_journey_hypothesis = 36

def entailment_or_contradiction_or_neutral(avg_speed_journey_premise, max_avg_speed_journey_hypothesis):
    # the hypothesis refers to the average speed of the journey mentioned in the premise
    # the hypothesis estimates the average speed to be less than 'max_avg_speed_journey_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the average speed reported in the premise is greater than or equal to 'max_avg_speed_journey_hypothesis'
    if avg_speed_journey_premise >= max_avg_speed_journey_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(avg_speed_journey_premise, max_avg_speed_journey_hypothesis))
"
3062,contradiction,,contradiction,In a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,In a group of less than 6 boys & 4 girls a Committee of 4 persons is to be formed,in a group of 6 boys & 4 girls a committee of 4 persons is to be formed,in a group of less than 6 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
boys_hypothesis = 5
girls_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis):
    # the hypothesis states that a committee is formed from a group of less than 6 boys and 4 girls
    # this contradicts the premise which states that the group consists of 6 boys and 4 girls
    if boys_hypothesis < boys_premise and girls_hypothesis == girls_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis))
"
6434,contradiction,,contradiction,Sachi invested amount of 8000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,Sachi invested amount of 2000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,sachi invested amount of 8000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,sachi invested amount of 2000 in a fixed deposit for 2 years at compound interest rate of 5 % per annum,"sachi_investment_premise = 8000
sachi_investment_hypothesis = 2000

def entailment_or_contradiction_or_neutral(sachi_investment_premise, sachi_investment_hypothesis):
    # the hypothesis refers to the investment amount of Sachi, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the investment amount reported in the hypothesis is different from the premise
    if sachi_investment_premise != sachi_investment_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sachi_investment_premise, sachi_investment_hypothesis))
"
6200,contradiction,,contradiction,There are 18 stations between Hyderabad and Bangalore,There are 88 stations between Hyderabad and Bangalore,there are 18 stations between hyderabad and bangalore,there are 88 stations between hyderabad and bangalore,"stations_hyderabad_bangalore_premise = 18
stations_hyderabad_bangalore_hypothesis = 88

def entailment_or_contradiction_or_neutral(stations_hyderabad_bangalore_premise, stations_hyderabad_bangalore_hypothesis):
    # The hypothesis talks about the number of stations between Hyderabad and Bangalore, which is also mentioned in the premise.
    # First, check if the hypothesis contradicts the premise by seeing if the number of stations in the hypothesis is not equal to the number in the premise.
    if stations_hyderabad_bangalore_hypothesis != stations_hyderabad_bangalore_premise:
        return False
    # If no contradiction was found, then the hypothesis is neutral to the premise.
    return None

print(entailment_or_contradiction_or_neutral(stations_hyderabad_bangalore_premise, stations_hyderabad_bangalore_hypothesis))
"
6251,contradiction,,contradiction,From a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,From a group of more than 6 boys & 4 girls a Committee of 4 persons is to be formed,from a group of 6 boys & 4 girls a committee of 4 persons is to be formed,from a group of more than 6 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
min_boys_hypothesis = 7
girls_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis):
    # the hypothesis refers to the number of boys and girls mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of boys or girls reported in the premise are lower than the number of boys or girls from the hypothesis
    if boys_premise < min_boys_hypothesis or girls_premise < girls_hypothesis:
        return False
    # any number of boys greater than or equal to 6 and girls equal to 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, min_boys_hypothesis, girls_hypothesis))
"
7205,contradiction,,contradiction,If the marks secured by Reema was written as 50 instead of 85 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as 70 instead of 85 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 50 instead of 85 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 70 instead of 85 then find the correct average marks up to two decimal places .,"reema_marks_written_premise = 50
reema_correct_marks = 85
reema_marks_written_hypothesis = 70

def entailment_or_contradiction_or_neutral(reema_marks_written_premise, reema_correct_marks, reema_marks_written_hypothesis):
    # the hypothesis refers to the scenario of Reema's marks being written incorrectly, as mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the incorrect marks written in the premise and hypothesis
    if reema_marks_written_premise != reema_marks_written_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, it is neutral to the premise, as it does not provide any additional information.
    return None

print(entailment_or_contradiction_or_neutral(reema_marks_written_premise, reema_correct_marks, reema_marks_written_hypothesis))
"
7194,entailment,,entailment,The time required by a train to cover the distance between Chennai and Jammu is exactly 7 days and 1 minute,The time required by a train to cover the distance between Chennai and Jammu is exactly more than 6 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly 7 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly more than 6 days and 1 minute,"# The time in minutes required by a train to cover the distance between Chennai and Jammu according to the premise
time_train_premise = 7 * 24 * 60 + 1

# The minimum time in minutes required by a train to cover the distance between Chennai and Jammu according to the hypothesis
min_time_train_hypothesis = 6 * 24 * 60 + 1

def entailment_or_contradiction_or_neutral(time_train_premise, min_time_train_hypothesis):
    # the hypothesis refers to the time required by a train to cover the distance between Chennai and Jammu, mentioned in the premise
    # the hypothesis estimates the time to be more than 'min_time_train_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the time reported in the premise is lower or equal to 'min_time_train_hypothesis'
    if time_train_premise <= min_time_train_hypothesis:
        return False
    else:
        # since the premise exactly matches the hypothesis condition, it entails the hypothesis
        return True

print(entailment_or_contradiction_or_neutral(time_train_premise, min_time_train_hypothesis))
"
6757,neutral,,neutral,Tom goes after more than 4 P,Tom goes after 8 P,tom goes after more than 4 p,tom goes after 8 p,"min_time_tom_goes_premise = 4
time_tom_goes_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_time_tom_goes_premise, time_tom_goes_hypothesis):
    # the hypothesis talks about the time when Tom goes, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_time_tom_goes_premise', by checking if the time from the hypothesis is lower or equal to 'min_time_tom_goes_premise'
    if time_tom_goes_hypothesis <= min_time_tom_goes_premise:
        return False
    # any time after 4P is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_time_tom_goes_premise, time_tom_goes_hypothesis))
"
6586,neutral,,neutral,Sony and Johnny caught more than 40 fishes,Sony and Johnny caught 60 fishes,sony and johnny caught more than 40 fishes,sony and johnny caught 60 fishes,"min_fishes_caught_premise = 40
fishes_caught_hypothesis = 60

def entailment_or_contradiction_or_neutral(min_fishes_caught_premise, fishes_caught_hypothesis):
    # the hypothesis talks about the number of fishes caught, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_fishes_caught_premise', by checking if the number of fishes from the hypothesis is lower or equal to 'min_fishes_caught_premise'
    if fishes_caught_hypothesis <= min_fishes_caught_premise:
        return False
    # any number of fishes greater than 40 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_fishes_caught_premise, fishes_caught_hypothesis))
"
7211,contradiction,,contradiction,"At Veridux Corporation , there are 250 employees","At Veridux Corporation , there are 850 employees","at veridux corporation , there are 250 employees","at veridux corporation , there are 850 employees","employees_premise = 250
employees_hypothesis = 850

def entailment_or_contradiction_or_neutral(employees_premise, employees_hypothesis):
    # the hypothesis refers to the number of employees at Veridux Corporation mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of employees reported in the hypothesis is different from the premise
    if employees_hypothesis != employees_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_premise, employees_hypothesis))
"
7180,neutral,,neutral,"City A to city B , Andrew drove for less than 5 hr at 42 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 5 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","drive_time_premise = 5
drive_time_hypothesis = 1

def entailment_or_contradiction_or_neutral(drive_time_premise, drive_time_hypothesis):
    # The hypothesis speaks about the time Andrew drove from City A to City B, which is also mentioned in the premise
    # The hypothesis specifies that Andrew drove for 'drive_time_hypothesis' hours at 42 mph, which is less than the 'drive_time_premise' hours specified in the premise
    # This does not contradict the premise as the premise states that Andrew drove for less than 'drive_time_premise' hours at 42 mph
    # As such, the hypothesis is neutral with respect to the premise
    if drive_time_hypothesis > drive_time_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(drive_time_premise, drive_time_hypothesis))
"
6854,contradiction,,contradiction,"Matt is touring a nation in which coins are issued in two amounts , 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","Matt is touring a nation in which coins are issued in two amounts , more than 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","matt is touring a nation in which coins are issued in two amounts , 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","matt is touring a nation in which coins are issued in two amounts , more than 2 ¢ and 5 ¢ , which are made of iron and copper , respectively","coin1_premise = 2
coin2_premise = 5
min_coin1_hypothesis = 2
coin2_hypothesis = 5

def entailment_or_contradiction_or_neutral(coin1_premise, coin2_premise, min_coin1_hypothesis, coin2_hypothesis):
    # the hypothesis refers to the coin amounts mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the amounts reported in the premise are less than or equal to the minimum amounts in the hypothesis
    if coin1_premise <= min_coin1_hypothesis or coin2_premise < coin2_hypothesis:
        return False
    # the hypothesis entails the premise as the coin amounts in the premise are greater than or equal to the minimum amounts in the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(coin1_premise, coin2_premise, min_coin1_hypothesis, coin2_hypothesis))
"
6440,contradiction,,contradiction,"If she worked four 10 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four 70 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 10 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four 70 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shift_hours_premise = 10
shifts_premise = 4
earn_rate_premise = 40

shift_hours_hypothesis = 70

def entailment_or_contradiction_or_neutral(shift_hours_premise, shifts_premise, earn_rate_premise, shift_hours_hypothesis):
    # the hypothesis talks about the number of hours that Jill worked, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'shift_hours_premise' hours per shift, by checking if the number of hours from the hypothesis is not equal to 'shift_hours_premise'
    if shift_hours_hypothesis != shift_hours_premise:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(shift_hours_premise, shifts_premise, earn_rate_premise, shift_hours_hypothesis))
"
7062,entailment,,entailment,"Triangle STV has sides ST = TV = 26 , and SV = 20","Triangle STV has sides ST = TV = less than 66 , and SV = 20","triangle stv has sides st = tv = 26 , and sv = 20","triangle stv has sides st = tv = less than 66 , and sv = 20","ST_TV_side_premise = 26
SV_side_premise = 20
max_ST_TV_side_hypothesis = 66
SV_side_hypothesis = 20

def entailment_or_contradiction_or_neutral(ST_TV_side_premise, SV_side_premise, max_ST_TV_side_hypothesis, SV_side_hypothesis):
    # the hypothesis refers to the sides of triangle STV mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if sides ST and TV from the premise are greater than 'max_ST_TV_side_hypothesis' or if side SV is different than 'SV_side_hypothesis'
    if ST_TV_side_premise > max_ST_TV_side_hypothesis or SV_side_premise != SV_side_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(ST_TV_side_premise, SV_side_premise, max_ST_TV_side_hypothesis, SV_side_hypothesis))
"
6945,entailment,,entailment,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,Kiran travels from A to B by car and returns from B to A by cycle in less than 8 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in less than 8 hours,"total_travel_time_premise = 7
max_travel_time_hypothesis = 8

def entailment_or_contradiction_or_neutral(total_travel_time_premise, max_travel_time_hypothesis):
    # the hypothesis refers to the total travel time mentioned in the premise
    # the hypothesis estimates the travel time to be less than 'max_travel_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if total travel time reported in the premise is greater than 'max_travel_time_hypothesis'
    if total_travel_time_premise > max_travel_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_travel_time_premise, max_travel_time_hypothesis))
"
6464,contradiction,,contradiction,"At the faculty of Aerospace Engineering , 302 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 102 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 302 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 102 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","random_processing_students_premise = 302
scramjet_students_premise = 232
both_subjects_students_premise = 112

random_processing_students_hypothesis = 102
scramjet_students_hypothesis = 232
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis):
    # the hypothesis refers to the same subjects as the premise
    # the hypothesis suggests that the number of students who study random-processing methods, scramjet rocket engines, or both, is equal to the numbers mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the number of students studying each subject in the premise and the hypothesis
    if random_processing_students_premise != random_processing_students_hypothesis or scramjet_students_premise != scramjet_students_hypothesis or both_subjects_students_premise != both_subjects_students_hypothesis:
        return False
    # if the hypothesis numbers are equal to the premise numbers, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis))
"
7499,contradiction,,contradiction,"Jane is currently 34 years old , and she stopped baby - sitting 10 years ago","Jane is currently 44 years old , and she stopped baby - sitting 10 years ago","jane is currently 34 years old , and she stopped baby - sitting 10 years ago","jane is currently 44 years old , and she stopped baby - sitting 10 years ago","jane_age_premise = 34
jane_age_hypothesis = 44
baby_sit_stop_years_ago = 10

def entailment_or_contradiction_or_neutral(jane_age_premise, jane_age_hypothesis, baby_sit_stop_years_ago):
    # the hypothesis talks about Jane's age and when she stopped babysitting, both mentioned in the premise
    # first, check if the hypothesis contradicts the premise by comparing Jane's age in both
    if jane_age_premise != jane_age_hypothesis:
        return False
    # if ages in both premise and hypothesis are the same, check if the years since she stopped babysitting are the same
    # if both ages and years since she stopped babysitting are the same in both premise and hypothesis, the hypothesis entails the premise
    if baby_sit_stop_years_ago == 10:
        return True
    # if there is no contradiction or entailment, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(jane_age_premise, jane_age_hypothesis, baby_sit_stop_years_ago))
"
7091,contradiction,,contradiction,Mary has a monthly salary of $ 1200,Mary has a monthly salary of $ 3200,mary has a monthly salary of $ 1200,mary has a monthly salary of $ 3200,"monthly_salary_premise = 1200
monthly_salary_hypothesis = 3200

def entailment_or_contradiction_or_neutral(monthly_salary_premise, monthly_salary_hypothesis):
    # the hypothesis refers to the monthly salary of Mary mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the monthly salary mentioned in the premise with the one in the hypothesis
    if monthly_salary_premise != monthly_salary_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(monthly_salary_premise, monthly_salary_hypothesis))
"
6706,neutral,,neutral,"Yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 8 : 3 : 1","Yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 8 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","# The ratios of red, green, and blue bricks used to build the tower in the premise and hypothesis
red_green_blue_ratio_premise = [8, 3, 1]
red_green_blue_ratio_hypothesis = [4, 3, 1]

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis):
    # The hypothesis talks about the same tower built by Yali, using the same colored bricks
    # The premise specifies that the ratio of red to green to blue bricks is less than 8:3:1
    # We will check if the hypothesis contradicts the premise by checking if the ratio of red bricks in the hypothesis is equal to or greater than the ratio in the premise
    if red_green_blue_ratio_hypothesis[0] >= red_green_blue_ratio_premise[0]:
        return False
    # Any ratio less than 8:3:1 is consistent with the premise, so the hypothesis is neutral
    return None

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis))
"
7007,contradiction,,contradiction,Claire has a total of 96 pets consisting of gerbils and hamsters only,Claire has a total of 66 pets consisting of gerbils and hamsters only,claire has a total of 96 pets consisting of gerbils and hamsters only,claire has a total of 66 pets consisting of gerbils and hamsters only,"total_pets_premise = 96
total_pets_hypothesis = 66

def entailment_or_contradiction_or_neutral(total_pets_premise, total_pets_hypothesis):
    # the hypothesis talks about the total number of Claire's pets, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing 'total_pets_hypothesis' and 'total_pets_premise'
    if total_pets_hypothesis != total_pets_premise:
        return False
    # if the numbers were the same, the hypothesis would entail the premise, but they are not
    return None

print(entailment_or_contradiction_or_neutral(total_pets_premise, total_pets_hypothesis))
"
6497,contradiction,,contradiction,A bus started its journey from Mumbai and reached Pune in 44 min with its average speed of 50 km / hr,A bus started its journey from Mumbai and reached Pune in 14 min with its average speed of 50 km / hr,a bus started its journey from mumbai and reached pune in 44 min with its average speed of 50 km / hr,a bus started its journey from mumbai and reached pune in 14 min with its average speed of 50 km / hr,"journey_time_premise = 44 # minutes
journey_time_hypothesis = 14 # minutes
average_speed = 50 # km/hr

def entailment_or_contradiction_or_neutral(journey_time_premise, journey_time_hypothesis, average_speed):
    # the hypothesis talks about the time a bus takes to travel from Mumbai to Pune, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of 'journey_time_premise' minutes, by checking if the time from the hypothesis is different from 'journey_time_premise'
    if journey_time_hypothesis != journey_time_premise:
        return False
    return None

print(entailment_or_contradiction_or_neutral(journey_time_premise, journey_time_hypothesis, average_speed))
"
6597,entailment,,entailment,"Efrida and Frazer who live 15 miles apart , meet at a restaurant that is directly north of Efrida ' s home and directly east of Frazer ' s home","Efrida and Frazer who live less than 35 miles apart , meet at a restaurant that is directly north of Efrida ' s home and directly east of Frazer ' s home","efrida and frazer who live 15 miles apart , meet at a restaurant that is directly north of efrida ' s home and directly east of frazer ' s home","efrida and frazer who live less than 35 miles apart , meet at a restaurant that is directly north of efrida ' s home and directly east of frazer ' s home","distance_apart_premise = 15
max_distance_apart_hypothesis = 35

def entailment_or_contradiction_or_neutral(distance_apart_premise, max_distance_apart_hypothesis):
    # the hypothesis refers to the distance between Efrida and Frazer's homes mentioned in the premise
    # the hypothesis estimates the distance to be less than or equal to 'max_distance_apart_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance reported in the premise is greater than 'max_distance_apart_hypothesis'
    if distance_apart_premise > max_distance_apart_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_apart_premise, max_distance_apart_hypothesis))
"
6773,contradiction,,contradiction,Murali travelled from city A to city B at a speed of 40 kmph and from city B to city C at 60 kmph,Murali travelled from city A to city B at a speed of 80 kmph and from city B to city C at 60 kmph,murali travelled from city a to city b at a speed of 40 kmph and from city b to city c at 60 kmph,murali travelled from city a to city b at a speed of 80 kmph and from city b to city c at 60 kmph,"speed_AB_premise = 40
speed_BC_premise = 60
speed_AB_hypothesis = 80
speed_BC_hypothesis = 60

def entailment_or_contradiction_or_neutral(speed_AB_premise, speed_BC_premise, speed_AB_hypothesis, speed_BC_hypothesis):
    # The hypothesis talks about the speed of travel between cities A, B and C, which is also mentioned in the premise
    # Check for contradiction between the hypothesis and the premise by comparing the speeds of travel
    if speed_AB_premise != speed_AB_hypothesis or speed_BC_premise != speed_BC_hypothesis:
        return False
    # If there is no contradiction, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(speed_AB_premise, speed_BC_premise, speed_AB_hypothesis, speed_BC_hypothesis))
"
6954,entailment,,entailment,"The average number of shirts with Salman , Ambani and Dalmiya is 40 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","The average number of shirts with Salman , Ambani and Dalmiya is less than 80 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is 40 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is less than 80 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","average_shirts_premise = 40
shirts_bought_each = 8
people_count = 3
average_shirts_hypothesis_max = 80

def entailment_or_contradiction_or_neutral(average_shirts_premise, shirts_bought_each, people_count, average_shirts_hypothesis_max):
    # the hypothesis talks about the average number of shirts each person has after they all bought some shirts, which is also the topic of the premise
    # compute the new average after they bought the shirts
    new_average_shirts = average_shirts_premise + shirts_bought_each
    # check if the hypothesis contradicts the premise by stating the new average is less than 'average_shirts_hypothesis_max'
    if new_average_shirts >= average_shirts_hypothesis_max:
        return False
    # since the new average is less than 'average_shirts_hypothesis_max', the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(average_shirts_premise, shirts_bought_each, people_count, average_shirts_hypothesis_max))
"
6657,entailment,,entailment,"Assuming that Karen drives at an average speed of 60 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","Assuming that Karen drives at an average speed of less than 80 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","assuming that karen drives at an average speed of 60 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","assuming that karen drives at an average speed of less than 80 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","karen_speed_premise = 60
tom_speed_premise = 45
max_karen_speed_hypothesis = 80
tom_speed_hypothesis = 45

def entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, max_karen_speed_hypothesis, tom_speed_hypothesis):
    # First, the hypothesis specifies Tom's speed which matches the premise. Thus, we exclude any contradiction here.
    # Second, the hypothesis specifies Karen's speed as being less than 80 mph. 
    # Given that Karen's speed in the premise is 60 mph (which is less than 80 mph), the hypothesis does not contradict the premise.
    # Therefore, the hypothesis is entailed by the premise.
    if tom_speed_premise != tom_speed_hypothesis or karen_speed_premise > max_karen_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, max_karen_speed_hypothesis, tom_speed_hypothesis))
"
6870,entailment,,entailment,"Mary has 2 puppies , 9 birds , 4 fishes","Mary has less than 5 puppies , 9 birds , 4 fishes","mary has 2 puppies , 9 birds , 4 fishes","mary has less than 5 puppies , 9 birds , 4 fishes","puppies_premise = 2
birds_premise = 9
fishes_premise = 4

max_puppies_hypothesis = 5
birds_hypothesis = 9
fishes_hypothesis = 4

def entailment_or_contradiction_or_neutral(puppies_premise, birds_premise, fishes_premise, max_puppies_hypothesis, birds_hypothesis, fishes_hypothesis):
    # the hypothesis refers to the number of puppies, birds, and fishes Mary has, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of puppies, birds, or fishes reported in the premise are more than the maximum number in the hypothesis or not equal to the number in the hypothesis
    if puppies_premise > max_puppies_hypothesis or birds_premise != birds_hypothesis or fishes_premise != fishes_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(puppies_premise, birds_premise, fishes_premise, max_puppies_hypothesis, birds_hypothesis, fishes_hypothesis))
"
7488,entailment,,entailment,Anita has 360 apples,Anita has less than 460 apples,anita has 360 apples,anita has less than 460 apples,"apples_premise = 360
max_apples_hypothesis = 460

def entailment_or_contradiction_or_neutral(apples_premise, max_apples_hypothesis):
    # the hypothesis refers to the number of apples mentioned in the premise
    # the hypothesis estimates the number of apples to less than 'max_apples_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of apples reported in the premise is greater than 'max_apples_hypothesis'
    if apples_premise > max_apples_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(apples_premise, max_apples_hypothesis))
"
6905,contradiction,,contradiction,"If Rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","If Rahul paid a total of $ 760 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ 760 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","payment_premise = 160
payment_hypothesis = 760

def entailment_or_contradiction_or_neutral(payment_premise, payment_hypothesis):
    # the hypothesis is about the total payment made by Rahul which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by comparing if the payment mentioned in the hypothesis is equal to the payment in the premise
    if payment_hypothesis != payment_premise:
        return False
    # there is no entailment as the numbers don't match
    return None

print(entailment_or_contradiction_or_neutral(payment_premise, payment_hypothesis))
"
6691,neutral,,neutral,Rakesh travelled less than 8800 kilometre by air which formed 3 / 5 of the total journey,Rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled less than 8800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,"max_air_travel_km_premise = 8800
air_travel_km_hypothesis = 1800

def entailment_or_contradiction_or_neutral(max_air_travel_km_premise, air_travel_km_hypothesis):
    # both the premise and the hypothesis talk about the distance Rakesh travelled by air
    # check if the hypothesis contradicts the premise, which states that the distance travelled by air was less than 'max_air_travel_km_premise', by checking if the distance from the hypothesis is greater than 'max_air_travel_km_premise'
    if air_travel_km_hypothesis > max_air_travel_km_premise:
        return False
    # any distance travelled by air that is less than 8800 km is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_air_travel_km_premise, air_travel_km_hypothesis))
"
6551,contradiction,,contradiction,"Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of 4 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of 3 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of 4 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of 3 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","west_bird_speed_premise = 4
east_bird_speed_premise = 1
west_bird_speed_hypothesis = 3
east_bird_speed_hypothesis = 1

def entailment_or_contradiction_or_neutral(west_bird_speed_premise, east_bird_speed_premise, west_bird_speed_hypothesis, east_bird_speed_hypothesis):
    # the hypothesis refers to the speed of two birds mentioned in the premise.
    # check if the hypothesis contradicts the premise by checking if the speed of the birds reported in the hypothesis are different from the premise
    if west_bird_speed_premise != west_bird_speed_hypothesis or east_bird_speed_premise != east_bird_speed_hypothesis:
        return False
    # if the speeds of the birds are same in both premise and hypothesis, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(west_bird_speed_premise, east_bird_speed_premise, west_bird_speed_hypothesis, east_bird_speed_hypothesis))
"
6486,entailment,,entailment,"During the first two weeks of March , the total rainfall in Springdale was 25 inches","During the first two weeks of March , the total rainfall in Springdale was less than 65 inches","during the first two weeks of march , the total rainfall in springdale was 25 inches","during the first two weeks of march , the total rainfall in springdale was less than 65 inches","total_rainfall_premise = 25
max_rainfall_hypothesis = 65

def entailment_or_contradiction_or_neutral(total_rainfall_premise, max_rainfall_hypothesis):
    # the hypothesis refers to the total rainfall in the first two weeks of March, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the total rainfall reported in the premise is more than 'max_rainfall_hypothesis'
    if total_rainfall_premise > max_rainfall_hypothesis:
        return False
    else:
        # the hypothesis states a maximum limit for the rainfall, which is higher than the actual rainfall from the premise
        # thus, the hypothesis entails the premise
        return True

print(entailment_or_contradiction_or_neutral(total_rainfall_premise, max_rainfall_hypothesis))
"
6411,entailment,,entailment,"If there are 55 possible combinations in which Michael is not selected , what is the value of w ?","If there are more than 45 possible combinations in which Michael is not selected , what is the value of w ?","if there are 55 possible combinations in which michael is not selected , what is the value of w ?","if there are more than 45 possible combinations in which michael is not selected , what is the value of w ?","combinations_premise = 55
min_combinations_hypothesis = 45

def entailment_or_contradiction_or_neutral(combinations_premise, min_combinations_hypothesis):
    # the hypothesis refers to the number of combinations in which Michael is not selected mentioned in the premise
    # the hypothesis estimates the combinations to be more than 'min_combinations_hypothesis'
    # check if the hypothesis contradicts the premise by checking if combinations reported in the premise are less than 'min_combinations_hypothesis'
    if combinations_premise < min_combinations_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(combinations_premise, min_combinations_hypothesis))
"
6717,entailment,,entailment,"Four different children have jelly beans : Aaron has 5 , Bianca has 7 , Callie has 8 , and Dante has 13","Four different children have jelly beans : Aaron has less than 7 , Bianca has 7 , Callie has 8 , and Dante has 13","four different children have jelly beans : aaron has 5 , bianca has 7 , callie has 8 , and dante has 13","four different children have jelly beans : aaron has less than 7 , bianca has 7 , callie has 8 , and dante has 13","# Quantities from the premise
aaron_jelly_beans_premise = 5
bianca_jelly_beans_premise = 7
callie_jelly_beans_premise = 8
dante_jelly_beans_premise = 13

# Quantities from the hypothesis
max_aaron_jelly_beans_hypothesis = 7
bianca_jelly_beans_hypothesis = 7
callie_jelly_beans_hypothesis = 8
dante_jelly_beans_hypothesis = 13

def entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, max_aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis):
    # Check if the number of jelly beans Aaron has according to the hypothesis is more than what the premise states
    if aaron_jelly_beans_premise > max_aaron_jelly_beans_hypothesis:
        return False
    # Check if the number of jelly beans for Bianca, Callie, and Dante match in the premise and hypothesis
    if bianca_jelly_beans_premise != bianca_jelly_beans_hypothesis or callie_jelly_beans_premise != callie_jelly_beans_hypothesis or dante_jelly_beans_premise != dante_jelly_beans_hypothesis:
        return False
    # If none of the above conditions are met, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, max_aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis))
"
4128,entailment,,entailment,Dan leaves City A 60 minutes after Cara,Dan leaves City A more than 30 minutes after Cara,dan leaves city a 60 minutes after cara,dan leaves city a more than 30 minutes after cara,"leave_after_cara_premise = 60
min_leave_after_cara_hypothesis = 30

def entailment_or_contradiction_or_neutral(leave_after_cara_premise, min_leave_after_cara_hypothesis):
    # the hypothesis talks about the duration after which Dan leaves City A, as compared to Cara, which is mentioned in the premise
    # the hypothesis estimates the duration to be more than 'min_leave_after_cara_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the duration mentioned in the premise is less than or equal to 'min_leave_after_cara_hypothesis'
    if leave_after_cara_premise <= min_leave_after_cara_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(leave_after_cara_premise, min_leave_after_cara_hypothesis))
"
7341,entailment,,entailment,"6970 , then what will be the share of Sameer in the profit ?","more than 1970 , then what will be the share of Sameer in the profit ?","6970 , then what will be the share of sameer in the profit ?","more than 1970 , then what will be the share of sameer in the profit ?","sameer_share_premise = 6970
min_sameer_share_hypothesis = 1970

def entailment_or_contradiction_or_neutral(sameer_share_premise, min_sameer_share_hypothesis):
    # the hypothesis talks about the share of Sameer in the profit, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Sameer's share in the premise is less than 'min_sameer_share_hypothesis'
    if sameer_share_premise < min_sameer_share_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sameer_share_premise, min_sameer_share_hypothesis))
"
7190,contradiction,,contradiction,A train leaves Jammu for Chennai exactly at 12 noon everyday of the week,A train leaves Jammu for Chennai exactly at 62 noon everyday of the week,a train leaves jammu for chennai exactly at 12 noon everyday of the week,a train leaves jammu for chennai exactly at 62 noon everyday of the week,"jammu_to_chennai_train_time_premise = 12
jammu_to_chennai_train_time_hypothesis = 62

def entailment_or_contradiction_or_neutral(jammu_to_chennai_train_time_premise, jammu_to_chennai_train_time_hypothesis):
    # the hypothesis talks about the departure time of a train from Jammu to Chennai, a fact also mentioned in the premise
    # the hypothesis contradicts the premise if the departure time from the hypothesis is different from the one mentioned in the premise
    if jammu_to_chennai_train_time_premise != jammu_to_chennai_train_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(jammu_to_chennai_train_time_premise, jammu_to_chennai_train_time_hypothesis))
"
6831,entailment,,entailment,"How many possible ways can 2 girls ( Rebecca , Kate , Ashley ) go on a date with 2 boys ( Peter , Kyle , Sam ) ?","How many possible ways can more than 1 girls ( Rebecca , Kate , Ashley ) go on a date with 2 boys ( Peter , Kyle , Sam ) ?","how many possible ways can 2 girls ( rebecca , kate , ashley ) go on a date with 2 boys ( peter , kyle , sam ) ?","how many possible ways can more than 1 girls ( rebecca , kate , ashley ) go on a date with 2 boys ( peter , kyle , sam ) ?","girls_count_premise = 2
boys_count_premise = 2
min_girls_count_hypothesis = 1
boys_count_hypothesis = 2

def entailment_or_contradiction_or_neutral(girls_count_premise, boys_count_premise, min_girls_count_hypothesis, boys_count_hypothesis):
    # the hypothesis refers to the possible ways girls can go on a date with boys, as mentioned in the premise
    # the hypothesis estimates the girls count to be more than 'min_girls_count_hypothesis' and the boys count to be equal to 'boys_count_hypothesis'
    # check if the hypothesis contradicts the premise by verifying if the boys count reported in the premise is not equal to 'boys_count_hypothesis' or the girls count reported in the premise is lower than or equal to 'min_girls_count_hypothesis'
    if boys_count_premise != boys_count_hypothesis or girls_count_premise <= min_girls_count_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(girls_count_premise, boys_count_premise, min_girls_count_hypothesis, boys_count_hypothesis))
"
7250,contradiction,,contradiction,Lilly has 10 fish and Rosy has 9 fish,Lilly has 30 fish and Rosy has 9 fish,lilly has 10 fish and rosy has 9 fish,lilly has 30 fish and rosy has 9 fish,"lilly_fish_premise = 10
rosy_fish_premise = 9
lilly_fish_hypothesis = 30
rosy_fish_hypothesis = 9

def entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, lilly_fish_hypothesis, rosy_fish_hypothesis):
    # the hypothesis talks about the number of fish that Lilly and Rosy have, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of fish for Lilly or Rosy from the hypothesis is different than the one from the premise
    if lilly_fish_premise != lilly_fish_hypothesis or rosy_fish_premise != rosy_fish_hypothesis:
        return False
    return None

print(entailment_or_contradiction_or_neutral(lilly_fish_premise, rosy_fish_premise, lilly_fish_hypothesis, rosy_fish_hypothesis))
"
521,contradiction,,contradiction,There are 18 stations between Hyderabad and Bangalore,There are more than 18 stations between Hyderabad and Bangalore,there are 18 stations between hyderabad and bangalore,there are more than 18 stations between hyderabad and bangalore,"stations_premise = 18
min_stations_hypothesis = 18

def entailment_or_contradiction_or_neutral(stations_premise, min_stations_hypothesis):
    # the hypothesis talks about the number of stations, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'stations_premise', by checking if the minimum number of stations from the hypothesis is less than 'stations_premise'
    if min_stations_hypothesis < stations_premise:
        return False
    # if there are exactly 18 stations, then the hypothesis contradicts the premise
    elif min_stations_hypothesis == stations_premise:
        return False
    # any number of stations greater than 18 is consistent with the hypothesis, so the premise is neutral to the hypothesis
    return None

print(entailment_or_contradiction_or_neutral(stations_premise, min_stations_hypothesis))
"
6732,entailment,,entailment,"If Bill needs to walk from the corner of 2 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","If Bill needs to walk from the corner of less than 3 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 2 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of less than 3 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","start_rd_premise = 2
start_rd_hypothesis = 3

def entailment_or_contradiction_or_neutral(start_rd_premise, start_rd_hypothesis):
    # the hypothesis references to the starting road of the route mentioned in the premise
    # the hypothesis states that the starting road is less than 'start_rd_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the starting road in the premise is greater or equal to 'start_rd_hypothesis'
    if start_rd_premise >= start_rd_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(start_rd_premise, start_rd_hypothesis))
"
6681,entailment,,entailment,"In a shop , 40 % socks are white and rest are black","In a shop , less than 80 % socks are white and rest are black","in a shop , 40 % socks are white and rest are black","in a shop , less than 80 % socks are white and rest are black","white_socks_premise = 40
max_white_socks_hypothesis = 80

def entailment_or_contradiction_or_neutral(white_socks_premise, max_white_socks_hypothesis):
    # the hypothesis refers to the percentage of white socks mentioned in the premise
    # the hypothesis estimates the percentage of white socks to be less than 'max_white_socks_hypothesis'
    # check if the hypothesis contradicts the premise by checking if white sock percentage reported in the premise are more than 'max_white_socks_hypothesis'
    if white_socks_premise > max_white_socks_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(white_socks_premise, max_white_socks_hypothesis))
"
6401,contradiction,,contradiction,"If the number of such passengers that used Miami Airport was 1 / 2 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","If the number of such passengers that used Miami Airport was 3 / 2 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","if the number of such passengers that used miami airport was 1 / 2 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","if the number of such passengers that used miami airport was 3 / 2 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","miami_to_kennedy_ratio_premise = 1/2
miami_to_logan_ratio_premise = 4

miami_to_kennedy_ratio_hypothesis = 3/2
miami_to_logan_ratio_hypothesis = 4

def entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis):
    # the premise and hypothesis describe the ratios of passengers that used Miami, Kennedy and Logan airports
    # check if the hypothesis contradicts the premise by comparing the ratios 
    if miami_to_kennedy_ratio_premise != miami_to_kennedy_ratio_hypothesis or miami_to_logan_ratio_premise != miami_to_logan_ratio_hypothesis:
        return False
    # if the ratios are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis))
"
6893,contradiction,,contradiction,Smita Was Making A Cube With Dimensions 5 * 5 * 5 Using 1 * 1 * 1 Cubes,Smita Was Making A Cube With Dimensions more than 5 * 5 * 5 Using 1 * 1 * 1 Cubes,smita was making a cube with dimensions 5 * 5 * 5 using 1 * 1 * 1 cubes,smita was making a cube with dimensions more than 5 * 5 * 5 using 1 * 1 * 1 cubes,"cube_dimensions_premise = 5 * 5 * 5
min_cube_dimensions_hypothesis = 5 * 5 * 5

def entailment_or_contradiction_or_neutral(cube_dimensions_premise, min_cube_dimensions_hypothesis):
    # the hypothesis refers to the dimensions of the cube mentioned in the premise
    # the hypothesis estimates the cube dimensions to be more than 'min_cube_dimensions_hypothesis'
    # check if the hypothesis contradicts the premise by checking if cube dimensions reported in the premise are less than or equal to 'min_cube_dimensions_hypothesis'
    if cube_dimensions_premise <= min_cube_dimensions_hypothesis:
        return False
    # any cube dimension greater than 5*5*5 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(cube_dimensions_premise, min_cube_dimensions_hypothesis))
"
7072,neutral,,neutral,James took a more than 1 - hour bike ride,James took a 3 - hour bike ride,james took a more than 1 - hour bike ride,james took a 3 - hour bike ride,"min_bike_ride_duration_premise = 1
bike_ride_duration_hypothesis = 3

def entailment_or_contradiction_or_neutral(min_bike_ride_duration_premise, bike_ride_duration_hypothesis):
    # the hypothesis talks about the duration of James's bike ride, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_bike_ride_duration_premise', by checking if the bike ride duration from the hypothesis is lower or equal to 'min_bike_ride_duration_premise'
    if bike_ride_duration_hypothesis <= min_bike_ride_duration_premise:
        return False
    # any duration greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_bike_ride_duration_premise, bike_ride_duration_hypothesis))
"
7132,neutral,,neutral,Patanjali walked for more than 2 days,Patanjali walked for 3 days,patanjali walked for more than 2 days,patanjali walked for 3 days,"min_days_walked_premise = 2
days_walked_hypothesis = 3

def entailment_or_contradiction_or_neutral(min_days_walked_premise, days_walked_hypothesis):
    # the hypothesis talks about Patanjali's walk duration, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_days_walked_premise', by checking if the walk duration from the hypothesis is lower or equal to 'min_days_walked_premise'
    if days_walked_hypothesis <= min_days_walked_premise:
        return False
    # any duration greater than 2 days is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_days_walked_premise, days_walked_hypothesis))
"
7386,entailment,,entailment,Mary can do a piece of work in 11 days,Mary can do a piece of work in less than 81 days,mary can do a piece of work in 11 days,mary can do a piece of work in less than 81 days,"work_days_premise = 11
max_work_days_hypothesis = 81

def entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis):
    # the hypothesis refers to the number of days Mary needs to do a piece of work, mentioned in the premise
    # the hypothesis estimates the maximum number of days as 'max_work_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of days mentioned in the premise are greater than 'max_work_days_hypothesis'
    if work_days_premise > max_work_days_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, max_work_days_hypothesis))
"
6435,entailment,,entailment,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of less than 75 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of less than 75 % of the cost of the orders she serves,"hourly_wage_premise = 6.00
tip_rate_premise = 35

hourly_wage_hypothesis = 6.00
max_tip_rate_hypothesis = 75

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis):
    # the hypothesis talks about Jill's hourly wage and tip rate
    # first, check if the hypothesis contradicts the premise by checking if the hourly wage or tip rate in the hypothesis is different from the premise
    if hourly_wage_hypothesis != hourly_wage_premise or tip_rate_premise > max_tip_rate_hypothesis:
        return False
    # if the hourly wage and tip rate in the hypothesis are the same as in the premise, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis))
"
7365,entailment,,entailment,"If Jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked more than 2 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked more than 2 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","walked_distance_premise = 7
min_walked_distance_hypothesis = 2
time_walked = 1.25 # 1 hour and 15 minutes 

def entailment_or_contradiction_or_neutral(walked_distance_premise, min_walked_distance_hypothesis, time_walked):
    # the hypothesis refers to the distance walked by Jack mentioned in the premise
    # the hypothesis estimates the walked distance to more than 'min_walked_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if walked distance reported in the premise is lower than 'min_walked_distance_hypothesis'
    if walked_distance_premise < min_walked_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(walked_distance_premise, min_walked_distance_hypothesis, time_walked))
"
7225,neutral,,neutral,"If OA = less than 6 , AC = 4 and BD = 6 , determine the length of OB .","If OA = 2 , AC = 4 and BD = 6 , determine the length of OB .","if oa = less than 6 , ac = 4 and bd = 6 , determine the length of ob .","if oa = 2 , ac = 4 and bd = 6 , determine the length of ob .","max_OA_length_premise = 6
AC_length_premise = 4
BD_length_premise = 6

OA_length_hypothesis = 2
AC_length_hypothesis = 4
BD_length_hypothesis = 6

def entailment_or_contradiction_or_neutral(max_OA_length_premise, AC_length_premise, BD_length_premise, OA_length_hypothesis, AC_length_hypothesis, BD_length_hypothesis):
    # the premise and hypothesis refer to the lengths of lines OA, AC, and BD
    # the lengths of AC and BD are the same in both the premise and the hypothesis
    # the length of OA in the hypothesis is 'OA_length_hypothesis' which should be less than 'max_OA_length_premise' as per the premise
    # check if the hypothesis contradicts the premise by checking if 'OA_length_hypothesis' is greater than or equal to 'max_OA_length_premise'
    if OA_length_hypothesis >= max_OA_length_premise:
        return False
    # the length of OB is not mentioned in either the premise or the hypothesis, so we can't determine its length
    # hence, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_OA_length_premise, AC_length_premise, BD_length_premise, OA_length_hypothesis, AC_length_hypothesis, BD_length_hypothesis))
"
7235,contradiction,,contradiction,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for 2 km each,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for 3 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for 2 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for 3 km each,"sita_geeta_run_distance_premise = 2
sita_geeta_run_distance_hypothesis = 3

def entailment_or_contradiction_or_neutral(sita_geeta_run_distance_premise, sita_geeta_run_distance_hypothesis):
    # the hypothesis refers to the distance run by Sita and Geeta mentioned in the premise
    # the hypothesis estimates the run distance to be 'sita_geeta_run_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the run distance reported in the premise is less than 'sita_geeta_run_distance_hypothesis'
    if sita_geeta_run_distance_premise < sita_geeta_run_distance_hypothesis:
        return False
    # if it does not contradict, check for entailment
    elif sita_geeta_run_distance_premise == sita_geeta_run_distance_hypothesis:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(sita_geeta_run_distance_premise, sita_geeta_run_distance_hypothesis))
"
7588,neutral,,neutral,"Calculate the average mark scored by Adam if he had the following scores in an examination : more than 46 , 75 , 72 , 63 and 65 marks ( out of 100 ) in French Language , Geography , Art and design , History and Physical Education respectively ?","Calculate the average mark scored by Adam if he had the following scores in an examination : 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in French Language , Geography , Art and design , History and Physical Education respectively ?","calculate the average mark scored by adam if he had the following scores in an examination : more than 46 , 75 , 72 , 63 and 65 marks ( out of 100 ) in french language , geography , art and design , history and physical education respectively ?","calculate the average mark scored by adam if he had the following scores in an examination : 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in french language , geography , art and design , history and physical education respectively ?","min_french_mark_premise = 46
french_mark_hypothesis = 86
geography_mark = 75
art_design_mark = 72
history_mark = 63
physical_education_mark = 65

def entailment_or_contradiction_or_neutral(min_french_mark_premise, french_mark_hypothesis, geography_mark, art_design_mark, history_mark, physical_education_mark):
    # the hypothesis talks about the marks of Adam in French, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_french_mark_premise', by checking if the French mark from the hypothesis is lower or equal to 'min_french_mark_premise'
    if french_mark_hypothesis <= min_french_mark_premise:
        return False
    # any mark in French above 46 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_french_mark_premise, french_mark_hypothesis, geography_mark, art_design_mark, history_mark, physical_education_mark))
"
6159,entailment,,entailment,"What is the height difference between the two if the Empire
State Building is 356 m tall and the Petronas Towers is 370 m tall ?",What is the height difference between the two if the Empire State Building is less than 556 m tall and the Petronas Towers is 370 m tall ?,what is the height difference between the two if the empirestate building is 356 m tall and the petronas towers is 370 m tall ?,what is the height difference between the two if the empire state building is less than 556 m tall and the petronas towers is 370 m tall ?,"empire_state_building_height_premise = 356
petronas_towers_height_premise = 370
max_empire_state_building_height_hypothesis = 556
petronas_towers_height_hypothesis = 370

def entailment_or_contradiction_or_neutral(empire_state_building_height_premise, petronas_towers_height_premise, max_empire_state_building_height_hypothesis, petronas_towers_height_hypothesis):
    # the hypothesis refers to the height of the Empire State Building and the Petronas Towers
    # check if the height of the Empire State Building or the Petronas Towers in the hypothesis contradicts the premise
    if empire_state_building_height_premise > max_empire_state_building_height_hypothesis or petronas_towers_height_premise != petronas_towers_height_hypothesis:
        return False
    # if there is no contradiction, then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(empire_state_building_height_premise, petronas_towers_height_premise, max_empire_state_building_height_hypothesis, petronas_towers_height_hypothesis))
"
6398,contradiction,,contradiction,In 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,In 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,in 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,in 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,"year_premise = 1979
passengers_premise = 32.3
airport_premise = ""Kennedy Airport""

year_hypothesis = 6979
passengers_hypothesis = 32.3
airport_hypothesis = ""Kennedy Airport""

def entailment_or_contradiction_or_neutral(year_premise, passengers_premise, airport_premise, year_hypothesis, passengers_hypothesis, airport_hypothesis):
    # the hypothesis refers to the year, the number of passengers and the airport mentioned in the premise
    # however, the year mentioned in the hypothesis is different from the year in the premise
    # check if the hypothesis contradicts the premise by checking if the year, number of passengers and the airport in the hypothesis contradict the premise
    if year_hypothesis != year_premise or passengers_hypothesis != passengers_premise or airport_hypothesis != airport_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(year_premise, passengers_premise, airport_premise, year_hypothesis, passengers_hypothesis, airport_hypothesis))
"
7287,entailment,,entailment,14000 in a business which he jointly owns with two other persons ( James and Greg ),less than 64000 in a business which he jointly owns with two other persons ( James and Greg ),14000 in a business which he jointly owns with two other persons ( james and greg ),less than 64000 in a business which he jointly owns with two other persons ( james and greg ),"business_value_premise = 14000
max_business_value_hypothesis = 64000

def entailment_or_contradiction_or_neutral(business_value_premise, max_business_value_hypothesis):
    # the hypothesis refers to the value of a business mentioned in the premise
    # the hypothesis estimates the business value to be less than 'max_business_value_hypothesis'
    # check if the hypothesis contradicts the premise by checking if business value reported in the premise is greater than 'max_business_value_hypothesis'
    if business_value_premise > max_business_value_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(business_value_premise, max_business_value_hypothesis))
"
6289,neutral,,neutral,Smitha bought more than 5 Kg of kiwi fruit at an average rate of 360,Smitha bought 8 Kg of kiwi fruit at an average rate of 360,smitha bought more than 5 kg of kiwi fruit at an average rate of 360,smitha bought 8 kg of kiwi fruit at an average rate of 360,"min_kiwi_premise = 5
kiwi_hypothesis = 8
average_rate = 360

def entailment_or_contradiction_or_neutral(min_kiwi_premise, kiwi_hypothesis, average_rate):
    # the hypothesis talks about the quantity of kiwi fruit bought by Smitha, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_kiwi_premise', by checking if the quantity from the hypothesis is lower or equal to 'min_kiwi_premise'
    if kiwi_hypothesis <= min_kiwi_premise:
        return False
    # any quantity of kiwi fruit greater than 5 Kg is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_kiwi_premise, kiwi_hypothesis, average_rate))
"
6524,contradiction,,contradiction,"Reeya obtained 55 , 67 , 76 , 82 and 85 out of 100 in different subjects , What will be the average","Reeya obtained 35 , 67 , 76 , 82 and 85 out of 100 in different subjects , What will be the average","reeya obtained 55 , 67 , 76 , 82 and 85 out of 100 in different subjects , what will be the average","reeya obtained 35 , 67 , 76 , 82 and 85 out of 100 in different subjects , what will be the average","# The scores Reeya obtained in different subjects according to the premise
scores_premise = [55, 67, 76, 82, 85]
# The scores Reeya obtained in different subjects according to the hypothesis
scores_hypothesis = [35, 67, 76, 82, 85]

def entailment_or_contradiction_or_neutral(scores_premise, scores_hypothesis):
    # check if the scores mentioned in the hypothesis contradict the ones mentioned in the premise
    if scores_premise != scores_hypothesis:
        return False
    # if they are the same, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(scores_premise, scores_hypothesis))
"
7046,contradiction,,contradiction,Raman travelled for 10 hours,Raman travelled for less than 10 hours,raman travelled for 10 hours,raman travelled for less than 10 hours,"travel_time_premise = 10
max_travel_time_hypothesis = 10

def entailment_or_contradiction_or_neutral(travel_time_premise, max_travel_time_hypothesis):
    # the hypothesis refers to the travel time mentioned in the premise
    # the hypothesis estimates the travel time to be less than 'max_travel_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if travel time reported in the premise is more than 'max_travel_time_hypothesis'
    if travel_time_premise >= max_travel_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travel_time_premise, max_travel_time_hypothesis))
"
6971,contradiction,,contradiction,There are 8 stations between Vijayawada and Chennai,There are 2 stations between Vijayawada and Chennai,there are 8 stations between vijayawada and chennai,there are 2 stations between vijayawada and chennai,"stations_premise = 8
stations_hypothesis = 2

def entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis):
    # the hypothesis makes a claim on the same number of stations between Vijayawada and Chennai as the premise
    # check if the hypothesis contradicts the premise by comparing if the number of stations in the hypothesis is different from the premise
    if stations_hypothesis != stations_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stations_premise, stations_hypothesis))
"
7157,contradiction,,contradiction,"Right now , the ratio between the ages of Sandy and Molly is 4 : 3","Right now , the ratio between the ages of Sandy and Molly is more than 4 : 3","right now , the ratio between the ages of sandy and molly is 4 : 3","right now , the ratio between the ages of sandy and molly is more than 4 : 3","sandy_molly_ratio_premise = 4 / 3
min_sandy_molly_ratio_hypothesis = 4 / 3

def entailment_or_contradiction_or_neutral(sandy_molly_ratio_premise, min_sandy_molly_ratio_hypothesis):
    # the hypothesis refers to the ratio of Sandy's and Molly's ages mentioned in the premise
    # the hypothesis estimates the ratio to more than 'min_sandy_molly_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio reported in the premise is less than 'min_sandy_molly_ratio_hypothesis'
    if sandy_molly_ratio_premise <= min_sandy_molly_ratio_hypothesis:
        return False
    # if the ratio reported in the premise is equal to the minimum ratio in the hypothesis, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(sandy_molly_ratio_premise, min_sandy_molly_ratio_hypothesis))
"
7017,entailment,,entailment,"There are 300 seniors at Morse High School , and 40 % of them have cars","There are less than 800 seniors at Morse High School , and 40 % of them have cars","there are 300 seniors at morse high school , and 40 % of them have cars","there are less than 800 seniors at morse high school , and 40 % of them have cars","seniors_premise = 300
seniors_hypothesis = 800
car_owners_percentage = 40

def entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis, car_owners_percentage):
    # the hypothesis refers to the number of seniors and the percentage of car owners among them, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of seniors reported in the premise is greater than the number of seniors in the hypothesis
    if seniors_premise > seniors_hypothesis:
        return False
    # check if the car owners percentage contradicts the premise
    if car_owners_percentage != 40:
        return False
    # if there's no contradiction, the hypothesis must entail the premise
    return True

print(entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis, car_owners_percentage))
"
6299,contradiction,,contradiction,"Each week , Harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 52 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 52 hours and 1.5 x dollars for each additional hour worked that week","base_hours_premise = 12
base_hours_hypothesis = 52

def entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis):
    # the hypothesis refers to the weekly payment calculation of Harry mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the base hours reported in the hypothesis are greater than the base hours reported in the premise
    if base_hours_hypothesis > base_hours_premise:
        return False
    # if the base hours in hypothesis are equal or less than the base hours in the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis))
"
6108,entailment,,entailment,Level - 1 college graduates account for 15 % of Amtek ' s sales staff,Level - less than 4 college graduates account for 15 % of Amtek ' s sales staff,level - 1 college graduates account for 15 % of amtek ' s sales staff,level - less than 4 college graduates account for 15 % of amtek ' s sales staff,"level1_grad_sales_staff_premise = 15
level4_less_grad_sales_staff_hypothesis = 15

def entailment_or_contradiction_or_neutral(level1_grad_sales_staff_premise, level4_less_grad_sales_staff_hypothesis):
    # the hypothesis talks about the percentage of level 4 or less college graduates in the sales staff, which implicitly includes level 1 graduates from the premise
    # check if the hypothesis contradicts the premise, by checking if the percentage of level 4 or less college graduates is not equal to the premise percentage
    if level4_less_grad_sales_staff_hypothesis != level1_grad_sales_staff_premise:
        return False
    # the hypothesis entails the premise because level 1 graduates are part of level 4 or less graduates
    else:
        return True

print(entailment_or_contradiction_or_neutral(level1_grad_sales_staff_premise, level4_less_grad_sales_staff_hypothesis))
"
6575,contradiction,,contradiction,Vikas ' s rank among the boys in that class is 4 th from the top and 18 th from the bottom and Tanvi ' s rank among the girls is 8 th from top and 21 st from bottom,Vikas ' s rank among the boys in that class is more than 4 th from the top and 18 th from the bottom and Tanvi ' s rank among the girls is 8 th from top and 21 st from bottom,vikas ' s rank among the boys in that class is 4 th from the top and 18 th from the bottom and tanvi ' s rank among the girls is 8 th from top and 21 st from bottom,vikas ' s rank among the boys in that class is more than 4 th from the top and 18 th from the bottom and tanvi ' s rank among the girls is 8 th from top and 21 st from bottom,"vikas_rank_top_premise = 4
vikas_rank_bottom_premise = 18
tanvi_rank_top_premise = 8
tanvi_rank_bottom_premise = 21

vikas_rank_top_hypothesis = 4
vikas_rank_bottom_hypothesis = 18
tanvi_rank_top_hypothesis = 8
tanvi_rank_bottom_hypothesis = 21

def entailment_or_contradiction_or_neutral(vikas_rank_top_premise, vikas_rank_bottom_premise, tanvi_rank_top_premise, tanvi_rank_bottom_premise, vikas_rank_top_hypothesis, vikas_rank_bottom_hypothesis, tanvi_rank_top_hypothesis, tanvi_rank_bottom_hypothesis):
    # the hypothesis talks about the ranks of Vikas and Tanvi, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate by checking if the ranks from the hypothesis are lower or equal to the ranks from the premise
    if vikas_rank_top_hypothesis <= vikas_rank_top_premise or vikas_rank_bottom_hypothesis != vikas_rank_bottom_premise or tanvi_rank_top_hypothesis != tanvi_rank_top_premise or tanvi_rank_bottom_hypothesis != tanvi_rank_bottom_premise:
        return False
    # any rank greater than 4 for Vikas from top is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(vikas_rank_top_premise, vikas_rank_bottom_premise, tanvi_rank_top_premise, tanvi_rank_bottom_premise, vikas_rank_top_hypothesis, vikas_rank_bottom_hypothesis, tanvi_rank_top_hypothesis, tanvi_rank_bottom_hypothesis))
"
7293,entailment,,entailment,"300 , what is James ' capital ?","less than 600 , what is James ' capital ?","300 , what is james ' capital ?","less than 600 , what is james ' capital ?","james_capital_premise = 300
max_james_capital_hypothesis = 600

def entailment_or_contradiction_or_neutral(james_capital_premise, max_james_capital_hypothesis):
    # the hypothesis refers to James' capital mentioned in the premise
    # the hypothesis estimates the capital to be less than 'max_james_capital_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the capital in the premise is greater than 'max_james_capital_hypothesis'
    if james_capital_premise > max_james_capital_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(james_capital_premise, max_james_capital_hypothesis))
"
3245,contradiction,,contradiction,Mr Yadav spends 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,Mr Yadav spends less than 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,mr yadav spends 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,mr yadav spends less than 60 % of his monthly salary on consumable items and 50 % of the remaining on clothes and transport,"consumables_percentage_premise = 60
consumables_percentage_hypothesis = 60

def entailment_or_contradiction_or_neutral(consumables_percentage_premise, consumables_percentage_hypothesis):
    # the hypothesis refers to the percentage spent on consumables mentioned in the premise
    # the hypothesis estimates the percentage spent on consumables to be less than 'consumables_percentage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage reported in the premise is greater than 'consumables_percentage_hypothesis'
    if consumables_percentage_premise > consumables_percentage_hypothesis:
        return False
    # if the premise's percentage is equal to the hypothesis's percentage, then the hypothesis contradicts the premise's statement of ""less than""
    elif consumables_percentage_premise == consumables_percentage_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(consumables_percentage_premise, consumables_percentage_hypothesis))
"
7181,contradiction,,contradiction,"City A to city B , Andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 7 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 42 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 7 hr at 42 mph and for 3 hours at 60 mph","drive_time_at_42mph_premise = 1
drive_time_at_60mph_premise = 3
drive_time_at_42mph_hypothesis = 7
drive_time_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_time_at_42mph_premise, drive_time_at_60mph_premise, drive_time_at_42mph_hypothesis, drive_time_at_60mph_hypothesis):
    # the hypothesis refers to the time Andrew drove at specific speeds, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the drive time at certain speeds mentioned in the hypothesis are different from those in the premise
    if drive_time_at_42mph_hypothesis != drive_time_at_42mph_premise or drive_time_at_60mph_hypothesis != drive_time_at_60mph_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_time_at_42mph_premise, drive_time_at_60mph_premise, drive_time_at_42mph_hypothesis, drive_time_at_60mph_hypothesis))
"
7172,contradiction,,contradiction,Andy solves problems 70 to 125 inclusive in a Math exercise,Andy solves problems 40 to 125 inclusive in a Math exercise,andy solves problems 70 to 125 inclusive in a math exercise,andy solves problems 40 to 125 inclusive in a math exercise,"min_problems_solved_premise = 70
max_problems_solved_premise = 125
min_problems_solved_hypothesis = 40
max_problems_solved_hypothesis = 125

def entailment_or_contradiction_or_neutral(min_problems_solved_premise, max_problems_solved_premise, min_problems_solved_hypothesis, max_problems_solved_hypothesis):
    # the hypothesis refers to the range of problems solved by Andy mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the range of problems solved in the hypothesis exceeds the range in the premise
    if min_problems_solved_hypothesis < min_problems_solved_premise or max_problems_solved_hypothesis > max_problems_solved_premise:
        return False
    # if the hypothesis range of problems solved is within the premise's range, it means the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_problems_solved_premise, max_problems_solved_premise, min_problems_solved_hypothesis, max_problems_solved_hypothesis))
"
6613,neutral,,neutral,"At the faculty of Aerospace Engineering , more than 112 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , 312 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 112 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 312 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","min_random_methods_students_premise = 112
random_methods_students_hypothesis = 312
scramjet_students_premise = 234
scramjet_students_hypothesis = 234
both_subjects_students_premise = 112
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(min_random_methods_students_premise, random_methods_students_hypothesis, scramjet_students_premise, scramjet_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis):
    # The hypothesis refers to the number of students studying different subjects at the faculty of Aerospace Engineering, mentioned in the premise.
    # Check if the hypothesis contradicts the premise by checking if the number of students studying random methods in the hypothesis is less than 'min_random_methods_students_premise' or if the number of students studying scramjet or both subjects is different from the premise.
    if random_methods_students_hypothesis <= min_random_methods_students_premise or scramjet_students_hypothesis != scramjet_students_premise or both_subjects_students_hypothesis != both_subjects_students_premise:
        return False
    # Any number of students studying random methods greater than 112 is consistent with the premise, so the hypothesis is neutral to the premise for the random methods subject. The number of students studying scramjet and both subjects is the same in the hypothesis and the premise, so it doesn't contradict nor entail the premise for these subjects.
    return None

print(entailment_or_contradiction_or_neutral(min_random_methods_students_premise, random_methods_students_hypothesis, scramjet_students_premise, scramjet_students_hypothesis, both_subjects_students_premise, both_subjects_students_hypothesis))
"
6850,neutral,,neutral,Billy has less than 20 apples,Billy has 10 apples,billy has less than 20 apples,billy has 10 apples,"max_apples_premise = 20
apples_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_apples_premise, apples_hypothesis):
    # the hypothesis implies the number of apples Billy has, which is also discussed in the premise
    # check if the hypothesis contradicts the premise by checking if the number of apples in the hypothesis is more than 'max_apples_premise'
    if apples_hypothesis > max_apples_premise:
        return False
    # any number of apples less than 20 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_apples_premise, apples_hypothesis))
"
7136,contradiction,,contradiction,"Triangle STV has sides ST = TV = 10 , and SV = 12","Triangle STV has sides ST = TV = 70 , and SV = 12","triangle stv has sides st = tv = 10 , and sv = 12","triangle stv has sides st = tv = 70 , and sv = 12","ST_TV_side_premise = 10
SV_side_premise = 12
ST_TV_side_hypothesis = 70
SV_side_hypothesis = 12

def entailment_or_contradiction_or_neutral(ST_TV_side_premise, SV_side_premise, ST_TV_side_hypothesis, SV_side_hypothesis):
    # the hypothesis discusses the lengths of the sides of the triangle mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the lengths of the sides provided in the hypothesis are different from those in the premise
    if ST_TV_side_premise != ST_TV_side_hypothesis or SV_side_premise != SV_side_hypothesis:
        return False
    # if there is no contradiction, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(ST_TV_side_premise, SV_side_premise, ST_TV_side_hypothesis, SV_side_hypothesis))
"
7076,contradiction,,contradiction,Veena ranks 65 rd from the top in a class of 182,Veena ranks 25 rd from the top in a class of 182,veena ranks 65 rd from the top in a class of 182,veena ranks 25 rd from the top in a class of 182,"veena_rank_top_premise = 65
veena_rank_top_hypothesis = 25
class_students = 182

def entailment_or_contradiction_or_neutral(veena_rank_top_premise, veena_rank_top_hypothesis, class_students):
    # the hypothesis contradicts the premise
    # check if the rank of Veena from the top in the premise equals the one in the hypothesis
    if veena_rank_top_premise != veena_rank_top_hypothesis:
        return False
    # since the class size is the same in both premise and hypothesis, no need to check it
    return None

print(entailment_or_contradiction_or_neutral(veena_rank_top_premise, veena_rank_top_hypothesis, class_students))
"
7167,entailment,,entailment,7 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,more than 1 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,7 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,more than 1 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,"people_between_sujit_suraj_premise = 7
people_after_suraj_premise = 20

min_people_between_sujit_suraj_hypothesis = 1
people_after_suraj_hypothesis = 20

def entailment_or_contradiction_or_neutral(people_between_sujit_suraj_premise, people_after_suraj_premise, min_people_between_sujit_suraj_hypothesis, people_after_suraj_hypothesis):
    # the hypothesis refers to the number of people that entered the theater between Sujit and Suraj and after Suraj, same as the premise
    # check if the hypothesis contradicts the premise by checking if the number of people that entered the theater between Sujit and Suraj is less than 'min_people_between_sujit_suraj_hypothesis' or if the number of people that entered the theater after Suraj is not equal to 'people_after_suraj_hypothesis'
    if people_between_sujit_suraj_premise < min_people_between_sujit_suraj_hypothesis or people_after_suraj_premise != people_after_suraj_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(people_between_sujit_suraj_premise, people_after_suraj_premise, min_people_between_sujit_suraj_hypothesis, people_after_suraj_hypothesis))
"
7397,contradiction,,contradiction,"Tom drives from town R to town B , driving at a constant speed of 60 miles per hour","Tom drives from town R to town B , driving at a constant speed of 70 miles per hour","tom drives from town r to town b , driving at a constant speed of 60 miles per hour","tom drives from town r to town b , driving at a constant speed of 70 miles per hour","constant_speed_premise = 60
constant_speed_hypothesis = 70

def entailment_or_contradiction_or_neutral(constant_speed_premise, constant_speed_hypothesis):
    # the hypothesis talks about the constant speed at which Tom drives, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speed in the hypothesis is different from the speed in the premise
    if constant_speed_hypothesis != constant_speed_premise:
        return False
    # the hypothesis entails the premise if the speed is the same
    else:
        return True

print(entailment_or_contradiction_or_neutral(constant_speed_premise, constant_speed_hypothesis))
"
7286,contradiction,,contradiction,"John left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","John left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 55 percent commission","john left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","john left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 55 percent commission","old_job_salary_premise = 75000
new_job_base_salary_premise = 45000
new_job_commission_premise = 0.15

old_job_salary_hypothesis = 75000
new_job_base_salary_hypothesis = 45000
new_job_commission_hypothesis = 0.55

def entailment_or_contradiction_or_neutral(old_job_salary_premise, new_job_base_salary_premise, new_job_commission_premise, old_job_salary_hypothesis, new_job_base_salary_hypothesis, new_job_commission_hypothesis):
    # the hypothesis contradicts the premise if the old job salary, the new job base salary or the new job commission differ
    if old_job_salary_premise != old_job_salary_hypothesis or new_job_base_salary_premise != new_job_base_salary_hypothesis or new_job_commission_premise != new_job_commission_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(old_job_salary_premise, new_job_base_salary_premise, new_job_commission_premise, old_job_salary_hypothesis, new_job_base_salary_hypothesis, new_job_commission_hypothesis))
"
6138,entailment,,entailment,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,Kiran travels from A to B by car and returns from B to A by cycle in more than 4 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in more than 4 hours,"travel_time_premise = 7
min_travel_time_hypothesis = 4

def entailment_or_contradiction_or_neutral(travel_time_premise, min_travel_time_hypothesis):
    # the hypothesis refers to the travel time from A to B and back, mentioned in the premise
    # the hypothesis estimates the travel time to be more than 'min_travel_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if travel time reported in the premise is lower than 'min_travel_time_hypothesis'
    if travel_time_premise < min_travel_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(travel_time_premise, min_travel_time_hypothesis))
"
7006,neutral,,neutral,Claire has a total of more than 56 pets consisting of gerbils and hamsters only,Claire has a total of 96 pets consisting of gerbils and hamsters only,claire has a total of more than 56 pets consisting of gerbils and hamsters only,claire has a total of 96 pets consisting of gerbils and hamsters only,"min_pets_claire_premise = 56
pets_claire_hypothesis = 96

def entailment_or_contradiction_or_neutral(min_pets_claire_premise, pets_claire_hypothesis):
    # the hypothesis talks about the number of pets Claire has
    # check if the hypothesis contradicts the premise estimate of more than 'min_pets_claire_premise', by checking if the number of pets from the hypothesis is lower or equal to 'min_pets_claire_premise'
    if pets_claire_hypothesis <= min_pets_claire_premise:
        return False
    # any number of pets greater than 56 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_pets_claire_premise, pets_claire_hypothesis))
"
7371,entailment,,entailment,Jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of 40 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of less than 80 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of 40 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of less than 80 % of the cost of the orders she serves,"hourly_wage_premise = 10.00
hourly_wage_hypothesis = 10.00
tip_rate_premise = 40
max_tip_rate_hypothesis = 80

def entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, tip_rate_premise, max_tip_rate_hypothesis):
    # the hypothesis refers to the same wage and tips as the premise
    # check if the hypothesis contradicts the premise by checking if the wage reported in the premise and hypothesis are not the same, or the tip rate in the premise is higher than the hypothesized maximum
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_premise > max_tip_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, tip_rate_premise, max_tip_rate_hypothesis))
"
7301,contradiction,,contradiction,"James have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","James have more than 10 parrots , 4 fishes , 9 rabbits and 6 dogs","james have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","james have more than 10 parrots , 4 fishes , 9 rabbits and 6 dogs","parrots_premise = 10
fishes_premise = 4
rabbits_premise = 9
dogs_premise = 6

min_parrots_hypothesis = 10
fishes_hypothesis = 4
rabbits_hypothesis = 9
dogs_hypothesis = 6

def entailment_or_contradiction_or_neutral(parrots_premise, fishes_premise, rabbits_premise, dogs_premise, min_parrots_hypothesis, fishes_hypothesis, rabbits_hypothesis, dogs_hypothesis):
    # The hypothesis refers to the number of parrots, fishes, rabbits and dogs mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of parrots, fishes, rabbits, and dogs reported in the premise are lower than the ones in the hypothesis
    if parrots_premise <= min_parrots_hypothesis or fishes_premise != fishes_hypothesis or rabbits_premise != rabbits_hypothesis or dogs_premise != dogs_hypothesis:
        return False
    # If the number of parrots is exactly 10 or more, and the number of fishes, rabbits, and dogs is the same as in the premise, then the hypothesis is entailed by the premise
    elif parrots_premise >= min_parrots_hypothesis and fishes_premise == fishes_hypothesis and rabbits_premise == rabbits_hypothesis and dogs_premise == dogs_hypothesis:
        return True
    # if the number of parrots is more than the minimum number in hypothesis and the number of fishes, rabbits and dogs is same as in premise, then the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(parrots_premise, fishes_premise, rabbits_premise, dogs_premise, min_parrots_hypothesis, fishes_hypothesis, rabbits_hypothesis, dogs_hypothesis))
"
7260,entailment,,entailment,"If Carol ' s rectangle measures 12 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","If Carol ' s rectangle measures less than 52 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","if carol ' s rectangle measures 12 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","if carol ' s rectangle measures less than 52 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","carol_rectangle_length_premise = 12
carol_rectangle_width_premise = 15
jordan_rectangle_length_premise = 9
max_carol_rectangle_length_hypothesis = 52
jordan_rectangle_length_hypothesis = 9

def entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_width_premise, jordan_rectangle_length_premise, max_carol_rectangle_length_hypothesis, jordan_rectangle_length_hypothesis):
    # the hypothesis refers to the dimensions of Carol's and Jordan's rectangles mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Carol's rectangle length as reported in the premise is greater than 'max_carol_rectangle_length_hypothesis'
    if carol_rectangle_length_premise > max_carol_rectangle_length_hypothesis:
        return False
    else:
        # check if the hypothesis contradicts the premise by checking if Jordan's rectangle length as reported in the premise is different from the one in the hypothesis
        if jordan_rectangle_length_premise != jordan_rectangle_length_hypothesis:
            return False
        else:
            return True

print(entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_width_premise, jordan_rectangle_length_premise, max_carol_rectangle_length_hypothesis, jordan_rectangle_length_hypothesis))
"
7320,entailment,,entailment,"For the past 3 weeks , Rikki has gone to the gym an average of 2 times per week","For the past less than 6 weeks , Rikki has gone to the gym an average of 2 times per week","for the past 3 weeks , rikki has gone to the gym an average of 2 times per week","for the past less than 6 weeks , rikki has gone to the gym an average of 2 times per week","# Extracted Quantitative Values
gym_weeks_premise = 3
gym_frequency_premise = 2
max_gym_weeks_hypothesis = 6
gym_frequency_hypothesis = 2

def entailment_or_contradiction_or_neutral(gym_weeks_premise, gym_frequency_premise, max_gym_weeks_hypothesis, gym_frequency_hypothesis):
    # The hypothesis is about the number of weeks and the frequency of Rikki going to the gym, which are also mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of weeks in the hypothesis is less than in the premise
    if max_gym_weeks_hypothesis < gym_weeks_premise:
        return False
    # Check if the frequency of going to the gym in the hypothesis is different from the premise
    elif gym_frequency_hypothesis != gym_frequency_premise:
        return False
    # If both the number of weeks and the frequency of going to the gym in the hypothesis are equal to or greater than those in the premise, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(gym_weeks_premise, gym_frequency_premise, max_gym_weeks_hypothesis, gym_frequency_hypothesis))
"
6642,entailment,,entailment,Marcella has 27 pairs of shoes,Marcella has more than 17 pairs of shoes,marcella has 27 pairs of shoes,marcella has more than 17 pairs of shoes,"pairs_of_shoes_premise = 27
min_pairs_of_shoes_hypothesis = 17

def entailment_or_contradiction_or_neutral(pairs_of_shoes_premise, min_pairs_of_shoes_hypothesis):
    # the hypothesis refers to the number of pairs of shoes Marcella has, which is mentioned in the premise
    # the hypothesis estimates the shoe pairs to more than 'min_pairs_of_shoes_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of shoe pairs reported in the premise is lower than 'min_pairs_of_shoes_hypothesis'
    if pairs_of_shoes_premise < min_pairs_of_shoes_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pairs_of_shoes_premise, min_pairs_of_shoes_hypothesis))
"
6716,contradiction,,contradiction,Sachin Tendulkar bough a red ferrari with a strange 5 digit numbered plate,Sachin Tendulkar bough a red ferrari with a strange 6 digit numbered plate,sachin tendulkar bough a red ferrari with a strange 5 digit numbered plate,sachin tendulkar bough a red ferrari with a strange 6 digit numbered plate,"plate_digits_premise = 5
plate_digits_hypothesis = 6

def entailment_or_contradiction_or_neutral(plate_digits_premise, plate_digits_hypothesis):
    # the hypothesis refers to the number of digits in the ferrari's plate mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the digits number
    if plate_digits_premise != plate_digits_hypothesis:
        return False
    return None

print(entailment_or_contradiction_or_neutral(plate_digits_premise, plate_digits_hypothesis))
"
6815,contradiction,,contradiction,"If 18 % of all the students at Morse have cars , how many students are in the three lower grades ?","If 58 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 18 % of all the students at morse have cars , how many students are in the three lower grades ?","if 58 % of all the students at morse have cars , how many students are in the three lower grades ?","car_owners_percentage_premise = 18
car_owners_percentage_hypothesis = 58

def entailment_or_contradiction_or_neutral(car_owners_percentage_premise, car_owners_percentage_hypothesis):
    # The hypothesis refers to the percentage of student car owners at Morse, which is also mentioned in the premise
    # Check if the hypothesis contradicts the premise by comparing the percentage of student car owners
    if car_owners_percentage_premise != car_owners_percentage_hypothesis:
        return False
    # If the percentages are the same, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(car_owners_percentage_premise, car_owners_percentage_hypothesis))
"
6747,entailment,,entailment,Raman mixed 44 kg of butter at Rs,Raman mixed less than 84 kg of butter at Rs,raman mixed 44 kg of butter at rs,raman mixed less than 84 kg of butter at rs,"butter_kg_premise = 44
max_butter_kg_hypothesis = 84

def entailment_or_contradiction_or_neutral(butter_kg_premise, max_butter_kg_hypothesis):
    # the hypothesis refers to the amount of butter mixed mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the butter amount reported in the premise is higher than 'max_butter_kg_hypothesis'
    if butter_kg_premise > max_butter_kg_hypothesis:
        return False
    # since the premise butter amount is less than the maximum amount mentioned in the hypothesis, it is entailed by the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(butter_kg_premise, max_butter_kg_hypothesis))
"
6844,neutral,,neutral,"Sacha runs at a constant speed of more than 4 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of 7 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 4 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 7 meters per second , and bruno runs at a constant speed of 5 meters per second","min_speed_sacha_premise = 4
speed_sacha_hypothesis = 7
speed_bruno_premise = 5
speed_bruno_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_sacha_hypothesis, speed_bruno_premise, speed_bruno_hypothesis):
    # the hypothesis talks about the speed of Sacha and Bruno, both referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_speed_sacha_premise', by checking if the speed of Sacha from the hypothesis is lower or equal to 'min_speed_sacha_premise'
    if speed_sacha_hypothesis <= min_speed_sacha_premise or speed_bruno_hypothesis != speed_bruno_premise:
        return False
    # any speed of Sacha greater than 4 and equal speed of Bruno is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_sacha_premise, speed_sacha_hypothesis, speed_bruno_premise, speed_bruno_hypothesis))
"
6723,entailment,,entailment,3600 from Anwar at 6 % p,more than 1600 from Anwar at 6 % p,3600 from anwar at 6 % p,more than 1600 from anwar at 6 % p,"amount_from_anwar_premise = 3600
min_amount_from_anwar_hypothesis = 1600

def entailment_or_contradiction_or_neutral(amount_from_anwar_premise, min_amount_from_anwar_hypothesis):
    # the hypothesis refers to the amount received from Anwar mentioned in the premise
    # the hypothesis estimates the amount to be more than 'min_amount_from_anwar_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the amount from Anwar in the premise is lower than 'min_amount_from_anwar_hypothesis'
    if amount_from_anwar_premise < min_amount_from_anwar_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(amount_from_anwar_premise, min_amount_from_anwar_hypothesis))
"
6425,contradiction,,contradiction,Marie has 248 $ in her account of the bank,Marie has 148 $ in her account of the bank,marie has 248 $ in her account of the bank,marie has 148 $ in her account of the bank,"account_balance_premise = 248
account_balance_hypothesis = 148

def entailment_or_contradiction_or_neutral(account_balance_premise, account_balance_hypothesis):
    # the hypothesis talks about Marie's bank account balance, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the account balance from the hypothesis is different from the account balance from the premise
    if account_balance_hypothesis != account_balance_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(account_balance_premise, account_balance_hypothesis))
"
6960,entailment,,entailment,Joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 60,Joe ’ s average ( arithmetic mean ) test score across more than 2 equally weighted tests was 60,joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 60,joe ’ s average ( arithmetic mean ) test score across more than 2 equally weighted tests was 60,"num_tests_premise = 4
average_score_premise = 60
min_num_tests_hypothesis = 2
average_score_hypothesis = 60

def entailment_or_contradiction_or_neutral(num_tests_premise, average_score_premise, min_num_tests_hypothesis, average_score_hypothesis):
    # the hypothesis refers to the average score and number of tests mentioned in the premise
    # first, check if the hypothesis contradicts the premise by checking if the average test score or number of tests mentioned in the premise are different from the ones in the hypothesis
    if average_score_premise != average_score_hypothesis or num_tests_premise <= min_num_tests_hypothesis:
        return False
    # else, the hypothesis is consistent with the premise as it talks about more than 2 tests with an average score of 60
    return True

print(entailment_or_contradiction_or_neutral(num_tests_premise, average_score_premise, min_num_tests_hypothesis, average_score_hypothesis))
"
6663,entailment,,entailment,"At a meeting of the 7 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","At a meeting of the more than 6 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","at a meeting of the 7 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","at a meeting of the more than 6 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","joint_chiefs_premise = 7
min_joint_chiefs_hypothesis = 6

def entailment_or_contradiction_or_neutral(joint_chiefs_premise, min_joint_chiefs_hypothesis):
    # the hypothesis talks about the number of joint chiefs of staff present in a meeting, also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if joint chiefs reported in the premise are lower than 'min_joint_chiefs_hypothesis'
    if joint_chiefs_premise < min_joint_chiefs_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(joint_chiefs_premise, min_joint_chiefs_hypothesis))
"
7489,neutral,,neutral,Anita has less than 460 apples,Anita has 360 apples,anita has less than 460 apples,anita has 360 apples,"max_apples_premise = 460
apples_hypothesis = 360

def entailment_or_contradiction_or_neutral(max_apples_premise, apples_hypothesis):
    # the hypothesis refers to the number of apples that Anita has, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise of less than 'max_apples_premise', by checking if the number of apples from the hypothesis is higher or equal to 'max_apples_premise'
    if apples_hypothesis >= max_apples_premise:
        return False
    # any number of apples less than 460 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_apples_premise, apples_hypothesis))
"
6767,contradiction,,contradiction,In a BCCI meeting there are 13 people,In a BCCI meeting there are less than 13 people,in a bcci meeting there are 13 people,in a bcci meeting there are less than 13 people,"people_in_meeting_premise = 13
max_people_in_meeting_hypothesis = 13

def entailment_or_contradiction_or_neutral(people_in_meeting_premise, max_people_in_meeting_hypothesis):
    # the hypothesis refers to the number of people in a BCCI meeting mentioned in the premise
    # the hypothesis estimates the number of people to be less than 'max_people_in_meeting_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of people reported in the premise is greater or equal to 'max_people_in_meeting_hypothesis'
    if people_in_meeting_premise >= max_people_in_meeting_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(people_in_meeting_premise, max_people_in_meeting_hypothesis))
"
6897,entailment,,entailment,Mark sold 7 boxes less than n and Ann sold 2 boxes less than n,Mark sold more than 6 boxes less than n and Ann sold 2 boxes less than n,mark sold 7 boxes less than n and ann sold 2 boxes less than n,mark sold more than 6 boxes less than n and ann sold 2 boxes less than n,"mark_boxes_sold_premise = 7
mark_boxes_sold_hypothesis = 6
ann_boxes_sold_premise = ann_boxes_sold_hypothesis = 2

def entailment_or_contradiction_or_neutral(mark_boxes_sold_premise, mark_boxes_sold_hypothesis, ann_boxes_sold_premise, ann_boxes_sold_hypothesis):
    # the hypothesis refers to the number of boxes sold by Mark and Ann, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the boxes sold by Mark in the hypothesis is greater than or equal to the boxes sold in the premise
    if mark_boxes_sold_hypothesis >= mark_boxes_sold_premise:
        return False
    # check if the number of boxes sold by Ann in the premise and the hypothesis are equal
    elif ann_boxes_sold_premise != ann_boxes_sold_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(mark_boxes_sold_premise, mark_boxes_sold_hypothesis, ann_boxes_sold_premise, ann_boxes_sold_hypothesis))
"
6545,contradiction,,contradiction,Ayesha ' s father was 38 years of age when she was born while her mother was 36 years old when her brother four years younger to her was born,Ayesha ' s father was 18 years of age when she was born while her mother was 36 years old when her brother four years younger to her was born,ayesha ' s father was 38 years of age when she was born while her mother was 36 years old when her brother four years younger to her was born,ayesha ' s father was 18 years of age when she was born while her mother was 36 years old when her brother four years younger to her was born,"father_age_birth_ayesha_premise = 38
mother_age_birth_brother_premise = 36
father_age_birth_ayesha_hypothesis = 18
mother_age_birth_brother_hypothesis = 36

def entailment_or_contradiction_or_neutral(father_age_birth_ayesha_premise, mother_age_birth_brother_premise, father_age_birth_ayesha_hypothesis, mother_age_birth_brother_hypothesis):
    # The hypothesis contradicts the premise for father's age at Ayesha's birth
    # Check if father's age at Ayesha's birth in hypothesis is not equal to father's age at Ayesha's birth in premise
    if father_age_birth_ayesha_hypothesis != father_age_birth_ayesha_premise:
        return False
    # The hypothesis is consistent with the premise for mother's age at brother's birth
    # Check if mother's age at brother's birth in hypothesis is not equal to mother's age at brother's birth in premise
    elif mother_age_birth_brother_hypothesis != mother_age_birth_brother_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(father_age_birth_ayesha_premise, mother_age_birth_brother_premise, father_age_birth_ayesha_hypothesis, mother_age_birth_brother_hypothesis))
"
6941,contradiction,,contradiction,At the same time Jose gets on an elevator on the 51 st floor of the same building and rides down at a rate of 63 floors per minute,At the same time Jose gets on an elevator on the 31 st floor of the same building and rides down at a rate of 63 floors per minute,at the same time jose gets on an elevator on the 51 st floor of the same building and rides down at a rate of 63 floors per minute,at the same time jose gets on an elevator on the 31 st floor of the same building and rides down at a rate of 63 floors per minute,"jose_start_floor_premise = 51
jose_start_floor_hypothesis = 31
jose_rate_down_premise = 63
jose_rate_down_hypothesis = 63

def entailment_or_contradiction_or_neutral(jose_start_floor_premise, jose_start_floor_hypothesis, jose_rate_down_premise, jose_rate_down_hypothesis):
    # the hypothesis refers to the start floor and the rate of riding down of Jose, both are mentioned in the premise
    # check if the start floor in the hypothesis contradicts the one in the premise by checking if they are not the same
    if jose_start_floor_premise != jose_start_floor_hypothesis:
        return False
    # check if the rate of riding down in the hypothesis contradicts the one in the premise by checking if they are not the same
    elif jose_rate_down_premise != jose_rate_down_hypothesis:
        return False
    # if there is no contradiction return None (neutral)
    else:
        return None

print(entailment_or_contradiction_or_neutral(jose_start_floor_premise, jose_start_floor_hypothesis, jose_rate_down_premise, jose_rate_down_hypothesis))
"
6441,entailment,,entailment,Andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,Andrew purchased more than 1 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased more than 1 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,"grapes_purchased_premise = 7
grapes_rate_premise = 68
mangoes_purchased_premise = 9
mangoes_rate_premise = 48

min_grapes_purchased_hypothesis = 1
grapes_rate_hypothesis = 68
mangoes_purchased_hypothesis = 9
mangoes_rate_hypothesis = 48

def entailment_or_contradiction_or_neutral(grapes_purchased_premise, grapes_rate_premise, mangoes_purchased_premise, mangoes_rate_premise, min_grapes_purchased_hypothesis, grapes_rate_hypothesis, mangoes_purchased_hypothesis, mangoes_rate_hypothesis):
    # the hypothesis refers to the quantity and rate of grapes and mangoes mentioned in the premise
    # first, check if the hypothesis contradicts the premise by checking if the quantity and rate of grapes and mangoes from the hypothesis are different from the premise
    if grapes_purchased_premise < min_grapes_purchased_hypothesis or grapes_rate_premise != grapes_rate_hypothesis or mangoes_purchased_premise != mangoes_purchased_hypothesis or mangoes_rate_premise != mangoes_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(grapes_purchased_premise, grapes_rate_premise, mangoes_purchased_premise, mangoes_rate_premise, min_grapes_purchased_hypothesis, grapes_rate_hypothesis, mangoes_purchased_hypothesis, mangoes_rate_hypothesis))
"
6690,entailment,,entailment,Rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,Rakesh travelled less than 8800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled 1800 kilometre by air which formed 3 / 5 of the total journey,rakesh travelled less than 8800 kilometre by air which formed 3 / 5 of the total journey,"air_travel_premise = 1800
max_air_travel_hypothesis = 8800

def entailment_or_contradiction_or_neutral(air_travel_premise, max_air_travel_hypothesis):
    # the hypothesis refers to the distance travelled by air mentioned in the premise
    # the hypothesis estimates the air travel to less than 'max_air_travel_hypothesis'
    # check if the hypothesis contradicts the premise by checking if air travel reported in the premise is higher than 'max_air_travel_hypothesis'
    if air_travel_premise > max_air_travel_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(air_travel_premise, max_air_travel_hypothesis))
"
6736,neutral,,neutral,Rohit and Rohan can complete a work in less than 22 days and 6 days respectively,Rohit and Rohan can complete a work in 12 days and 6 days respectively,rohit and rohan can complete a work in less than 22 days and 6 days respectively,rohit and rohan can complete a work in 12 days and 6 days respectively,"max_work_days_rohit_premise = 22
max_work_days_rohan_premise = 6
work_days_rohit_hypothesis = 12
work_days_rohan_hypothesis = 6

def entailment_or_contradiction_or_neutral(max_work_days_rohit_premise, max_work_days_rohan_premise, work_days_rohit_hypothesis, work_days_rohan_hypothesis):
    # the hypothesis talks about the number of days Rohit and Rohan need to complete a work, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Rohit or Rohan take more days in the hypothesis than stated in the premise
    if work_days_rohit_hypothesis > max_work_days_rohit_premise or work_days_rohan_hypothesis > max_work_days_rohan_premise:
        return False
    # if the hypothesis does not contradict the premise, then it is either neutral or entailing
    # check if the hypothesis entails the premise by checking if Rohit and Rohan take exactly the same number of days in the hypothesis as stated in the premise
    if work_days_rohit_hypothesis == max_work_days_rohit_premise and work_days_rohan_hypothesis == max_work_days_rohan_premise:
        return True
    # if the hypothesis does not entail the premise either, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(max_work_days_rohit_premise, max_work_days_rohan_premise, work_days_rohit_hypothesis, work_days_rohan_hypothesis))
"
1156,neutral,,neutral,In less than 2979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,In 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,in less than 2979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,in 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,"year_premise = 2979
year_hypothesis = 1979

def entailment_or_contradiction_or_neutral(year_premise, year_hypothesis):
    # the hypothesis refers to the year mentioned in the premise
    # the hypothesis gives a specific year, whereas the premise gives a range of years
    # check if the hypothesis contradicts the premise, by verifying if the year from the hypothesis is greater or equal to 'year_premise'
    if year_hypothesis >= year_premise:
        return False
    # any year less than 2979 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(year_premise, year_hypothesis))
"
6835,neutral,,neutral,Billy has more than 4 apples,Billy has 5 apples,billy has more than 4 apples,billy has 5 apples,"min_apples_billy_premise = 4
apples_billy_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_apples_billy_premise, apples_billy_hypothesis):
    # the hypothesis talks about the number of apples Billy has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_apples_billy_premise', by checking if the number of apples from the hypothesis is lower or equal to 'min_apples_billy_premise'
    if apples_billy_hypothesis <= min_apples_billy_premise:
        return False
    # any number of apples greater than 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_apples_billy_premise, apples_billy_hypothesis))
"
6454,neutral,,neutral,"Calculate the average mark scored by Andrea if he had the following scores in an examination : less than 76 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","Calculate the average mark scored by Andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : less than 76 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?",
6986,contradiction,,contradiction,"If Elena purchased a total of 12 of these pens for $ 42.00 , how many brand X pens did she purchase ?","If Elena purchased a total of more than 12 of these pens for $ 42.00 , how many brand X pens did she purchase ?","if elena purchased a total of 12 of these pens for $ 42.00 , how many brand x pens did she purchase ?","if elena purchased a total of more than 12 of these pens for $ 42.00 , how many brand x pens did she purchase ?","total_pens_premise = 12
min_total_pens_hypothesis = 13

def entailment_or_contradiction_or_neutral(total_pens_premise, min_total_pens_hypothesis):
    # the hypothesis refers to the total number of pens, same as the premise
    # the hypothesis estimates the total number of pens to be more than 'min_total_pens_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total number of pens in the premise is less than 'min_total_pens_hypothesis'
    if total_pens_premise < min_total_pens_hypothesis:
        return False
    else:
        # the premise does not entail the hypothesis as the number of pens in the premise is not more than 'min_total_pens_hypothesis'
        return None

print(entailment_or_contradiction_or_neutral(total_pens_premise, min_total_pens_hypothesis))
"
6410,contradiction,,contradiction,"Shop Offered 20 % offer for every Shirt , Smith bought a shirt at Rs","Shop Offered 80 % offer for every Shirt , Smith bought a shirt at Rs","shop offered 20 % offer for every shirt , smith bought a shirt at rs","shop offered 80 % offer for every shirt , smith bought a shirt at rs","offer_percentage_premise = 20
offer_percentage_hypothesis = 80

def entailment_or_contradiction_or_neutral(offer_percentage_premise, offer_percentage_hypothesis):
    # the hypothesis talks about the percentage of discount offered on a shirt, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the discount percentage in the hypothesis is not equal to that in the premise
    if offer_percentage_hypothesis != offer_percentage_premise:
        return False
    # if the discount percentages are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(offer_percentage_premise, offer_percentage_hypothesis))
"
6638,contradiction,,contradiction,"Ram , Krish and Bhim can complete a work in 30 days","Ram , Krish and Bhim can complete a work in 50 days","ram , krish and bhim can complete a work in 30 days","ram , krish and bhim can complete a work in 50 days","work_days_premise = 30
work_days_hypothesis = 50

def entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis):
    # the hypothesis refers to the time Ram, Krish and Bhim need to complete a work, presented also in the premise
    # check if the hypothesis contradicts the premise estimate of 'work_days_premise', by checking if the hypothesis suggests they need more days
    if work_days_hypothesis > work_days_premise:
        return False
    # if the hypothesis suggests they can complete the work in the same number of days or less, it is consistent with the premise so entailment is true
    return True

print(entailment_or_contradiction_or_neutral(work_days_premise, work_days_hypothesis))
"
7445,contradiction,,contradiction,Bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,Bhanu spends more than 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,bhanu spends more than 30 % of his income on petrol on scooter 14 % of the remaining on house rent and the balance on food,"petrol_expense_premise = 30
petrol_expense_hypothesis = 30

def entailment_or_contradiction_or_neutral(petrol_expense_premise, petrol_expense_hypothesis):
    # the hypothesis refers to Bhanu's petrol expense which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the petrol expense reported in the hypothesis is lower than the one mentioned in the premise
    if petrol_expense_hypothesis <= petrol_expense_premise:
        return False
    # if the petrol expense is greater than the one mentioned in the premise, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(petrol_expense_premise, petrol_expense_hypothesis))
"
7505,contradiction,,contradiction,"After 10 minutes , Pat stops to stretch","After 60 minutes , Pat stops to stretch","after 10 minutes , pat stops to stretch","after 60 minutes , pat stops to stretch","stop_time_premise = 10
stop_time_hypothesis = 60

def entailment_or_contradiction_or_neutral(stop_time_premise, stop_time_hypothesis):
    # the hypothesis refers to the moment Pat stops to stretch, mentioned in the premise
    # the hypothesis assumes the stop time is 'stop_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the stop time from the hypothesis is different from the one from the premise
    if stop_time_hypothesis != stop_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(stop_time_premise, stop_time_hypothesis))
"
7554,entailment,,entailment,Jim alone cleans the entire house in 6 hours,Jim alone cleans the entire house in more than 1 hours,jim alone cleans the entire house in 6 hours,jim alone cleans the entire house in more than 1 hours,"cleaning_time_premise = 6
min_cleaning_time_hypothesis = 1

def entailment_or_contradiction_or_neutral(cleaning_time_premise, min_cleaning_time_hypothesis):
    # the hypothesis refers to the cleaning time mentioned in the premise
    # the hypothesis estimates the cleaning time to be more than 'min_cleaning_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if cleaning time reported in the premise is less than 'min_cleaning_time_hypothesis'
    if cleaning_time_premise < min_cleaning_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(cleaning_time_premise, min_cleaning_time_hypothesis))
"
6669,entailment,,entailment,"If Suresh is 25 % more efficient than Kamal , he can complete the work in - - - days .","If Suresh is less than 35 % more efficient than Kamal , he can complete the work in - - - days .","if suresh is 25 % more efficient than kamal , he can complete the work in - - - days .","if suresh is less than 35 % more efficient than kamal , he can complete the work in - - - days .","suresh_efficiency_premise = 25
max_suresh_efficiency_hypothesis = 35

def entailment_or_contradiction_or_neutral(suresh_efficiency_premise, max_suresh_efficiency_hypothesis):
    # the hypothesis refers to the efficiency of Suresh compared to Kamal, mentioned in the premise
    # the hypothesis estimates Suresh's efficiency to be less than 'max_suresh_efficiency_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Suresh's efficiency level from the premise 
    # is greater than or equal to 'max_suresh_efficiency_hypothesis'
    if suresh_efficiency_premise >= max_suresh_efficiency_hypothesis:
        return False
    # if Suresh's efficiency level from the premise is less than 'max_suresh_efficiency_hypothesis', 
    # it means that the hypothesis details entail the premise information
    else:
        return True

print(entailment_or_contradiction_or_neutral(suresh_efficiency_premise, max_suresh_efficiency_hypothesis))
"
6139,neutral,,neutral,Kiran travels from A to B by car and returns from B to A by cycle in more than 4 hours,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in more than 4 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,"min_travel_time_premise = 4
travel_time_hypothesis = 7

def entailment_or_contradiction_or_neutral(min_travel_time_premise, travel_time_hypothesis):
    # the hypothesis talks about the travel time of Kiran from A to B and then B to A, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the travel time in the hypothesis is less than or equal to 'min_travel_time_premise'
    if travel_time_hypothesis <= min_travel_time_premise:
        return False
    # any travel time greater than 4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_travel_time_premise, travel_time_hypothesis))
"
7544,contradiction,,contradiction,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","If the toy store is stocked with 2 types of balls and 6 types of board games , how many different selections of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","if the toy store is stocked with 2 types of balls and 6 types of board games , how many different selections of the 4 items can amanda make ?","from math import comb

ball_types_premise = 3
game_types_premise = 6
items_selected_premise = 4

ball_types_hypothesis = 2
game_types_hypothesis = 6
items_selected_hypothesis = 4

def entailment_or_contradiction_or_neutral(ball_types_premise, game_types_premise, items_selected_premise, 
                                           ball_types_hypothesis, game_types_hypothesis, items_selected_hypothesis):
    # The total number of types in the premise and hypothesis
    total_types_premise = ball_types_premise + game_types_premise
    total_types_hypothesis = ball_types_hypothesis + game_types_hypothesis
    
    # Calculate the number of different selections Amanda can make in the premise and hypothesis
    selections_premise = comb(total_types_premise, items_selected_premise)
    selections_hypothesis = comb(total_types_hypothesis, items_selected_hypothesis)
    
    # Check if the hypothesis contradicts the premise by comparing the number of selections
    if selections_hypothesis != selections_premise:
        return False
    else:
        # If the number of selections are the same, the hypothesis entails the premise
        return True

print(entailment_or_contradiction_or_neutral(ball_types_premise, game_types_premise, items_selected_premise, 
                                             ball_types_hypothesis, game_types_hypothesis, items_selected_hypothesis))
"
6768,entailment,,entailment,"6600 among John , Jose & Binoy in the ration 2 : 4 : 6","more than 2600 among John , Jose & Binoy in the ration 2 : 4 : 6","6600 among john , jose & binoy in the ration 2 : 4 : 6","more than 2600 among john , jose & binoy in the ration 2 : 4 : 6","total_amount_premise = 6600
min_total_amount_hypothesis = 2600

def entailment_or_contradiction_or_neutral(total_amount_premise, min_total_amount_hypothesis):
    # the hypothesis refers to the total amount distributed among John, Jose, and Binoy mentioned in the premise
    # the hypothesis estimates the total amount to be more than 'min_total_amount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the total amount reported in the premise is lower than 'min_total_amount_hypothesis'
    if total_amount_premise < min_total_amount_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_amount_premise, min_total_amount_hypothesis))
"
7404,entailment,,entailment,"Mira is making telescopes , each consisting of 2 lenses , 1 tube , and 1 eyepiece","Mira is making telescopes , each consisting of less than 7 lenses , 1 tube , and 1 eyepiece","mira is making telescopes , each consisting of 2 lenses , 1 tube , and 1 eyepiece","mira is making telescopes , each consisting of less than 7 lenses , 1 tube , and 1 eyepiece","lenses_per_telescope_premise = 2
max_lenses_per_telescope_hypothesis = 7
tubes_per_telescope_premise = 1
tubes_per_telescope_hypothesis = 1
eyepieces_per_telescope_premise = 1
eyepieces_per_telescope_hypothesis = 1

def entailment_or_contradiction_or_neutral(lenses_per_telescope_premise, max_lenses_per_telescope_hypothesis, tubes_per_telescope_premise, tubes_per_telescope_hypothesis, eyepieces_per_telescope_premise, eyepieces_per_telescope_hypothesis):
    # the hypothesis talks about the number of lenses, tubes and eyepieces per telescope, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of lenses, tubes or eyepieces per telescope from the hypothesis are greater than the number from the premise
    if lenses_per_telescope_premise > max_lenses_per_telescope_hypothesis or tubes_per_telescope_premise != tubes_per_telescope_hypothesis or eyepieces_per_telescope_premise != eyepieces_per_telescope_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, check if it entails the premise
    # in this case, any number of lenses per telescope less than or equal to 7, and equal number of tubes and eyepieces per telescope, entails the premise
    return True

print(entailment_or_contradiction_or_neutral(lenses_per_telescope_premise, max_lenses_per_telescope_hypothesis, tubes_per_telescope_premise, tubes_per_telescope_hypothesis, eyepieces_per_telescope_premise, eyepieces_per_telescope_hypothesis))
"
7137,entailment,,entailment,David ' s Bank ' s saving amount is decreased 10 % due to loan payment and current balance is Rs,David ' s Bank ' s saving amount is decreased less than 60 % due to loan payment and current balance is Rs,david ' s bank ' s saving amount is decreased 10 % due to loan payment and current balance is rs,david ' s bank ' s saving amount is decreased less than 60 % due to loan payment and current balance is rs,"decrease_percentage_premise = 10
max_decrease_percentage_hypothesis = 60

def entailment_or_contradiction_or_neutral(decrease_percentage_premise, max_decrease_percentage_hypothesis):
    # both the premise and the hypothesis refer to the decrease in David's bank savings
    # the hypothesis estimates the savings decrease to be less than 'max_decrease_percentage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the decrease percentage from the premise is greater than 'max_decrease_percentage_hypothesis'
    if decrease_percentage_premise > max_decrease_percentage_hypothesis:
        return False
    # if the decrease percentage from the premise is less than 'max_decrease_percentage_hypothesis', then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(decrease_percentage_premise, max_decrease_percentage_hypothesis))
"
7026,entailment,,entailment,Dan leaves City A 120 minutes after Cara,Dan leaves City A less than 520 minutes after Cara,dan leaves city a 120 minutes after cara,dan leaves city a less than 520 minutes after cara,"dan_leaving_time_premise = 120
max_dan_leaving_time_hypothesis = 520

def entailment_or_contradiction_or_neutral(dan_leaving_time_premise, max_dan_leaving_time_hypothesis):
    # the hypothesis refers to the duration after which Dan leaves City A, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if Dan's leaving time reported in the premise is more than 'max_dan_leaving_time_hypothesis'
    if dan_leaving_time_premise > max_dan_leaving_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_leaving_time_premise, max_dan_leaving_time_hypothesis))
"
7152,entailment,,entailment,"In Kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","In Kaya ' s teacher ' s desk there are more than 7 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are more than 7 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","pink_highlighters_premise = 9
min_pink_highlighters_hypothesis = 7
yellow_highlighters_premise = 8
yellow_highlighters_hypothesis = 8
blue_highlighters_premise = 5
blue_highlighters_hypothesis = 5

def entailment_or_contradiction_or_neutral(pink_highlighters_premise, min_pink_highlighters_hypothesis, yellow_highlighters_premise, yellow_highlighters_hypothesis, blue_highlighters_premise, blue_highlighters_hypothesis):
    # the hypothesis refers to the number of highlighters of each color mentioned in the premise
    # the hypothesis estimates the number of pink highlighters to more than 'min_pink_highlighters_hypothesis', the number of yellow highlighters to exactly 'yellow_highlighters_hypothesis', and the number of blue highlighters to exactly 'blue_highlighters_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the highlighter counts reported in the premise are lower than those in the hypothesis
    if pink_highlighters_premise < min_pink_highlighters_hypothesis or yellow_highlighters_premise < yellow_highlighters_hypothesis or blue_highlighters_premise < blue_highlighters_hypothesis:
        return False
    # If there is no contradiction, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(pink_highlighters_premise, min_pink_highlighters_hypothesis, yellow_highlighters_premise, yellow_highlighters_hypothesis, blue_highlighters_premise, blue_highlighters_hypothesis))
"
7103,contradiction,,contradiction,"Joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","Joe drives 140 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives 140 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","# Quantities from premise
miles_at_60_mph_premise = 240
miles_at_40_mph_premise = 120

# Quantities from hypothesis
miles_at_60_mph_hypothesis = 140
miles_at_40_mph_hypothesis = 120

def entailment_or_contradiction_or_neutral(miles_at_60_mph_premise, miles_at_40_mph_premise, miles_at_60_mph_hypothesis, miles_at_40_mph_hypothesis):
    # Check if the miles driven at 60 mph in the hypothesis is less than the miles driven at 60 mph in the premise
    if miles_at_60_mph_hypothesis < miles_at_60_mph_premise:
        return False
    # Check if the miles driven at 40 mph in the hypothesis is less than the miles driven at 40 mph in the premise
    elif miles_at_40_mph_hypothesis < miles_at_40_mph_premise:
        return False
    # If both checks are false, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(miles_at_60_mph_premise, miles_at_40_mph_premise, miles_at_60_mph_hypothesis, miles_at_40_mph_hypothesis))
"
7292,contradiction,,contradiction,600 and Greg ' s share is Rs,400 and Greg ' s share is Rs,600 and greg ' s share is rs,400 and greg ' s share is rs,"greg_share_premise = 600
greg_share_hypothesis = 400

def entailment_or_contradiction_or_neutral(greg_share_premise, greg_share_hypothesis):
    # the hypothesis refers to the share of Greg mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Greg's share reported in the premise is different from 'greg_share_hypothesis'
    if greg_share_premise != greg_share_hypothesis:
        return False
    # if Greg's share in the premise is equal to 'greg_share_hypothesis', it entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(greg_share_premise, greg_share_hypothesis))
"
5915,contradiction,,contradiction,Jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 90,Jerry ’ s average ( arithmetic mean ) score on the first more than 3 of 4 tests is 90,jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 90,jerry ’ s average ( arithmetic mean ) score on the first more than 3 of 4 tests is 90,"average_score_first_3_tests_premise = 90
average_score_more_than_3_tests_hypothesis = 90

def entailment_or_contradiction_or_neutral(average_score_first_3_tests_premise, average_score_more_than_3_tests_hypothesis):
    # the hypothesis talks about the average score of more than 3 tests being equal to the average score of the first 3 tests from the premise
    # this is a contradiction since the average score of more than 3 tests can't be equal to the average score of only the first 3 tests
    if average_score_first_3_tests_premise == average_score_more_than_3_tests_hypothesis:
        return False
    # any other average score for more than 3 tests would be neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(average_score_first_3_tests_premise, average_score_more_than_3_tests_hypothesis))
"
7370,contradiction,,contradiction,The average of Suresh ’ s marks in English and History is 55,The average of Suresh ’ s marks in English and History is 35,the average of suresh ’ s marks in english and history is 55,the average of suresh ’ s marks in english and history is 35,"average_marks_premise = 55
average_marks_hypothesis = 35

def entailment_or_contradiction_or_neutral(average_marks_premise, average_marks_hypothesis):
    # the hypothesis talks about the average of marks in English and History, which is also mentioned in the premise
    # it contradicts the premise if the average marks in the hypothesis is not equal to the average marks in the premise
    if average_marks_hypothesis != average_marks_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(average_marks_premise, average_marks_hypothesis))
"
5970,entailment,,entailment,Henry runs the second leg of the course in 7 seconds,Henry runs the second leg of the course in more than 6 seconds,henry runs the second leg of the course in 7 seconds,henry runs the second leg of the course in more than 6 seconds,"second_leg_time_premise = 7
min_second_leg_time_hypothesis = 6

def entailment_or_contradiction_or_neutral(second_leg_time_premise, min_second_leg_time_hypothesis):
    # the hypothesis refers to the time Henry runs the second leg of the course mentioned in the premise
    # the hypothesis estimates the time to be more than 'min_second_leg_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the time reported in the premise is lower than 'min_second_leg_time_hypothesis'
    if second_leg_time_premise <= min_second_leg_time_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(second_leg_time_premise, min_second_leg_time_hypothesis))
"
7230,entailment,,entailment,Arun purchased 30 kg of wheat at the rate of Rs,Arun purchased less than 40 kg of wheat at the rate of Rs,arun purchased 30 kg of wheat at the rate of rs,arun purchased less than 40 kg of wheat at the rate of rs,"wheat_purchase_premise = 30
max_wheat_purchase_hypothesis = 40

def entailment_or_contradiction_or_neutral(wheat_purchase_premise, max_wheat_purchase_hypothesis):
    # the hypothesis refers to the quantity of wheat purchased
    # the hypothesis estimates the wheat purchase to be less than 'max_wheat_purchase_hypothesis'
    # check if the hypothesis contradicts the premise by checking if wheat purchase reported in the premise is greater than 'max_wheat_purchase_hypothesis'
    if wheat_purchase_premise > max_wheat_purchase_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(wheat_purchase_premise, max_wheat_purchase_hypothesis))
"
7560,entailment,,entailment,"At the faculty of Aerospace Engineering , 310 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , more than 110 students study Random - processing methods , 232 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 310 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 110 students study random - processing methods , 232 students study scramjet rocket engines and 112 students study them both","random_processing_students_premise = 310
scramjet_students_premise = 232
both_subjects_students_premise = 112

min_random_processing_students_hypothesis = 110
scramjet_students_hypothesis = 232
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, min_random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis):
    # the hypothesis refers to the number of students studying different subjects at the faculty of Aerospace Engineering
    # check if the hypothesis contradicts the premise by checking if the number of students studying each subject is lower than in the premise
    if random_processing_students_premise < min_random_processing_students_hypothesis or scramjet_students_premise != scramjet_students_hypothesis or both_subjects_students_premise != both_subjects_students_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, min_random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis))
"
6321,entailment,,entailment,There are 4 chess amateurs playing in Villa ' s chess club tournament,There are less than 8 chess amateurs playing in Villa ' s chess club tournament,there are 4 chess amateurs playing in villa ' s chess club tournament,there are less than 8 chess amateurs playing in villa ' s chess club tournament,"chess_players_premise = 4
max_chess_players_hypothesis = 8

def entailment_or_contradiction_or_neutral(chess_players_premise, max_chess_players_hypothesis):
    # the hypothesis refers to the number of chess players in the tournament mentioned in the premise
    # the hypothesis estimates the number of players to be less than 'max_chess_players_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of players reported in the premise is greater than 'max_chess_players_hypothesis'
    if chess_players_premise > max_chess_players_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(chess_players_premise, max_chess_players_hypothesis))
"
7245,entailment,,entailment,Joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 45,Joe ’ s average ( arithmetic mean ) test score across more than 3 equally weighted tests was 45,joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 45,joe ’ s average ( arithmetic mean ) test score across more than 3 equally weighted tests was 45,"test_count_premise = 4
test_average_premise = 45

min_test_count_hypothesis = 3
test_average_hypothesis = 45

def entailment_or_contradiction_or_neutral(test_count_premise, test_average_premise, min_test_count_hypothesis, test_average_hypothesis):
    # hypothesis talks about the number of tests and average score, both mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the test count or average score in the premise is less than the minimum count or average score in the hypothesis
    if test_count_premise < min_test_count_hypothesis or test_average_premise < test_average_hypothesis:
        return False
    # if the test count and average score in the premise are the same as in the hypothesis, then the hypothesis entails the premise
    elif test_count_premise == min_test_count_hypothesis+1 and test_average_premise == test_average_hypothesis:
        return True
    # if the test count in the premise is greater than the minimum count in the hypothesis, but the average score is the same, then the relationship is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(test_count_premise, test_average_premise, min_test_count_hypothesis, test_average_hypothesis))
"
6261,entailment,,entailment,"Annie , working alone , can do the same job in just 10 hours","Annie , working alone , can do the same job in just less than 40 hours","annie , working alone , can do the same job in just 10 hours","annie , working alone , can do the same job in just less than 40 hours","job_hours_premise = 10
max_job_hours_hypothesis = 40

def entailment_or_contradiction_or_neutral(job_hours_premise, max_job_hours_hypothesis):
    # the hypothesis refers to the number of hours Annie needs to complete a job, mentioned also in the premise
    # the hypothesis estimates the job hours to be less than 'max_job_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if job hours reported in the premise are higher than 'max_job_hours_hypothesis'
    if job_hours_premise > max_job_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(job_hours_premise, max_job_hours_hypothesis))
"
6129,entailment,,entailment,"Each week , Harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first more than 11 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first more than 11 hours and 1.5 x dollars for each additional hour worked that week","hours_normal_pay_premise = 21
hours_normal_pay_hypothesis = 11

def entailment_or_contradiction_or_neutral(hours_normal_pay_premise, hours_normal_pay_hypothesis):
    # The hypothesis states the number of hours for which Harry gets normal pay
    # Check if the hypothesis contradicts the premise by checking if the normal pay hours in the hypothesis are more than the ones in the premise
    if hours_normal_pay_hypothesis > hours_normal_pay_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hours_normal_pay_premise, hours_normal_pay_hypothesis))
"
7492,neutral,,neutral,"If there are more than 1 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","If there are 4 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are more than 1 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are 4 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","min_peanuts_box_premise = 1
added_peanuts_premise = 8
peanuts_box_hypothesis = 4
added_peanuts_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_peanuts_box_premise, added_peanuts_premise, peanuts_box_hypothesis, added_peanuts_hypothesis):
    # the hypothesis is about the number of peanuts in a box, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the initial number of peanuts in the box from the hypothesis is lower or equal to 1
    if peanuts_box_hypothesis <= min_peanuts_box_premise:
        return False
    # check if the number of added peanuts are the same
    if added_peanuts_premise != added_peanuts_hypothesis:
        return False
    # if initial number of peanuts in the box from the hypothesis is more than 1 and the number of added peanuts are the same, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_peanuts_box_premise, added_peanuts_premise, peanuts_box_hypothesis, added_peanuts_hypothesis))
"
7176,entailment,,entailment,"4800 among John , Jose & Binoy in the ration 2 : 4 : 6","more than 3800 among John , Jose & Binoy in the ration 2 : 4 : 6","4800 among john , jose & binoy in the ration 2 : 4 : 6","more than 3800 among john , jose & binoy in the ration 2 : 4 : 6","total_premise = 4800
total_hypothesis = 3800

def entailment_or_contradiction_or_neutral(total_premise, total_hypothesis):
    # the hypothesis refers to the total amount shared by John, Jose and Binoy, mentioned in the premise
    # the hypothesis estimates the total to more than 'total_hypothesis'
    # check if the hypothesis contradicts the premise by checking if total reported in the premise is lower than 'total_hypothesis'
    if total_premise < total_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_premise, total_hypothesis))
"
6152,contradiction,,contradiction,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 11 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 11 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","james_work_hours_premise = 41
james_work_hours_hypothesis = 11

def entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis):
    # both premise and hypothesis describe the hours James worked last week
    # check if the hypothesis contradicts the premise by checking if the hours worked by James in the hypothesis is not equal to the hours worked by James in the premise
    if james_work_hours_hypothesis != james_work_hours_premise:
        return False
    # if the numbers are equal, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(james_work_hours_premise, james_work_hours_hypothesis))
"
6370,neutral,,neutral,Diane find less than 8 cans of paint are just enough to paint one third of her room,Diane find 4 cans of paint are just enough to paint one third of her room,diane find less than 8 cans of paint are just enough to paint one third of her room,diane find 4 cans of paint are just enough to paint one third of her room,"max_cans_paint_premise = 8
cans_paint_hypothesis = 4

def entailment_or_contradiction_or_neutral(max_cans_paint_premise, cans_paint_hypothesis):
    # the hypothesis talks about the number of cans of paint Diane finds enough to paint one third of her room, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_cans_paint_premise', by checking if the number of cans from the hypothesis is greater or equal to 'max_cans_paint_premise'
    if cans_paint_hypothesis >= max_cans_paint_premise:
        return False
    # any number of cans less than 8 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_cans_paint_premise, cans_paint_hypothesis))
"
5905,neutral,,neutral,"Michael ate less than 7 / 8 of the cookies , Steve ate one half and Tyler ate 150 more cookies than Michael","Michael ate 1 / 8 of the cookies , Steve ate one half and Tyler ate 150 more cookies than Michael","michael ate less than 7 / 8 of the cookies , steve ate one half and tyler ate 150 more cookies than michael","michael ate 1 / 8 of the cookies , steve ate one half and tyler ate 150 more cookies than michael","michael_cookie_share_premise = 7 / 8
michael_cookie_share_hypothesis = 1 / 8
tyler_extra_cookies = 150
steve_cookie_share = 1 / 2

def entailment_or_contradiction_or_neutral(michael_cookie_share_premise, michael_cookie_share_hypothesis, steve_cookie_share, tyler_extra_cookies):
    # the hypothesis refers to the cookie shares mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Michael's share from the hypothesis is greater than what is reported in the premise
    if michael_cookie_share_hypothesis > michael_cookie_share_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if Steve's share from the hypothesis is different from the premise
    elif steve_cookie_share != steve_cookie_share:
        return False
    # since the hypothesis does not contradict the premise information, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(michael_cookie_share_premise, michael_cookie_share_hypothesis, steve_cookie_share, tyler_extra_cookies))
"
7214,contradiction,,contradiction,"Roslin played the game , getting at least one score of each of 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","Roslin played the game , getting at least one score of each of less than 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","roslin played the game , getting at least one score of each of 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","roslin played the game , getting at least one score of each of less than 1 , 2 , 3 , 4 , and 5 , and never getting the same score in consecutive steps","# The scores in the premise and hypothesis are qualitative, so we will represent them in lists
scores_premise = [1, 2, 3, 4, 5]
scores_hypothesis = ['less than 1', 2, 3, 4, 5]

def entailment_or_contradiction_or_neutral(scores_premise, scores_hypothesis):
    # The hypothesis talks about the scores Roslin got in the game, which is also referenced in the premise
    # Check if the hypothesis contradicts the premise by checking if any score in the hypothesis is not in the premise
    for score in scores_hypothesis:
        if score not in scores_premise and score != 'less than 1':
            return False
        elif score == 'less than 1':
            return False
    # All other scores are in the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(scores_premise, scores_hypothesis))
"
6989,contradiction,,contradiction,The ratio of the ages of Anil and his son at present is 7 : 3,The ratio of the ages of Anil and his son at present is 1 : 3,the ratio of the ages of anil and his son at present is 7 : 3,the ratio of the ages of anil and his son at present is 1 : 3,"anil_son_ratio_premise = 7/3
anil_son_ratio_hypothesis = 1/3

def entailment_or_contradiction_or_neutral(anil_son_ratio_premise, anil_son_ratio_hypothesis):
    # the hypothesis and the premise talk about the ratio of the ages of Anil and his son
    # if the ratio from the hypothesis is equal to the one from the premise, the hypothesis entails the premise
    # if the ratios are not equal, the hypothesis contradicts the premise
    if anil_son_ratio_hypothesis == anil_son_ratio_premise:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(anil_son_ratio_premise, anil_son_ratio_hypothesis))
"
7084,neutral,,neutral,"Annie , working alone , can do the same job in just less than 20 hours","Annie , working alone , can do the same job in just 10 hours","annie , working alone , can do the same job in just less than 20 hours","annie , working alone , can do the same job in just 10 hours","max_hours_Annie_work_premise = 20
hours_Annie_work_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_hours_Annie_work_premise, hours_Annie_work_hypothesis):
    # the hypothesis talks about the time Annie takes to complete a job alone, which is referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_hours_Annie_work_premise', by checking if the number of hours from the hypothesis is greater or equal to 'max_hours_Annie_work_premise'
    if hours_Annie_work_hypothesis >= max_hours_Annie_work_premise:
        return False
    # any number of hours less than 20 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_hours_Annie_work_premise, hours_Annie_work_hypothesis))
"
7461,entailment,,entailment,Amanda goes to the toy store to buy 1 ball and 3 different board games,Amanda goes to the toy store to buy less than 2 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy less than 2 ball and 3 different board games,"balls_premise = 1
max_balls_hypothesis = 2
board_games_premise = 3
board_games_hypothesis = 3

def entailment_or_contradiction_or_neutral(balls_premise, max_balls_hypothesis, board_games_premise, board_games_hypothesis):
    # the hypothesis refers to the number of ball and board games Amanda buys
    # the hypothesis estimates that Amanda bought less than 'max_balls_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the balls bought reported in the premise are higher than 'max_balls_hypothesis'
    if balls_premise > max_balls_hypothesis:
        return False
    # the hypothesis also mentions the number of board games bought by Amanda
    # check if the hypothesis contradicts the premise by checking if the board games bought reported in the premise are different than 'board_games_hypothesis'
    if board_games_premise != board_games_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(balls_premise, max_balls_hypothesis, board_games_premise, board_games_hypothesis))
"
7344,entailment,,entailment,"Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by less than 68 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by less than 68 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","crude_slump_premise = 28
crude_slump_hypothesis = 68

def entailment_or_contradiction_or_neutral(crude_slump_premise, crude_slump_hypothesis):
    # the hypothesis refers to the slump in crude oil prices mentioned in the premise
    # the hypothesis estimates the slump to be less than 'crude_slump_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the slump reported in the premise is higher than 'crude_slump_hypothesis'
    if crude_slump_premise > crude_slump_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(crude_slump_premise, crude_slump_hypothesis))
"
7195,neutral,,neutral,The time required by a train to cover the distance between Chennai and Jammu is exactly more than 6 days and 1 minute,The time required by a train to cover the distance between Chennai and Jammu is exactly 7 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly more than 6 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly 7 days and 1 minute,"# Extracting the quantities from the premise and hypothesis
min_train_travel_time_premise = 6 * 24 * 60 + 1 # converting days to minutes
train_travel_time_hypothesis = 7 * 24 * 60 + 1 # converting days to minutes

def entailment_or_contradiction_or_neutral(min_train_travel_time_premise, train_travel_time_hypothesis):
    # the hypothesis talks about the time needed for a train to travel from Chennai to Jammu, also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_train_travel_time_premise', by checking if the travel time from the hypothesis is lower or equal to 'min_train_travel_time_premise'
    if train_travel_time_hypothesis <= min_train_travel_time_premise:
        return False
    # any time greater than 'min_train_travel_time_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_train_travel_time_premise, train_travel_time_hypothesis))
"
6042,entailment,,entailment,"If the distance between their homes is 40 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is more than 10 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is 40 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is more than 10 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","distance_premise = 40
min_distance_hypothesis = 10
maxwell_speed = 4
brad_speed = 6

def entailment_or_contradiction_or_neutral(distance_premise, min_distance_hypothesis, maxwell_speed, brad_speed):
    # the hypothesis refers to the distance between homes, Maxwell's speed, and Brad's speed, all mentioned in the premise
    # the hypothesis estimates the distance to be more than 'min_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance in the premise is lower than 'min_distance_hypothesis'
    if distance_premise < min_distance_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_premise, min_distance_hypothesis, maxwell_speed, brad_speed))
"
6684,entailment,,entailment,Vinod climbs 60 steps in 40 seconds,Vinod climbs less than 80 steps in 40 seconds,vinod climbs 60 steps in 40 seconds,vinod climbs less than 80 steps in 40 seconds,"steps_climbed_premise = 60
max_steps_climbed_hypothesis = 80

def entailment_or_contradiction_or_neutral(steps_climbed_premise, max_steps_climbed_hypothesis):
    # the hypothesis talks about the number of steps climbed by Vinod, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if steps climbed in the premise are more than 'max_steps_climbed_hypothesis'
    if steps_climbed_premise > max_steps_climbed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(steps_climbed_premise, max_steps_climbed_hypothesis))
"
6515,contradiction,,contradiction,John was thrice as old as Tom 6 yrs back,John was thrice as old as Tom 2 yrs back,john was thrice as old as tom 6 yrs back,john was thrice as old as tom 2 yrs back,"years_back_premise = 6
years_back_hypothesis = 2

def entailment_or_contradiction_or_neutral(years_back_premise, years_back_hypothesis):
    # the hypothesis talks about the difference in age between John and Tom, mentioned also in the premise
    # the premise mentions the age difference 'years_back_premise' years ago, while the hypothesis refers to 'years_back_hypothesis' years ago
    # check if the hypothesis contradicts the premise by checking if the years back from the hypothesis are equal to the years back from the premise
    if years_back_hypothesis == years_back_premise:
        return True
    # the hypothesis contradicts the premise, as the time period when John was three times as old as Tom is different
    return False

print(entailment_or_contradiction_or_neutral(years_back_premise, years_back_hypothesis))
"
6345,entailment,,entailment,Mr Sharad started a business investing 50000,Mr Sharad started a business investing more than 10000,mr sharad started a business investing 50000,mr sharad started a business investing more than 10000,"investment_premise = 50000
min_investment_hypothesis = 10000

def entailment_or_contradiction_or_neutral(investment_premise, min_investment_hypothesis):
    # the hypothesis refers to the investment made by Mr Sharad mentioned in the premise
    # the hypothesis estimates the investment to more or equal to 'min_investment_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the investment reported in the premise is less than 'min_investment_hypothesis'
    if investment_premise < min_investment_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(investment_premise, min_investment_hypothesis))
"
6800,contradiction,,contradiction,Robert purchased $ 4000 worth of US saving bonds,Robert purchased $ 5000 worth of US saving bonds,robert purchased $ 4000 worth of us saving bonds,robert purchased $ 5000 worth of us saving bonds,"saving_bonds_purchased_premise = 4000
saving_bonds_purchased_hypothesis = 5000

def entailment_or_contradiction_or_neutral(saving_bonds_purchased_premise, saving_bonds_purchased_hypothesis):
    # the hypothesis refers to the number of saving bonds mentioned in the premise
    # the hypothesis estimates the saving bonds to be worth 'saving_bonds_purchased_hypothesis'
    # check if the hypothesis contradicts the premise by checking if saving bonds worth reported in the premise are less than 'saving_bonds_purchased_hypothesis'
    if saving_bonds_purchased_premise < saving_bonds_purchased_hypothesis:
        return False
    # any value of saving bonds equal to the premise is consistent with the premise, so the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(saving_bonds_purchased_premise, saving_bonds_purchased_hypothesis))
"
6076,neutral,,neutral,It takes John exactly less than 60 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,It takes John exactly 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,it takes john exactly less than 60 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,it takes john exactly 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,"john_rake_time_upper_premise = 60  # upper limit of John's raking time in the premise
todd_rake_time_premise = 60  # Todd's raking time in the premise
john_rake_time_hypothesis = 30  # John's raking time in the hypothesis
todd_rake_time_hypothesis = 60  # Todd's raking time in the hypothesis

def entailment_or_contradiction_or_neutral(john_rake_time_upper_premise, todd_rake_time_premise, john_rake_time_hypothesis, todd_rake_time_hypothesis):
    # the hypothesis refers to the raking time of both John and Todd, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if John's raking time in the hypothesis is greater or equal to the upper limit mentioned in the premise
    if john_rake_time_hypothesis >= john_rake_time_upper_premise:
        return False
    # check if Todd's raking time in the hypothesis contradicts the premise
    if todd_rake_time_hypothesis != todd_rake_time_premise:
        return False
    # if both checks pass, then the hypothesis neither contradicts nor entails the premise, hence it is neutral
    return None

print(entailment_or_contradiction_or_neutral(john_rake_time_upper_premise, todd_rake_time_premise, john_rake_time_hypothesis, todd_rake_time_hypothesis))
"
6896,contradiction,,contradiction,Alice walked for 3 days,Alice walked for 6 days,alice walked for 3 days,alice walked for 6 days,"walked_days_premise = 3
walked_days_hypothesis = 6

def entailment_or_contradiction_or_neutral(walked_days_premise, walked_days_hypothesis):
    # the hypothesis and premise both talk about the number of days Alice walked
    # check if the hypothesis contradicts the premise by checking if 'walked_days_hypothesis' is greater than 'walked_days_premise'
    if walked_days_hypothesis > walked_days_premise:
        return False
    # if 'walked_days_hypothesis' is equal to or less than 'walked_days_premise', it is consistent with the premise, so return True
    elif walked_days_hypothesis <= walked_days_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(walked_days_premise, walked_days_hypothesis))
"
6085,neutral,,neutral,Ram and Shyam can do together a piece of work in more than 10 days,Ram and Shyam can do together a piece of work in 20 days,ram and shyam can do together a piece of work in more than 10 days,ram and shyam can do together a piece of work in 20 days,"min_days_work_premise = 10
days_work_hypothesis = 20

def entailment_or_contradiction_or_neutral(min_days_work_premise, days_work_hypothesis):
    # the hypothesis gives an estimate on the number of days for the work to be done by Ram and Shyam, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of days in the hypothesis is less than or equal to 'min_days_work_premise'
    if days_work_hypothesis <= min_days_work_premise:
        return False
    # any number of days greater than 10 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_days_work_premise, days_work_hypothesis))
"
7078,neutral,,neutral,Stacy has a more than 56 page history paper due in 6 days,Stacy has a 66 page history paper due in 6 days,stacy has a more than 56 page history paper due in 6 days,stacy has a 66 page history paper due in 6 days,"min_page_premise = 56
page_hypothesis = 66
due_days = 6

def entailment_or_contradiction_or_neutral(min_page_premise, page_hypothesis, due_days):
    # the hypothesis talks about the number of pages in Stacy's history paper, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_page_premise', by checking if the number of pages from the hypothesis is lower or equal to 'min_page_premise'
    if page_hypothesis <= min_page_premise:
        return False
    # any number of pages greater than 56 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_page_premise, page_hypothesis, due_days))
"
7169,contradiction,,contradiction,7 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,8 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,7 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,8 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,"people_between_sujit_suraj_premise = 7
people_between_sujit_suraj_hypothesis = 8
people_after_suraj_premise = 20
people_after_suraj_hypothesis = 20

def entailment_or_contradiction_or_neutral(people_between_sujit_suraj_premise, people_between_sujit_suraj_hypothesis, people_after_suraj_premise, people_after_suraj_hypothesis):
    # the hypothesis talks about the number of people who entered between Sujit and Suraj, and after Suraj, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of people who entered between Sujit and Suraj from the hypothesis is not equal to the one from the premise
    if people_between_sujit_suraj_hypothesis != people_between_sujit_suraj_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the number of people who entered after Suraj from the hypothesis is not equal to the one from the premise
    if people_after_suraj_hypothesis != people_after_suraj_premise:
        return False
    # if no contradiction is found, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(people_between_sujit_suraj_premise, people_between_sujit_suraj_hypothesis, people_after_suraj_premise, people_after_suraj_hypothesis))
"
6795,entailment,,entailment,Lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,Lucy deposited $ more than 22500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ more than 22500 in an investment fund that provided 8 percent annual return compounded quarterly,"deposited_fund_premise = 62500
min_deposited_fund_hypothesis = 22500

def entailment_or_contradiction_or_neutral(deposited_fund_premise, min_deposited_fund_hypothesis):
    # the hypothesis refers to the amount deposited by Lucy mentioned in the premise
    # the hypothesis estimates the deposited amount to be more than 'min_deposited_fund_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the deposited amount reported in the premise is lower than 'min_deposited_fund_hypothesis'
    if deposited_fund_premise < min_deposited_fund_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(deposited_fund_premise, min_deposited_fund_hypothesis))
"
6737,contradiction,,contradiction,Rohit and Rohan can complete a work in 12 days and 6 days respectively,Rohit and Rohan can complete a work in 62 days and 6 days respectively,rohit and rohan can complete a work in 12 days and 6 days respectively,rohit and rohan can complete a work in 62 days and 6 days respectively,"rohit_time_premise = 12
rohan_time_premise = 6
rohit_time_hypothesis = 62
rohan_time_hypothesis = 6

def entailment_or_contradiction_or_neutral(rohit_time_premise, rohan_time_premise, rohit_time_hypothesis, rohan_time_hypothesis):
    # the hypothesis talks about the time Rohit and Rohan need to complete a work
    # check if the hypothesis contradicts the premise by comparing the time Rohit and Rohan need in the hypothesis and premise
    if rohit_time_premise != rohit_time_hypothesis or rohan_time_premise != rohan_time_hypothesis:
        return False
    return True

print(entailment_or_contradiction_or_neutral(rohit_time_premise, rohan_time_premise, rohit_time_hypothesis, rohan_time_hypothesis))
"
4365,entailment,,entailment,"Each week , James is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first less than 60 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first less than 60 hours and 2 x dollars for each additional hour worked that week","regular_hours_premise = 40
regular_hours_hypothesis = 60

def entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis):
    # the hypothesis talks about the number of regular paid hours that James works, which is also mentioned in the premise
    # the hypothesis estimates regular paid hours to be less than 'regular_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the regular hours reported in the premise are more than 'regular_hours_hypothesis'
    if regular_hours_premise >= regular_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis))
"
7493,contradiction,,contradiction,"If there are 4 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","If there are 7 peanuts in a box and Mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are 4 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","if there are 7 peanuts in a box and mary puts 8 more peanuts inside , how many peanuts are in the box ?","initial_peanuts_premise = 4
added_peanuts_premise = 8
initial_peanuts_hypothesis = 7
added_peanuts_hypothesis = 8

def entailment_or_contradiction_or_neutral(initial_peanuts_premise, added_peanuts_premise, initial_peanuts_hypothesis, added_peanuts_hypothesis):
    # the hypothesis contradicts the premise if the initial number of peanuts or the added number of peanuts differs from the premise
    # check if the initial number of peanuts or the added number of peanuts in the hypothesis contradicts the premise
    if initial_peanuts_premise != initial_peanuts_hypothesis or added_peanuts_premise != added_peanuts_hypothesis:
        return False
    # if there's no contradiction, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(initial_peanuts_premise, added_peanuts_premise, initial_peanuts_hypothesis, added_peanuts_hypothesis))
"
5955,entailment,,entailment,"Last year 26 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","Last year less than 56 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","last year 26 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","last year less than 56 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","england_travelers_premise = 26
france_travelers_premise = 26
italy_travelers_premise = 32

max_england_travelers_hypothesis = 56
france_travelers_hypothesis = 26
italy_travelers_hypothesis = 32

def entailment_or_contradiction_or_neutral(england_travelers_premise, france_travelers_premise, italy_travelers_premise, max_england_travelers_hypothesis, france_travelers_hypothesis, italy_travelers_hypothesis):
    # the hypothesis talks about the number of club members who traveled to England, France, and Italy, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of club members who traveled to England, by checking if the number from the hypothesis is lower than 'england_travelers_premise'
    if max_england_travelers_hypothesis < england_travelers_premise:
        return False
    # check if the number of club members who traveled to France and Italy from the hypothesis contradicts the premise
    if france_travelers_hypothesis != france_travelers_premise or italy_travelers_hypothesis != italy_travelers_premise:
        return False
    # if the hypothesis doesn't contradict the premise, it entails it
    return True

print(entailment_or_contradiction_or_neutral(england_travelers_premise, france_travelers_premise, italy_travelers_premise, max_england_travelers_hypothesis, france_travelers_hypothesis, italy_travelers_hypothesis))
"
6766,neutral,,neutral,In a BCCI meeting there are less than 63 people,In a BCCI meeting there are 13 people,in a bcci meeting there are less than 63 people,in a bcci meeting there are 13 people,"max_people_meeting_premise = 63
people_meeting_hypothesis = 13

def entailment_or_contradiction_or_neutral(max_people_meeting_premise, people_meeting_hypothesis):
    # the hypothesis is about a specific BCCI meeting, also referenced in the premise
    # the hypothesis contradicts the premise if the number of people at the meeting is greater than 'max_people_meeting_premise'
    if people_meeting_hypothesis > max_people_meeting_premise:
        return False
    # any number of people less than 63 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_people_meeting_premise, people_meeting_hypothesis))
"
6320,contradiction,,contradiction,"Maddie has 4 apples , if she give 2 to mike , how many does she have left ?","Maddie has 6 apples , if she give 2 to mike , how many does she have left ?","maddie has 4 apples , if she give 2 to mike , how many does she have left ?","maddie has 6 apples , if she give 2 to mike , how many does she have left ?","apples_maddie_premise = 4
apples_given_to_mike = 2
apples_maddie_hypothesis = 6

def entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis):
    # the hypothesis talks about the number of apples Maddie has, which is also mentioned in the premise
    # the hypothesis contradicts the premise by stating Maddie has 6 apples instead of 4
    if apples_maddie_hypothesis != apples_maddie_premise:
        return False
    # if the number of apples in the hypothesis was the same as the premise, then the hypothesis would entail the premise
    return None

print(entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis))
"
6492,entailment,,entailment,"If Dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","If Dana gives her parents less than 7 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents less than 7 % of that amount back each month , how much will she still owe her parents after four years of college ?","pay_back_rate_premise = 3
pay_back_rate_hypothesis = 7

def entailment_or_contradiction_or_neutral(pay_back_rate_premise, pay_back_rate_hypothesis):
    # the hypothesis refers to the pay back rate mentioned in the premise
    # the hypothesis estimates the pay back rate to be less than 'pay_back_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the pay back rate in the premise is greater or equal to 'pay_back_rate_hypothesis'
    if pay_back_rate_premise >= pay_back_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pay_back_rate_premise, pay_back_rate_hypothesis))
"
6282,entailment,,entailment,Robin ' s average ( arithmetic mean ) test score on 9 tests is 82,Robin ' s average ( arithmetic mean ) test score on more than 2 tests is 82,robin ' s average ( arithmetic mean ) test score on 9 tests is 82,robin ' s average ( arithmetic mean ) test score on more than 2 tests is 82,"test_scores_premise = 82
test_scores_num_premise = 9
test_scores_hypothesis = 82
min_test_scores_num_hypothesis = 2

def entailment_or_contradiction_or_neutral(test_scores_premise, test_scores_num_premise, test_scores_hypothesis, min_test_scores_num_hypothesis):
    # the hypothesis refers to the average test score and the number of tests mentioned in the premise
    # the hypothesis estimates the average test score and the number of tests to be more than 'min_test_scores_num_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the average test score or the number of tests reported in the premise is different or lower than 'test_scores_hypothesis' or 'min_test_scores_num_hypothesis' respectively.
    if test_scores_premise != test_scores_hypothesis or test_scores_num_premise < min_test_scores_num_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(test_scores_premise, test_scores_num_premise, test_scores_hypothesis, min_test_scores_num_hypothesis))
"
6113,contradiction,,contradiction,"Amtek employs 80 level - 1 employees , 30 of whom are college graduates","Amtek employs 10 level - 1 employees , 30 of whom are college graduates","amtek employs 80 level - 1 employees , 30 of whom are college graduates","amtek employs 10 level - 1 employees , 30 of whom are college graduates","level_1_employees_premise = 80
level_1_employees_hypothesis = 10
graduates_premise = 30
graduates_hypothesis = 30

def entailment_or_contradiction_or_neutral(level_1_employees_premise, level_1_employees_hypothesis, graduates_premise, graduates_hypothesis):
    # the hypothesis talks about the number of level - 1 employees and the number of graduates among them, referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'level_1_employees_premise' or 'graduates_premise'
    if level_1_employees_hypothesis != level_1_employees_premise or graduates_hypothesis != graduates_premise:
        return False
    # the hypothesis is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(level_1_employees_premise, level_1_employees_hypothesis, graduates_premise, graduates_hypothesis))
"
6461,contradiction,,contradiction,Lucy deposited $ 62500 in an investment fund that provided 20 percent annual return compounded quarterly,Lucy deposited $ 52500 in an investment fund that provided 20 percent annual return compounded quarterly,lucy deposited $ 62500 in an investment fund that provided 20 percent annual return compounded quarterly,lucy deposited $ 52500 in an investment fund that provided 20 percent annual return compounded quarterly,"deposit_premise = 62500
deposit_hypothesis = 52500

def entailment_or_contradiction_or_neutral(deposit_premise, deposit_hypothesis):
    # the hypothesis refers to the amount deposited by Lucy mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the amount deposited in the hypothesis is different from the premise
    if deposit_hypothesis != deposit_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(deposit_premise, deposit_hypothesis))
"
6393,entailment,,entailment,George ' s car calls for 8 ounces of oil for each cylinder used,George ' s car calls for more than 7 ounces of oil for each cylinder used,george ' s car calls for 8 ounces of oil for each cylinder used,george ' s car calls for more than 7 ounces of oil for each cylinder used,"oil_per_cylinder_premise = 8
min_oil_per_cylinder_hypothesis = 7

def entailment_or_contradiction_or_neutral(oil_per_cylinder_premise, min_oil_per_cylinder_hypothesis):
    # the hypothesis talks about the oil needed for each cylinder in George's car, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the oil quantity per cylinder from the hypothesis is higher than the one from the premise
    if min_oil_per_cylinder_hypothesis > oil_per_cylinder_premise:
        return False
    # if the oil quantity per cylinder from the hypothesis is less than or equal to the one from the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(oil_per_cylinder_premise, min_oil_per_cylinder_hypothesis))
"
7038,entailment,,entailment,"Calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","Calculate the average marks of a student who obtained more than 26 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","calculate the average marks of a student who obtained more than 26 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","# quantities from the premise
geo_hist_gov_premise = 56
art_premise = 60
comp_sci_premise = 72
mod_lit_premise = 85
average_premise = (geo_hist_gov_premise + art_premise + comp_sci_premise + mod_lit_premise) / 4

# quantities from the hypothesis
min_geo_hist_gov_hypothesis = 26
art_hypothesis = 60
comp_sci_hypothesis = 72
mod_lit_hypothesis = 85
average_hypothesis = (min_geo_hist_gov_hypothesis + art_hypothesis + comp_sci_hypothesis + mod_lit_hypothesis) / 4

def entailment_or_contradiction_or_neutral(average_premise, average_hypothesis):
    # the hypothesis refers to the average mark of the same subjects mentioned in the premise
    # the hypothesis estimates the average to be more or equal to 'average_hypothesis'
    # check if the hypothesis contradicts the premise by checking if average computed from the premise is lower than 'average_hypothesis'
    if average_premise < average_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(average_premise, average_hypothesis))
"
6185,contradiction,,contradiction,"At Veridux Corporation , there are 218 employees","At Veridux Corporation , there are 118 employees","at veridux corporation , there are 218 employees","at veridux corporation , there are 118 employees","employees_premise = 218
employees_hypothesis = 118

def entailment_or_contradiction_or_neutral(employees_premise, employees_hypothesis):
    # Both the hypothesis and premise refer to the number of employees at Veridux Corporation
    # Checking if the number of employees in the hypothesis contradicts the premise
    if employees_hypothesis != employees_premise:
        return False
    # If the number of employees in the hypothesis is the same as in the premise, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(employees_premise, employees_hypothesis))
"
6053,contradiction,,contradiction,Aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,Aaron will jog from home at 7 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at 7 miles per hour and then walk back home by the same route at 6 miles per hour,"jog_speed_premise = 3
walk_speed_premise = 6
jog_speed_hypothesis = 7
walk_speed_hypothesis = 6

def entailment_or_contradiction_or_neutral(jog_speed_premise, walk_speed_premise, jog_speed_hypothesis, walk_speed_hypothesis):
    # the hypothesis talks about the speeds of jogging and walking from home and back, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the speeds from the hypothesis match those from the premise
    if jog_speed_hypothesis != jog_speed_premise or walk_speed_hypothesis != walk_speed_premise:
        return False
    # if the speeds match, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(jog_speed_premise, walk_speed_premise, jog_speed_hypothesis, walk_speed_hypothesis))
"
7043,contradiction,,contradiction,"Susan weighs 10 pounds more than Anna does , and together they weigh a total of 110 pounds","Susan weighs 80 pounds more than Anna does , and together they weigh a total of 110 pounds","susan weighs 10 pounds more than anna does , and together they weigh a total of 110 pounds","susan weighs 80 pounds more than anna does , and together they weigh a total of 110 pounds","susan_weight_premise = 10
total_weight_premise = 110
susan_weight_hypothesis = 80
total_weight_hypothesis = 110

def entailment_or_contradiction_or_neutral(susan_weight_premise, total_weight_premise, susan_weight_hypothesis, total_weight_hypothesis):
    # the hypothesis contradicts the premise by stating that Susan weighs 'susan_weight_hypothesis' pounds more than Anna
    # which is different from the 'susan_weight_premise' pounds mentioned in the premise
    if susan_weight_hypothesis != susan_weight_premise:
        return False
    # the hypothesis agrees with the premise on the total weight of Susan and Anna
    elif total_weight_hypothesis == total_weight_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(susan_weight_premise, total_weight_premise, susan_weight_hypothesis, total_weight_hypothesis))
"
6383,contradiction,,contradiction,"Each week , James is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first 50 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 50 hours and 2 x dollars for each additional hour worked that week","regular_hours_premise = 40
regular_hours_hypothesis = 50

def entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis):
    # Both the premise and hypothesis are about James's weekly payment.
    # The hypothesis states that James is paid x dollars for the first 'regular_hours_hypothesis' hours,
    # whereas the premise states that he is paid x dollars for the first 'regular_hours_premise' hours.
    # Check if the hypothesis contradicts the premise by checking if 'regular_hours_hypothesis' is not equal to 'regular_hours_premise'.
    if regular_hours_hypothesis != regular_hours_premise:
        return False
    # Since the hypothesis contradicts the premise, there is no need to check for entailment or neutrality.
    return None

print(entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis))
"
6752,contradiction,,contradiction,"In the city of San Durango , 50 people own cats , dogs , or rabbits","In the city of San Durango , more than 50 people own cats , dogs , or rabbits","in the city of san durango , 50 people own cats , dogs , or rabbits","in the city of san durango , more than 50 people own cats , dogs , or rabbits","pet_owners_premise = 50
min_pet_owners_hypothesis = 50

def entailment_or_contradiction_or_neutral(pet_owners_premise, min_pet_owners_hypothesis):
    # the hypothesis refers to the number of pet owners in a city mentioned in the premise
    # the hypothesis estimates the pet owners to be more than 'min_pet_owners_hypothesis'
    # check if the hypothesis contradicts the premise by checking if pet owners reported in the premise are less than 'min_pet_owners_hypothesis'
    if pet_owners_premise <= min_pet_owners_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(pet_owners_premise, min_pet_owners_hypothesis))
"
6643,neutral,,neutral,Marcella has more than 17 pairs of shoes,Marcella has 27 pairs of shoes,marcella has more than 17 pairs of shoes,marcella has 27 pairs of shoes,"min_shoes_marcella_premise = 17
shoes_marcella_hypothesis = 27

def entailment_or_contradiction_or_neutral(min_shoes_marcella_premise, shoes_marcella_hypothesis):
    # the hypothesis talks about the number of pairs of shoes Marcella has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_shoes_marcella_premise', by checking if the number of shoes from the hypothesis is lower or equal to 'min_shoes_marcella_premise'
    if shoes_marcella_hypothesis <= min_shoes_marcella_premise:
        return False
    # any number of pairs of shoes greater than 17 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_shoes_marcella_premise, shoes_marcella_hypothesis))
"
6136,neutral,,neutral,"Last week James worked a total of less than 61 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of less than 61 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","max_hours_worked_james_premise = 61
hours_worked_james_hypothesis = 41

def entailment_or_contradiction_or_neutral(max_hours_worked_james_premise, hours_worked_james_hypothesis):
    # The hypothesis refers to the number of hours James worked last week, as stated in the premise
    # Check if the hypothesis contradicts the premise by checking if the hours worked by James as per the hypothesis is greater than 'max_hours_worked_james_premise'
    if hours_worked_james_hypothesis > max_hours_worked_james_premise:
        return False
    # Any number of hours worked by James less than or equal to 'max_hours_worked_james_premise' is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_hours_worked_james_premise, hours_worked_james_hypothesis))
"
6612,entailment,,entailment,"At the faculty of Aerospace Engineering , 312 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","At the faculty of Aerospace Engineering , more than 112 students study Random - processing methods , 234 students study Scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , 312 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","at the faculty of aerospace engineering , more than 112 students study random - processing methods , 234 students study scramjet rocket engines and 112 students study them both","random_processing_students_premise = 312
scramjet_students_premise = 234
both_subjects_students_premise = 112

min_random_processing_students_hypothesis = 112
scramjet_students_hypothesis = 234
both_subjects_students_hypothesis = 112

def entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, min_random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis):
    # the hypothesis refers to the number of students studying each subject mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of students studying each subject reported in the premise are less than the number in the hypothesis
    if random_processing_students_premise < min_random_processing_students_hypothesis or scramjet_students_premise != scramjet_students_hypothesis or both_subjects_students_premise != both_subjects_students_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(random_processing_students_premise, scramjet_students_premise, both_subjects_students_premise, min_random_processing_students_hypothesis, scramjet_students_hypothesis, both_subjects_students_hypothesis))
"
6305,contradiction,,contradiction,"Last week James worked a total of 41 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","Last week James worked a total of 61 hours If Harry and James were paid the same amount last week , how many hours did Harry work last week ?","last week james worked a total of 41 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","last week james worked a total of 61 hours if harry and james were paid the same amount last week , how many hours did harry work last week ?","work_hours_james_premise = 41
work_hours_james_hypothesis = 61

def entailment_or_contradiction_or_neutral(work_hours_james_premise, work_hours_james_hypothesis):
    # the hypothesis refers to the work hours of James mentioned in the premise
    # the hypothesis estimates the work hours to be 'work_hours_james_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the work hours reported in the premise are different from 'work_hours_james_hypothesis'
    if work_hours_james_premise != work_hours_james_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_hours_james_premise, work_hours_james_hypothesis))
"
6094,neutral,,neutral,The product of all the possible units digits of Sophie Germain primes greater than more than 8 is,The product of all the possible units digits of Sophie Germain primes greater than 9 is,the product of all the possible units digits of sophie germain primes greater than more than 8 is,the product of all the possible units digits of sophie germain primes greater than 9 is,"# The Sophie Germain primes greater than 9 have the same units digits as those greater than 8,
# because 9 and 8 have the same units digit (which is the last digit of a number).
# Therefore, the product of the units digits will be the same for both. 

def entailment_or_contradiction_or_neutral():
    # The hypothesis does not contradict the premise because they refer to the same set of numbers.
    # Also, the hypothesis does not add any new information that is not already in the premise, 
    # so it doesn't entail the premise either.
    # Therefore, the hypothesis is neutral with respect to the premise.
    return None

print(entailment_or_contradiction_or_neutral())
"
6245,contradiction,,contradiction,Another survey of 120 people in the town of Angie found that 60 % preferred Brand A,Another survey of less than 120 people in the town of Angie found that 60 % preferred Brand A,another survey of 120 people in the town of angie found that 60 % preferred brand a,another survey of less than 120 people in the town of angie found that 60 % preferred brand a,"people_surveyed_premise = 120
max_people_surveyed_hypothesis = 119

def entailment_or_contradiction_or_neutral(people_surveyed_premise, max_people_surveyed_hypothesis):
    # the hypothesis refers to the number of people surveyed in the premise
    # the hypothesis estimates the number of people surveyed to be less than 'max_people_surveyed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of people surveyed in the premise is greater than 'max_people_surveyed_hypothesis'
    if people_surveyed_premise > max_people_surveyed_hypothesis:
        return False
    # if the number of people surveyed in the premise equals the 'max_people_surveyed_hypothesis', then the hypothesis is neutral to the premise
    elif people_surveyed_premise == max_people_surveyed_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(people_surveyed_premise, max_people_surveyed_hypothesis))
"
6430,neutral,,neutral,Rosy also matched the London Eye which stands at more than 343 ft and Las Vegas ’ High Roller standing at 550 ft,"Rosy also matched the London Eye which stands at 443 ft and Las
Vegas ’ High Roller standing at 550 ft",rosy also matched the london eye which stands at more than 343 ft and las vegas ’ high roller standing at 550 ft,rosy also matched the london eye which stands at 443 ft and lasvegas ’ high roller standing at 550 ft,"min_london_eye_height_premise = 343
london_eye_height_hypothesis = 443
high_roller_height_premise = 550
high_roller_height_hypothesis = 550

def entailment_or_contradiction_or_neutral(min_london_eye_height_premise, london_eye_height_hypothesis, high_roller_height_premise, high_roller_height_hypothesis):
    # the hypothesis refers to the heights of the London Eye and the High Roller, both mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the heights from the hypothesis are lower than the ones from the premise
    if london_eye_height_hypothesis < min_london_eye_height_premise or high_roller_height_hypothesis < high_roller_height_premise:
        return False
    # the hypothesis doesn't contradict the premise, so it either entails it or it's neutral
    # if the heights from the hypothesis are exactly the same as the ones from the premise, the hypothesis entails the premise
    elif london_eye_height_hypothesis == min_london_eye_height_premise and high_roller_height_hypothesis == high_roller_height_premise:
        return True
    # any height of the London Eye greater than 343 ft and any height of the High Roller equal to 550 ft is consistent with the premise, so the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_london_eye_height_premise, london_eye_height_hypothesis, high_roller_height_premise, high_roller_height_hypothesis))
"
6911,contradiction,,contradiction,Roshan is 5 years younger than Raj and they have an age ratio 3 : 4 respectively,Roshan is 2 years younger than Raj and they have an age ratio 3 : 4 respectively,roshan is 5 years younger than raj and they have an age ratio 3 : 4 respectively,roshan is 2 years younger than raj and they have an age ratio 3 : 4 respectively,"age_difference_premise = 5
age_difference_hypothesis = 2
age_ratio_premise = [3, 4]
age_ratio_hypothesis = [3, 4]

def entailment_or_contradiction_or_neutral(age_difference_premise, age_difference_hypothesis, age_ratio_premise, age_ratio_hypothesis):
    # the hypothesis talks about the age difference and ratio between Roshan and Raj, which is also referred to in the premise
    # check if the hypothesis contradicts the premise by comparing the age differences and ratios
    if age_difference_premise != age_difference_hypothesis or age_ratio_premise != age_ratio_hypothesis:
        return False
    # if the age differences and ratios match, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(age_difference_premise, age_difference_hypothesis, age_ratio_premise, age_ratio_hypothesis))
"
6127,neutral,,neutral,"If less than 41 people have visited both Iceland and Norway , how many people have visited neither country ?","If 31 people have visited both Iceland and Norway , how many people have visited neither country ?","if less than 41 people have visited both iceland and norway , how many people have visited neither country ?","if 31 people have visited both iceland and norway , how many people have visited neither country ?","max_visited_both_premise = 41
visited_both_hypothesis = 31

def entailment_or_contradiction_or_neutral(max_visited_both_premise, visited_both_hypothesis):
    # Both the hypothesis and the premise talk about the number of people who visited both Iceland and Norway
    # Check if the number of people from the hypothesis contradicts the premise's maximum limit of 'max_visited_both_premise'
    if visited_both_hypothesis >= max_visited_both_premise:
        return False
    # Any number of people less than 41 visiting both countries is consistent with the premise, therefore, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_visited_both_premise, visited_both_hypothesis))
"
7139,contradiction,,contradiction,David ' s Bank ' s saving amount is decreased 10 % due to loan payment and current balance is Rs,David ' s Bank ' s saving amount is decreased 40 % due to loan payment and current balance is Rs,david ' s bank ' s saving amount is decreased 10 % due to loan payment and current balance is rs,david ' s bank ' s saving amount is decreased 40 % due to loan payment and current balance is rs,"premise_decrease_percentage = 10
hypothesis_decrease_percentage = 40

def entailment_or_contradiction_or_neutral(premise_decrease_percentage, hypothesis_decrease_percentage):
    # the hypothesis refers to the percentage decrease in David's savings in the bank due to loan payment, which is also mentioned in the premise
    # the hypothesis contradicts the premise if the percentage decrease specified in the hypothesis is different than the one in the premise
    if premise_decrease_percentage != hypothesis_decrease_percentage:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(premise_decrease_percentage, hypothesis_decrease_percentage))
"
7079,contradiction,,contradiction,Stacy has a 66 page history paper due in 6 days,Stacy has a more than 66 page history paper due in 6 days,stacy has a 66 page history paper due in 6 days,stacy has a more than 66 page history paper due in 6 days,"history_paper_pages_premise = 66
min_history_paper_pages_hypothesis = 66

def entailment_or_contradiction_or_neutral(history_paper_pages_premise, min_history_paper_pages_hypothesis):
    # the hypothesis refers to the length of the history paper mentioned in the premise
    # the hypothesis estimates the length of the paper to more than 'min_history_paper_pages_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the length of the paper reported in the premise is less than or equal to 'min_history_paper_pages_hypothesis'
    if history_paper_pages_premise <= min_history_paper_pages_hypothesis:
        return False
    else:
        # any length of paper greater than 66 pages is consistent with the premise, so the hypothesis is neutral to the premise
        return None

print(entailment_or_contradiction_or_neutral(history_paper_pages_premise, min_history_paper_pages_hypothesis))
"
6084,entailment,,entailment,Ram and Shyam can do together a piece of work in 20 days,Ram and Shyam can do together a piece of work in more than 10 days,ram and shyam can do together a piece of work in 20 days,ram and shyam can do together a piece of work in more than 10 days,"work_days_premise = 20
min_work_days_hypothesis = 10

def entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis):
    # the hypothesis talks about how many days Ram and Shyam need to finish a piece of work
    # check if the hypothesis contradicts the premise by checking if the number of days is less than 'min_work_days_hypothesis'
    if work_days_premise < min_work_days_hypothesis:
        return False
    # if the number of days is more than 'min_work_days_hypothesis', the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis))
"
6315,entailment,,entailment,"If ` ` YELLOW ' ' is given a color code of 92 , what is the difference between ` ` BROWN ' ' and ` ` RED ' ' ?","If ` ` YELLOW ' ' is given a color code of more than 62 , what is the difference between ` ` BROWN ' ' and ` ` RED ' ' ?","if ` ` yellow ' ' is given a color code of 92 , what is the difference between ` ` brown ' ' and ` ` red ' ' ?","if ` ` yellow ' ' is given a color code of more than 62 , what is the difference between ` ` brown ' ' and ` ` red ' ' ?","yellow_color_code_premise = 92
min_yellow_color_code_hypothesis = 62

def entailment_or_contradiction_or_neutral(yellow_color_code_premise, min_yellow_color_code_hypothesis):
    # the hypothesis talks about the color code of 'YELLOW' that is also mentioned in the premise
    # the hypothesis estimates the color code of 'YELLOW' to be more than 'min_yellow_color_code_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the color code of 'YELLOW' mentioned in the premise is lower or equal to 'min_yellow_color_code_hypothesis'
    if yellow_color_code_premise <= min_yellow_color_code_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(yellow_color_code_premise, min_yellow_color_code_hypothesis))
"
6255,entailment,,entailment,Luckily Saren negotiated a 20 % discount for the present so that each of them paid 4 dollars less,Luckily Saren negotiated a less than 30 % discount for the present so that each of them paid 4 dollars less,luckily saren negotiated a 20 % discount for the present so that each of them paid 4 dollars less,luckily saren negotiated a less than 30 % discount for the present so that each of them paid 4 dollars less,"discount_premise = 20
max_discount_hypothesis = 30
savings_premise = 4
savings_hypothesis = 4

def entailment_or_contradiction_or_neutral(discount_premise, max_discount_hypothesis, savings_premise, savings_hypothesis):
    # the hypothesis refers to the discount and savings mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the discount in the premise is greater than 'max_discount_hypothesis' or the savings in the premise is not equal to 'savings_hypothesis'
    if discount_premise > max_discount_hypothesis or savings_premise != savings_hypothesis:
        return False
    # if there is no contradiction, then the hypothesis entails the premise as it provides broader bounds for the discount and the same savings
    else:
        return True

print(entailment_or_contradiction_or_neutral(discount_premise, max_discount_hypothesis, savings_premise, savings_hypothesis))
"
7002,entailment,,entailment,They both work together for 5 days and then Sushil goes away,They both work together for more than 3 days and then Sushil goes away,they both work together for 5 days and then sushil goes away,they both work together for more than 3 days and then sushil goes away,"working_days_together_premise = 5
min_working_days_together_hypothesis = 3

def entailment_or_contradiction_or_neutral(working_days_together_premise, min_working_days_together_hypothesis):
    # the hypothesis mentions the number of days they worked together, which is also stated in the premise
    # the hypothesis estimates the working days to be more than 'min_working_days_together_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the working days in the premise are fewer than 'min_working_days_together_hypothesis'
    if working_days_together_premise < min_working_days_together_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(working_days_together_premise, min_working_days_together_hypothesis))
"
7059,entailment,,entailment,Dan leaves City A 90 minutes after Cara,Dan leaves City A more than 20 minutes after Cara,dan leaves city a 90 minutes after cara,dan leaves city a more than 20 minutes after cara,"start_time_diff_premise = 90
min_start_time_diff_hypothesis = 20

def entailment_or_contradiction_or_neutral(start_time_diff_premise, min_start_time_diff_hypothesis):
    # the hypothesis talks about the time difference between Dan and Cara's departure from City A, which is also mentioned in the premise
    # the hypothesis estimates the time difference to be more than 'min_start_time_diff_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the time difference from the premise is lower than 'min_start_time_diff_hypothesis'
    if start_time_diff_premise < min_start_time_diff_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(start_time_diff_premise, min_start_time_diff_hypothesis))
"
6335,contradiction,,contradiction,Ben worked for 7 days on a task that will take him 14 days to complete alone before he was joined by Blake,Ben worked for 8 days on a task that will take him 14 days to complete alone before he was joined by Blake,ben worked for 7 days on a task that will take him 14 days to complete alone before he was joined by blake,ben worked for 8 days on a task that will take him 14 days to complete alone before he was joined by blake,"ben_work_days_premise = 7
ben_work_days_hypothesis = 8

def entailment_or_contradiction_or_neutral(ben_work_days_premise, ben_work_days_hypothesis):
    # the hypothesis contradicts the premise if Ben's work days from the hypothesis is different from the premise
    if ben_work_days_hypothesis != ben_work_days_premise:
        return False
    return True

print(entailment_or_contradiction_or_neutral(ben_work_days_premise, ben_work_days_hypothesis))
"
6810,entailment,,entailment,"There are 300 seniors at Morse High School , and 50 % of them have cars","There are less than 500 seniors at Morse High School , and 50 % of them have cars","there are 300 seniors at morse high school , and 50 % of them have cars","there are less than 500 seniors at morse high school , and 50 % of them have cars","seniors_premise = 300
seniors_hypothesis = 500
car_owners_ratio = 0.5

def entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis, car_owners_ratio):
    # the hypothesis talks about the number of seniors at a school and ratio of them owning cars, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of seniors in the hypothesis is lower than the number of seniors in the premise
    if seniors_hypothesis < seniors_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the ratio of car owners in the hypothesis is different from the ratio of car owners in the premise
    elif car_owners_ratio != 0.5:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(seniors_premise, seniors_hypothesis, car_owners_ratio))
"
7220,contradiction,,contradiction,Lena ’ s grade was in the 80 th percentile out of 120 grades in her class,Lena ’ s grade was in the more than 80 th percentile out of 120 grades in her class,lena ’ s grade was in the 80 th percentile out of 120 grades in her class,lena ’ s grade was in the more than 80 th percentile out of 120 grades in her class,"lena_grade_percentile_premise = 80
more_than_lena_grade_percentile_hypothesis = 80

def entailment_or_contradiction_or_neutral(lena_grade_percentile_premise, more_than_lena_grade_percentile_hypothesis):
    # the hypothesis talks about Lena's grade percentile, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'lena_grade_percentile_premise', by checking if the percentile from the hypothesis is less or equal to 'lena_grade_percentile_premise'
    if more_than_lena_grade_percentile_hypothesis <= lena_grade_percentile_premise:
        return False
    # any percentile greater than 80 is not consistent with the premise, so the hypothesis contradicts the premise
    return True

print(entailment_or_contradiction_or_neutral(lena_grade_percentile_premise, more_than_lena_grade_percentile_hypothesis))
"
6275,contradiction,,contradiction,"It takes Jack and Lee respectively 6 and 10 minutes
to finish each lap",It takes Jack and Lee respectively 5 and 10 minutes to finish each lap,it takes jack and lee respectively 6 and 10 minutesto finish each lap,it takes jack and lee respectively 5 and 10 minutes to finish each lap,"jack_lap_time_premise = 6
lee_lap_time_premise = 10
jack_lap_time_hypothesis = 5
lee_lap_time_hypothesis = 10

def entailment_or_contradiction_or_neutral(jack_lap_time_premise, lee_lap_time_premise, jack_lap_time_hypothesis, lee_lap_time_hypothesis):
    # the hypothesis talks about the time it takes Jack and Lee to finish each lap, also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the lap times of Jack and Lee
    if jack_lap_time_hypothesis != jack_lap_time_premise or lee_lap_time_hypothesis != lee_lap_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(jack_lap_time_premise, lee_lap_time_premise, jack_lap_time_hypothesis, lee_lap_time_hypothesis))
"
6032,contradiction,,contradiction,"During a car trip , Maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","During a car trip , Maria stopped to rest after she traveled 7 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled 7 / 2 of the total distance to her destination","travel_distance_ratio_premise = 1 / 2
travel_distance_ratio_hypothesis = 7 / 2

def entailment_or_contradiction_or_neutral(travel_distance_ratio_premise, travel_distance_ratio_hypothesis):
    # the hypothesis refers to the ratio of the traveled distance to the total distance mentioned in the premise
    # the hypothesis estimates the ratio to be 'travel_distance_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio reported in the premise is less than 'travel_distance_ratio_hypothesis'
    if travel_distance_ratio_hypothesis > travel_distance_ratio_premise:
        return False
    else:
        return True 

print(entailment_or_contradiction_or_neutral(travel_distance_ratio_premise, travel_distance_ratio_hypothesis))
"
6204,entailment,,entailment,"20 each , are purchased from Ram by Mohan at a price of Rs","less than 60 each , are purchased from Ram by Mohan at a price of Rs","20 each , are purchased from ram by mohan at a price of rs","less than 60 each , are purchased from ram by mohan at a price of rs","price_premise = 20
max_price_hypothesis = 60

def entailment_or_contradiction_or_neutral(price_premise, max_price_hypothesis):
    # the hypothesis refers to the price of items purchased by Mohan from Ram
    # the hypothesis estimates the price to be less than 'max_price_hypothesis'
    # check if the hypothesis contradicts the premise by checking if price reported in the premise is higher than 'max_price_hypothesis'
    if price_premise > max_price_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(price_premise, max_price_hypothesis))
"
6166,neutral,,neutral,I want to give more than 85 $ to John,I want to give 95 $ to John,i want to give more than 85 $ to john,i want to give 95 $ to john,"min_money_premise = 85
money_hypothesis = 95

def entailment_or_contradiction_or_neutral(min_money_premise, money_hypothesis):
    # the hypothesis talks about the amount of money to give to John, mentioned also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_money_premise', by checking if the amount of money from the hypothesis is lower or equal to 'min_money_premise'
    if money_hypothesis <= min_money_premise:
        return False
    # any amount of money greater than 85 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_money_premise, money_hypothesis))
"
6146,contradiction,,contradiction,"Each week , Harry is paid x dollars per hour for the first 35 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first more than 35 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 35 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first more than 35 hours and 1.5 x dollars for each additional hour worked that week","standard_hours_premise = 35
standard_hours_hypothesis = 36

def entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis):
    # the hypothesis contradicts the premise as it suggests that Harry is paid a standard rate for more hours than the premise states.
    if standard_hours_hypothesis > standard_hours_premise:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis))
"
6397,neutral,,neutral,In less than 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,In 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,in less than 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,in 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,"year_premise = 6979
year_hypothesis = 1979

def entailment_or_contradiction_or_neutral(year_premise, year_hypothesis):
    # the hypothesis refers to the year mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if 'year_hypothesis' is greater or equal to 'year_premise'
    if year_hypothesis >= year_premise:
        return False
    # if 'year_hypothesis' is less than 'year_premise', it is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(year_premise, year_hypothesis))
"
7053,entailment,,entailment,"In an exam , Amar scored 64 percent , Bhavan scored 36 percent and Chetan 44 percent","In an exam , Amar scored less than 84 percent , Bhavan scored 36 percent and Chetan 44 percent","in an exam , amar scored 64 percent , bhavan scored 36 percent and chetan 44 percent","in an exam , amar scored less than 84 percent , bhavan scored 36 percent and chetan 44 percent","amar_score_premise = 64
bhavan_score_premise = 36
chetan_score_premise = 44

amar_score_hypothesis = 84
bhavan_score_hypothesis = 36
chetan_score_hypothesis = 44

def entailment_or_contradiction_or_neutral(amar_score_premise, bhavan_score_premise, chetan_score_premise, amar_score_hypothesis, bhavan_score_hypothesis, chetan_score_hypothesis):
    # The hypothesis talks about the scores of Amar, Bhavan and Chetan in an exam, referenced also in the premise
    # Check if the hypothesis contradicts the premise estimates by checking if the scores from the hypothesis are not equal to the scores from the premise
    if amar_score_hypothesis < amar_score_premise or bhavan_score_hypothesis != bhavan_score_premise or chetan_score_hypothesis != chetan_score_premise:
        return False
    # If the scores from the hypothesis are equal to the scores from the premise or Amar's score in the hypothesis is more than his score in the premise, then it is consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(amar_score_premise, bhavan_score_premise, chetan_score_premise, amar_score_hypothesis, bhavan_score_hypothesis, chetan_score_hypothesis))
"
6593,contradiction,,contradiction,At the same time Joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,At the same time Joyce gets on an elevator on the 31 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the 71 st floor of the same building and rides down at a rate of 93 floors per minute,at the same time joyce gets on an elevator on the 31 st floor of the same building and rides down at a rate of 93 floors per minute,"joyce_floor_start_premise = 71
joyce_floor_start_hypothesis = 31
joyce_riding_rate = 93

def entailment_or_contradiction_or_neutral(joyce_floor_start_premise, joyce_floor_start_hypothesis, joyce_riding_rate):
    # the hypothesis talks about the starting floor and the riding rate of Joyce, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the starting floors and riding rates
    if joyce_floor_start_hypothesis != joyce_floor_start_premise or joyce_riding_rate != joyce_riding_rate:
        return False
    # if the starting floors and riding rates match, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(joyce_floor_start_premise, joyce_floor_start_hypothesis, joyce_riding_rate))
"
6210,entailment,,entailment,NHAI employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,NHAI employs less than 600 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs less than 600 men to build a highway of 2 km in 50 days working 8 hours a day,"men_premise = 100
max_men_hypothesis = 600

def entailment_or_contradiction_or_neutral(men_premise, max_men_hypothesis):
    # the hypothesis talks about the number of men employed by NHAI for a construction project
    # the hypothesis estimates the number of men to be less than or equal to 'max_men_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of men reported in the premise are greater than 'max_men_hypothesis'
    if men_premise > max_men_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(men_premise, max_men_hypothesis))
"
6742,neutral,,neutral,"While driving from City A to City B , Ed drives at a constant speed of more than 20 miles per hour","While driving from City A to City B , Ed drives at a constant speed of 30 miles per hour","while driving from city a to city b , ed drives at a constant speed of more than 20 miles per hour","while driving from city a to city b , ed drives at a constant speed of 30 miles per hour","min_speed_premise = 20
speed_hypothesis = 30

def entailment_or_contradiction_or_neutral(min_speed_premise, speed_hypothesis):
    # the hypothesis talks about the speed of Ed's car, mentioned in the premise as well
    # check if the hypothesis contradicts the premise estimate of more than 'min_speed_premise', by checking if the speed from the hypothesis is lower or equal to 'min_speed_premise'
    if speed_hypothesis <= min_speed_premise:
        return False
    # any speed greater than 20 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_speed_premise, speed_hypothesis))
"
6057,entailment,,entailment,"Anita , Indu and Geeta can do a piece of work in 18 days , 27 days and 36 days respectively","Anita , Indu and Geeta can do a piece of work in less than 38 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in 18 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in less than 38 days , 27 days and 36 days respectively","work_days_anita_premise = 18
work_days_indu_premise = 27
work_days_geeta_premise = 36

max_work_days_anita_hypothesis = 38
work_days_indu_hypothesis = 27
work_days_geeta_hypothesis = 36

def entailment_or_contradiction_or_neutral(work_days_anita_premise, work_days_indu_premise, work_days_geeta_premise, max_work_days_anita_hypothesis, work_days_indu_hypothesis, work_days_geeta_hypothesis):
    # The hypothesis talks about the number of days Anita, Indu and Geeta can do a piece of work, referenced also in the premise
    # Check if the hypothesis contradicts the premise by checking if any of the individuals in the hypothesis can do the work in more days than stated in the premise
    if max_work_days_anita_hypothesis < work_days_anita_premise or work_days_indu_hypothesis != work_days_indu_premise or work_days_geeta_hypothesis != work_days_geeta_premise:
        return False
    # If the number of days in the hypothesis is less than in the premise, then the hypothesis is entailed by the premise
    if max_work_days_anita_hypothesis > work_days_anita_premise:
        return True
    # If the number of days in the hypothesis is equal to the premise, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(work_days_anita_premise, work_days_indu_premise, work_days_geeta_premise, max_work_days_anita_hypothesis, work_days_indu_hypothesis, work_days_geeta_hypothesis))
"
6653,contradiction,,contradiction,"Maddie has 18 apples , if she give 12 to mike , how many does she have left ?","Maddie has 58 apples , if she give 12 to mike , how many does she have left ?","maddie has 18 apples , if she give 12 to mike , how many does she have left ?","maddie has 58 apples , if she give 12 to mike , how many does she have left ?","apples_maddie_premise = 18
apples_given_to_mike = 12
apples_maddie_hypothesis = 58

def entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis):
    # the hypothesis talks about the number of apples Maddie has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'apples_maddie_premise', by checking if the number of apples from the hypothesis is different than 'apples_maddie_premise'
    if apples_maddie_premise != apples_maddie_hypothesis:
        return False
    # in case the number of apples is the same, check the remaining apples after giving 'apples_given_to_mike' to Mike
    remaining_apples_after_giving = apples_maddie_premise - apples_given_to_mike
    # if Maddie has any apples left, the hypothesis entails the premise
    if remaining_apples_after_giving > 0:
        return True
    # if no apples left, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(apples_maddie_premise, apples_given_to_mike, apples_maddie_hypothesis))
"
6292,neutral,,neutral,"Arun obtained more than 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained more than 46 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","min_english_marks_premise = 46
english_marks_hypothesis = 76
math_marks_premise = 65
chemistry_marks_premise = 82
biology_marks_premise = 67
physics_marks_premise = 85

def entailment_or_contradiction_or_neutral(min_english_marks_premise, english_marks_hypothesis, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise):
    # the hypothesis refers to exact marks obtained by Arun in various subjects which are also mentioned in the premise
    # the hypothesis asserts that Arun got 'english_marks_hypothesis' in English
    # check if the hypothesis contradicts the premise by checking if 'english_marks_hypothesis' is less than or equal to 'min_english_marks_premise'
    if english_marks_hypothesis <= min_english_marks_premise:
        return False
    # the hypothesis is consistent with the premise for all other subjects since it reports the same values as the premise, so we return None indicating neutrality for these subjects
    return None

print(entailment_or_contradiction_or_neutral(min_english_marks_premise, english_marks_hypothesis, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise))
"
6713,contradiction,,contradiction,Mike gives you another 17 balls,Mike gives you another 77 balls,mike gives you another 17 balls,mike gives you another 77 balls,"balls_given_premise = 17
balls_given_hypothesis = 77

def entailment_or_contradiction_or_neutral(balls_given_premise, balls_given_hypothesis):
    # The hypothesis refers to the number of balls given by Mike in the premise
    # Check if the hypothesis contradicts the premise by comparing if the number of balls given in the hypothesis is greater than the number of balls given in the premise
    if balls_given_hypothesis > balls_given_premise:
        return False
    # Since the number of balls given in the hypothesis is not greater than the number of balls given in the premise, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(balls_given_premise, balls_given_hypothesis))
"
7008,entailment,,entailment,"If there are 25 males altogether , how many gerbils does Claire have ?","If there are less than 45 males altogether , how many gerbils does Claire have ?","if there are 25 males altogether , how many gerbils does claire have ?","if there are less than 45 males altogether , how many gerbils does claire have ?","males_premise = 25
max_males_hypothesis = 45

def entailment_or_contradiction_or_neutral(males_premise, max_males_hypothesis):
    # the hypothesis refers to the number of males mentioned in the premise
    # the hypothesis estimates the number of males to be less than 'max_males_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of males reported in the premise is more than 'max_males_hypothesis'
    if males_premise > max_males_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(males_premise, max_males_hypothesis))
"
7148,contradiction,,contradiction,Cindy is thinking of a number which is 4 less than the square of a positive integer,Cindy is thinking of a number which is 7 less than the square of a positive integer,cindy is thinking of a number which is 4 less than the square of a positive integer,cindy is thinking of a number which is 7 less than the square of a positive integer,"# First, let's define the quantities we need to evaluate.
# In this case, it is the difference between the number Cindy is thinking of and the square of a positive integer.

difference_premise = 4
difference_hypothesis = 7

def entailment_or_contradiction_or_neutral(difference_premise, difference_hypothesis):
    # The hypothesis contradicts the premise if the difference between the number Cindy is thinking of and the square of a positive integer is different in the premise and the hypothesis
    if difference_premise != difference_hypothesis:
        return False
    # If the difference is the same, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(difference_premise, difference_hypothesis))
"
6123,entailment,,entailment,"In a group of 60 people , 35 have visited Iceland and 23 have visited Norway","In a group of more than 20 people , 35 have visited Iceland and 23 have visited Norway","in a group of 60 people , 35 have visited iceland and 23 have visited norway","in a group of more than 20 people , 35 have visited iceland and 23 have visited norway","people_group_premise = 60
people_visited_iceland_premise = 35
people_visited_norway_premise = 23

min_people_group_hypothesis = 20
people_visited_iceland_hypothesis = 35
people_visited_norway_hypothesis = 23

def entailment_or_contradiction_or_neutral(people_group_premise, people_visited_iceland_premise, people_visited_norway_premise, min_people_group_hypothesis, people_visited_iceland_hypothesis, people_visited_norway_hypothesis):
    # the hypothesis refers to the number of people in a group and number of people who have visited Iceland and Norway
    # check if the hypothesis contradicts the premise by checking if the number of people in the group, number of people who have visited Iceland or Norway is less than the premise
    if people_group_premise < min_people_group_hypothesis or people_visited_iceland_premise != people_visited_iceland_hypothesis or people_visited_norway_premise != people_visited_norway_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(people_group_premise, people_visited_iceland_premise, people_visited_norway_premise, min_people_group_hypothesis, people_visited_iceland_hypothesis, people_visited_norway_hypothesis))
"
7168,neutral,,neutral,more than 1 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,7 people entered the theater between Sujit and Suraj and 20 people entered the theater after Suraj,more than 1 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,7 people entered the theater between sujit and suraj and 20 people entered the theater after suraj,"min_people_between_sujit_suraj_premise = 1
people_between_sujit_suraj_hypothesis = 7
people_after_suraj = 20

def entailment_or_contradiction_or_neutral(min_people_between_sujit_suraj_premise, people_between_sujit_suraj_hypothesis, people_after_suraj):
    # the hypothesis talks about the number of people between Sujit and Suraj and after Suraj, mentioned also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_people_between_sujit_suraj_premise', by checking if the number of people from the hypothesis is lower or equal to 'min_people_between_sujit_suraj_premise'
    if people_between_sujit_suraj_hypothesis <= min_people_between_sujit_suraj_premise:
        return False
    # any number of people greater than 1 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_people_between_sujit_suraj_premise, people_between_sujit_suraj_hypothesis, people_after_suraj))
"
7550,contradiction,,contradiction,John ' s Bank ' s saving amount is decreased 30 % due to loan payment and current balance is Rs,John ' s Bank ' s saving amount is decreased 20 % due to loan payment and current balance is Rs,john ' s bank ' s saving amount is decreased 30 % due to loan payment and current balance is rs,john ' s bank ' s saving amount is decreased 20 % due to loan payment and current balance is rs,"# Extract the quantities from the premise and hypothesis
premise_decrease_percentage = 30
hypothesis_decrease_percentage = 20

def entailment_or_contradiction_or_neutral(premise_decrease_percentage, hypothesis_decrease_percentage):
    # The hypothesis refers to the decrease in the saving amount due to loan payment mentioned in the premise
    # The hypothesis estimates the decrease to be 'hypothesis_decrease_percentage'
    # Check if the hypothesis contradicts the premise by checking if decrease percentage reported in the premise is different than 'hypothesis_decrease_percentage'
    if premise_decrease_percentage != hypothesis_decrease_percentage:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(premise_decrease_percentage, hypothesis_decrease_percentage))
"
6560,contradiction,,contradiction,Jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,Jerry ’ s average ( arithmetic mean ) score on the first 6 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first 6 of 4 tests is 78,"tests_premise = 3
tests_hypothesis = 6
average_score_premise = 78
average_score_hypothesis = 78

def entailment_or_contradiction_or_neutral(tests_premise, tests_hypothesis, average_score_premise, average_score_hypothesis):
    # the hypothesis and the premise refer to Jerry's average score on a number of tests
    # check if the hypothesis contradicts the premise by checking if the number of tests from the hypothesis is greater than the number of tests from the premise
    if tests_hypothesis > tests_premise:
        return False
    # if the number of tests is the same, check for contradiction in the average score
    elif tests_hypothesis == tests_premise and average_score_hypothesis != average_score_premise:
        return False
    # if the number of tests and the average score are the same, the hypothesis entails the premise
    elif tests_hypothesis == tests_premise and average_score_hypothesis == average_score_premise:
        return True
    # if the number of tests from the hypothesis is less than the number of tests from the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(tests_premise, tests_hypothesis, average_score_premise, average_score_hypothesis))
"
6471,entailment,,entailment,"4000 but the average salary of Raj , Roshan and Thomas is Rs","less than 5000 but the average salary of Raj , Roshan and Thomas is Rs","4000 but the average salary of raj , roshan and thomas is rs","less than 5000 but the average salary of raj , roshan and thomas is rs","average_salary_premise = 4000
max_salary_hypothesis = 5000

def entailment_or_contradiction_or_neutral(average_salary_premise, max_salary_hypothesis):
    # the hypothesis talks about the average salary of Raj, Roshan and Thomas, which is also the topic of the premise
    # check if the hypothesis contradicts the premise by checking if the average salary reported in the premise is higher than 'max_salary_hypothesis'
    if average_salary_premise > max_salary_hypothesis:
        return False
    # any average salary less than or equal to 5000 is consistent with the hypothesis, so the premise entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(average_salary_premise, max_salary_hypothesis))
"
6364,neutral,,neutral,After Sally left mike had less than 536 watermelons,After Sally left mike had 136 watermelons,after sally left mike had less than 536 watermelons,after sally left mike had 136 watermelons,"max_watermelons_premise = 536
watermelons_hypothesis = 136

def entailment_or_contradiction_or_neutral(max_watermelons_premise, watermelons_hypothesis):
    # the hypothesis states the number of watermelons Mike had after Sally left, which is also the subject of the premise
    # check if the hypothesis contradicts the premise by checking if the number of watermelons from the hypothesis is greater than or equal to 'max_watermelons_premise'
    if watermelons_hypothesis >= max_watermelons_premise:
        return False
    # any number of watermelons less than 536 is consistent with the premise, so the hypothesis is neutral with the premise
    return None

print(entailment_or_contradiction_or_neutral(max_watermelons_premise, watermelons_hypothesis))
"
6344,contradiction,,contradiction,288 and the true discount on the same sum for the same time is Rs,888 and the true discount on the same sum for the same time is Rs,288 and the true discount on the same sum for the same time is rs,888 and the true discount on the same sum for the same time is rs,"true_discount_premise = 288
true_discount_hypothesis = 888

def entailment_or_contradiction_or_neutral(true_discount_premise, true_discount_hypothesis):
    # the hypothesis refers to the true discount mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the true discount reported in the hypothesis is different from the one in the premise
    if true_discount_premise != true_discount_hypothesis:
        return False
    # if the hypothesis is the same as the premise, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(true_discount_premise, true_discount_hypothesis))
"
6931,entailment,,neutral,"After more than 2 years , Sandy ’ s age will be 30 years","After 6 years , Sandy ’ s age will be 30 years","after more than 2 years , sandy ’ s age will be 30 years","after 6 years , sandy ’ s age will be 30 years","min_years_future_premise = 2
sandy_age_future_premise = 30
years_future_hypothesis = 6
sandy_age_future_hypothesis = 30

def entailment_or_contradiction_or_neutral(min_years_future_premise, sandy_age_future_premise, years_future_hypothesis, sandy_age_future_hypothesis):
    # the hypothesis talks about Sandy's age after a certain number of years, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if Sandy's age after 'years_future_hypothesis' years is different than 'sandy_age_future_premise'
    if sandy_age_future_hypothesis != sandy_age_future_premise:
        return False
    # check if the hypothesis entails the premise by checking if 'years_future_hypothesis' is greater than 'min_years_future_premise' and Sandy's future age is the same as in the premise
    if years_future_hypothesis > min_years_future_premise and sandy_age_future_hypothesis == sandy_age_future_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, it is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_years_future_premise, sandy_age_future_premise, years_future_hypothesis, sandy_age_future_hypothesis))
"
6457,entailment,,neutral,"If an outfit consists of less than 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of less than 5 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","max_shirts_premise = 5
shirts_hypothesis = 1

def entailment_or_contradiction_or_neutral(max_shirts_premise, shirts_hypothesis):
    # the hypothesis refers to the number of shirts per outfit mentioned in the premise
    # the hypothesis assumes the number of shirts in an outfit to be 'shirts_hypothesis'
    # check if the hypothesis contradicts the premise by checking if number of shirts in the hypothesis exceeds 'max_shirts_premise'
    if shirts_hypothesis > max_shirts_premise:
        return False
    else:
        # if the number of shirts is less or equal to the maximum number of shirts per outfit, the hypothesis is consistent with the premise
        return True

print(entailment_or_contradiction_or_neutral(max_shirts_premise, shirts_hypothesis))
"
6823,entailment,,neutral,Lilly has less than 80 fish and Rosy has 8 fish,Lilly has 10 fish and Rosy has 8 fish,lilly has less than 80 fish and rosy has 8 fish,lilly has 10 fish and rosy has 8 fish,"max_fish_lilly_premise = 80
fish_rosy_premise = 8
fish_lilly_hypothesis = 10
fish_rosy_hypothesis = 8

def entailment_or_contradiction_or_neutral(max_fish_lilly_premise, fish_rosy_premise, fish_lilly_hypothesis, fish_rosy_hypothesis):
    # the hypothesis refers to the number of fish Lilly and Rosy have, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Lilly's fish count in the hypothesis is more than 'max_fish_lilly_premise' or if Rosy's fish count in the hypothesis is different from 'fish_rosy_premise'
    if fish_lilly_hypothesis > max_fish_lilly_premise or fish_rosy_hypothesis != fish_rosy_premise:
        return False
    # any number of fish Lilly has less than 80 and Rosy has exactly 8 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_fish_lilly_premise, fish_rosy_premise, fish_lilly_hypothesis, fish_rosy_hypothesis))
"
6632,entailment,,contradiction,"How many seconds does Sandy take to cover a distance of 500 meters , if Sandy runs at a speed of 15 km / hr ?","How many seconds does Sandy take to cover a distance of more than 500 meters , if Sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of 500 meters , if sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of more than 500 meters , if sandy runs at a speed of 15 km / hr ?","# Convert speed from km/hr to m/s
speed_m_s = 15 * 1000 / 3600
distance_premise_m = 500
distance_hypothesis_m = 500

def entailment_or_contradiction_or_neutral(speed_m_s, distance_premise_m, distance_hypothesis_m):
    # Calculate time taken in seconds to cover the distance in the premise
    time_premise_sec = distance_premise_m / speed_m_s

    # Hypothesis is asking for time taken to cover a distance more than 500m
    # If distance in hypothesis is more than distance in premise, then time in hypothesis will be more than time in premise
    # So, the hypothesis is neutral to the premise
    if distance_hypothesis_m > distance_premise_m:
        return None
    # If distance in hypothesis is equal to distance in premise, then time in hypothesis will be equal to time in premise
    # So, the hypothesis is entailed in the premise
    elif distance_hypothesis_m == distance_premise_m:
        return True
    # If distance in hypothesis is less than distance in premise, then time in hypothesis will be less than time in premise
    # So, the hypothesis contradicts the premise
    else:
        return False

print(entailment_or_contradiction_or_neutral(speed_m_s, distance_premise_m, distance_hypothesis_m))
"
6797,entailment,,contradiction,Lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,Lucy deposited $ less than 62500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ 62500 in an investment fund that provided 8 percent annual return compounded quarterly,lucy deposited $ less than 62500 in an investment fund that provided 8 percent annual return compounded quarterly,"deposit_premise = 62500
deposit_hypothesis = 62499

def entailment_or_contradiction_or_neutral(deposit_premise, deposit_hypothesis):
    # the hypothesis refers to the deposit amount mentioned in the premise
    # the hypothesis estimates the deposit to be less than the amount mentioned in the premise
    # checking if the deposit amount mentioned in the hypothesis is indeed less than the amount mentioned in the premise
    if deposit_hypothesis >= deposit_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(deposit_premise, deposit_hypothesis))
"
7367,neutral,,contradiction,"If Jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 7 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 3 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","jack_walk_distance_premise = 7
jack_walk_time_premise = 1.25  # converting 1 hour and 15 minutes to hours
jack_walk_distance_hypothesis = 3
jack_walk_time_hypothesis = 1.25

def entailment_or_contradiction_or_neutral(jack_walk_distance_premise, jack_walk_time_premise, jack_walk_distance_hypothesis, jack_walk_time_hypothesis):
    # the hypothesis speaks about Jack's walking distance and time, similar to the premise
    # check if the hypothesis contradicts the premise by checking if Jack's walking distance in the hypothesis is greater than in the premise
    if jack_walk_distance_hypothesis > jack_walk_distance_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if Jack's walking time in the hypothesis is less than in the premise
    elif jack_walk_time_hypothesis < jack_walk_time_premise:
        return False
    # the hypothesis does not contradict the premise, but it doesn't entail it either, as the distances and times are not the same
    else:
        return None

print(entailment_or_contradiction_or_neutral(jack_walk_distance_premise, jack_walk_time_premise, jack_walk_distance_hypothesis, jack_walk_time_hypothesis))
"
6746,neutral,,contradiction,Flora leaves City A 2 hours after Ed,Flora leaves City A more than 2 hours after Ed,flora leaves city a 2 hours after ed,flora leaves city a more than 2 hours after ed,"flora_departure_time_premise = 2
min_flora_departure_time_hypothesis = 2

def entailment_or_contradiction_or_neutral(flora_departure_time_premise, min_flora_departure_time_hypothesis):
    # the hypothesis refers to the departure time of Flora from City A, mentioned in the premise
    # the hypothesis estimates the departure time to be more than 'min_flora_departure_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if departure time reported in the premise is less than 'min_flora_departure_time_hypothesis'
    if flora_departure_time_premise < min_flora_departure_time_hypothesis:
        return False
    # any departure time of Flora equal to 2 hours after Ed is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(flora_departure_time_premise, min_flora_departure_time_hypothesis))
"
6985,entailment,,neutral,"If Elena purchased a total of less than 22 of these pens for $ 42.00 , how many brand X pens did she purchase ?","If Elena purchased a total of 12 of these pens for $ 42.00 , how many brand X pens did she purchase ?","if elena purchased a total of less than 22 of these pens for $ 42.00 , how many brand x pens did she purchase ?","if elena purchased a total of 12 of these pens for $ 42.00 , how many brand x pens did she purchase ?","max_pens_purchased_premise = 22
pens_purchased_hypothesis = 12

def entailment_or_contradiction_or_neutral(max_pens_purchased_premise, pens_purchased_hypothesis):
    # the hypothesis talks about the number of pens purchased which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_pens_purchased_premise', by checking if the number of pens from the hypothesis is greater than or equal to 'max_pens_purchased_premise'
    if pens_purchased_hypothesis >= max_pens_purchased_premise:
        return False
    # any number of pens less than 22 is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_pens_purchased_premise, pens_purchased_hypothesis))
"
6820,contradiction,,neutral,"How many combinations does Barbara have , if she doesn ’ t wear less than 6 specific socks with 1 specific pair of shoes ?","How many combinations does Barbara have , if she doesn ’ t wear 2 specific socks with 1 specific pair of shoes ?","how many combinations does barbara have , if she doesn ’ t wear less than 6 specific socks with 1 specific pair of shoes ?","how many combinations does barbara have , if she doesn ’ t wear 2 specific socks with 1 specific pair of shoes ?","min_socks_combination_premise = 6
specific_socks_combination_hypothesis = 2

def entailment_or_contradiction_or_neutral(min_socks_combination_premise, specific_socks_combination_hypothesis):
    # the hypothesis refers to the number of socks combinations mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if socks combinations in the hypothesis are lower than 'min_socks_combination_premise' 
    if specific_socks_combination_hypothesis < min_socks_combination_premise:
        return False
    # if the number of socks combinations in the hypothesis are more or equal to 'min_socks_combination_premise', the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_socks_combination_premise, specific_socks_combination_hypothesis))
"
2308,entailment,,neutral,"If Anne ’ s speed were doubled , they could clean their house in less than 5 hours working at their respective rates","If Anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in less than 5 hours working at their respective rates","if anne ’ s speed were doubled , they could clean their house in 3 hours working at their respective rates","max_cleaning_time_premise = 5
cleaning_time_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_cleaning_time_premise, cleaning_time_hypothesis):
    # the hypothesis refers to the cleaning time if Anne's speed were doubled, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the cleaning time in the hypothesis is greater than 'max_cleaning_time_premise'
    if cleaning_time_hypothesis > max_cleaning_time_premise:
        return False
    # any cleaning time less than 5 hours is consistent with the premise, so the hypothesis entails the premise
    elif cleaning_time_hypothesis <= max_cleaning_time_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_cleaning_time_premise, cleaning_time_hypothesis))
"
6472,entailment,,neutral,"less than 5000 but the average salary of Raj , Roshan and Thomas is Rs","4000 but the average salary of Raj , Roshan and Thomas is Rs","less than 5000 but the average salary of raj , roshan and thomas is rs","4000 but the average salary of raj , roshan and thomas is rs","max_avg_salary_premise = 5000
avg_salary_hypothesis = 4000

def entailment_or_contradiction_or_neutral(max_avg_salary_premise, avg_salary_hypothesis):
    # the hypothesis talks about the average salary of Raj, Roshan, and Thomas which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_avg_salary_premise', by checking if the average salary from the hypothesis is higher
    if avg_salary_hypothesis >= max_avg_salary_premise:
        return False
    # any average salary less than 5000 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_avg_salary_premise, avg_salary_hypothesis))
"
6802,entailment,,neutral,"If bonds are sold in $ less than 70 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","If bonds are sold in $ 50 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","if bonds are sold in $ less than 70 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","if bonds are sold in $ 50 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","min_bond_value_premise = 70
min_bond_value_hypothesis = 50

def entailment_or_contradiction_or_neutral(min_bond_value_premise, min_bond_value_hypothesis):
    # the hypothesis mentions a lower minimum bond value than the premise
    # check if the hypothesis contradicts the premise by checking if the min_bond_value_hypothesis is higher than the min_bond_value_premise
    if min_bond_value_hypothesis > min_bond_value_premise:
        return False
    # if the min_bond_value_hypothesis is less than or equal to min_bond_value_premise, it is a subset of the premise and hence entails the premise
    elif min_bond_value_hypothesis <= min_bond_value_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_bond_value_premise, min_bond_value_hypothesis))
"
6845,entailment,,contradiction,"Sacha runs at a constant speed of 7 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of less than 7 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 7 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of less than 7 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha_speed_premise = 7
bruno_speed_premise = 5
max_sacha_speed_hypothesis = 7
bruno_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, max_sacha_speed_hypothesis, bruno_speed_hypothesis):
    # the hypothesis states the maximum speed of Sacha and exact speed of Bruno
    # check if the hypothesis contradicts the premise by checking if Sacha's speed from the premise is greater than 'max_sacha_speed_hypothesis' or if Bruno's speed from the premise is not equal to 'bruno_speed_hypothesis'
    if sacha_speed_premise > max_sacha_speed_hypothesis or bruno_speed_premise != bruno_speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, max_sacha_speed_hypothesis, bruno_speed_hypothesis))
"
6913,contradiction,,neutral,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than less than 80 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 70 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than less than 80 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 70 % ?","departure_rate_premise = 80
departure_rate_hypothesis = 70

def entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis):
    # The hypothesis and premise are referring to a threshold for on-time departure rate of flights from an airport
    # If the threshold in the hypothesis is less than or equal to that in the premise, the hypothesis contradicts the premise
    if departure_rate_hypothesis <= departure_rate_premise:
        return False
    # If the threshold in the hypothesis is greater than that in the premise, the hypothesis is neutral with the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis))
"
5949,contradiction,,entailment,"If T = 5 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","If T = more than 2 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","if t = 5 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","if t = more than 2 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","# Extracting quantities from the premise and hypothesis
t_premise = 20
t_hypothesis = 20
k_coefficient_premise = 5/9
k_coefficient_hypothesis = 2/9

# Calculating K value based on the premise and hypothesis
def calculate_k(t, k_coefficient):
    return (t / k_coefficient) + 32

k_premise = calculate_k(t_premise, k_coefficient_premise)
k_hypothesis = calculate_k(t_hypothesis, k_coefficient_hypothesis)

def entailment_or_contradiction_or_neutral(k_premise, k_hypothesis):
    # The hypothesis refers to the same formula mentioned in the premise but with a different coefficient for K
    # Checking if the K value calculated from the hypothesis is more than the K value from the premise
    if k_hypothesis > k_premise:
        return False
    # The K value calculated from the hypothesis equals to the K value from the premise, so it's entailment
    elif k_hypothesis == k_premise:
        return True
    # Any other scenario would be neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(k_premise, k_hypothesis))
"
6420,contradiction,,entailment,"Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained more than 66 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained more than 66 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","# Quantities from the premise
english_marks_premise = 76
math_marks_premise = 65
chemistry_marks_premise = 82
biology_marks_premise = 67
physics_marks_premise = 85

# Quantities from the hypothesis
min_english_marks_hypothesis = 66
min_math_marks_hypothesis = 65
min_chemistry_marks_hypothesis = 82
min_biology_marks_hypothesis = 67
min_physics_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise, min_english_marks_hypothesis, min_math_marks_hypothesis, min_chemistry_marks_hypothesis, min_biology_marks_hypothesis, min_physics_marks_hypothesis):
    # the hypothesis talks about the marks obtained by Arun in different subjects
    # check if the hypothesis contradicts the premise by verifying if the marks obtained in each subject as per the premise is less than the marks mentioned in the hypothesis
    if english_marks_premise <= min_english_marks_hypothesis or math_marks_premise <= min_math_marks_hypothesis or chemistry_marks_premise <= min_chemistry_marks_hypothesis or biology_marks_premise <= min_biology_marks_hypothesis or physics_marks_premise <= min_physics_marks_hypothesis:
        return False
    # if the marks obtained in each subject as per the premise is more than the marks mentioned in the hypothesis, then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise, min_english_marks_hypothesis, min_math_marks_hypothesis, min_chemistry_marks_hypothesis, min_biology_marks_hypothesis, min_physics_marks_hypothesis))
"
7182,contradiction,,entailment,"If 1 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","If less than 4 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 4 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","north_american_passengers_premise = 1 / 12
north_american_passengers_hypothesis = 4 / 12
european_passengers = 1 / 8
african_passengers = 1 / 3
asian_passengers = 1 / 6
other_passengers = 35

def entailment_or_contradiction_or_neutral(north_american_passengers_premise, north_american_passengers_hypothesis, european_passengers, african_passengers, asian_passengers, other_passengers):
    # the hypothesis refers to the number of passengers from different continents mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the proportion of North American passengers in the hypothesis is greater than that in the premise
    if north_american_passengers_hypothesis > north_american_passengers_premise:
        return False
    # the values for European, African, Asian and other passengers in the hypothesis match those in the premise
    # the hypothesis does not entail the premise as the proportion of North American passengers is less in the hypothesis
    return None

print(entailment_or_contradiction_or_neutral(north_american_passengers_premise, north_american_passengers_hypothesis, european_passengers, african_passengers, asian_passengers, other_passengers))
"
6563,neutral,,contradiction,"If Jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","If Jerry wants to raise his average by more than 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by more than 2 points , what score must he earn on the fourth test ?","average_raise_premise = 2
min_average_raise_hypothesis = 2

def entailment_or_contradiction_or_neutral(average_raise_premise, min_average_raise_hypothesis):
    # the hypothesis refers to the same situation as the premise, with a difference in the desired increase in average
    # the hypothesis specifies a minimum increase in average, greater than 'min_average_raise_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the premise average increase is lower than 'min_average_raise_hypothesis'
    if average_raise_premise < min_average_raise_hypothesis:
        return False
    # any increase in average that is greater than or equal to 2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(average_raise_premise, min_average_raise_hypothesis))
"
6855,contradiction,,entailment,"If Matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","If Matt has five iron coins and five copper coins , how many different sums from less than 5 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from less than 5 ¢ to 35 ¢ can he make with a combination of his coins ?","iron_coins_premise = 5
copper_coins_premise = 5
min_sum_premise = 1
max_sum_premise = 35

iron_coins_hypothesis = 5
copper_coins_hypothesis = 5
min_sum_hypothesis = 5
max_sum_hypothesis = 35

def entailment_or_contradiction_or_neutral(iron_coins_premise, copper_coins_premise, min_sum_premise, max_sum_premise, iron_coins_hypothesis, copper_coins_hypothesis, min_sum_hypothesis, max_sum_hypothesis):
    # the hypothesis refers to the same number of coins but changes the minimum sum that can be made
    # check if the hypothesis contradicts the premise by checking if the number of coins or the range of sums is different
    if iron_coins_premise != iron_coins_hypothesis or copper_coins_premise != copper_coins_hypothesis or max_sum_premise != max_sum_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if the minimum sum in the hypothesis is greater than the minimum sum in the premise
    if min_sum_hypothesis > min_sum_premise:
        return False
    # if the minimum sum in the hypothesis is less than or equal to the minimum sum in the premise, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(iron_coins_premise, copper_coins_premise, min_sum_premise, max_sum_premise, iron_coins_hypothesis, copper_coins_hypothesis, min_sum_hypothesis, max_sum_hypothesis))
"
7171,entailment,,neutral,Andy solves problems more than 30 to 125 inclusive in a Math exercise,Andy solves problems 70 to 125 inclusive in a Math exercise,andy solves problems more than 30 to 125 inclusive in a math exercise,andy solves problems 70 to 125 inclusive in a math exercise,"min_problems_solved_premise = 30
max_problems_solved_premise = 125
min_problems_solved_hypothesis = 70
max_problems_solved_hypothesis = 125

def entailment_or_contradiction_or_neutral(min_problems_solved_premise, max_problems_solved_premise, min_problems_solved_hypothesis, max_problems_solved_hypothesis):
    # the hypothesis refers to the number of solved problems mentioned in the premise
    # the hypothesis estimates the number of problems solved to be within 'min_problems_solved_hypothesis' and 'max_problems_solved_hypothesis' inclusive
    # check if the hypothesis contradicts the premise by checking if the number of problems solved reported in the premise is outside 'min_problems_solved_hypothesis' and 'max_problems_solved_hypothesis'
    if min_problems_solved_hypothesis < min_problems_solved_premise or max_problems_solved_hypothesis > max_problems_solved_premise:
        return False
    else:
        # the hypothesis range is within the premise range, so it is entailed by the premise
        return True

print(entailment_or_contradiction_or_neutral(min_problems_solved_premise, max_problems_solved_premise, min_problems_solved_hypothesis, max_problems_solved_hypothesis))
"
6535,contradiction,,neutral,"If the number of such passengers that used Miami Airport was less than 7 / 3 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","If the number of such passengers that used Miami Airport was 1 / 3 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","if the number of such passengers that used miami airport was less than 7 / 3 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","if the number of such passengers that used miami airport was 1 / 3 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","miami_to_kennedy_ratio_premise = 7/3
miami_to_logan_ratio_premise = 4
miami_to_kennedy_ratio_hypothesis = 1/3
miami_to_logan_ratio_hypothesis = 4

def entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis):
    # the hypothesis talks about the ratio of passengers that used Miami Airport to Kennedy and Logan Airport, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the ratios
    if miami_to_kennedy_ratio_premise != miami_to_kennedy_ratio_hypothesis or miami_to_logan_ratio_premise != miami_to_logan_ratio_hypothesis:
        return False
    # if the hypothesis ratios are equal to the premise ones, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis))
"
1155,contradiction,,entailment,In 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,In less than 2979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,in 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,in less than 2979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,"year_premise = 1979
year_hypothesis = 2979
passengers_premise = 37.3 * 10**6
passengers_hypothesis = 37.3 * 10**6

def entailment_or_contradiction_or_neutral(year_premise, year_hypothesis, passengers_premise, passengers_hypothesis):
    # the hypothesis refers to the same event as the premise, but the year is different
    # check if the hypothesis contradicts the premise by comparing the years
    if year_hypothesis >= year_premise:
        return False
    # since the number of passengers is the same, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(year_premise, year_hypothesis, passengers_premise, passengers_hypothesis))
"
2591,entailment,,contradiction,Present ages of Sameer and Anand are in the ratio of 5 : 4 respectively,Present ages of Sameer and Anand are in the ratio of less than 5 : 4 respectively,present ages of sameer and anand are in the ratio of 5 : 4 respectively,present ages of sameer and anand are in the ratio of less than 5 : 4 respectively,"sameer_anand_ratio_premise = 5 / 4
max_sameer_anand_ratio_hypothesis = 5 / 4

def entailment_or_contradiction_or_neutral(sameer_anand_ratio_premise, max_sameer_anand_ratio_hypothesis):
    # the hypothesis refers to the ratio of Sameer's and Anand's ages mentioned in the premise
    # the hypothesis estimates the ratio to be less than 'max_sameer_anand_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio in the premise is greater than 'max_sameer_anand_ratio_hypothesis'
    if sameer_anand_ratio_premise > max_sameer_anand_ratio_hypothesis:
        return False
    # the premise states the ratio as exactly 5:4, any ratio less than 5:4 is contradictory to the premise
    return True

print(entailment_or_contradiction_or_neutral(sameer_anand_ratio_premise, max_sameer_anand_ratio_hypothesis))
"
6720,contradiction,,entailment,How many jelly beans must Dante give to Aaron to ensure that no child has more than 1 fewer jelly beans than any other child ?,How many jelly beans must Dante give to Aaron to ensure that no child has more than less than 7 fewer jelly beans than any other child ?,how many jelly beans must dante give to aaron to ensure that no child has more than 1 fewer jelly beans than any other child ?,how many jelly beans must dante give to aaron to ensure that no child has more than less than 7 fewer jelly beans than any other child ?,"fewer_jellybeans_premise = 1
fewer_jellybeans_hypothesis = 7

def entailment_or_contradiction_or_neutral(fewer_jellybeans_premise, fewer_jellybeans_hypothesis):
    # the hypothesis refers to the quantity of jelly beans mentioned in the premise
    # the hypothesis suggests that the number of jelly beans given should not be more than 'fewer_jellybeans_hypothesis' less than any other child
    # check if the hypothesis contradicts the premise by checking if the premise's 'fewer_jellybeans_premise' is less than 'fewer_jellybeans_hypothesis'
    if fewer_jellybeans_premise < fewer_jellybeans_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(fewer_jellybeans_premise, fewer_jellybeans_hypothesis))
"
7093,entailment,,neutral,"Ratio between Rahul and Deepak is less than 8 : 2 , After 6 Years Rahul age will be 26 years","Ratio between Rahul and Deepak is 5 : 2 , After 6 Years Rahul age will be 26 years","ratio between rahul and deepak is less than 8 : 2 , after 6 years rahul age will be 26 years","ratio between rahul and deepak is 5 : 2 , after 6 years rahul age will be 26 years","rahul_deepak_ratio_premise = 8/2
rahul_deepak_ratio_hypothesis = 5/2
rahul_future_age_premise = 26
rahul_future_age_hypothesis = 26

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_deepak_ratio_hypothesis, rahul_future_age_premise, rahul_future_age_hypothesis):
    # the hypothesis talks about the ages and ratios of Rahul and Deepak, referenced also in the premise
    # check if the ratio from the hypothesis contradicts the premise estimate of less than 'rahul_deepak_ratio_premise', by checking if the ratio from the hypothesis is greater or equal to 'rahul_deepak_ratio_premise'
    if rahul_deepak_ratio_hypothesis >= rahul_deepak_ratio_premise:
        return False
    # check if Rahul's future age contradicts the premise
    if rahul_future_age_hypothesis != rahul_future_age_premise:
        return False
    # if the ratio and the future age are consistent with the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_deepak_ratio_hypothesis, rahul_future_age_premise, rahul_future_age_hypothesis))
"
7459,entailment,,neutral,"To be considered for “ movie of the year , ” a film must appear in at least less than 2 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least less than 2 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","max_percentage_lists_premise = 2 / 4
min_percentage_lists_hypothesis = 1 / 4

def entailment_or_contradiction_or_neutral(max_percentage_lists_premise, min_percentage_lists_hypothesis):
    # the hypothesis talks about the minimum percentage of lists a movie must appear in to be considered for 'movie of the year'
    # the premise states that this percentage must be less than 'max_percentage_lists_premise'
    # check if the hypothesis contradicts the premise by seeing if 'min_percentage_lists_hypothesis' is greater or equal to 'max_percentage_lists_premise'
    if min_percentage_lists_hypothesis >= max_percentage_lists_premise:
        return False
    # if 'min_percentage_lists_hypothesis' is less than 'max_percentage_lists_premise', the hypothesis does not contradict the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_percentage_lists_premise, min_percentage_lists_hypothesis))
"
7087,entailment,,neutral,"If Dan works alone for less than 8 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for 6 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for less than 8 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for 6 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_hours_premise = 8
dan_work_hours_hypothesis = 6

def entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_work_hours_hypothesis):
    # the hypothesis talks about the number of hours Dan works, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'dan_work_hours_premise', by checking if the number of hours from the hypothesis is more than 'dan_work_hours_premise'
    if dan_work_hours_hypothesis >= dan_work_hours_premise:
        return False
    # any number of hours less than 8 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_work_hours_hypothesis))
"
6962,neutral,,contradiction,Joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 60,Joe ’ s average ( arithmetic mean ) test score across more than 4 equally weighted tests was 60,joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 60,joe ’ s average ( arithmetic mean ) test score across more than 4 equally weighted tests was 60,"average_score_premise = 60
num_tests_premise = 4
average_score_hypothesis = 60
min_num_tests_hypothesis = 5

def entailment_or_contradiction_or_neutral(average_score_premise, num_tests_premise, average_score_hypothesis, min_num_tests_hypothesis):
    # the hypothesis refers to the average score and number of tests mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the average scores are not equal or if the number of tests in the hypothesis is less than or equal to those in the premise
    if average_score_premise != average_score_hypothesis or min_num_tests_hypothesis <= num_tests_premise:
        return False
    # the hypothesis is about more tests than mentioned in the premise, so it doesn't entail or contradict the premise and is therefore neutral
    return None

print(entailment_or_contradiction_or_neutral(average_score_premise, num_tests_premise, average_score_hypothesis, min_num_tests_hypothesis))
"
6485,neutral,,contradiction,"If the distance between their homes is 20 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is more than 20 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is 20 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is more than 20 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","home_distance_premise = 20
home_distance_hypothesis = 20

def entailment_or_contradiction_or_neutral(home_distance_premise, home_distance_hypothesis):
    # the hypothesis talks about the distance between two homes, which is also mentioned in the premise
    # the hypothesis states that the distance is more than 'home_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance in the premise is less than 'home_distance_hypothesis'
    if home_distance_premise < home_distance_hypothesis:
        return False
    # if the premise distance is equal to 'home_distance_hypothesis', then the hypothesis is neutral to the premise
    elif home_distance_premise == home_distance_hypothesis:
        return None
    # if the premise distance is more than 'home_distance_hypothesis', then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(home_distance_premise, home_distance_hypothesis))
"
6677,entailment,,contradiction,"Dacid obtained 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained less than 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained less than 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","english_marks_premise = 96
mathematics_marks_premise = 95
physics_marks_premise = 82
chemistry_marks_premise = 87
biology_marks_premise = 92

english_marks_hypothesis = 96
mathematics_marks_hypothesis = 95
physics_marks_hypothesis = 82
chemistry_marks_hypothesis = 87
biology_marks_hypothesis = 92

def entailment_or_contradiction_or_neutral(english_marks_premise, mathematics_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, mathematics_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis):
    # the hypothesis talks about the number of marks obtained by Dacid in various subjects, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the marks obtained by Dacid in any subject according to the hypothesis are greater than the marks stated in the premise
    if english_marks_hypothesis > english_marks_premise or mathematics_marks_hypothesis > mathematics_marks_premise or physics_marks_hypothesis > physics_marks_premise or chemistry_marks_hypothesis > chemistry_marks_premise or biology_marks_hypothesis > biology_marks_premise:
        return False
    # check if the hypothesis entails the premise by checking if the marks obtained by Dacid in any subject according to the hypothesis are less than or equal to the marks stated in the premise
    elif english_marks_hypothesis <= english_marks_premise and mathematics_marks_hypothesis <= mathematics_marks_premise and physics_marks_hypothesis <= physics_marks_premise and chemistry_marks_hypothesis <= chemistry_marks_premise and biology_marks_hypothesis <= biology_marks_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, then it is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(english_marks_premise, mathematics_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, mathematics_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis))
"
6783,contradiction,,entailment,"Each week , James is paid x dollars per per hour for the first 40 hours and 1.5 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first less than 70 hours and 1.5 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 1.5 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first less than 70 hours and 1.5 x dollars for each additional hour worked that week","base_hours_premise = 40
base_hours_hypothesis = 70

def entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis):
    # the hypothesis talks about the number of hours James is paid x dollars for, also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the base hours in the hypothesis are more than the base hours in the premise
    if base_hours_hypothesis > base_hours_premise:
        return False
    # any number of base hours less than or equal to 40 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(base_hours_premise, base_hours_hypothesis))
"
7429,entailment,,neutral,Amanda goes to the toy store to buy less than 4 ball and 3 different board games,Amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy less than 4 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,"max_balls_premise = 4
balls_hypothesis = 1
board_games_premise = 3
board_games_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis):
    # the hypothesis talks about the number of balls and board games bought by Amanda, referenced also in the premise
    # check if the number of balls from the hypothesis is greater than the maximum number stated in the premise
    if balls_hypothesis > max_balls_premise:
        return False
    # check if the number of board games from the hypothesis is greater than the number stated in the premise
    if board_games_hypothesis > board_games_premise:
        return False
    # if the hypothesis does not contradict the premise, it entails it
    return True

print(entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis))
"
6672,error,"Traceback (most recent call last):
  File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/StressTest/gpt4/sample_6672.py"", line 22, in <module>
    print(entailment_or_contradiction_or_neutral(drive_duration_at_40mph_premise, drive_duration_at_60mph_premise, max_drive_duration_at_40mph_hypothesis, drive_duration_at_60mph_hypothesis))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/StressTest/gpt4/sample_6672.py"", line 16, in entailment_or_contradiction_or_neutral
    if drive_duration_at_40mph_hypothesis > drive_duration_at_40mph_premise or drive_duration_at_60mph_hypothesis > drive_duration_at_60mph_premise:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'drive_duration_at_40mph_hypothesis' is not defined. Did you mean: 'drive_duration_at_60mph_hypothesis'?",entailment,"City A to city B , Andrew drove for 1 hr at 40 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 5 hr at 40 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 40 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 5 hr at 40 mph and for 3 hours at 60 mph","# Duration and speed of Andrew's drive
drive_duration_at_40mph_premise = 1
drive_duration_at_60mph_premise = 3
max_drive_duration_at_40mph_hypothesis = 5
drive_duration_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_duration_at_40mph_premise, drive_duration_at_60mph_premise, max_drive_duration_at_40mph_hypothesis, drive_duration_at_60mph_hypothesis):
    # The hypothesis talks about the driving duration from city A to B, which is also referenced in the premise
    # Check if the hypothesis contradicts the premise by checking if the driving duration at 40 mph and 60 mph from the hypothesis exceed the premise values
    if drive_duration_at_40mph_hypothesis > drive_duration_at_40mph_premise or drive_duration_at_60mph_hypothesis > drive_duration_at_60mph_premise:
        return False
    # If the driving durations at 40 mph and 60 mph from the hypothesis is less than or equal to the premise values, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_duration_at_40mph_premise, drive_duration_at_60mph_premise, max_drive_duration_at_40mph_hypothesis, drive_duration_at_60mph_hypothesis))
"
6445,entailment,,neutral,Frank is less than 84 years younger then John,Frank is 14 years younger then John,frank is less than 84 years younger then john,frank is 14 years younger then john,"max_age_difference_premise = 84
age_difference_hypothesis = 14

def entailment_or_contradiction_or_neutral(max_age_difference_premise, age_difference_hypothesis):
    # the hypothesis talks about the age difference between Frank and John, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_age_difference_premise', by checking if the age difference from the hypothesis is greater than 'max_age_difference_premise'
    if age_difference_hypothesis > max_age_difference_premise:
        return False
    # any age difference less than or equal to 84 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_age_difference_premise, age_difference_hypothesis))
"
7538,entailment,,contradiction,"Reeya obtained 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , What will be the average","Reeya obtained less than 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , What will be the average","reeya obtained 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , what will be the average","reeya obtained less than 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , what will be the average","# Extracted quantities from premise
reeya_scores_premise = [40, 60, 70, 80, 80]

# Extracted quantities from hypothesis
reeya_scores_hypothesis = [40, 60, 70, 80, 80]

def entailment_or_contradiction_or_neutral(reeya_scores_premise, reeya_scores_hypothesis):
    # the hypothesis refers to the scores obtained by Reeya in different subjects, which are also mentioned in the premise
    # the hypothesis claims that Reeya obtained less scores than those mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if any score reported in the premise is less than the corresponding score in the hypothesis
    for p_score, h_score in zip(reeya_scores_premise, reeya_scores_hypothesis):
        if p_score < h_score:
            return False
    # if the scores in the hypothesis are not less than those in the premise, then the hypothesis is contradicted by the premise
    return True

print(entailment_or_contradiction_or_neutral(reeya_scores_premise, reeya_scores_hypothesis))
"
6770,entailment,,contradiction,"6600 among John , Jose & Binoy in the ration 2 : 4 : 6","less than 6600 among John , Jose & Binoy in the ration 2 : 4 : 6","6600 among john , jose & binoy in the ration 2 : 4 : 6","less than 6600 among john , jose & binoy in the ration 2 : 4 : 6","total_money_premise = 6600
total_money_hypothesis = 6600

def entailment_or_contradiction_or_neutral(total_money_premise, total_money_hypothesis):
    # the hypothesis talks about the total money among John, Jose & Binoy which is also referenced in the premise
    # the hypothesis is that the total money is less than 'total_money_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'total_money_premise' is less than 'total_money_hypothesis'
    if total_money_premise < total_money_hypothesis:
        return False
    # the premise and hypothesis are contradictory because the premise states the total money is 6600 and the hypothesis states it's less than 6600
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_money_premise, total_money_hypothesis))
"
6865,entailment,,neutral,"Matthew ' s walking rate was less than 5 km per hour and Johnny ' s was 4 km per hour , how many km had Johnny walked when they met ?","Matthew ' s walking rate was 3 km per hour and Johnny ' s was 4 km per hour , how many km had Johnny walked when they met ?","matthew ' s walking rate was less than 5 km per hour and johnny ' s was 4 km per hour , how many km had johnny walked when they met ?","matthew ' s walking rate was 3 km per hour and johnny ' s was 4 km per hour , how many km had johnny walked when they met ?","matthew_walking_rate_premise = 5
johnny_walking_rate_premise = 4
matthew_walking_rate_hypothesis = 3
johnny_walking_rate_hypothesis = 4

def entailment_or_contradiction_or_neutral(matthew_walking_rate_premise, johnny_walking_rate_premise, matthew_walking_rate_hypothesis, johnny_walking_rate_hypothesis):
    # the hypothesis states the walking rates of Matthew and Johnny and asks how many km Johnny walked when they met
    # the premise states the same details
    # check if the walking rates stated in the hypothesis contradict the walking rates stated in the premise
    if johnny_walking_rate_hypothesis != johnny_walking_rate_premise or (matthew_walking_rate_hypothesis >= matthew_walking_rate_premise):
        return False
    # if no contradiction, the hypothesis is entailed by the premise since it specifies the walking rates more precisely
    return True

print(entailment_or_contradiction_or_neutral(matthew_walking_rate_premise, johnny_walking_rate_premise, matthew_walking_rate_hypothesis, johnny_walking_rate_hypothesis))
"
7170,contradiction,,entailment,Andy solves problems 70 to 125 inclusive in a Math exercise,Andy solves problems more than 30 to 125 inclusive in a Math exercise,andy solves problems 70 to 125 inclusive in a math exercise,andy solves problems more than 30 to 125 inclusive in a math exercise,"min_problem_premise = 70
max_problem_premise = 125
min_problem_hypothesis = 30
max_problem_hypothesis = 125

def entailment_or_contradiction_or_neutral(min_problem_premise, max_problem_premise, min_problem_hypothesis, max_problem_hypothesis):
    # the hypothesis talks about the number of problems Andy solves in a Math exercise
    # check if the hypothesis contradicts the premise by checking if the range of problems solved according to the hypothesis is outside the range given in the premise
    if min_problem_hypothesis < min_problem_premise or max_problem_hypothesis > max_problem_premise:
        return False
    # if the range of problems solved according to the hypothesis is within the range given in the premise, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_problem_premise, max_problem_premise, min_problem_hypothesis, max_problem_hypothesis))
"
6567,neutral,,entailment,"If the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers u did Carl drive each way ?","If the trip home took less than 7 / 2 hour longer than the trip to the beach , how many kilometers u did Carl drive each way ?","if the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers u did carl drive each way ?","if the trip home took less than 7 / 2 hour longer than the trip to the beach , how many kilometers u did carl drive each way ?","trip_home_longer_premise = 1 / 2
trip_home_longer_hypothesis = 7 / 2

def entailment_or_contradiction_or_neutral(trip_home_longer_premise, trip_home_longer_hypothesis):
    # both the premise and hypothesis talks about the trip home taking longer than the trip to the beach
    # check if the hypothesis contradicts the premise estimate of 'trip_home_longer_premise' hours, by checking if the time from the hypothesis is lower than 'trip_home_longer_premise'
    if trip_home_longer_hypothesis < trip_home_longer_premise:
        return False
    # any time longer than 1/2 hour is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(trip_home_longer_premise, trip_home_longer_hypothesis))
"
7223,neutral,,contradiction,In another class of 200 students there were 24 grades higher than Lena ’ s,In another class of 300 students there were 24 grades higher than Lena ’ s,in another class of 200 students there were 24 grades higher than lena ’ s,in another class of 300 students there were 24 grades higher than lena ’ s,"students_in_class_premise = 200
students_in_class_hypothesis = 300
grades_higher_than_lena = 24

def entailment_or_contradiction_or_neutral(students_in_class_premise, students_in_class_hypothesis, grades_higher_than_lena):
    # Both the hypothesis and the premise refer to the number of students that had higher grades than Lena's
    # Check if the hypothesis contradicts the premise, by checking if the number of students in the class from the hypothesis is less than the number of students in the class mentioned in the premise
    if students_in_class_hypothesis < students_in_class_premise:
        return False
    # The premise information does not contradict the hypothesis, however, it does not entail the hypothesis either, as the number of students in the class is different
    return None

print(entailment_or_contradiction_or_neutral(students_in_class_premise, students_in_class_hypothesis, grades_higher_than_lena))
"
6626,entailment,,contradiction,"The ratio between the number of sheep and the number of horses at the Stewart farm is 6 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","The ratio between the number of sheep and the number of horses at the Stewart farm is less than 6 to 7 , If each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is 6 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","the ratio between the number of sheep and the number of horses at the stewart farm is less than 6 to 7 , if each horse is fed 230 ounces of horse food per day and the farm needs a total 12,880 ounces of horse food per day , what is the number of sheep in the farm ?","sheep_to_horse_ratio_premise = 6 / 7
horse_food_per_day = 230
total_horse_food = 12880
sheep_to_horse_ratio_hypothesis = 6 / 7

def entailment_or_contradiction_or_neutral(sheep_to_horse_ratio_premise, horse_food_per_day, total_horse_food, sheep_to_horse_ratio_hypothesis):
    # compute the number of horses based on the total horse food and horse food per day
    num_horses = total_horse_food / horse_food_per_day
    # compute the number of sheep based on the number of horses and the ratio
    num_sheep = num_horses * sheep_to_horse_ratio_premise
    # the hypothesis talks about the ratio between the number of sheep and horses, as well as the food requirements for horses
    # check if the hypothesis contradicts the premise by checking if the ratio described in the hypothesis is less than the one in the premise
    if sheep_to_horse_ratio_hypothesis < sheep_to_horse_ratio_premise:
        return False
    # if the ratio is not less, it means it's equal, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(sheep_to_horse_ratio_premise, horse_food_per_day, total_horse_food, sheep_to_horse_ratio_hypothesis))
"
6860,neutral,,contradiction,"If Jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","If Jack walked more than 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","if jack walked more than 4 miles in 1 hour and 15 minutes , what was his rate of walking in miles per hour ?","distance_walked_premise = 4
distance_walked_hypothesis = 4

def entailment_or_contradiction_or_neutral(distance_walked_premise, distance_walked_hypothesis):
    # the hypothesis refers to the walking distance of Jack mentioned in the premise
    # the hypothesis states that Jack walked more than 'distance_walked_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance walked reported in the premise is less than 'distance_walked_hypothesis'
    if distance_walked_premise < distance_walked_hypothesis:
        return False
    # the premise is consistent with a walking distance equal to 'distance_walked_premise'
    # so the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(distance_walked_premise, distance_walked_hypothesis))
"
7478,entailment,,contradiction,The product of all the possible units digits of Sophie Germain primes greater than 8 is,The product of all the possible units digits of Sophie Germain primes greater than 4 is,the product of all the possible units digits of sophie germain primes greater than 8 is,the product of all the possible units digits of sophie germain primes greater than 4 is,"# Sophie Germain primes are primes p for which 2*p + 1 is also a prime. 
# The possible units digits of these primes are 1, 3, 7, and 9

# For the premise, Sophie Germain primes greater than 8 will have possible units digits 1, 3, 7, and 9.
# For the hypothesis, Sophie Germain primes greater than 4 will also have possible units digits 1, 3, 7, and 9.

# Therefore, the product of all the possible units digits of Sophie Germain primes greater than 8 is the same
# as the product of all the possible units digits of Sophie Germain primes greater than 4.

def entailment_or_contradiction_or_neutral():
    # Since the premise and hypothesis are referring to the same set of Sophie Germain primes,
    # and the product of their possible units digits will be the same, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral())
"
5998,entailment,,neutral,"To be considered for “ movie of the year , ” a film must appear in at least less than 4 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least less than 4 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","min_list_appearance_premise = 4/4
min_list_appearance_hypothesis = 1/4

def entailment_or_contradiction_or_neutral(min_list_appearance_premise, min_list_appearance_hypothesis):
    # the hypothesis talks about the minimum list appearance rule for movie of the year, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the minimum list appearance from the hypothesis is greater than the value from the premise
    if min_list_appearance_hypothesis > min_list_appearance_premise:
        return False
    # any minimum list appearance less than or equal to 4 / 4 (1) is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_list_appearance_premise, min_list_appearance_hypothesis))
"
7303,entailment,,neutral,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 88,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 58,scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 88,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 58,"avg_golf_score_premise = 88
avg_golf_score_hypothesis = 58

def entailment_or_contradiction_or_neutral(avg_golf_score_premise, avg_golf_score_hypothesis):
    # the hypothesis talks about the average golf score mentioned in the premise
    # the hypothesis gives a specific score 'avg_golf_score_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the hypothesis score is greater than the premise score
    if avg_golf_score_hypothesis > avg_golf_score_premise:
        return False
    # if the hypothesis score is less than the premise score, it is entailed by the premise
    elif avg_golf_score_hypothesis < avg_golf_score_premise:
        return True
    # if scores are equal, then it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(avg_golf_score_premise, avg_golf_score_hypothesis))
"
7183,contradiction,,neutral,"If less than 4 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","If 1 / 12 of the passengers on a ship are from North America , 1 / 8 are Europeans , 1 / 3 are from Africa , 1 / 6 are from Asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 4 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 8 are europeans , 1 / 3 are from africa , 1 / 6 are from asia and the remaining 35 people are citizens of other continents , then how many passengers are on board the ship ?","north_america_passengers_premise = 4 / 12
north_america_passengers_hypothesis = 1 / 12
europe_passengers = 1 / 8
africa_passengers = 1 / 3
asia_passengers = 1 / 6
other_continents_passengers = 35

def entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continents_passengers):
    # the hypothesis contradicts the premise about the proportion of North America passengers, hence, return False
    if north_america_passengers_premise != north_america_passengers_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continents_passengers))
"
6785,neutral,,contradiction,"Each week , James is paid x dollars per per hour for the first 40 hours and 1.5 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first more than 40 hours and 1.5 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 1.5 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first more than 40 hours and 1.5 x dollars for each additional hour worked that week","regular_hours_premise = 40
regular_hours_hypothesis = 41

def entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis):
    # the hypothesis talks about the hours James works for regular pay, as referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'regular_hours_premise' by checking if the regular work hours from the hypothesis is less than or equal to 'regular_hours_premise'
    if regular_hours_hypothesis <= regular_hours_premise:
        return False
    # any number of regular work hours greater than 40 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis))
"
7001,neutral,,contradiction,Ramesh can finish a work in 20 days and Sushil in 25 days,Ramesh can finish a work in more than 20 days and Sushil in 25 days,ramesh can finish a work in 20 days and sushil in 25 days,ramesh can finish a work in more than 20 days and sushil in 25 days,"ramesh_work_days_premise = 20
sushil_work_days_premise = 25
min_ramesh_work_days_hypothesis = 20
sushil_work_days_hypothesis = 25

def entailment_or_contradiction_or_neutral(ramesh_work_days_premise, sushil_work_days_premise, min_ramesh_work_days_hypothesis, sushil_work_days_hypothesis):
    # the hypothesis talks about the number of days Ramesh and Sushil need to finish a work, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of days Ramesh needs to finish the work according to the hypothesis is less than the number in the premise
    if min_ramesh_work_days_hypothesis < ramesh_work_days_premise:
        return False
    # check if the number of days Sushil needs to finish the work according to the hypothesis is different than the number in the premise
    elif sushil_work_days_hypothesis != sushil_work_days_premise:
        return False
    # the hypothesis does not contradict the premise, but it also does not fully entail it, because it does not confirm the exact number of days for Ramesh, so it is neutral
    return None

print(entailment_or_contradiction_or_neutral(ramesh_work_days_premise, sushil_work_days_premise, min_ramesh_work_days_hypothesis, sushil_work_days_hypothesis))
"
6482,entailment,,contradiction,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections T of the 4 items can Amanda make ?","If the toy store is stocked with 1 types of balls and 6 types of board games , how many different selections T of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections t of the 4 items can amanda make ?","if the toy store is stocked with 1 types of balls and 6 types of board games , how many different selections t of the 4 items can amanda make ?","types_of_balls_premise = 3
types_of_board_games_premise = 6
types_of_balls_hypothesis = 1
types_of_board_games_hypothesis = 6

def entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis):
    # the hypothesis talks about the number of types of balls and board games in a toy store, also referenced in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of types of balls or board games in the hypothesis is more than in the premise
    if types_of_balls_hypothesis > types_of_balls_premise or types_of_board_games_hypothesis > types_of_board_games_premise:
        return False
    # check if the hypothesis entails the premise, by checking if the number of types of balls or board games in the hypothesis is less than in the premise
    elif types_of_balls_hypothesis < types_of_balls_premise or types_of_board_games_hypothesis < types_of_board_games_premise:
        return True
    # if the number of types of balls and board games in the hypothesis is equal to that in the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(types_of_balls_premise, types_of_board_games_premise, types_of_balls_hypothesis, types_of_board_games_hypothesis))
"
6901,entailment,,neutral,"Shop Offered less than 70 % offer for every Shirt , Smith bought a shirt at Rs","Shop Offered 30 % offer for every Shirt , Smith bought a shirt at Rs","shop offered less than 70 % offer for every shirt , smith bought a shirt at rs","shop offered 30 % offer for every shirt , smith bought a shirt at rs","max_discount_premise = 70
discount_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis):
    # the hypothesis refers to the discount mentioned in the premise
    # the hypothesis estimates the discount to be 'discount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if discount reported in the hypothesis is more than 'max_discount_premise'
    if discount_hypothesis >= max_discount_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis))
"
6727,entailment,,neutral,"Mary selects a total of less than 20 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","Mary selects a total of 10 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","mary selects a total of less than 20 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","mary selects a total of 10 apples and oranges from the food stand , and the average ( arithmetic mean ) price of the 10 pieces of fruit is 56 ¢","max_fruits_premise = 20
fruits_hypothesis = 10
avg_price_premise = 56
avg_price_hypothesis = 56

def entailment_or_contradiction_or_neutral(max_fruits_premise, fruits_hypothesis, avg_price_premise, avg_price_hypothesis):
    # the hypothesis refers to the number of fruits selected by Mary and the average price of the fruits, both mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of fruits from the hypothesis is higher than 'max_fruits_premise' or the average price from the hypothesis is different from 'avg_price_premise'
    if fruits_hypothesis > max_fruits_premise or avg_price_hypothesis != avg_price_premise:
        return False
    # if there is no contradiction, then the hypothesis is entailed by the premise, as all the quantities and details in the hypothesis are found in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_fruits_premise, fruits_hypothesis, avg_price_premise, avg_price_hypothesis))
"
6631,entailment,,neutral,"How many seconds does Sandy take to cover a distance of less than 800 meters , if Sandy runs at a speed of 15 km / hr ?","How many seconds does Sandy take to cover a distance of 500 meters , if Sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of less than 800 meters , if sandy runs at a speed of 15 km / hr ?","how many seconds does sandy take to cover a distance of 500 meters , if sandy runs at a speed of 15 km / hr ?","max_distance_premise = 800
distance_hypothesis = 500
speed_km_hr_sandy = 15

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis, speed_km_hr_sandy):
    # the hypothesis refers to the time needed to cover a certain distance at a certain speed, both also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the distance to be covered in the hypothesis is more than the maximum limit mentioned in the premise
    if distance_hypothesis > max_distance_premise:
        return False
    # if the distance to be covered is less than or equal to the maximum limit mentioned in the premise, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis, speed_km_hr_sandy))
"
6914,neutral,,contradiction,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 70 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 70 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","# Both premise and hypothesis are questions and do not assert any fact. Therefore, they are neutral to each other.
def entailment_or_contradiction_or_neutral():
    # The premise and hypothesis are questions, so they do not contradict or entail each other
    return None

print(entailment_or_contradiction_or_neutral())
"
6484,entailment,,neutral,"If the distance between their homes is less than 80 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","If the distance between their homes is 20 kilometers , Maxwell ' s walking speed is 4 km / h , and Brad ' s running speed is 6 km / h , what is the distance traveled by Brad ?","if the distance between their homes is less than 80 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","if the distance between their homes is 20 kilometers , maxwell ' s walking speed is 4 km / h , and brad ' s running speed is 6 km / h , what is the distance traveled by brad ?","max_distance_premise = 80
distance_hypothesis = 20
maxwell_speed = 4
brad_speed = 6

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis, maxwell_speed, brad_speed):
    # the hypothesis talks about the distance between homes, Maxwell's walking speed and Brad's running speed
    # check if the hypothesis contradicts the premise by checking if distance in the hypothesis is more than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    # if the distance in the hypothesis is less than or equal to 'max_distance_premise', the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis, maxwell_speed, brad_speed))
"
7064,neutral,,contradiction,"Triangle STV has sides ST = TV = 26 , and SV = 20","Triangle STV has sides ST = TV = less than 26 , and SV = 20","triangle stv has sides st = tv = 26 , and sv = 20","triangle stv has sides st = tv = less than 26 , and sv = 20","st_tv_premise = 26
sv_premise = 20
st_tv_hypothesis_max = 26
sv_hypothesis = 20

def entailment_or_contradiction_or_neutral(st_tv_premise, sv_premise, st_tv_hypothesis_max, sv_hypothesis):
    # the hypothesis talks about the sides of a triangle STV, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the sides ST and TV from the premise are greater than 'st_tv_hypothesis_max' and if SV side from the premise is different than 'sv_hypothesis'
    if st_tv_premise > st_tv_hypothesis_max or sv_premise != sv_hypothesis:
        return False
    # the hypothesis is consistent with the premise if the sides ST and TV from the premise are equal to 'st_tv_hypothesis_max' and the SV side from the premise is equal to 'sv_hypothesis'
    elif st_tv_premise == st_tv_hypothesis_max and sv_premise == sv_hypothesis:
        return None
    # otherwise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(st_tv_premise, sv_premise, st_tv_hypothesis_max, sv_hypothesis))
"
6805,entailment,,neutral,"One hour after Yolanda started walking from X to Y , a distance of less than 81 miles , Bob started walking along the same road from Y to X","One hour after Yolanda started walking from X to Y , a distance of 31 miles , Bob started walking along the same road from Y to X","one hour after yolanda started walking from x to y , a distance of less than 81 miles , bob started walking along the same road from y to x","one hour after yolanda started walking from x to y , a distance of 31 miles , bob started walking along the same road from y to x","max_distance_premise = 81
distance_hypothesis = 31

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis talks about the distance between two points X and Y, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the distance in the hypothesis is more than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    # if the distance is less than or equal to 'max_distance_premise', the hypothesis is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
6710,entailment,,contradiction,Jason ' s team scored 60 points in a game basketball and he accounted for 60 percent of their points,Jason ' s team scored less than 60 points in a game basketball and he accounted for 60 percent of their points,jason ' s team scored 60 points in a game basketball and he accounted for 60 percent of their points,jason ' s team scored less than 60 points in a game basketball and he accounted for 60 percent of their points,"team_points_premise = 60
team_points_hypothesis = 60
jason_points_percent = 60

def entailment_or_contradiction_or_neutral(team_points_premise, team_points_hypothesis, jason_points_percent):
    # the hypothesis contradicts the premise if it claims the team scored less than 60 points
    # check if the team points in the hypothesis are less than the team points in the premise
    if team_points_hypothesis < team_points_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(team_points_premise, team_points_hypothesis, jason_points_percent))
"
7124,neutral,,contradiction,Aaron will jog from home at 4 miles per hour and then walk back home by the same route at 8 miles per hour,Aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 8 miles per hour,aaron will jog from home at 4 miles per hour and then walk back home by the same route at 8 miles per hour,aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 8 miles per hour,"jog_speed_premise = 4
walk_speed_premise = 8
jog_speed_hypothesis = 4
walk_speed_hypothesis = 8

def entailment_or_contradiction_or_neutral(jog_speed_premise, walk_speed_premise, jog_speed_hypothesis, walk_speed_hypothesis):
    # the hypothesis contradicts the premise if the jogging speed from the hypothesis is less than the jogging speed from the premise
    if jog_speed_hypothesis < jog_speed_premise:
        return False
    # if the walking speed from the hypothesis differs from the one from the premise, the hypothesis contradicts the premise
    elif walk_speed_hypothesis != walk_speed_premise:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(jog_speed_premise, walk_speed_premise, jog_speed_hypothesis, walk_speed_hypothesis))
"
6646,contradiction,,neutral,"If less than 7 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","If 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 7 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","north_america_passengers_premise = 7 / 12
north_america_passengers_hypothesis = 1 / 12
europe_passengers = 1 / 4
africa_passengers = 2 / 9
asia_passengers = 1 / 6
other_passengers = 50

def entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_passengers):
    # the hypothesis talks about the number of passengers on a ship, referenced also in the premise
    # however, the number of passengers from North America in the hypothesis contradicts the premise
    # check if the number of North American passengers from the hypothesis is greater than that in the premise
    if north_america_passengers_hypothesis > north_america_passengers_premise:
        return False
    # as the number of North American passengers in the hypothesis is less than the premise, there is a contradiction
    return False

print(entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_passengers))
"
6703,entailment,,neutral,Kiran is younger than Bineesh by more than 6 years and their ages are in the respective ratio of 7 : 9,Kiran is younger than Bineesh by 7 years and their ages are in the respective ratio of 7 : 9,kiran is younger than bineesh by more than 6 years and their ages are in the respective ratio of 7 : 9,kiran is younger than bineesh by 7 years and their ages are in the respective ratio of 7 : 9,"min_age_diff_premise = 6
age_diff_hypothesis = 7
age_ratio_premise = (7, 9)
age_ratio_hypothesis = (7, 9)

def entailment_or_contradiction_or_neutral(min_age_diff_premise, age_diff_hypothesis, age_ratio_premise, age_ratio_hypothesis):
    # the hypothesis talks about the age difference and age ratio between Kiran and Bineesh
    # check if the age difference or age ratio in the hypothesis contradicts the premise
    if age_diff_hypothesis <= min_age_diff_premise or age_ratio_hypothesis != age_ratio_premise:
        return False
    # check if the age difference and age ratio in the hypothesis entail the premise
    elif age_diff_hypothesis > min_age_diff_premise and age_ratio_hypothesis == age_ratio_premise:
        return True
    # If neither contradiction nor entailment can be established, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_age_diff_premise, age_diff_hypothesis, age_ratio_premise, age_ratio_hypothesis))
"
6932,entailment,,contradiction,"After 6 years , Sandy ’ s age will be 30 years","After less than 6 years , Sandy ’ s age will be 30 years","after 6 years , sandy ’ s age will be 30 years","after less than 6 years , sandy ’ s age will be 30 years","years_premise = 6 
sandy_age_future_premise = 30

max_years_hypothesis = 6
sandy_age_future_hypothesis = 30

def entailment_or_contradiction_or_neutral(years_premise, sandy_age_future_premise, max_years_hypothesis, sandy_age_future_hypothesis):
    # the hypothesis refers to a future time period shorter than or equal to 'max_years_hypothesis' and to Sandy's future age
    # check if the hypothesis contradicts the premise by verifying if Sandy's age in the future is inconsistent with the premise's projection
    # if Sandy's future age is the same in both premise and hypothesis, but the number of years differs, the hypothesis contradicts the premise
    if sandy_age_future_hypothesis == sandy_age_future_premise and max_years_hypothesis < years_premise:
        return False
    # if Sandy's future age and the number of years are the same in both premise and hypothesis, the hypothesis entails the premise
    elif sandy_age_future_hypothesis == sandy_age_future_premise and max_years_hypothesis == years_premise:
        return True
    # in all other cases, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(years_premise, sandy_age_future_premise, max_years_hypothesis, sandy_age_future_hypothesis))
"
6188,neutral,,contradiction,How many liters of blue paint must be added to 16 liters of Fuchsia to change it to Mauve paint ?,How many liters of blue paint must be added to 36 liters of Fuchsia to change it to Mauve paint ?,how many liters of blue paint must be added to 16 liters of fuchsia to change it to mauve paint ?,how many liters of blue paint must be added to 36 liters of fuchsia to change it to mauve paint ?,"fuchsia_premise = 16
fuchsia_hypothesis = 36

def entailment_or_contradiction_or_neutral(fuchsia_premise, fuchsia_hypothesis):
    # The hypothesis refers to the amount of Fuchsia paint mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the amount of Fuchsia paint in the hypothesis is less than the amount in the premise
    if fuchsia_hypothesis < fuchsia_premise:
        return False
    # since the amount of Fuchsia paint in the hypothesis is more than the amount in the premise, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(fuchsia_premise, fuchsia_hypothesis))
"
6841,entailment,,neutral,"20,000 for less than 7 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for 6 months , where as Rick invested his amount for the whole year , what was the amount invested by Rick ?","20,000 for less than 7 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","20,000 for 6 months , where as rick invested his amount for the whole year , what was the amount invested by rick ?","investment_duration_premise = 7
investment_duration_hypothesis = 6

def entailment_or_contradiction_or_neutral(investment_duration_premise, investment_duration_hypothesis):
    # the hypothesis talks about the investment duration, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the investment duration in the hypothesis is more than the duration in the premise
    if investment_duration_hypothesis > investment_duration_premise:
        return False
    # the investment duration from the hypothesis is less than or equal to the duration in the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(investment_duration_premise, investment_duration_hypothesis))
"
902,entailment,,contradiction,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of less than 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of less than 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","outfit_shirt_premise = 1
outfit_jeans_premise = 1
outfit_sneakers_premise = 1

outfit_shirt_hypothesis = 1
outfit_jeans_hypothesis = 1
outfit_sneakers_hypothesis = 1

def entailment_or_contradiction_or_neutral(outfit_shirt_premise, outfit_jeans_premise, outfit_sneakers_premise, outfit_shirt_hypothesis, outfit_jeans_hypothesis, outfit_sneakers_hypothesis):
    # the hypothesis is about the number of shirts, jeans and sneakers Jordan has for his outfits
    # check if the hypothesis contradicts the premise by checking if any of the outfit components in the hypothesis is more than the corresponding component in the premise
    if outfit_shirt_hypothesis > outfit_shirt_premise or outfit_jeans_hypothesis > outfit_jeans_premise or outfit_sneakers_hypothesis > outfit_sneakers_premise:
        return False
    # check if the hypothesis entails the premise by checking if all outfit components in the hypothesis are less than or equal to the corresponding components in the premise
    elif outfit_shirt_hypothesis <= outfit_shirt_premise and outfit_jeans_hypothesis <= outfit_jeans_premise and outfit_sneakers_hypothesis <= outfit_sneakers_premise:
        return True
    # if the hypothesis doesn't contradict or entail the premise, it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(outfit_shirt_premise, outfit_jeans_premise, outfit_sneakers_premise, outfit_shirt_hypothesis, outfit_jeans_hypothesis, outfit_sneakers_hypothesis))
"
6481,entailment,,neutral,"If the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections T of the 4 items can Amanda make ?","If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections T of the 4 items can Amanda make ?","if the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections t of the 4 items can amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections t of the 4 items can amanda make ?","max_balls_premise = 4
balls_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis):
    # the hypothesis refers to the number of types of balls in the toy store mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of types of balls in the hypothesis is greater than 'max_balls_premise'
    if balls_hypothesis > max_balls_premise:
        return False
    # if the number of types of balls in the hypothesis is less than or equal to 'max_balls_premise', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis))
"
6455,neutral,,contradiction,"Calculate the average mark scored by Andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","Calculate the average mark scored by Andrea if he had the following scores in an examination : less than 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in English , Mathematics , Chemistry , Biology , French Language and Physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?","calculate the average mark scored by andrea if he had the following scores in an examination : less than 66 , 60 , 72 , 77 , 55 and 85 marks ( out of 100 ) in english , mathematics , chemistry , biology , french language and physics respectively ?","english_mark_premise = 66
math_mark_premise = 60
chemistry_mark_premise = 72
biology_mark_premise = 77
french_mark_premise = 55
physics_mark_premise = 85

english_mark_hypothesis = 66

def entailment_or_contradiction_or_neutral(english_mark_premise, english_mark_hypothesis):
    # the hypothesis talks about the English mark, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'english_mark_premise', by checking if the English mark from the hypothesis is greater than 'english_mark_premise'
    if english_mark_hypothesis > english_mark_premise:
        return False
    # any English mark less than or equal to 66 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(english_mark_premise, english_mark_hypothesis))
"
6991,entailment,,neutral,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for less than 52 km each,Two twins sisters Sita and Geeta were standing back to back and suddenly they started running in opposite directions for 12 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for less than 52 km each,two twins sisters sita and geeta were standing back to back and suddenly they started running in opposite directions for 12 km each,"max_distance_premise = 52
distance_hypothesis = 12

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis refers to the distance the sisters ran, mentioned in the premise
    # the hypothesis estimates the distance ran by each sister to be 'distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance ran by the sisters in the hypothesis is greater than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    # if the distance ran by the sisters in the hypothesis is less than or equal to 'max_distance_premise', it's consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
5929,contradiction,,neutral,"Dacid obtained more than 46 , 85 , 92 , 87 and 95 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained more than 46 , 85 , 92 , 87 and 95 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained 86 , 85 , 92 , 87 and 95 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology",
6443,entailment,,contradiction,Andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,Andrew purchased less than 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,andrew purchased less than 7 kg of grapes at the rate of 68 per kg and 9 kg of mangoes at the rate of 48 per kg,"grapes_kg_premise = 7
grapes_rate_premise = 68
mangoes_kg_premise = 9
mangoes_rate_premise = 48

max_grapes_kg_hypothesis = 7
grapes_rate_hypothesis = 68
mangoes_kg_hypothesis = 9
mangoes_rate_hypothesis = 48

def entailment_or_contradiction_or_neutral(grapes_kg_premise, grapes_rate_premise, mangoes_kg_premise, mangoes_rate_premise, max_grapes_kg_hypothesis, grapes_rate_hypothesis, mangoes_kg_hypothesis, mangoes_rate_hypothesis):
    # the hypothesis talks about the quantity of fruits and their rates mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if 'grapes_kg_premise' is less than 'max_grapes_kg_hypothesis' or the rates are different
    if grapes_kg_premise > max_grapes_kg_hypothesis or grapes_rate_premise != grapes_rate_hypothesis or mangoes_kg_premise != mangoes_kg_hypothesis or mangoes_rate_premise != mangoes_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(grapes_kg_premise, grapes_rate_premise, mangoes_kg_premise, mangoes_rate_premise, max_grapes_kg_hypothesis, grapes_rate_hypothesis, mangoes_kg_hypothesis, mangoes_rate_hypothesis))
"
6605,entailment,,contradiction,"At the end of ' n ' years , Sandy got back 2 times the original investment","At the end of ' n ' years , Sandy got back less than 2 times the original investment","at the end of ' n ' years , sandy got back 2 times the original investment","at the end of ' n ' years , sandy got back less than 2 times the original investment","investment_return_premise = 2
max_investment_return_hypothesis = 2

def entailment_or_contradiction_or_neutral(investment_return_premise, max_investment_return_hypothesis):
    # the hypothesis discusses the return on investment after 'n' years, same as the premise
    # the hypothesis sets the return to be less than 'max_investment_return_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the return in the premise is greater than 'max_investment_return_hypothesis'
    if investment_return_premise > max_investment_return_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(investment_return_premise, max_investment_return_hypothesis))
"
6248,entailment,,contradiction,Raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,Raviraj invested an amount of less than 100000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of less than 100000 at compound interest rate of 10 pcpa for a period of three years,"investment_premise = 100000
investment_hypothesis = 100000

def entailment_or_contradiction_or_neutral(investment_premise, investment_hypothesis):
    # the hypothesis refers to the investment amount mentioned in the premise
    # the hypothesis estimates the investment to be less than 'investment_hypothesis'
    # check if the hypothesis contradicts the premise by checking if investment reported in the premise is lower than 'investment_hypothesis'
    if investment_premise < investment_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(investment_premise, investment_hypothesis))
"
6907,entailment,,neutral,"City A to city B , Andrew drove for less than 2 hr at 44 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 2 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","drive_time_at_44mph_premise = 2
drive_time_at_60mph_premise = 3
drive_time_at_44mph_hypothesis = 1
drive_time_at_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(drive_time_at_44mph_premise, drive_time_at_60mph_premise, drive_time_at_44mph_hypothesis, drive_time_at_60mph_hypothesis):
    # the hypothesis talks about the driving times at different speeds, mentioned in the premise
    # check if the hypothesis contradicts the premise's upper limit of 'drive_time_at_44mph_premise'
    # by checking if the driving time at 44 mph in the hypothesis is greater than 'drive_time_at_44mph_premise'
    if drive_time_at_44mph_hypothesis > drive_time_at_44mph_premise:
        return False
    # check if the hypothesis contradicts the premise estimate of 'drive_time_at_60mph_premise'
    # by checking if the driving time at 60 mph in the hypothesis is different than 'drive_time_at_60mph_premise'
    elif drive_time_at_60mph_hypothesis != drive_time_at_60mph_premise:
        return False
    # the driving times in the hypothesis are consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(drive_time_at_44mph_premise, drive_time_at_60mph_premise, drive_time_at_44mph_hypothesis, drive_time_at_60mph_hypothesis))
"
7306,entailment,,neutral,"Mary works more than 2 hours per day on Monday , Wednesday and Friday , and 5 hours per day on Tuesday and Thursday","Mary works 9 hours per day on Monday , Wednesday and Friday , and 5 hours per day on Tuesday and Thursday","mary works more than 2 hours per day on monday , wednesday and friday , and 5 hours per day on tuesday and thursday","mary works 9 hours per day on monday , wednesday and friday , and 5 hours per day on tuesday and thursday","min_work_hours_mon_wed_fri_premise = 2
work_hours_tue_thu_premise = 5
work_hours_mon_wed_fri_hypothesis = 9
work_hours_tue_thu_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_work_hours_mon_wed_fri_premise, work_hours_tue_thu_premise, work_hours_mon_wed_fri_hypothesis, work_hours_tue_thu_hypothesis):
    # the hypothesis talks about the hours Mary works per day, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_work_hours_mon_wed_fri_premise' on Monday, Wednesday and Friday, by checking if the number of hours from the hypothesis is lower or equal to 'min_work_hours_mon_wed_fri_premise'
    if work_hours_mon_wed_fri_hypothesis <= min_work_hours_mon_wed_fri_premise:
        return False
    # the hypothesis also talks about the hours Mary works on Tuesday and Thursday, which is exactly the same as the premise, so it entails the premise
    elif work_hours_tue_thu_hypothesis != work_hours_tue_thu_premise:
        return False
    # if none of the above conditions are met, the hypothesis does not contradict the premise but entails it
    return True

print(entailment_or_contradiction_or_neutral(min_work_hours_mon_wed_fri_premise, work_hours_tue_thu_premise, work_hours_mon_wed_fri_hypothesis, work_hours_tue_thu_hypothesis))
"
6503,neutral,,contradiction,"Matthew ' s walking rate was 3 km per hour and Johnny ' s was 4 km per hour , how many km had Johnny walked when they met ?","Matthew ' s walking rate was more than 3 km per hour and Johnny ' s was 4 km per hour , how many km had Johnny walked when they met ?","matthew ' s walking rate was 3 km per hour and johnny ' s was 4 km per hour , how many km had johnny walked when they met ?","matthew ' s walking rate was more than 3 km per hour and johnny ' s was 4 km per hour , how many km had johnny walked when they met ?","matthew_speed_premise = 3
johnny_speed_premise = 4
matthew_speed_hypothesis = 3

def entailment_or_contradiction_or_neutral(matthew_speed_premise, johnny_speed_premise, matthew_speed_hypothesis):
    # the hypothesis talks about the walking rate of Matthew and Johnny, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of Matthew's speed being 'matthew_speed_premise' km/h, by checking if the speed in the hypothesis is greater than 'matthew_speed_premise'
    if matthew_speed_hypothesis > matthew_speed_premise:
        return False
    # If Matthew's speed in the hypothesis is equal to or less than the speed in the premise, it does not contradict the premise
    return None

print(entailment_or_contradiction_or_neutral(matthew_speed_premise, johnny_speed_premise, matthew_speed_hypothesis))
"
6704,entailment,,contradiction,Kiran is younger than Bineesh by 7 years and their ages are in the respective ratio of 7 : 9,Kiran is younger than Bineesh by less than 7 years and their ages are in the respective ratio of 7 : 9,kiran is younger than bineesh by 7 years and their ages are in the respective ratio of 7 : 9,kiran is younger than bineesh by less than 7 years and their ages are in the respective ratio of 7 : 9,"diff_age_premise = 7
diff_age_hypothesis = 7
ratio_age_premise = (7, 9)
ratio_age_hypothesis = (7, 9)

def entailment_or_contradiction_or_neutral(diff_age_premise, diff_age_hypothesis, ratio_age_premise, ratio_age_hypothesis):
    # the hypothesis refers to the age difference and ratio mentioned in the premise
    # the hypothesis estimates the age difference to be less than 'diff_age_hypothesis'
    # check if the hypothesis contradicts the premise by checking if age difference reported in the premise is greater than 'diff_age_hypothesis'
    if diff_age_premise > diff_age_hypothesis:
        return False
    # check if the ratio of age in hypothesis is same as premise
    if ratio_age_premise != ratio_age_hypothesis:
        return False
    return True

print(entailment_or_contradiction_or_neutral(diff_age_premise, diff_age_hypothesis, ratio_age_premise, ratio_age_hypothesis))
"
7142,entailment,,contradiction,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 10 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 50 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 10 % ?","departure_rate_premise = 50
departure_rate_hypothesis = 10

def entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis):
    # the hypothesis refers to the on-time departure rate mentioned in the premise
    # the hypothesis estimates the on-time departure rate to be more than 'departure_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if on-time departure rate reported in the premise is lower than 'departure_rate_hypothesis'
    if departure_rate_premise < departure_rate_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis))
"
7325,neutral,,contradiction,"After 1 more week , the average number of times Rikki goes to the gym increases to 3 times per week","After 5 more week , the average number of times Rikki goes to the gym increases to 3 times per week","after 1 more week , the average number of times rikki goes to the gym increases to 3 times per week","after 5 more week , the average number of times rikki goes to the gym increases to 3 times per week","time_in_weeks_premise = 1
average_gym_visits_premise = 3
time_in_weeks_hypothesis = 5
average_gym_visits_hypothesis = 3

def entailment_or_contradiction_or_neutral(time_in_weeks_premise, average_gym_visits_premise, time_in_weeks_hypothesis, average_gym_visits_hypothesis):
    # the hypothesis talks about the number of weeks and number of gym visits per week mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the number of gym visits per week and the number of weeks 
    # the premise and hypothesis both state that the average gym visits are 3 per week, so no contradiction there 
    # however, the premise states that the increase in gym visits occurs after 1 week, while the hypothesis states that it occurs after 5 weeks. 
    # this difference in timing does not contradict the premise, but also does not entail it - it is neutral in respect to the premise
    if average_gym_visits_premise != average_gym_visits_hypothesis:
        return False
    elif time_in_weeks_premise != time_in_weeks_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(time_in_weeks_premise, average_gym_visits_premise, time_in_weeks_hypothesis, average_gym_visits_hypothesis))
"
6740,neutral,,contradiction,Diane find 1 can of paint are just enough to paint one third of her room,Diane find less than 1 can of paint are just enough to paint one third of her room,diane find 1 can of paint are just enough to paint one third of her room,diane find less than 1 can of paint are just enough to paint one third of her room,"paint_per_third_room_premise = 1
max_paint_per_third_room_hypothesis = 1

def entailment_or_contradiction_or_neutral(paint_per_third_room_premise, max_paint_per_third_room_hypothesis):
    # the hypothesis refers to the amount of paint Diane finds enough to paint one third of her room, also mentioned in the premise
    # the hypothesis estimates the paint amount to less than 'max_paint_per_third_room_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the paint amount in the premise is greater than 'max_paint_per_third_room_hypothesis'
    if paint_per_third_room_premise > max_paint_per_third_room_hypothesis:
        return False
    else:
        # if the premise quantity is not greater than 'max_paint_per_third_room_hypothesis', it means it's equal, so the hypothesis is neutral to the premise
        return None

print(entailment_or_contradiction_or_neutral(paint_per_third_room_premise, max_paint_per_third_room_hypothesis))
"
6168,neutral,,entailment,Addison High School ’ s senior class has 200 boys and 160 girls,Addison High School ’ s senior class has less than 400 boys and 160 girls,addison high school ’ s senior class has 200 boys and 160 girls,addison high school ’ s senior class has less than 400 boys and 160 girls,"boys_premise = 200
girls_premise = 160
max_boys_hypothesis = 400
girls_hypothesis = 160

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, max_boys_hypothesis, girls_hypothesis):
    # the hypothesis talks about the number of boys and girls in Addison High School's senior class, just like the premise
    # check if the hypothesis contradicts the premise, by checking if the number of boys is greater than 'max_boys_hypothesis' or if the number of girls is different from 'girls_hypothesis'
    if boys_premise > max_boys_hypothesis or girls_premise != girls_hypothesis:
        return False
    # check if the hypothesis entails the premise, by checking if the number of boys is equal to 'boys_premise' and if the number of girls is equal to 'girls_premise'
    elif boys_premise == max_boys_hypothesis and girls_premise == girls_hypothesis:
        return True
    # if the hypothesis does not contradict or entail the premise, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, max_boys_hypothesis, girls_hypothesis))
"
5999,neutral,,contradiction,"To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","To be considered for “ movie of the year , ” a film must appear in at least 6 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least 6 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","min_lists_premise = 1 / 4
min_lists_hypothesis = 6 / 4

def entailment_or_contradiction_or_neutral(min_lists_premise, min_lists_hypothesis):
    # the hypothesis refers to the number of top-10-movies lists a film must appear in to be considered for ""movie of the year"", as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of lists required by the hypothesis is less than the number required by the premise
    if min_lists_hypothesis < min_lists_premise:
        return False
    # any number of lists greater than 1/4 is consistent with the premise, so the hypothesis is neutral to the premise
    elif min_lists_hypothesis > min_lists_premise:
        return None
    # the hypothesis entails the premise if the required number of lists in the hypothesis is equal to the required number in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_lists_premise, min_lists_hypothesis))
"
6178,entailment,,neutral,"Ratio between Rahul and Deepak is less than 6 : 3 , After 6 Years Rahul age will be 34 years","Ratio between Rahul and Deepak is 4 : 3 , After 6 Years Rahul age will be 34 years","ratio between rahul and deepak is less than 6 : 3 , after 6 years rahul age will be 34 years","ratio between rahul and deepak is 4 : 3 , after 6 years rahul age will be 34 years","rahul_deepak_ratio_upper_limit_premise = 6 / 3
rahul_deepak_ratio_hypothesis = 4 / 3
rahul_age_in_6_years_premise = 34
rahul_age_in_6_years_hypothesis = 34

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_upper_limit_premise, rahul_deepak_ratio_hypothesis, rahul_age_in_6_years_premise, rahul_age_in_6_years_hypothesis):
    # the hypothesis refers to the ratio between Rahul and Deepak's ages and Rahul's future age, both topics also present in the premise
    # check if the hypothesis contradicts the premise by checking if the ratio from the hypothesis is greater than the upper limit from the premise or if the future ages do not match
    if rahul_deepak_ratio_hypothesis > rahul_deepak_ratio_upper_limit_premise or rahul_age_in_6_years_hypothesis != rahul_age_in_6_years_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_upper_limit_premise, rahul_deepak_ratio_hypothesis, rahul_age_in_6_years_premise, rahul_age_in_6_years_hypothesis))
"
6891,neutral,,entailment,Smita Was Making A Cube With Dimensions 5 * 5 * 5 Using 1 * 1 * 1 Cubes,Smita Was Making A Cube With Dimensions more than 3 * 5 * 5 Using 1 * 1 * 1 Cubes,smita was making a cube with dimensions 5 * 5 * 5 using 1 * 1 * 1 cubes,smita was making a cube with dimensions more than 3 * 5 * 5 using 1 * 1 * 1 cubes,"cube_dimension_premise = 5
min_cube_dimension_hypothesis = 3

def entailment_or_contradiction_or_neutral(cube_dimension_premise, min_cube_dimension_hypothesis):
    # the hypothesis refers to the dimension of the cube Smita was making
    # the hypothesis estimates the cube dimensions to be more than 'min_cube_dimension_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the cube dimensions in the premise are less than or equal to 'min_cube_dimension_hypothesis'
    if cube_dimension_premise <= min_cube_dimension_hypothesis:
        return False
    # any cube dimension greater than 3 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(cube_dimension_premise, min_cube_dimension_hypothesis))
"
6577,entailment,,neutral,Vijay bought less than 560 shirts at the rate of Rs,Vijay bought 160 shirts at the rate of Rs,vijay bought less than 560 shirts at the rate of rs,vijay bought 160 shirts at the rate of rs,"max_shirts_bought_premise = 560
shirts_bought_hypothesis = 160

def entailment_or_contradiction_or_neutral(max_shirts_bought_premise, shirts_bought_hypothesis):
    # the hypothesis talks about the number of shirts bought by Vijay, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_shirts_bought_premise', by checking if the number of shirts from the hypothesis is higher than 'max_shirts_bought_premise'
    if shirts_bought_hypothesis > max_shirts_bought_premise:
        return False
    # any number of shirts less than 560 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_shirts_bought_premise, shirts_bought_hypothesis))
"
6038,neutral,,contradiction,Each of the 59 members in Lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,Each of the more than 59 members in Lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,each of the 59 members in lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,each of the more than 59 members in lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,"members_premise = 59
members_hypothesis = 60

def entailment_or_contradiction_or_neutral(members_premise, members_hypothesis):
    # the hypothesis talks about the number of members in a school class, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'members_premise', by checking if the number of members from the hypothesis is less or equal to 'members_premise'
    if members_hypothesis <= members_premise:
        return False
    # any number of members greater than 59 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(members_premise, members_hypothesis))
"
6473,neutral,,contradiction,"4000 but the average salary of Raj , Roshan and Thomas is Rs","more than 4000 but the average salary of Raj , Roshan and Thomas is Rs","4000 but the average salary of raj , roshan and thomas is rs","more than 4000 but the average salary of raj , roshan and thomas is rs","avg_salary_premise = 4000
min_avg_salary_hypothesis = 4000

def entailment_or_contradiction_or_neutral(avg_salary_premise, min_avg_salary_hypothesis):
    # the hypothesis refers to the average salary of Raj, Roshan, and Thomas mentioned in the premise
    # the hypothesis estimates the average salary to be more than 'min_avg_salary_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the average salary reported in the premise is lower than 'min_avg_salary_hypothesis'
    if avg_salary_premise < min_avg_salary_hypothesis:
        return False
    # if the average salary in the premise is equal to 'min_avg_salary_hypothesis', the hypothesis is neutral to the premise
    elif avg_salary_premise == min_avg_salary_hypothesis:
        return None
    # if the average salary in the premise is greater than 'min_avg_salary_hypothesis', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(avg_salary_premise, min_avg_salary_hypothesis))
"
6028,entailment,,neutral,Joe ’ s average ( arithmetic mean ) test score across less than 6 equally weighted tests was 50,Joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 50,joe ’ s average ( arithmetic mean ) test score across less than 6 equally weighted tests was 50,joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 50,"max_tests_premise = 6
tests_hypothesis = 4
mean_score_premise = 50
mean_score_hypothesis = 50

def entailment_or_contradiction_or_neutral(max_tests_premise, tests_hypothesis, mean_score_premise, mean_score_hypothesis):
    # the hypothesis talks about the average test score of Joe, which is also mentioned in the premise
    # first, check if the number of tests in the hypothesis is greater than the maximum number of tests in the premise
    if tests_hypothesis >= max_tests_premise:
        return False
    # then, check if the mean test score in the hypothesis matches the mean test score in the premise
    elif mean_score_hypothesis != mean_score_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_tests_premise, tests_hypothesis, mean_score_premise, mean_score_hypothesis))
"
6922,entailment,,neutral,"If Michael earned $ less than 810 last week , how many hours did he work ?","If Michael earned $ 210 last week , how many hours did he work ?","if michael earned $ less than 810 last week , how many hours did he work ?","if michael earned $ 210 last week , how many hours did he work ?","earnings_premise = 810
earnings_hypothesis = 210

def entailment_or_contradiction_or_neutral(earnings_premise, earnings_hypothesis):
    # the hypothesis talks about Michael's earnings, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if earnings reported in the hypothesis are greater than earnings in the premise
    if earnings_hypothesis > earnings_premise:
        return False
    # since earnings in the hypothesis are less than earnings in the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(earnings_premise, earnings_hypothesis))
"
6533,neutral,,contradiction,In 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,In 7979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the United States used Kennedy Airport,in 1979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,in 7979 approximately 1 / 3 of the 37.3 million airline passengers traveling to or from the united states used kennedy airport,"# The year mentioned in the premise and hypothesis is different, hence the hypothesis neither contradicts nor entails the premise. 
# So, the answer is None. The provided code does not check the numbers because they are the same in the premise and hypothesis.

year_premise = 1979
year_hypothesis = 7979

def entailment_or_contradiction_or_neutral(year_premise, year_hypothesis):
    # The hypothesis and premise mentions about the year and the number of passengers used Kennedy Airport
    # The hypothesis year is not the same as the premise year, hence the hypothesis neither contradicts nor entails the premise
    return None

print(entailment_or_contradiction_or_neutral(year_premise, year_hypothesis))
"
7364,neutral,,contradiction,Deepa bought a calculator at 30 % discount on the listed price,Deepa bought a calculator at less than 30 % discount on the listed price,deepa bought a calculator at 30 % discount on the listed price,deepa bought a calculator at less than 30 % discount on the listed price,"discount_rate_premise = 30
max_discount_rate_hypothesis = 30

def entailment_or_contradiction_or_neutral(discount_rate_premise, max_discount_rate_hypothesis):
    # the hypothesis refers to the discount rate mentioned in the premise
    # the hypothesis estimates the discount rate to be less than or equal to 'max_discount_rate_hypothesis'
    # check if the hypothesis contradicts the premise by checking if discount rate reported in the premise is higher than 'max_discount_rate_hypothesis'
    if discount_rate_premise > max_discount_rate_hypothesis:
        return False
    # any discount rate less than or equal to 30% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(discount_rate_premise, max_discount_rate_hypothesis))
"
6833,neutral,,contradiction,"How many possible ways can 2 girls ( Rebecca , Kate , Ashley ) go on a date with 2 boys ( Peter , Kyle , Sam ) ?","How many possible ways can less than 2 girls ( Rebecca , Kate , Ashley ) go on a date with 2 boys ( Peter , Kyle , Sam ) ?","how many possible ways can 2 girls ( rebecca , kate , ashley ) go on a date with 2 boys ( peter , kyle , sam ) ?","how many possible ways can less than 2 girls ( rebecca , kate , ashley ) go on a date with 2 boys ( peter , kyle , sam ) ?","total_girls_premise = 3
total_boys_premise = 3
total_girls_hypothesis = 2
total_boys_hypothesis = 2

def entailment_or_contradiction_or_neutral(total_girls_premise, total_boys_premise, total_girls_hypothesis, total_boys_hypothesis):
    # the hypothesis talks about possible dating combinations between a number of girls and boys, referenced also in the premise
    # the premise assumes that 2 girls are going on a date with 2 boys, while the hypothesis assumes less than 2 girls are going on a date with 2 boys
    # check if the hypothesis contradicts the premise by checking if the number of girls from the hypothesis is greater than 'total_girls_premise'
    if total_girls_hypothesis > total_girls_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the number of boys from the hypothesis is greater than 'total_boys_premise'
    elif total_boys_hypothesis > total_boys_premise:
        return False
    # if the hypothesis does not contradict the premise, then it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(total_girls_premise, total_boys_premise, total_girls_hypothesis, total_boys_hypothesis))
"
7282,entailment,,neutral,"Carolyn bought less than 46 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","Carolyn bought 16 gumballs , Lew bought 14 gumballs , and Carey bought X gumballs","carolyn bought less than 46 gumballs , lew bought 14 gumballs , and carey bought x gumballs","carolyn bought 16 gumballs , lew bought 14 gumballs , and carey bought x gumballs","max_gumballs_carolyn_premise = 46
gumballs_lew_premise = 14
gumballs_carolyn_hypothesis = 16
gumballs_lew_hypothesis = 14

def entailment_or_contradiction_or_neutral(max_gumballs_carolyn_premise, gumballs_lew_premise, gumballs_carolyn_hypothesis, gumballs_lew_hypothesis):
    # the hypothesis talks about the number of gumballs bought by Carolyn and Lew, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_gumballs_carolyn_premise', by checking if the number of gumballs bought by Carolyn from the hypothesis is higher than 'max_gumballs_carolyn_premise'
    if gumballs_carolyn_hypothesis > max_gumballs_carolyn_premise:
        return False
    # check if the hypothesis contradicts the premise by stating a different number of gumballs bought by Lew
    if gumballs_lew_hypothesis != gumballs_lew_premise:
        return False
    # any number of gumballs bought by Carolyn less than 46 and Lew bought 14 gumballs is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_gumballs_carolyn_premise, gumballs_lew_premise, gumballs_carolyn_hypothesis, gumballs_lew_hypothesis))
"
6751,entailment,,neutral,"In the city of San Durango , less than 70 people own cats , dogs , or rabbits","In the city of San Durango , 50 people own cats , dogs , or rabbits","in the city of san durango , less than 70 people own cats , dogs , or rabbits","in the city of san durango , 50 people own cats , dogs , or rabbits","max_pet_owners_premise = 70
pet_owners_hypothesis = 50

def entailment_or_contradiction_or_neutral(max_pet_owners_premise, pet_owners_hypothesis):
    # the hypothesis refers to the number of pet owners in San Durango, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of pet owners in the hypothesis is greater than 'max_pet_owners_premise'
    if pet_owners_hypothesis > max_pet_owners_premise:
        return False
    # any number of pet owners less than 70 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_pet_owners_premise, pet_owners_hypothesis))
"
7360,entailment,,neutral,"In John ' s School , there are more than 20 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","In John ' s School , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are more than 20 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","in john ' s school , there are 80 boys of age 14 each , 70 boys of age 15 each & 50 boys of age 13 each and another 60 boys of age 12 each","min_boys_age_14_premise = 20
boys_age_14_hypothesis = 80
boys_age_15_premise = 70
boys_age_15_hypothesis = 70
boys_age_13_premise = 50
boys_age_13_hypothesis = 50
boys_age_12_premise = 60
boys_age_12_hypothesis = 60

def entailment_or_contradiction_or_neutral(min_boys_age_14_premise, boys_age_14_hypothesis, boys_age_15_premise, boys_age_15_hypothesis, boys_age_13_premise, boys_age_13_hypothesis, boys_age_12_premise, boys_age_12_hypothesis):
    # the hypothesis talks about the number of boys of certain ages in John's School, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_boys_age_14_premise' boys of age 14, by checking if the number of boys of age 14 from the hypothesis is lower or equal to 'min_boys_age_14_premise'
    if boys_age_14_hypothesis <= min_boys_age_14_premise:
        return False
    # check for contradiction for boys of age 15, 13 and 12
    elif boys_age_15_hypothesis != boys_age_15_premise or boys_age_13_hypothesis != boys_age_13_premise or boys_age_12_hypothesis != boys_age_12_premise:
        return False
    # if no contradiction is found, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_boys_age_14_premise, boys_age_14_hypothesis, boys_age_15_premise, boys_age_15_hypothesis, boys_age_13_premise, boys_age_13_hypothesis, boys_age_12_premise, boys_age_12_hypothesis))
"
7224,neutral,,entailment,"If OA = 2 , AC = 4 and BD = 6 , determine the length of OB .","If OA = less than 6 , AC = 4 and BD = 6 , determine the length of OB .","if oa = 2 , ac = 4 and bd = 6 , determine the length of ob .","if oa = less than 6 , ac = 4 and bd = 6 , determine the length of ob .","oa_premise = 2
ac_premise = 4
bd_premise = 6

max_oa_hypothesis = 6
ac_hypothesis = 4
bd_hypothesis = 6

def entailment_or_contradiction_or_neutral(oa_premise, ac_premise, bd_premise, max_oa_hypothesis, ac_hypothesis, bd_hypothesis):
    # the hypothesis refers to the length of OA, AC and BD mentioned in the premise
    # the hypothesis estimates the length of OA to be less or equal to 'max_oa_hypothesis'
    # check if the hypothesis contradicts the premise by checking if OA from the premise is greater than 'max_oa_hypothesis'
    if oa_premise > max_oa_hypothesis:
        return False
    # check if the lengths of AC and BD in the hypothesis contradict the ones in the premise
    if ac_premise != ac_hypothesis or bd_premise != bd_hypothesis:
        return False
    # if there is no contradiction, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(oa_premise, ac_premise, bd_premise, max_oa_hypothesis, ac_hypothesis, bd_hypothesis))
"
6670,entailment,,neutral,"If Suresh is less than 35 % more efficient than Kamal , he can complete the work in - - - days .","If Suresh is 25 % more efficient than Kamal , he can complete the work in - - - days .","if suresh is less than 35 % more efficient than kamal , he can complete the work in - - - days .","if suresh is 25 % more efficient than kamal , he can complete the work in - - - days .","max_efficiency_increase_premise = 35
efficiency_increase_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_efficiency_increase_premise, efficiency_increase_hypothesis):
    # the hypothesis talks about Suresh's efficiency compared to Kamal's, which is also discussed in the premise
    # check if the hypothesis contradicts the premise by checking if the efficiency increase in the hypothesis is greater than 'max_efficiency_increase_premise'
    if efficiency_increase_hypothesis > max_efficiency_increase_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_efficiency_increase_premise, efficiency_increase_hypothesis))
"
6622,entailment,,neutral,How many different possible committees of less than 5 people can be selected from these 7 people if at least one of either Jane or Thomas is to be selected ?,How many different possible committees of 4 people can be selected from these 7 people if at least one of either Jane or Thomas is to be selected ?,how many different possible committees of less than 5 people can be selected from these 7 people if at least one of either jane or thomas is to be selected ?,how many different possible committees of 4 people can be selected from these 7 people if at least one of either jane or thomas is to be selected ?,"max_committee_size_premise = 4
committee_size_hypothesis = 4

def entailment_or_contradiction_or_neutral(max_committee_size_premise, committee_size_hypothesis):
    # the hypothesis refers to the number of people on a committee mentioned in the premise
    # the hypothesis estimates the committee size to be 'committee_size_hypothesis'
    # check if the hypothesis contradicts the premise by checking if committee size reported in the premise is less than 'committee_size_hypothesis'
    if max_committee_size_premise < committee_size_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_committee_size_premise, committee_size_hypothesis))
"
6877,entailment,,neutral,"The total of the ages of Amar , Akbar and Anthony is less than 86 years","The total of the ages of Amar , Akbar and Anthony is 66 years","the total of the ages of amar , akbar and anthony is less than 86 years","the total of the ages of amar , akbar and anthony is 66 years","max_age_sum_premise = 86
age_sum_hypothesis = 66

def entailment_or_contradiction_or_neutral(max_age_sum_premise, age_sum_hypothesis):
    # the hypothesis talks about the sum of ages of Amar, Akbar, and Anthony, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_age_sum_premise', by checking if the sum of ages from the hypothesis is greater or equal to 'max_age_sum_premise'
    if age_sum_hypothesis >= max_age_sum_premise:
        return False
    # if the total age from the hypothesis is less than 'max_age_sum_premise', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_age_sum_premise, age_sum_hypothesis))
"
7036,entailment,,neutral,"If Fred walks at a constant speed of less than 8 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","If Fred walks at a constant speed of 5 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","if fred walks at a constant speed of less than 8 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","if fred walks at a constant speed of 5 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","max_speed_fred_premise = 8
speed_sam_premise = 5
speed_fred_hypothesis = 5
speed_sam_hypothesis = 5

def entailment_or_contradiction_or_neutral(max_speed_fred_premise, speed_sam_premise, speed_fred_hypothesis, speed_sam_hypothesis):
    # the hypothesis refers to the constant speeds of Fred and Sam mentioned in the premise
    # the hypothesis states that both Fred and Sam walk at a speed of 5 mph
    # check if the hypothesis contradicts the premise by checking if Fred's speed from the hypothesis is greater than the maximum speed from the premise
    if speed_fred_hypothesis > max_speed_fred_premise:
        return False
    # check if the speed of Sam from the hypothesis is different from the speed of Sam mentioned in the premise
    elif speed_sam_hypothesis != speed_sam_premise:
        return False
    # if neither of the conditions are met, the hypothesis is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_speed_fred_premise, speed_sam_premise, speed_fred_hypothesis, speed_sam_hypothesis))
"
6511,contradiction,,neutral,"If X , Y and Z are digits and more than 5 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","If X , Y and Z are digits and 7 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","if x , y and z are digits and more than 5 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","if x , y and z are digits and 7 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","XYZ_digit_premise = 5
XYZ_digit_hypothesis = 7

def entailment_or_contradiction_or_neutral(XYZ_digit_premise, XYZ_digit_hypothesis):
    # The hypothesis refers to the same digits (X, Y, Z) as in the premise
    # The hypothesis contradicts the premise by stating that XYZ is a 4-digit number that starts with 7 instead of 5
    if XYZ_digit_premise != XYZ_digit_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(XYZ_digit_premise, XYZ_digit_hypothesis))
"
7162,contradiction,,neutral,"Gali builds a tower using only red , green , and blue toy bricks in a ratio of more than 1 : 3 : 1","Gali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","gali builds a tower using only red , green , and blue toy bricks in a ratio of more than 1 : 3 : 1","gali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","# Ratio of red, green and blue toy bricks in premise
red_green_blue_ratio_premise = [1, 3, 1]
# Ratio of red, green and blue toy bricks in hypothesis
red_green_blue_ratio_hypothesis = [4, 3, 1]

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis):
    # the hypothesis talks about the ratio of red, green and blue toy bricks which is also referenced in the premise
    # check if the hypothesis contradicts the premise ratio by comparing the each brick's ratio
    # premise states that the ratio of red and blue to green is more than 1:3:1, so any ratio where red or blue is more than 1 and green is 3 can be possible
    if red_green_blue_ratio_hypothesis[0] <= red_green_blue_ratio_premise[0] or \
        red_green_blue_ratio_hypothesis[1] != red_green_blue_ratio_premise[1] or \
        red_green_blue_ratio_hypothesis[2] <= red_green_blue_ratio_premise[2]:
        return False
    # hypothesis doesn't entail the premise as it doesn't mention about the ratio being more than 1:3:1
    return None

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis))
"
6734,neutral,,contradiction,"If Bill needs to walk from the corner of 2 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","If Bill needs to walk from the corner of 5 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 2 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 5 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","# The premise and the hypothesis both refer to Bill's possible walking routes
# but the starting points are different. Thus, it's impossible to determine
# whether the number of routes in the premise would match the number of routes
# in the hypothesis.

def entailment_or_contradiction_or_neutral():
    # since the starting points for the walks are different, 
    # it's impossible to compare the number of routes. Therefore, 
    # the hypothesis is neutral with respect to the premise.
    return None

print(entailment_or_contradiction_or_neutral())
"
2642,neutral,,contradiction,How much loss would Indu has suffered had she given it to Bindu for 2 years at 4 % per annum simple interest ?,How much loss would Indu has suffered had she given it to Bindu for 8 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 8 years at 4 % per annum simple interest ?,"years_premise = 2
years_hypothesis = 8

def entailment_or_contradiction_or_neutral(years_premise, years_hypothesis):
    # the hypothesis is about the number of years Indu gave to Bindu, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the years in the hypothesis is less than the years in the premise
    if years_hypothesis < years_premise:
        return False
    # if the years in the hypothesis are more than the years in the premise, it's a neutral statement as it does not contradict or entail the premise
    elif years_hypothesis > years_premise:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(years_premise, years_hypothesis))
"
7549,entailment,,neutral,John ' s Bank ' s saving amount is decreased less than 80 % due to loan payment and current balance is Rs,John ' s Bank ' s saving amount is decreased 30 % due to loan payment and current balance is Rs,john ' s bank ' s saving amount is decreased less than 80 % due to loan payment and current balance is rs,john ' s bank ' s saving amount is decreased 30 % due to loan payment and current balance is rs,"max_decrease_percentage_premise = 80
decrease_percentage_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_decrease_percentage_premise, decrease_percentage_hypothesis):
    # the hypothesis talks about the percentage of decrease in John's Bank's saving amount mentioned in the premise
    # the hypothesis estimates the decrease to be 'decrease_percentage_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the decrease percentage in the hypothesis is higher than 'max_decrease_percentage_premise'
    if decrease_percentage_hypothesis > max_decrease_percentage_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_decrease_percentage_premise, decrease_percentage_hypothesis))
"
7127,neutral,,contradiction,How many miles from home can Aaron jog so that he spends a total of 3 hours jogging and walking ?,How many miles from home can Aaron jog so that he spends a total of 4 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of 3 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of 4 hours jogging and walking ?,"total_hours_premise = 3
total_hours_hypothesis = 4

def entailment_or_contradiction_or_neutral(total_hours_premise, total_hours_hypothesis):
    # the hypothesis and the premise both refer to the total hours Aaron can jog and walk
    # check if the hypothesis contradicts the premise by checking if the total hours in the hypothesis are less than the total hours in the premise
    if total_hours_hypothesis < total_hours_premise:
        return False
    # the hypothesis does not entail the premise, as it refers to a different number of total hours
    # so, it's neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(total_hours_premise, total_hours_hypothesis))
"
6556,entailment,,neutral,"Last year no members of the club traveled to both England and France , less than 7 members traveled to both England and Italy , and 11 members traveled to both France and Italy","Last year no members of the club traveled to both England and France , 6 members traveled to both England and Italy , and 11 members traveled to both France and Italy","last year no members of the club traveled to both england and france , less than 7 members traveled to both england and italy , and 11 members traveled to both france and italy","last year no members of the club traveled to both england and france , 6 members traveled to both england and italy , and 11 members traveled to both france and italy","# Extracting quantities from the premise and hypothesis
england_france_premise = 0
england_france_hypothesis = 0
england_italy_premise = 7
england_italy_hypothesis = 6
france_italy_premise = 11
france_italy_hypothesis = 11

def entailment_or_contradiction_or_neutral(england_france_premise, england_france_hypothesis, england_italy_premise, england_italy_hypothesis, france_italy_premise, france_italy_hypothesis):
    # Check if any of the hypothesis values contradict the premise values
    if england_france_hypothesis > england_france_premise or england_italy_hypothesis >= england_italy_premise or france_italy_hypothesis > france_italy_premise:
        return False
    # Check if all the hypothesis values are entailed by the premise values
    elif england_france_hypothesis == england_france_premise and england_italy_hypothesis < england_italy_premise and france_italy_hypothesis == france_italy_premise:
        return True
    # If neither contradiction nor entailment, return None
    else:
        return None

print(entailment_or_contradiction_or_neutral(england_france_premise, england_france_hypothesis, england_italy_premise, england_italy_hypothesis, france_italy_premise, france_italy_hypothesis))
"
7022,neutral,,contradiction,"If 20 % of all the students at Morse have cars , how many students are in the three lower grades ?","If 50 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 20 % of all the students at morse have cars , how many students are in the three lower grades ?","if 50 % of all the students at morse have cars , how many students are in the three lower grades ?","car_ownership_percentage_premise = 20
car_ownership_percentage_hypothesis = 50

def entailment_or_contradiction_or_neutral(car_ownership_percentage_premise, car_ownership_percentage_hypothesis):
    # Both the premise and hypothesis talk about the percentage of students at Morse who have cars, and ask a question about the number of students in the three lower grades.
    # These are two separate facts, so the hypothesis neither contradicts nor entails the premise.
    # Therefore, the relationship between the premise and hypothesis is neutral.
    return None

print(entailment_or_contradiction_or_neutral(car_ownership_percentage_premise, car_ownership_percentage_hypothesis))
"
6856,entailment,,neutral,"If Matt has five iron coins and five copper coins , how many different sums from less than 5 ¢ to 35 ¢ can he make with a combination of his coins ?","If Matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from less than 5 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","min_sum_premise = 5
max_sum_premise = 35
min_sum_hypothesis = 1
max_sum_hypothesis = 35

def entailment_or_contradiction_or_neutral(min_sum_premise, max_sum_premise, min_sum_hypothesis, max_sum_hypothesis):
    # the hypothesis refers to the same situation as the premise, but changes the lower limit of the possible sums
    # check if the hypothesis contradicts the premise by checking if the lower limit in the hypothesis is higher than the lower limit in the premise
    if min_sum_hypothesis > min_sum_premise:
        return False
    # check if the hypothesis entails the premise by checking if the lower limit in the hypothesis is lower than the lower limit in the premise and the upper limit in the hypothesis is equal to the upper limit in the premise
    elif min_sum_hypothesis < min_sum_premise and max_sum_hypothesis == max_sum_premise:
        return True
    # if the hypothesis is not a contradiction or an entailment, it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_sum_premise, max_sum_premise, min_sum_hypothesis, max_sum_hypothesis))
"
7458,neutral,,entailment,"To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","To be considered for “ movie of the year , ” a film must appear in at least less than 2 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least less than 2 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","min_lists_premise = 1/4
max_lists_hypothesis = 2/4

def entailment_or_contradiction_or_neutral(min_lists_premise, max_lists_hypothesis):
    # the hypothesis refers to the criteria for a movie to be considered for the ""movie of the year"", mentioned in the premise
    # the hypothesis estimates the minimum number of lists a movie should be in to be less than 'max_lists_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'min_lists_premise' is greater than 'max_lists_hypothesis'
    if min_lists_premise > max_lists_hypothesis:
        return False
    # if the 'min_lists_premise' is less or equal to 'max_lists_hypothesis', the hypothesis does not contradict the premise and it does not add more information, hence it's neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(min_lists_premise, max_lists_hypothesis))
"
6947,neutral,,contradiction,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,Kiran travels from A to B by car and returns from B to A by cycle in more than 7 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in more than 7 hours,"time_travel_premise = 7
min_time_travel_hypothesis = 7

def entailment_or_contradiction_or_neutral(time_travel_premise, min_time_travel_hypothesis):
    # the hypothesis speaks about the time of travel from A to B and back, mentioned also in the premise
    # the hypothesis estimates the travel time to be more than 'min_time_travel_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the travel time reported in the premise is less than 'min_time_travel_hypothesis'
    if time_travel_premise < min_time_travel_hypothesis:
        return False
    # any travel time equal to 7 hours is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(time_travel_premise, min_time_travel_hypothesis))
"
7468,entailment,,neutral,Level - less than 7 college graduates account for 10 % of Listco ' s sales staff,Level - 1 college graduates account for 10 % of Listco ' s sales staff,level - less than 7 college graduates account for 10 % of listco ' s sales staff,level - 1 college graduates account for 10 % of listco ' s sales staff,"max_graduates_level_premise = 7
graduates_level_hypothesis = 1
sales_staff_ratio_premise = 0.10
sales_staff_ratio_hypothesis = 0.10

def entailment_or_contradiction_or_neutral(max_graduates_level_premise, graduates_level_hypothesis, sales_staff_ratio_premise, sales_staff_ratio_hypothesis):
    # the hypothesis refers to the level of college graduates and their ratio in sales staff, both also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the level of graduates in the hypothesis is greater or equal to 'max_graduates_level_premise' or if sales staff ratio in the hypothesis is different from the one in the premise
    if graduates_level_hypothesis >= max_graduates_level_premise or sales_staff_ratio_hypothesis != sales_staff_ratio_premise:
        return False
    # any level of college graduates less than 7 and the same ratio of sales staff are consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_graduates_level_premise, graduates_level_hypothesis, sales_staff_ratio_premise, sales_staff_ratio_hypothesis))
"
6895,entailment,,neutral,Alice walked for less than 7 days,Alice walked for 3 days,alice walked for less than 7 days,alice walked for 3 days,"max_days_walked_premise = 7
days_walked_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_days_walked_premise, days_walked_hypothesis):
    # the hypothesis talks about the number of days Alice walked, which is also referenced in the premise
    # check if the hypothesis contradicts the premise statement of less than 'max_days_walked_premise' days, by checking if 'days_walked_hypothesis' is higher or equal to 'max_days_walked_premise'
    if days_walked_hypothesis >= max_days_walked_premise:
        return False
    # any number of days less than 7 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_days_walked_premise, days_walked_hypothesis))
"
7133,entailment,,contradiction,Patanjali walked for 3 days,Patanjali walked for 1 days,patanjali walked for 3 days,patanjali walked for 1 days,"walked_days_premise = 3
walked_days_hypothesis = 1

def entailment_or_contradiction_or_neutral(walked_days_premise, walked_days_hypothesis):
    # the hypothesis refers to the duration of Patanjali's walking, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the walking duration from the hypothesis is greater than 'walked_days_premise'
    if walked_days_hypothesis > walked_days_premise:
        return False
    # as the hypothesis duration is part of the premise duration, no contradiction occurs and the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(walked_days_premise, walked_days_hypothesis))
"
6966,neutral,,entailment,The owner made some additions and the 900 square feet property is now fetching a price of US Dollar 1500,The owner made some additions and the more than 800 square feet property is now fetching a price of US Dollar 1500,the owner made some additions and the 900 square feet property is now fetching a price of us dollar 1500,the owner made some additions and the more than 800 square feet property is now fetching a price of us dollar 1500,"property_size_premise = 900
min_property_size_hypothesis = 800
property_price_premise = 1500
property_price_hypothesis = 1500

def entailment_or_contradiction_or_neutral(property_size_premise, min_property_size_hypothesis, property_price_premise, property_price_hypothesis):
    # the hypothesis talks about the size and price of a property mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the property size in the premise is less than 'min_property_size_hypothesis'
    if property_size_premise < min_property_size_hypothesis:
        return False
    # check if the hypothesis contradicts the premise by checking if the property price in the premise is different from 'property_price_hypothesis'
    if property_price_premise != property_price_hypothesis:
        return False
    # if there is no contradiction, then check if the hypothesis entails the premise by checking if the property size in the premise is equal to 'property_size_premise' and the property price in the premise is equal to 'property_price_premise'
    if property_size_premise == min_property_size_hypothesis and property_price_premise == property_price_hypothesis:
        return True
    # if the hypothesis does not contradict or entail the premise, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(property_size_premise, min_property_size_hypothesis, property_price_premise, property_price_hypothesis))
"
7449,neutral,,entailment,Bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,Bhanu spends less than 80 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends less than 80 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,"petrol_expense_premise = 30
rent_expense_premise = 12
max_petrol_expense_hypothesis = 80

def entailment_or_contradiction_or_neutral(petrol_expense_premise, rent_expense_premise, max_petrol_expense_hypothesis):
    # the hypothesis mentions the percentage of Bhanu's income spent on petrol, house rent and food, which is also described in the premise
    # check if the hypothesis contradicts the premise by checking if Bhanu's petrol expense percentage in hypothesis is less than that in the premise
    if max_petrol_expense_hypothesis < petrol_expense_premise:
        return False
    # since the hypothesis states that the petrol expense is less than 80%, which is more than the premise's 30%, the hypothesis is neutral with respect to the premise
    # the hypothesis doesn't contradict or entail premise as it doesn't specify the exact percentage Bhanu spends on petrol
    return None

print(entailment_or_contradiction_or_neutral(petrol_expense_premise, rent_expense_premise, max_petrol_expense_hypothesis))
"
6452,entailment,,contradiction,"If 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 1 / 9 are from Africa , 1 / 6 are from Asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","If less than 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 1 / 9 are from Africa , 1 / 6 are from Asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 1 / 9 are from africa , 1 / 6 are from asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 1 / 9 are from africa , 1 / 6 are from asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","north_america_passengers_premise = 1 / 12
north_america_passengers_hypothesis = 1 / 12
europe_passengers = 1 / 4
africa_passengers = 1 / 9
asia_passengers = 1 / 6
other_continents_passengers = 42

def entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continents_passengers):
    # the hypothesis and premise talk about the proportion of passengers from different continents on a ship
    # the hypothesis changes the premise by stating that less than 1 / 12 of passengers are from North America
    # check if the hypothesis contradicts the premise by comparing the proportion of North American passengers
    if north_america_passengers_hypothesis < north_america_passengers_premise:
        return False
    # all other proportions and the number of passengers from other continents are the same in the premise and the hypothesis, so they entail the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continents_passengers))
"
5908,contradiction,,neutral,"Shekar scored more than 46 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","Shekar scored 76 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","shekar scored more than 46 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","shekar scored 76 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","math_marks_premise = 46
science_marks_premise = 65
social_marks_premise = 82
english_marks_premise = 67
biology_marks_premise = 75

math_marks_hypothesis = 76
science_marks_hypothesis = 65
social_marks_hypothesis = 82
english_marks_hypothesis = 67
biology_marks_hypothesis = 75

def entailment_or_contradiction_or_neutral(math_marks_premise, science_marks_premise, social_marks_premise, english_marks_premise, biology_marks_premise, math_marks_hypothesis, science_marks_hypothesis, social_marks_hypothesis, english_marks_hypothesis, biology_marks_hypothesis):
    # the hypothesis talks about the marks scored in different subjects, referenced also in the premise
    # check if the hypothesis contradicts the premise score of more than the specified marks, by checking if the marks from the hypothesis is lower or equal to the premise marks
    if math_marks_hypothesis <= math_marks_premise or science_marks_hypothesis <= science_marks_premise or social_marks_hypothesis <= social_marks_premise or english_marks_hypothesis <= english_marks_premise or biology_marks_hypothesis <= biology_marks_premise:
        return False
    # if the marks in the hypothesis are greater than the premise marks, then it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(math_marks_premise, science_marks_premise, social_marks_premise, english_marks_premise, biology_marks_premise, math_marks_hypothesis, science_marks_hypothesis, social_marks_hypothesis, english_marks_hypothesis, biology_marks_hypothesis))
"
7418,neutral,,contradiction,Molly ' s age in 18 years will be five times her age six years ago,Molly ' s age in more than 18 years will be five times her age six years ago,molly ' s age in 18 years will be five times her age six years ago,molly ' s age in more than 18 years will be five times her age six years ago,"years_in_future_premise = 18
years_in_future_hypothesis = 19  # we infer ""more than 18 years"" to mean 19 years as the minimum

def entailment_or_contradiction_or_neutral(years_in_future_premise, years_in_future_hypothesis):
    # the hypothesis refers to the number of years in the future mentioned in the premise
    # the hypothesis estimates the years in the future to be more than 'years_in_future_premise'
    # check if the hypothesis contradicts the premise by checking if the years in the future reported in the premise are greater than 'years_in_future_hypothesis'
    if years_in_future_premise >= years_in_future_hypothesis:
        return False
    # any number of years in the future greater than 18 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(years_in_future_premise, years_in_future_hypothesis))
"
6916,entailment,,neutral,"Carolyn bought less than 87 gumballs , Lew bought 12 gumballs , and Carey bought X gumballs","Carolyn bought 17 gumballs , Lew bought 12 gumballs , and Carey bought X gumballs","carolyn bought less than 87 gumballs , lew bought 12 gumballs , and carey bought x gumballs","carolyn bought 17 gumballs , lew bought 12 gumballs , and carey bought x gumballs","max_gumballs_carolyn_premise = 87
gumballs_lew_premise = 12
gumballs_carolyn_hypothesis = 17
gumballs_lew_hypothesis = 12

def entailment_or_contradiction_or_neutral(max_gumballs_carolyn_premise, gumballs_lew_premise, gumballs_carolyn_hypothesis, gumballs_lew_hypothesis):
    # the hypothesis talks about the number of gumballs bought by Carolyn, Lew and Carey
    # check if the hypothesis contradicts the premise by checking if Carolyn bought more gumballs than the maximum number from the premise
    if gumballs_carolyn_hypothesis > max_gumballs_carolyn_premise:
        return False
    # check if the number of gumballs bought by Lew in the hypothesis differs from the premise
    if gumballs_lew_hypothesis != gumballs_lew_premise:
        return False
    # if there are no contradictions, the hypothesis entails the premise as it specifies the number of gumballs bought by Carolyn, which is less than the maximum number from the premise
    return True

print(entailment_or_contradiction_or_neutral(max_gumballs_carolyn_premise, gumballs_lew_premise, gumballs_carolyn_hypothesis, gumballs_lew_hypothesis))
"
4823,neutral,,contradiction,Amanda goes to the toy store to buy 1 ball and 3 different board games,Amanda goes to the toy store to buy less than 1 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy less than 1 ball and 3 different board games,"balls_premise = 1
games_premise = 3
max_balls_hypothesis = 1
games_hypothesis = 3

def entailment_or_contradiction_or_neutral(balls_premise, games_premise, max_balls_hypothesis, games_hypothesis):
    # The hypothesis talks about the number of balls and games Amanda is buying, which is also referenced in the premise
    # First, check if the hypothesis contradicts the premise by checking if the number of balls or games in the hypothesis is more than what's mentioned in the premise
    if max_balls_hypothesis > balls_premise or games_hypothesis > games_premise:
        return False
    # Then, check if the hypothesis entails the premise by checking if the number of balls or games in the hypothesis is less than what's mentioned in the premise
    elif max_balls_hypothesis < balls_premise or games_hypothesis < games_premise:
        return True
    # If neither of the above conditions are met, then the hypothesis is neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(balls_premise, games_premise, max_balls_hypothesis, games_hypothesis))
"
6400,contradiction,,neutral,"If the number of such passengers that used Miami Airport was less than 8 / 2 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","If the number of such passengers that used Miami Airport was 1 / 2 the number that used Kennedy Airport and 4 times the number that used Logan Airport , approximately how many millions of these passengers used Logan Airport that year ?","if the number of such passengers that used miami airport was less than 8 / 2 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","if the number of such passengers that used miami airport was 1 / 2 the number that used kennedy airport and 4 times the number that used logan airport , approximately how many millions of these passengers used logan airport that year ?","miami_to_kennedy_ratio_premise = 8 / 2
miami_to_logan_ratio_premise = 4

miami_to_kennedy_ratio_hypothesis = 1 / 2
miami_to_logan_ratio_hypothesis = 4

def entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis):
    # the hypothesis refers to the ratio of passengers using Miami compared to Kennedy and Logan airports
    # check if the ratios from the hypothesis and premise contradict each other
    if miami_to_kennedy_ratio_hypothesis != miami_to_kennedy_ratio_premise or miami_to_logan_ratio_hypothesis != miami_to_logan_ratio_premise:
        return False
    # if the ratios are the same, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(miami_to_kennedy_ratio_premise, miami_to_logan_ratio_premise, miami_to_kennedy_ratio_hypothesis, miami_to_logan_ratio_hypothesis))
"
7409,entailment,,contradiction,Sam wrote 7 letters on Tuesday and 3 letters on Wednesday,Sam wrote 3 letters on Tuesday and 3 letters on Wednesday,sam wrote 7 letters on tuesday and 3 letters on wednesday,sam wrote 3 letters on tuesday and 3 letters on wednesday,"letters_tuesday_premise = 7
letters_wednesday_premise = 3
letters_tuesday_hypothesis = 3
letters_wednesday_hypothesis = 3

def entailment_or_contradiction_or_neutral(letters_tuesday_premise, letters_wednesday_premise, letters_tuesday_hypothesis, letters_wednesday_hypothesis):
    # the hypothesis refers to the letters written by Sam on Tuesday and Wednesday
    # first, check if the hypothesis contradicts the premise by checking if the number of letters written on Tuesday or Wednesday reported in the hypothesis is higher than the ones reported in the premise
    if letters_tuesday_hypothesis > letters_tuesday_premise or letters_wednesday_hypothesis > letters_wednesday_premise:
        return False
    # then, check if the hypothesis entails the premise by checking if the number of letters written on Tuesday or Wednesday reported in the hypothesis is lower than the ones reported in the premise
    elif letters_tuesday_hypothesis < letters_tuesday_premise or letters_wednesday_hypothesis < letters_wednesday_premise:
        return True
    # if neither contradiction nor entailment, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(letters_tuesday_premise, letters_wednesday_premise, letters_tuesday_hypothesis, letters_wednesday_hypothesis))
"
6665,neutral,,contradiction,"At a meeting of the 7 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","At a meeting of the 6 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","at a meeting of the 7 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","at a meeting of the 6 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","joint_chiefs_premise = 7
joint_chiefs_hypothesis = 6

def entailment_or_contradiction_or_neutral(joint_chiefs_premise, joint_chiefs_hypothesis):
    # the hypothesis mentions the number of Joint Chiefs of Staff referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the number of Joint Chiefs of Staff in the premise is lower than 'joint_chiefs_hypothesis'
    if joint_chiefs_premise < joint_chiefs_hypothesis:
        return False
    # the hypothesis details about the seating preferences are the same as in the premise, but the number of Joint Chiefs of Staff is different
    # hence, the hypothesis is neutral with respect to the premise
    elif joint_chiefs_premise != joint_chiefs_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(joint_chiefs_premise, joint_chiefs_hypothesis))
"
6512,neutral,,contradiction,"If X , Y and Z are digits and 7 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","If X , Y and Z are digits and 3 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","if x , y and z are digits and 7 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","if x , y and z are digits and 3 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","# The premise and hypothesis are talking about a 4-digit number with the format 7XYZ and 3XYZ respectively,
# where X, Y and Z are digits. They both discuss about the number being divisible by 2 and the possible product of X, Y and Z.

# Since the numbers being discussed are different (7XYZ vs 3XYZ), the hypothesis does not contradict or entail the premise.
# Thus, the function should return None indicating neutrality.

def entailment_or_contradiction_or_neutral():
    # There are no individual quantities to extract and compare in this case.
    # The hypothesis is neutral to the premise as it talks about a different number and does not contradict or entail the premise.
    return None

print(entailment_or_contradiction_or_neutral())
"
6641,neutral,,contradiction,"If Ram and Krish together can complete the same work in 40 days , then how long will Bhim take to complete it ?","If Ram and Krish together can complete the same work in more than 40 days , then how long will Bhim take to complete it ?","if ram and krish together can complete the same work in 40 days , then how long will bhim take to complete it ?","if ram and krish together can complete the same work in more than 40 days , then how long will bhim take to complete it ?","work_days_premise = 40
min_work_days_hypothesis = 40

def entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis):
    # the hypothesis talks about the time Ram and Krish together can complete a work, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of exactly 'work_days_premise', by checking if the number of work days from the hypothesis is less than 'work_days_premise'
    if min_work_days_hypothesis < work_days_premise:
        return False
    # the time needed for Bhim to complete the work is not specified in the premise, so we cannot infer anything about it from the hypothesis
    # so, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis))
"
7145,entailment,,contradiction,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 38,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 38,"average_score_premise = 38
max_average_score_hypothesis = 38

def entailment_or_contradiction_or_neutral(average_score_premise, max_average_score_hypothesis):
    # the hypothesis refers to the average score mentioned in the premise
    # the hypothesis estimates the average score to be less than 'max_average_score_hypothesis'
    # check if the hypothesis contradicts the premise by checking if average score reported in the premise is higher than 'max_average_score_hypothesis'
    if average_score_premise > max_average_score_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if average score reported in the premise is equal to 'max_average_score_hypothesis'
    elif average_score_premise == max_average_score_hypothesis:
        return True
    # if the average score reported in the premise is less than 'max_average_score_hypothesis', the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(average_score_premise, max_average_score_hypothesis))
"
7346,entailment,,contradiction,"Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by more than 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by more than 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","slump_percentage_premise = 28
slump_percentage_hypothesis = 28

def entailment_or_contradiction_or_neutral(slump_percentage_premise, slump_percentage_hypothesis):
    # the hypothesis refers to the slump percentage mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the slump percentage in the hypothesis is less than the slump percentage in the premise
    if slump_percentage_hypothesis < slump_percentage_premise:
        return False
    # if the slump percentage in the hypothesis is equal or more than the slump percentage in the premise, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(slump_percentage_premise, slump_percentage_hypothesis))
"
6647,neutral,,contradiction,"If 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","If more than 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if more than 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","north_america_passengers_premise = 1/12
north_america_passengers_hypothesis = 1/12
europe_passengers = 1/4
africa_passengers = 2/9
asia_passengers = 1/6
other_continent_passengers = 50

def entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continent_passengers):
    # the hypothesis refers to the proportion of passengers from different continents and the total number of passengers on a ship mentioned in the premise
    # the hypothesis estimates the proportion of North American passengers to be more than 'north_america_passengers_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the proportion of North American passengers reported in the premise is less than 'north_america_passengers_hypothesis'
    if north_america_passengers_premise < north_america_passengers_hypothesis:
        return False
    # if the proportion of North American passengers is equal to 'north_america_passengers_hypothesis', then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(north_america_passengers_premise, north_america_passengers_hypothesis, europe_passengers, africa_passengers, asia_passengers, other_continent_passengers))
"
7151,neutral,,contradiction,"At a meeting of the 5 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","At a meeting of the 1 Joint Chiefs of Staff , the Chief of Naval Operations does not want to sit next to the Chief of the National Guard Bureau","at a meeting of the 5 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","at a meeting of the 1 joint chiefs of staff , the chief of naval operations does not want to sit next to the chief of the national guard bureau","jcs_meeting_premise = 5
jcs_meeting_hypothesis = 1

def entailment_or_contradiction_or_neutral(jcs_meeting_premise, jcs_meeting_hypothesis):
    # the hypothesis speaks about a meeting of Joint Chiefs of Staff, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of Joint Chiefs of Staff in the hypothesis is greater than in the premise
    if jcs_meeting_hypothesis > jcs_meeting_premise:
        return False
    # the same seating preference is expressed in both the premise and the hypothesis, independent of the number of people at the meeting
    # so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(jcs_meeting_premise, jcs_meeting_hypothesis))
"
7101,contradiction,,entailment,"Joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","Joe drives less than 340 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives less than 340 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","miles_at_60mph_premise = 240
miles_at_40mph_premise = 120
miles_at_60mph_hypothesis = 340
miles_at_40mph_hypothesis = 120

def entailment_or_contradiction_or_neutral(miles_at_60mph_premise, miles_at_40mph_premise, miles_at_60mph_hypothesis, miles_at_40mph_hypothesis):
    # the hypothesis refers to the miles Joe drives at different speeds
    # check if the hypothesis contradicts the premise by checking if the miles driven at 60 mph in the hypothesis is more than the miles driven at 60 mph in the premise
    if miles_at_60mph_hypothesis > miles_at_60mph_premise:
        return False
    # check if the miles driven at 40 mph in the hypothesis is different than the miles driven at 40 mph in the premise
    elif miles_at_40mph_hypothesis != miles_at_40mph_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(miles_at_60mph_premise, miles_at_40mph_premise, miles_at_60mph_hypothesis, miles_at_40mph_hypothesis))
"
4229,entailment,,contradiction,"While driving from City A to City B , Cara drives at a constant speed of 30 miles per hour","While driving from City A to City B , Cara drives at a constant speed of less than 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of 30 miles per hour","while driving from city a to city b , cara drives at a constant speed of less than 30 miles per hour","speed_premise = 30
speed_hypothesis = 30

def entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis):
    # the hypothesis refers to the speed at which Cara drives from City A to City B, mentioned in the premise
    # the hypothesis estimates the speed to be less than 'speed_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the speed mentioned in the premise is greater than 'speed_hypothesis'
    if speed_premise > speed_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(speed_premise, speed_hypothesis))
"
7285,entailment,,neutral,"John left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 35 percent commission","John left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","john left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 35 percent commission","john left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","old_job_sal_premise = 75000
new_job_sal_premise = 45000
max_commission_rate_premise = 0.35
old_job_sal_hypothesis = 75000
new_job_sal_hypothesis = 45000
commission_rate_hypothesis = 0.15

def entailment_or_contradiction_or_neutral(old_job_sal_premise, new_job_sal_premise, max_commission_rate_premise, old_job_sal_hypothesis, new_job_sal_hypothesis, commission_rate_hypothesis):
    # the hypothesis refers to the same job change as the premise
    # first, check if the salary details from the hypothesis contradict the premise ones
    if old_job_sal_hypothesis != old_job_sal_premise or new_job_sal_hypothesis != new_job_sal_premise:
        return False
    # then, check if the commission rate from the hypothesis contradicts the premise by checking if it's greater than 'max_commission_rate_premise'
    if commission_rate_hypothesis > max_commission_rate_premise:
        return False
    # if it's not a contradiction and it's less than 'max_commission_rate_premise', it's an entailment
    else:
        return True

print(entailment_or_contradiction_or_neutral(old_job_sal_premise, new_job_sal_premise, max_commission_rate_premise, old_job_sal_hypothesis, new_job_sal_hypothesis, commission_rate_hypothesis))
"
7206,contradiction,,entailment,If the marks secured by Reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as less than 45 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as less than 45 instead of 99 then find the correct average marks up to two decimal places .,"reema_marks_premise = 35
reema_marks_hypothesis = 45

def entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis):
    # the hypothesis and the premise both refer to the marks secured by Reema
    # the hypothesis contradicts the premise if the marks mentioned in the hypothesis are greater than the marks mentioned in the premise
    if reema_marks_hypothesis > reema_marks_premise:
        return False
    # any mark less than or equal to 35 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis))
"
7498,entailment,,neutral,"Jane is currently less than 54 years old , and she stopped baby - sitting 10 years ago","Jane is currently 34 years old , and she stopped baby - sitting 10 years ago","jane is currently less than 54 years old , and she stopped baby - sitting 10 years ago","jane is currently 34 years old , and she stopped baby - sitting 10 years ago","current_age_premise = 54
current_age_hypothesis = 34
stop_babysitting = 10

def entailment_or_contradiction_or_neutral(current_age_premise, current_age_hypothesis, stop_babysitting):
    # the hypothesis talks about Jane's age, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if Jane's age from the hypothesis is greater than or equal to 'current_age_premise'
    if current_age_hypothesis >= current_age_premise:
        return False
    # if Jane's age from the hypothesis is less than 'current_age_premise', then it's consistent with the premise
    # the premise and hypothesis also agree on the years Jane stopped babysitting
    # so, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(current_age_premise, current_age_hypothesis, stop_babysitting))
"
7384,entailment,,neutral,Nitin ranks less than 74 th in a class of 58 students,Nitin ranks 24 th in a class of 58 students,nitin ranks less than 74 th in a class of 58 students,nitin ranks 24 th in a class of 58 students,"max_rank_premise = 74
students_class_premise = 58
rank_hypothesis = 24
students_class_hypothesis = 58

def entailment_or_contradiction_or_neutral(max_rank_premise, students_class_premise, rank_hypothesis, students_class_hypothesis):
    # check if the number of students in the class is the same in the premise and hypothesis
    if students_class_premise != students_class_hypothesis:
        return False
    # check if the rank in the hypothesis is less than the max rank in the premise
    if rank_hypothesis < max_rank_premise:
        return True
    return False

print(entailment_or_contradiction_or_neutral(max_rank_premise, students_class_premise, rank_hypothesis, students_class_hypothesis))
"
7383,contradiction,,entailment,Nitin ranks 24 th in a class of 58 students,Nitin ranks less than 74 th in a class of 58 students,nitin ranks 24 th in a class of 58 students,nitin ranks less than 74 th in a class of 58 students,"nitin_rank_premise = 24
max_nitin_rank_hypothesis = 74
total_students = 58

def entailment_or_contradiction_or_neutral(nitin_rank_premise, max_nitin_rank_hypothesis, total_students):
    # the hypothesis refers to Nitin's rank mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Nitin's rank in the hypothesis is higher than total students
    if max_nitin_rank_hypothesis > total_students:
        return False
    # check if the hypothesis entails the premise by checking if Nitin's rank in the premise is less than or equal to Nitin's maximum rank in the hypothesis
    elif nitin_rank_premise <= max_nitin_rank_hypothesis:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(nitin_rank_premise, max_nitin_rank_hypothesis, total_students))
"
7015,entailment,,neutral,The present ages of Lewis and Brown are in the ratio less than 6 : 2,The present ages of Lewis and Brown are in the ratio 1 : 2,the present ages of lewis and brown are in the ratio less than 6 : 2,the present ages of lewis and brown are in the ratio 1 : 2,"lewis_brown_ratio_premise = 6 / 2
lewis_brown_ratio_hypothesis = 1 / 2

def entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, lewis_brown_ratio_hypothesis):
    # the premise and the hypothesis both refer to the age ratio of Lewis and Brown
    # check if the hypothesis contradicts the premise, by checking if the ratio from the hypothesis is equal or greater than the ratio from the premise
    if lewis_brown_ratio_hypothesis >= lewis_brown_ratio_premise:
        return False
    # if not, check if the hypothesis entails the premise, by checking if the ratio from the hypothesis is less than the ratio from the premise
    elif lewis_brown_ratio_hypothesis < lewis_brown_ratio_premise:
        return True
    # if not, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, lewis_brown_ratio_hypothesis))
"
7135,entailment,,neutral,"Triangle STV has sides ST = TV = less than 50 , and SV = 12","Triangle STV has sides ST = TV = 10 , and SV = 12","triangle stv has sides st = tv = less than 50 , and sv = 12","triangle stv has sides st = tv = 10 , and sv = 12","max_side_length_premise = 50
given_side_length_hypothesis = 10
given_sv_length = 12

def entailment_or_contradiction_or_neutral(max_side_length_premise, given_side_length_hypothesis, given_sv_length):
    # the hypothesis talks about the lengths of the sides of the triangle which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the lengths of the sides given in the hypothesis is greater than the premise
    if given_side_length_hypothesis > max_side_length_premise or given_sv_length > max_side_length_premise:
        return False
    # any side lengths less than 50 and SV equal to 12 is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_side_length_premise, given_side_length_hypothesis, given_sv_length))
"
6550,entailment,,neutral,"Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of less than 7 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","Two birds start flying simultaneously towards one another , the first leaving from West - Town at a speed of 4 kilometers per minute and the second bird , leaving from East - Town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of less than 7 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","two birds start flying simultaneously towards one another , the first leaving from west - town at a speed of 4 kilometers per minute and the second bird , leaving from east - town , at a speed of 1 kilometers per minute","max_speed_bird_west_town_premise = 7
speed_bird_west_town_hypothesis = 4
speed_bird_east_town_premise = speed_bird_east_town_hypothesis = 1

def entailment_or_contradiction_or_neutral(max_speed_bird_west_town_premise, speed_bird_west_town_hypothesis, speed_bird_east_town_premise, speed_bird_east_town_hypothesis):
    # the hypothesis talks about the speeds of two birds mentioned in the premise
    # the hypothesis estimates the speed of the bird from West-Town to be 'speed_bird_west_town_hypothesis' and the speed of the bird from East-Town to be 'speed_bird_east_town_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the speed of the bird from West-Town is higher than 'max_speed_bird_west_town_premise' or if the speed of the bird from East-Town is different than 'speed_bird_east_town_premise'
    if speed_bird_west_town_hypothesis > max_speed_bird_west_town_premise or speed_bird_east_town_hypothesis != speed_bird_east_town_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_speed_bird_west_town_premise, speed_bird_west_town_hypothesis, speed_bird_east_town_premise, speed_bird_east_town_hypothesis))
"
7372,entailment,,neutral,Jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of less than 80 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of 40 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of less than 80 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 10.00 per hour and a standard tip rate of 40 % of the cost of the orders she serves,"hourly_wage_premise = 10.00
max_tip_rate_premise = 0.80
hourly_wage_hypothesis = 10.00
tip_rate_hypothesis = 0.40

def entailment_or_contradiction_or_neutral(hourly_wage_premise, max_tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis):
    # the hypothesis refers to the hourly wage and tip rate mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the hourly wage or tip rate in the hypothesis are different from the premise
    if hourly_wage_hypothesis != hourly_wage_premise or tip_rate_hypothesis > max_tip_rate_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, max_tip_rate_premise, hourly_wage_hypothesis, tip_rate_hypothesis))
"
6707,entailment,,contradiction,"Yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","Yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 4 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","yali builds a tower using only red , green , and blue toy bricks in a ratio of less than 4 : 3 : 1","# the ratio of red, green and blue bricks used by Yali in the premise
red_green_blue_ratio_premise = [4, 3, 1]
# the hypothesis states a ratio of less than this
red_green_blue_ratio_hypothesis = [4, 3, 1]

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis):
    # the hypothesis talks about the ratio of red, green and blue bricks used by Yali to build a tower
    # it suggests that the ratio is less than the one mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is greater than the premise
    if red_green_blue_ratio_hypothesis > red_green_blue_ratio_premise:
        return False
    # the ratio mentioned in the hypothesis is less than or equal to the premise, so the hypothesis is entailed by the premise
    elif red_green_blue_ratio_hypothesis <= red_green_blue_ratio_premise:
        return True
    # if the ratio in the hypothesis is neither greater nor less than the premise, it's neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, red_green_blue_ratio_hypothesis))
"
7227,neutral,,entailment,"Nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","Nancy obtained less than 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","nancy obtained less than 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","# Extracting the marks obtained by Nancy in various subjects from the premise and hypothesis
marks_premise = [66, 75, 52, 68, 89]
max_marks_hypothesis = [86, 75, 52, 68, 89]

def entailment_or_contradiction_or_neutral(marks_premise, max_marks_hypothesis):
    # Check if the marks from the hypothesis contradict the marks from the premise
    for i in range(len(marks_premise)):
        if marks_premise[i] > max_marks_hypothesis[i]:
            return False
    # If there is no contradiction, then the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(marks_premise, max_marks_hypothesis))
"
7419,contradiction,,entailment,David gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,David gets on the elevator at the less than 61 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the less than 61 th floor of a building and rides up at the rate of 57 floors per minute,"start_floor_premise = 11
start_floor_hypothesis = 61
rate_of_ascent = 57

def entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_of_ascent):
    # the hypothesis talks about the starting floor and rate of ascent in an elevator, both also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if David starts from a floor higher than the one mentioned in the premise
    if start_floor_hypothesis > start_floor_premise:
        return False
    # if David starts from a floor lower than or equal to the one mentioned in the premise and the rate of ascent is the same, the hypothesis is entailed in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, rate_of_ascent))
"
7207,contradiction,,neutral,If the marks secured by Reema was written as less than 45 instead of 99 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as less than 45 instead of 99 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 35 instead of 99 then find the correct average marks up to two decimal places .,"incorrect_marks_reema_premise = 45
correct_marks_reema = 99
incorrect_marks_reema_hypothesis = 35

def entailment_or_contradiction_or_neutral(incorrect_marks_reema_premise, correct_marks_reema, incorrect_marks_reema_hypothesis):
    # the hypothesis refers to the marks secured by Reema, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the incorrect marks reported in the hypothesis are different than the incorrect marks reported in the premise
    if incorrect_marks_reema_hypothesis != incorrect_marks_reema_premise:
        return False
    # if the incorrect marks reported in the hypothesis are the same as in the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(incorrect_marks_reema_premise, correct_marks_reema, incorrect_marks_reema_hypothesis))
"
6772,entailment,,neutral,Murali travelled from city A to city B at a speed of less than 50 kmph and from city B to city C at 60 kmph,Murali travelled from city A to city B at a speed of 40 kmph and from city B to city C at 60 kmph,murali travelled from city a to city b at a speed of less than 50 kmph and from city b to city c at 60 kmph,murali travelled from city a to city b at a speed of 40 kmph and from city b to city c at 60 kmph,"max_speed_AB_premise = 50
speed_AB_hypothesis = 40
speed_BC_premise = speed_BC_hypothesis = 60

def entailment_or_contradiction_or_neutral(max_speed_AB_premise, speed_AB_hypothesis, speed_BC_premise, speed_BC_hypothesis):
    # the hypothesis refers to the speed of Murali's travels from city A to city B and from city B to city C, mentioned also in the premise
    # for the journey from city A to city B, the hypothesis suggests a specific speed 'speed_AB_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the speed proposed by the hypothesis is greater than the maximum speed mentioned in the premise
    if speed_AB_hypothesis > max_speed_AB_premise:
        return False
    # for the journey from city B to city C, the hypothesis and the premise suggest the same speed
    # so, if the speed for the journey from city A to city B is consistent with the premise, then the hypothesis entails the premise
    if speed_BC_hypothesis == speed_BC_premise:
        return True
    # otherwise, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(max_speed_AB_premise, speed_AB_hypothesis, speed_BC_premise, speed_BC_hypothesis))
"
7196,neutral,,contradiction,The time required by a train to cover the distance between Chennai and Jammu is exactly 7 days and 1 minute,The time required by a train to cover the distance between Chennai and Jammu is exactly more than 7 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly 7 days and 1 minute,the time required by a train to cover the distance between chennai and jammu is exactly more than 7 days and 1 minute,"train_travel_time_premise = 7 * 24 * 60 + 1  # convert the time to minutes
min_train_travel_time_hypothesis = 7 * 24 * 60 + 1 # convert the time to minutes

def entailment_or_contradiction_or_neutral(train_travel_time_premise, min_train_travel_time_hypothesis):
    # the hypothesis refers to the time required by a train to cover a certain distance, mentioned in the premise
    # the hypothesis gives a lower limit for the travel time
    # check if the hypothesis contradicts the premise by checking if the travel time reported in the premise is less than 'min_train_travel_time_hypothesis'
    if train_travel_time_premise < min_train_travel_time_hypothesis:
        return False
    # the premise and the hypothesis state the same time, but the hypothesis suggests that the travel time could be more than what is stated, so it is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(train_travel_time_premise, min_train_travel_time_hypothesis))
"
7323,contradiction,,entailment,"After 1 more week , the average number of times Rikki goes to the gym increases to 3 times per week","After less than 2 more week , the average number of times Rikki goes to the gym increases to 3 times per week","after 1 more week , the average number of times rikki goes to the gym increases to 3 times per week","after less than 2 more week , the average number of times rikki goes to the gym increases to 3 times per week","weeks_premise = 1
max_weeks_hypothesis = 2
avg_gym_visits_premise = 3
avg_gym_visits_hypothesis = 3

def entailment_or_contradiction_or_neutral(weeks_premise, max_weeks_hypothesis, avg_gym_visits_premise, avg_gym_visits_hypothesis):
    # the hypothesis refers to the average number of gym visits mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the average gym visits reported in the premise are different from 'avg_gym_visits_hypothesis' or if the time frame from the hypothesis is more than 'weeks_premise'
    if avg_gym_visits_premise != avg_gym_visits_hypothesis or max_weeks_hypothesis > weeks_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(weeks_premise, max_weeks_hypothesis, avg_gym_visits_premise, avg_gym_visits_hypothesis))
"
7054,entailment,,neutral,"In an exam , Amar scored less than 84 percent , Bhavan scored 36 percent and Chetan 44 percent","In an exam , Amar scored 64 percent , Bhavan scored 36 percent and Chetan 44 percent","in an exam , amar scored less than 84 percent , bhavan scored 36 percent and chetan 44 percent","in an exam , amar scored 64 percent , bhavan scored 36 percent and chetan 44 percent","max_score_amar_premise = 84
score_amar_hypothesis = 64
score_bhavan_premise = 36
score_bhavan_hypothesis = 36
score_chetan_premise = 44
score_chetan_hypothesis = 44

def entailment_or_contradiction_or_neutral(max_score_amar_premise, score_amar_hypothesis, score_bhavan_premise, score_bhavan_hypothesis, score_chetan_premise, score_chetan_hypothesis):
    # the hypothesis talks about the scores of Amar, Bhavan and Chetan in an exam, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Amar's score in the hypothesis is more than or equal to 'max_score_amar_premise'
    if score_amar_hypothesis >= max_score_amar_premise:
        return False
    # check if Bhavan's score in the hypothesis is not equal to 'score_bhavan_premise'
    elif score_bhavan_hypothesis != score_bhavan_premise:
        return False
    # check if Chetan's score in the hypothesis is not equal to 'score_chetan_premise'
    elif score_chetan_hypothesis != score_chetan_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_score_amar_premise, score_amar_hypothesis, score_bhavan_premise, score_bhavan_hypothesis, score_chetan_premise, score_chetan_hypothesis))
"
7100,neutral,,contradiction,If the marks secured by Reema was written as 36 instead of 66 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as more than 36 instead of 66 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 36 instead of 66 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as more than 36 instead of 66 then find the correct average marks up to two decimal places .,"incorrect_marks_reema_premise = 36
correct_marks_reema_premise = 66
min_incorrect_marks_reema_hypothesis = 36

def entailment_or_contradiction_or_neutral(incorrect_marks_reema_premise, correct_marks_reema_premise, min_incorrect_marks_reema_hypothesis):
    # the hypothesis refers to Reema's incorrect marks mentioned in the premise
    # the hypothesis estimates the incorrect marks to be more than 'min_incorrect_marks_reema_hypothesis'
    # check if the hypothesis contradicts the premise by checking if incorrect marks reported in the premise are lower than 'min_incorrect_marks_reema_hypothesis'
    if incorrect_marks_reema_premise < min_incorrect_marks_reema_hypothesis:
        return False
    # if the hypothesis is not contradicted, check if it is entailed by comparing the correct and incorrect marks
    elif correct_marks_reema_premise == incorrect_marks_reema_premise:
        return True
    # if the hypothesis is neither contradicted nor entailed, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(incorrect_marks_reema_premise, correct_marks_reema_premise, min_incorrect_marks_reema_hypothesis))
"
7166,neutral,,contradiction,15 people entered a theater before Sujit,more than 15 people entered a theater before Sujit,15 people entered a theater before sujit,more than 15 people entered a theater before sujit,"people_before_sujit_premise = 15
min_people_before_sujit_hypothesis = 15

def entailment_or_contradiction_or_neutral(people_before_sujit_premise, min_people_before_sujit_hypothesis):
    # the hypothesis refers to the number of people who entered before Sujit, mentioned in the premise
    # the hypothesis estimates that number to be more than 'min_people_before_sujit_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the number of people who entered before Sujit in the premise is lower than 'min_people_before_sujit_hypothesis'
    if people_before_sujit_premise < min_people_before_sujit_hypothesis:
        return False
    # if the premise and hypothesis number of people are equal, the hypothesis does not entail the premise, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(people_before_sujit_premise, min_people_before_sujit_hypothesis))
"
7261,entailment,,neutral,"If Carol ' s rectangle measures less than 52 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","If Carol ' s rectangle measures 12 inches by 15 inches and Jordan ' s rectangle is 9 inches long , how wide is Jordan ' s rectangle , in inches ?","if carol ' s rectangle measures less than 52 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","if carol ' s rectangle measures 12 inches by 15 inches and jordan ' s rectangle is 9 inches long , how wide is jordan ' s rectangle , in inches ?","carol_rectangle_length_premise = 52
carol_rectangle_width_premise = 15
jordan_rectangle_length_premise = 9

carol_rectangle_length_hypothesis = 12
carol_rectangle_width_hypothesis = 15
jordan_rectangle_length_hypothesis = 9

def entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_width_premise, jordan_rectangle_length_premise, carol_rectangle_length_hypothesis, carol_rectangle_width_hypothesis, jordan_rectangle_length_hypothesis):
    # the hypothesis and premise both mention the dimensions of Carol's rectangle and the length of Jordan's rectangle
    # first, check if the hypothesis contradicts the premise by comparing the lengths and widths of the rectangles
    if carol_rectangle_length_hypothesis >= carol_rectangle_length_premise or carol_rectangle_width_hypothesis != carol_rectangle_width_premise or jordan_rectangle_length_hypothesis != jordan_rectangle_length_premise:
        return False
    # if there is no contradiction, check if the hypothesis entails the premise
    elif carol_rectangle_length_hypothesis < carol_rectangle_length_premise and carol_rectangle_width_hypothesis == carol_rectangle_width_premise and jordan_rectangle_length_hypothesis == jordan_rectangle_length_premise:
        return True
    # if the hypothesis doesn't contradict or entail the premise, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(carol_rectangle_length_premise, carol_rectangle_width_premise, jordan_rectangle_length_premise, carol_rectangle_length_hypothesis, carol_rectangle_width_hypothesis, jordan_rectangle_length_hypothesis))
"
7130,entailment,,contradiction,Anup was asked to find the value of 7 / 12 of a sum of money T,Anup was asked to find the value of more than 7 / 12 of a sum of money T,anup was asked to find the value of 7 / 12 of a sum of money t,anup was asked to find the value of more than 7 / 12 of a sum of money t,"# The fraction that Anup needs to find from the sum of money T
fraction_premise = 7/12
min_fraction_hypothesis = 7/12

def entailment_or_contradiction_or_neutral(fraction_premise, min_fraction_hypothesis):
    # the hypothesis talks about the fraction of a sum that Anup needs to find, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by saying that Anup needs to find more than 'min_fraction_hypothesis'
    if min_fraction_hypothesis > fraction_premise:
        return False
    # if the fraction from the hypothesis is equal to 'fraction_premise', then the hypothesis entails the premise
    elif min_fraction_hypothesis == fraction_premise:
        return True
    # any situation that is not a contradiction or entailment is a neutral case
    else:
        return None

print(entailment_or_contradiction_or_neutral(fraction_premise, min_fraction_hypothesis))
"
7090,entailment,,neutral,Mary has a monthly salary of $ less than 3200,Mary has a monthly salary of $ 1200,mary has a monthly salary of $ less than 3200,mary has a monthly salary of $ 1200,"max_salary_premise = 3200
salary_hypothesis = 1200

def entailment_or_contradiction_or_neutral(max_salary_premise, salary_hypothesis):
    # the hypothesis talks about Mary's monthly salary, which is also the topic of the premise
    # check if the hypothesis contradicts the premise by checking if Mary's salary from the hypothesis is greater than 'max_salary_premise'
    if salary_hypothesis > max_salary_premise:
        return False
    # if Mary's salary from the hypothesis is less than 'max_salary_premise', it is consistent with the premise, so the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_salary_premise, salary_hypothesis))
"
7589,entailment,,contradiction,"Calculate the average mark scored by Adam if he had the following scores in an examination : 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in French Language , Geography , Art and design , History and Physical Education respectively ?","Calculate the average mark scored by Adam if he had the following scores in an examination : more than 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in French Language , Geography , Art and design , History and Physical Education respectively ?","calculate the average mark scored by adam if he had the following scores in an examination : 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in french language , geography , art and design , history and physical education respectively ?","calculate the average mark scored by adam if he had the following scores in an examination : more than 86 , 75 , 72 , 63 and 65 marks ( out of 100 ) in french language , geography , art and design , history and physical education respectively ?","# Extracted scores
french_mark_premise = 86
geography_mark_premise = 75
art_and_design_mark_premise = 72
history_mark_premise = 63
physical_education_mark_premise = 65

min_french_mark_hypothesis = 86
geography_mark_hypothesis = 75
art_and_design_mark_hypothesis = 72
history_mark_hypothesis = 63
physical_education_mark_hypothesis = 65

def entailment_or_contradiction_or_neutral(french_mark_premise, geography_mark_premise, art_and_design_mark_premise, history_mark_premise, physical_education_mark_premise, min_french_mark_hypothesis, geography_mark_hypothesis, art_and_design_mark_hypothesis, history_mark_hypothesis, physical_education_mark_hypothesis):
    # Calculate the average score in both premise and hypothesis
    average_mark_premise = (french_mark_premise + geography_mark_premise + art_and_design_mark_premise + history_mark_premise + physical_education_mark_premise) / 5
    average_mark_hypothesis = (min_french_mark_hypothesis + geography_mark_hypothesis + art_and_design_mark_hypothesis + history_mark_hypothesis + physical_education_mark_hypothesis) / 5

    # The hypothesis talks about the average score of Adam, which is also the subject of the premise
    # If the average score in the hypothesis is less than the average score in the premise, it contradicts the premise.
    if average_mark_hypothesis < average_mark_premise:
        return False
    
    # If the average score in the hypothesis is more than or equal to the average score in the premise, it entails the premise.
    elif average_mark_hypothesis >= average_mark_premise:
        return True
    
    # Otherwise, it is neutral.
    else:
        return None

print(entailment_or_contradiction_or_neutral(french_mark_premise, geography_mark_premise, art_and_design_mark_premise, history_mark_premise, physical_education_mark_premise, min_french_mark_hypothesis, geography_mark_hypothesis, art_and_design_mark_hypothesis, history_mark_hypothesis, physical_education_mark_hypothesis))
"
7051,entailment,,neutral,"less than 4300 , Deepak ' s share is :","1300 , Deepak ' s share is :","less than 4300 , deepak ' s share is :","1300 , deepak ' s share is :","max_share_deepak_premise = 4300
share_deepak_hypothesis = 1300

def entailment_or_contradiction_or_neutral(max_share_deepak_premise, share_deepak_hypothesis):
    # the hypothesis refers to Deepak's share, also mentioned in the premise
    # the premise states the share is less than 'max_share_deepak_premise'
    # check if the hypothesis contradicts the premise by checking if Deepak's share from the hypothesis is more than 'max_share_deepak_premise'
    if share_deepak_hypothesis > max_share_deepak_premise:
        return False
    # any share less than 4300 is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_share_deepak_premise, share_deepak_hypothesis))
"
7070,neutral,,contradiction,"If she worked two 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked two more than 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked two 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked two more than 8 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","work_hours_shift_premise = 8
shifts_premise = 2
average_orders_hour_premise = 40

work_hours_shift_hypothesis = 8 + 2

def entailment_or_contradiction_or_neutral(work_hours_shift_premise, shifts_premise, average_orders_hour_premise, work_hours_shift_hypothesis):
    # the hypothesis talks about the same situation as the premise but changes the number of work hours per shift
    # check if the hypothesis contradicts the premise by checking if the number of work hours per shift from the hypothesis is less or equal to the number from the premise
    if work_hours_shift_hypothesis <= work_hours_shift_premise:
        return False
    # the hypothesis does not contradict the premise, but it doesn't entail it either, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(work_hours_shift_premise, shifts_premise, average_orders_hour_premise, work_hours_shift_hypothesis))
"
6700,entailment,,neutral,less than 6500 find the share of Tony .,4500 find the share of Tony .,less than 6500 find the share of tony .,4500 find the share of tony .,"max_share_tony_premise = 6500
share_tony_hypothesis = 4500

def entailment_or_contradiction_or_neutral(max_share_tony_premise, share_tony_hypothesis):
    # the hypothesis talks about Tony's share which is also referenced in the premise
    # the hypothesis contradicts the premise if Tony's share is higher than 'max_share_tony_premise'
    if share_tony_hypothesis > max_share_tony_premise:
        return False
    # if Tony's share is less than or equal to 'max_share_tony_premise', the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(max_share_tony_premise, share_tony_hypothesis))
"
7222,entailment,,neutral,In another class of less than 700 students there were 24 grades higher than Lena ’ s,In another class of 200 students there were 24 grades higher than Lena ’ s,in another class of less than 700 students there were 24 grades higher than lena ’ s,in another class of 200 students there were 24 grades higher than lena ’ s,"max_students_premise = 700
students_hypothesis = 200
high_grades = 24

def entailment_or_contradiction_or_neutral(max_students_premise, students_hypothesis, high_grades):
    # the hypothesis refers to the number of students and grades mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of students in the hypothesis is greater than 'max_students_premise'
    if students_hypothesis > max_students_premise:
        return False
    # if the number of students in the hypothesis is less than or equal to 'max_students_premise', it is consistent with the premise
    # since the number of high grades is same in both premise and hypothesis, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_students_premise, students_hypothesis, high_grades))
"
7117,entailment,,neutral,"In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * less than 30 ^ 6 germs , equally divided among 10,800 Petri dishes","In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 Petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * less than 30 ^ 6 germs , equally divided among 10,800 petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 petri dishes","# maximum number of germs in the biology lab according to the premise
max_germs_premise = 4.32 * (30 ** 6)
# number of germs in the biology lab according to the hypothesis
germs_hypothesis = 4.32 * (10 ** 6)
# number of petri dishes in the biology lab
petri_dishes = 10800

def entailment_or_contradiction_or_neutral(max_germs_premise, germs_hypothesis, petri_dishes):
    # the hypothesis refers to the number of germs in the biology lab of Jefferson High School, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of germs from the hypothesis exceeds the maximum number of germs according to the premise
    if germs_hypothesis > max_germs_premise:
        return False
    # the hypothesis number of germs is less than the premise maximum number of germs and the number of Petri dishes is the same,
    # so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_germs_premise, germs_hypothesis, petri_dishes))
"
6733,entailment,,neutral,"If Bill needs to walk from the corner of less than 3 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","If Bill needs to walk from the corner of 2 nd Rd and 3 rd Ave to the corner of 10 th Rd and 5 th Ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of less than 3 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 2 nd rd and 3 rd ave to the corner of 10 th rd and 5 th ave in the shortest possible time , how many different routes could he take ?","start_premise = 3
start_hypothesis = 2

def entailment_or_contradiction_or_neutral(start_premise, start_hypothesis):
    # the hypothesis talks about the starting point of Bill's walk, which is also referenced in the premise
    # hypothesis contradicts the premise if the starting point in the hypothesis is greater than 'start_premise'
    if start_hypothesis > start_premise:
        return False
    # if the starting point in the hypothesis is less than 'start_premise', it is entailed by the premise
    elif start_hypothesis < start_premise:
        return True
    # if the starting point in the hypothesis equals 'start_premise', it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(start_premise, start_hypothesis))
"
7391,entailment,,contradiction,Rosy is 10 % more efficient than Mary,Rosy is less than 10 % more efficient than Mary,rosy is 10 % more efficient than mary,rosy is less than 10 % more efficient than mary,"rosy_efficiency_premise = 10
rosy_efficiency_hypothesis = 10

def entailment_or_contradiction_or_neutral(rosy_efficiency_premise, rosy_efficiency_hypothesis):
    # the hypothesis refers to the efficiency of Rosy compared to Mary, as mentioned in the premise
    # the hypothesis estimates Rosy's efficiency to be less than 'rosy_efficiency_hypothesis' percent more than Mary's
    # check if the hypothesis contradicts the premise by checking if Rosy's efficiency in the premise is more than 'rosy_efficiency_hypothesis'
    if rosy_efficiency_premise > rosy_efficiency_hypothesis:
        return False
    # since the premise and hypothesis both state the same efficiency difference, the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(rosy_efficiency_premise, rosy_efficiency_hypothesis))
"
7000,entailment,,neutral,Ramesh can finish a work in less than 60 days and Sushil in 25 days,Ramesh can finish a work in 20 days and Sushil in 25 days,ramesh can finish a work in less than 60 days and sushil in 25 days,ramesh can finish a work in 20 days and sushil in 25 days,"max_days_ramesh_premise = 60
days_sushil_premise = 25
days_ramesh_hypothesis = 20
days_sushil_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_days_ramesh_premise, days_sushil_premise, days_ramesh_hypothesis, days_sushil_hypothesis):
    # the hypothesis contradicts the premise if Ramesh's work time in the hypothesis is greater than 'max_days_ramesh_premise' or Sushil's work time is not equal to 'days_sushil_premise'
    if days_ramesh_hypothesis > max_days_ramesh_premise or days_sushil_hypothesis != days_sushil_premise:
        return False
    # if the hypothesis doesn't contradict the premise, it might entail it if Ramesh's work time is less than 'max_days_ramesh_premise' and Sushil's work time is equal to 'days_sushil_premise'
    elif days_ramesh_hypothesis < max_days_ramesh_premise and days_sushil_hypothesis == days_sushil_premise:
        return True
    # if the hypothesis does not contradict or entail the premise, it is neutral to it
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_days_ramesh_premise, days_sushil_premise, days_ramesh_hypothesis, days_sushil_hypothesis))
"
7146,neutral,,entailment,Cindy is thinking of a number which is 4 less than the square of a positive integer,Cindy is thinking of a number which is less than 8 less than the square of a positive integer,cindy is thinking of a number which is 4 less than the square of a positive integer,cindy is thinking of a number which is less than 8 less than the square of a positive integer,"less_than_square_premise = 4
less_than_square_hypothesis = 8

def entailment_or_contradiction_or_neutral(less_than_square_premise, less_than_square_hypothesis):
    # the hypothesis talks about a number which is less than a certain number less than the square of a positive integer
    # the premise also talks about a similar number, but the number it is less than is different
    # check if the hypothesis contradicts the premise by checking if the number from the premise is greater than the number from the hypothesis
    if less_than_square_premise > less_than_square_hypothesis:
        return False
    # if the premise number is less than or equal to the hypothesis number, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(less_than_square_premise, less_than_square_hypothesis))
"
6673,entailment,,neutral,"City A to city B , Andrew drove for less than 5 hr at 40 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for 1 hr at 40 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 5 hr at 40 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 40 mph and for 3 hours at 60 mph","# Time driving at 40 mph
time_at_40_premise = 5
time_at_40_hypothesis = 1

# Time driving at 60 mph
time_at_60_premise = 3
time_at_60_hypothesis = 3

def entailment_or_contradiction_or_neutral(time_at_40_premise, time_at_40_hypothesis, time_at_60_premise, time_at_60_hypothesis):
    # the hypothesis talks about the time Andrew drove at a certain speed, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the driving time at 40 mph in the hypothesis is more than in the premise
    if time_at_40_hypothesis > time_at_40_premise:
        return False
    # check if the driving time at 60 mph in the hypothesis is more than in the premise
    elif time_at_60_hypothesis > time_at_60_premise:
        return False
    # if neither time contradicts the premise, then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(time_at_40_premise, time_at_40_hypothesis, time_at_60_premise, time_at_60_hypothesis))
"
6189,neutral,,entailment,Lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,Lexi needed to save for less than 80 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for less than 80 days to afford a vacation at the job that paid her $ 125 per day,"save_days_premise = 30
max_save_days_hypothesis = 80
daily_payment = 125

def entailment_or_contradiction_or_neutral(save_days_premise, max_save_days_hypothesis, daily_payment):
    # the hypothesis talks about the number of days Lexi needs to save for a vacation at a job that pays 'daily_payment'
    # the hypothesis estimates the saving days to less than 'max_save_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the saving days reported in the premise are greater than 'max_save_days_hypothesis'
    if save_days_premise > max_save_days_hypothesis:
        return False
    # any number of saving days less than 80 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(save_days_premise, max_save_days_hypothesis, daily_payment))
"
7322,neutral,,contradiction,"For the past 3 weeks , Rikki has gone to the gym an average of 2 times per week","For the past 1 weeks , Rikki has gone to the gym an average of 2 times per week","for the past 3 weeks , rikki has gone to the gym an average of 2 times per week","for the past 1 weeks , rikki has gone to the gym an average of 2 times per week","weeks_premise = 3
avg_gym_visits_premise = 2
weeks_hypothesis = 1
avg_gym_visits_hypothesis = 2

def entailment_or_contradiction_or_neutral(weeks_premise, avg_gym_visits_premise, weeks_hypothesis, avg_gym_visits_hypothesis):
    # the hypothesis and premise talk about the same average number of gym visits
    # check if the average number of visits per week contradicts between premise and hypothesis
    if avg_gym_visits_premise != avg_gym_visits_hypothesis:
        return False
    # any number of weeks with the same average visits is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(weeks_premise, avg_gym_visits_premise, weeks_hypothesis, avg_gym_visits_hypothesis))
"
6328,entailment,,neutral,Kramer can pack less than 20 boxes of cigarettes per minute,Kramer can pack 10 boxes of cigarettes per minute,kramer can pack less than 20 boxes of cigarettes per minute,kramer can pack 10 boxes of cigarettes per minute,"max_boxes_premise = 20
boxes_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_boxes_premise, boxes_hypothesis):
    # the hypothesis refers to the number of boxes Kramer can pack per minute, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_boxes_premise', by checking if the number of boxes from the hypothesis is greater than 'max_boxes_premise'
    if boxes_hypothesis > max_boxes_premise:
        return False
    # any number of boxes less than 20 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_boxes_premise, boxes_hypothesis))
"
7241,error,"Traceback (most recent call last):
  File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/StressTest/gpt4/sample_7241.py"", line 19, in <module>
    print(entailment_or_contradiction_or_neutral(ayisha_age_fraction_premise, ayisha_age_fraction_hypothesis))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/StressTest/gpt4/sample_7241.py"", line 14, in entailment_or_contradiction_or_neutral
    if ayisha_age_fraction_premise < ayisha_age_fraction_hypothesis:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: '<' not supported between instances of 'float' and 'str'",contradiction,Ayisha ' s age is 1 / 6 th of her father ' s age,Ayisha ' s age is less than 1 / 6 th of her father ' s age,ayisha ' s age is 1 / 6 th of her father ' s age,ayisha ' s age is less than 1 / 6 th of her father ' s age,"ayisha_age_fraction_premise = 1/6
ayisha_age_fraction_hypothesis = ""< 1/6""

def entailment_or_contradiction_or_neutral(ayisha_age_fraction_premise, ayisha_age_fraction_hypothesis):
    # the hypothesis talks about the fraction of Ayisha's age to her father's age
    # the hypothesis states that the fraction is less than 'ayisha_age_fraction_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the fraction in the premise is lower than 'ayisha_age_fraction_hypothesis'
    if ayisha_age_fraction_premise < ayisha_age_fraction_hypothesis:
        return False
    # any fraction less than 1/6 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(ayisha_age_fraction_premise, ayisha_age_fraction_hypothesis))


ayisha_age_fraction_premise = 1/6
ayisha_age_fraction_hypothesis = 1/6  # Represent the hypothesis as a float

def entailment_or_contradiction_or_neutral(ayisha_age_fraction_premise, ayisha_age_fraction_hypothesis):
    # the hypothesis talks about the fraction of Ayisha's age to her father's age
    # the hypothesis states that the fraction is less than 'ayisha_age_fraction_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the fraction in the premise is lower than 'ayisha_age_fraction_hypothesis'
    if ayisha_age_fraction_premise <= ayisha_age_fraction_hypothesis:
        return False
    # any fraction less than 1/6 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(ayisha_age_fraction_premise, ayisha_age_fraction_hypothesis))
"
7096,entailment,,neutral,Nitin ranks less than 75 th in a class of 47 students,Nitin ranks 15 th in a class of 47 students,nitin ranks less than 75 th in a class of 47 students,nitin ranks 15 th in a class of 47 students,"max_rank_premise = 75
rank_hypothesis = 15
total_students = 47

def entailment_or_contradiction_or_neutral(max_rank_premise, rank_hypothesis, total_students):
    # the hypothesis refers to Nitin's rank mentioned in the premise
    # the hypothesis estimates the rank to be 'rank_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Nitin's rank reported in the premise is higher than 'max_rank_premise'
    if rank_hypothesis > max_rank_premise:
        return False
    # check if the rank in the hypothesis is valid in the context of total students
    elif rank_hypothesis > total_students:
        return False
    # if neither contradiction, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_rank_premise, rank_hypothesis, total_students))
"
7321,entailment,,neutral,"For the past less than 6 weeks , Rikki has gone to the gym an average of 2 times per week","For the past 3 weeks , Rikki has gone to the gym an average of 2 times per week","for the past less than 6 weeks , rikki has gone to the gym an average of 2 times per week","for the past 3 weeks , rikki has gone to the gym an average of 2 times per week","gym_weeks_premise = 6
gym_weeks_hypothesis = 3
gym_visits_per_week = 2

def entailment_or_contradiction_or_neutral(gym_weeks_premise, gym_weeks_hypothesis, gym_visits_per_week):
    # the hypothesis refers to the number of weeks and gym visits per week mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of weeks in the hypothesis is higher than 'gym_weeks_premise'
    if gym_weeks_hypothesis > gym_weeks_premise:
        return False
    # if the number of weeks in the hypothesis is lower or equal to 'gym_weeks_premise', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(gym_weeks_premise, gym_weeks_hypothesis, gym_visits_per_week))
"
3211,entailment,,neutral,He works at it for less than 40 days and then Rajesh finished it in 30 days,He works at it for 20 days and then Rajesh finished it in 30 days,he works at it for less than 40 days and then rajesh finished it in 30 days,he works at it for 20 days and then rajesh finished it in 30 days,"max_work_days_premise = 40
work_days_hypothesis = 20
rajesh_work_days_premise = rajesh_work_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_work_days_premise, work_days_hypothesis, rajesh_work_days_premise, rajesh_work_days_hypothesis):
    # the hypothesis refers to the number of days he works and the number of days Rajesh works, mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of work days is more than 'max_work_days_premise' or if the number of days Rajesh works is different than the premise
    if work_days_hypothesis > max_work_days_premise or rajesh_work_days_hypothesis != rajesh_work_days_premise:
        return False
    # if the number of work days is less than or equal to 'max_work_days_premise' and the number of days Rajesh works is the same as the premise, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_work_days_premise, work_days_hypothesis, rajesh_work_days_premise, rajesh_work_days_hypothesis))
"
7288,entailment,,neutral,less than 64000 in a business which he jointly owns with two other persons ( James and Greg ),14000 in a business which he jointly owns with two other persons ( James and Greg ),less than 64000 in a business which he jointly owns with two other persons ( james and greg ),14000 in a business which he jointly owns with two other persons ( james and greg ),"max_business_value_premise = 64000
business_value_hypothesis = 14000

def entailment_or_contradiction_or_neutral(max_business_value_premise, business_value_hypothesis):
    # the hypothesis talks about the value of a business, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_business_value_premise', by checking if the business value from the hypothesis is greater than 'max_business_value_premise'
    if business_value_hypothesis > max_business_value_premise:
        return False
    # any business value less than 64000 is consistent with the premise, hence the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_business_value_premise, business_value_hypothesis))
"
5923,entailment,,neutral,"If the trip home took less than 3 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","If the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did Carl drive each way ?","if the trip home took less than 3 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","if the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers o did carl drive each way ?","max_trip_time_diff_premise = 3/2
trip_time_diff_hypothesis = 1/2

def entailment_or_contradiction_or_neutral(max_trip_time_diff_premise, trip_time_diff_hypothesis):
    # the hypothesis deals with the time difference between the trip home and the trip to the beach, as stated in the premise
    # check if the hypothesis contradicts the premise by checking if the time difference in the hypothesis is more than 'max_trip_time_diff_premise'
    if trip_time_diff_hypothesis > max_trip_time_diff_premise:
        return False
    # any time difference less than or equal to 1.5 hours is consistent with the premise, so the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_trip_time_diff_premise, trip_time_diff_hypothesis))
"
7399,entailment,,neutral,"If the average speed of the whole journey was less than 76 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","If the average speed of the whole journey was 36 mph , then what is Tom ' s speed driving from B to C in miles per hour ?","if the average speed of the whole journey was less than 76 mph , then what is tom ' s speed driving from b to c in miles per hour ?","if the average speed of the whole journey was 36 mph , then what is tom ' s speed driving from b to c in miles per hour ?","max_avg_speed_premise = 76
avg_speed_hypothesis = 36

def entailment_or_contradiction_or_neutral(max_avg_speed_premise, avg_speed_hypothesis):
    # both the hypothesis and premise talk about the average speed of the whole journey
    # check if the hypothesis contradicts the premise saying that the average speed of the whole journey was less than 'max_avg_speed_premise', by checking if the average speed in the hypothesis is greater than 'max_avg_speed_premise'
    if avg_speed_hypothesis > max_avg_speed_premise:
        return False
    # if the average speed is less than 76 mph, then it can be 36 mph, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_avg_speed_premise, avg_speed_hypothesis))
"
7119,neutral,,entailment,The price of a car and AC are in the ratio 3 : 2,The price of a car and AC are in the ratio more than 2 : 2,the price of a car and ac are in the ratio 3 : 2,the price of a car and ac are in the ratio more than 2 : 2,"car_to_ac_ratio_premise = 3 / 2
min_car_to_ac_ratio_hypothesis = 2 / 2

def entailment_or_contradiction_or_neutral(car_to_ac_ratio_premise, min_car_to_ac_ratio_hypothesis):
    # the hypothesis talks about the ratio of the price of a car to the price of an AC, referenced also in the premise
    # check if the hypothesis contradicts the premise ratio 'car_to_ac_ratio_premise', by checking if the ratio from the hypothesis is greater or equal to 'car_to_ac_ratio_premise'
    if min_car_to_ac_ratio_hypothesis >= car_to_ac_ratio_premise:
        return False
    # any ratio less than 3 : 2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(car_to_ac_ratio_premise, min_car_to_ac_ratio_hypothesis))
"
6224,neutral,,contradiction,"200 , what will be the difference between Mani and Rani ' s share ?","more than 200 , what will be the difference between Mani and Rani ' s share ?","200 , what will be the difference between mani and rani ' s share ?","more than 200 , what will be the difference between mani and rani ' s share ?","difference_share_premise = 200
min_difference_share_hypothesis = 200

def entailment_or_contradiction_or_neutral(difference_share_premise, min_difference_share_hypothesis):
    # the hypothesis talks about the difference in shares between Mani and Rani, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of 'difference_share_premise', by checking if the difference in shares from the hypothesis is less than 'difference_share_premise'
    if min_difference_share_hypothesis < difference_share_premise:
        return False
    # any difference in shares that is equal to or more than 200 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(difference_share_premise, min_difference_share_hypothesis))
"
5933,entailment,,contradiction,"Antony can divide his herd into 5 equal parts and also to 6 equal parts , but not to 9 equal parts","Antony can divide his herd into less than 5 equal parts and also to 6 equal parts , but not to 9 equal parts","antony can divide his herd into 5 equal parts and also to 6 equal parts , but not to 9 equal parts","antony can divide his herd into less than 5 equal parts and also to 6 equal parts , but not to 9 equal parts","min_parts_premise = 5
max_parts_premise = 6
min_parts_hypothesis = 5
max_parts_hypothesis = 6

def entailment_or_contradiction_or_neutral(min_parts_premise, max_parts_premise, min_parts_hypothesis, max_parts_hypothesis):
    # the hypothesis talks about the number of equal parts Antony can divide his herd into, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of dividing the herd into 'min_parts_premise' and 'max_parts_premise', by checking if the number of parts from the hypothesis are different from the premise
    if min_parts_hypothesis < min_parts_premise or max_parts_hypothesis != max_parts_premise:
        return False
    # if the hypothesis matches the premise, it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_parts_premise, max_parts_premise, min_parts_hypothesis, max_parts_hypothesis))
"
6548,neutral,,contradiction,The distance between West - Town to East - Town is 15 kilometers,The distance between West - Town to East - Town is more than 15 kilometers,the distance between west - town to east - town is 15 kilometers,the distance between west - town to east - town is more than 15 kilometers,"west_to_east_distance_premise = 15
min_west_to_east_distance_hypothesis = 15

def entailment_or_contradiction_or_neutral(west_to_east_distance_premise, min_west_to_east_distance_hypothesis):
    # the hypothesis refers to the same distance as the premise
    # the hypothesis estimates the distance to be more than 'min_west_to_east_distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance reported in the premise is less than or equal to 'min_west_to_east_distance_hypothesis'
    if west_to_east_distance_premise <= min_west_to_east_distance_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(west_to_east_distance_premise, min_west_to_east_distance_hypothesis))
"
7533,neutral,,entailment,"If Leo gains 10 pounds , he will weigh 50 % more than his sister Kendra","If Leo gains less than 50 pounds , he will weigh 50 % more than his sister Kendra","if leo gains 10 pounds , he will weigh 50 % more than his sister kendra","if leo gains less than 50 pounds , he will weigh 50 % more than his sister kendra","leo_weight_gain_premise = 10
leo_weight_gain_hypothesis = 50

def entailment_or_contradiction_or_neutral(leo_weight_gain_premise, leo_weight_gain_hypothesis):
    # the hypothesis talks about the weight gain of Leo, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Leo's weight gain in the hypothesis is less than the weight gain in the premise
    if leo_weight_gain_hypothesis < leo_weight_gain_premise:
        return False
    # any weight gain less than or equal to 50 pounds is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(leo_weight_gain_premise, leo_weight_gain_hypothesis))
"
7473,neutral,,entailment,A “ Sophie Germain ” prime is any positive prime number p for which 2 p + 1 is also prime,A “ Sophie Germain ” prime is any positive prime number p for which less than 4 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 2 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which less than 4 p + 1 is also prime,"# The premise and hypothesis each provide a definition of ""Sophie Germain"" prime
# They don't mention any specific prime number, so we can't extract any quantities
# However, we can reason about the relationship between the definitions.

# In the premise, a positive prime number p is a ""Sophie Germain"" prime if 2p + 1 is prime
# In the hypothesis, a positive prime number p is a ""Sophie Germain"" prime if less than 4p + 1 is prime

# We can see that the hypothesis definition is a relaxation of the premise definition, as any number that satisfies the premise definition will also satisfy the hypothesis definition, but not the reverse.
# Therefore, the hypothesis is neutral with respect to the premise.

def entailment_or_contradiction_or_neutral():
    return None

print(entailment_or_contradiction_or_neutral())
"
6181,contradiction,,neutral,"David obtained more than 16 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","David obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","david obtained more than 16 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","david obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","min_marks_english_premise = 16
min_marks_mathematics_premise = 85
min_marks_physics_premise = 82
min_marks_chemistry_premise = 87
min_marks_biology_premise = 85

marks_english_hypothesis = 86
marks_mathematics_hypothesis = 85
marks_physics_hypothesis = 82
marks_chemistry_hypothesis = 87
marks_biology_hypothesis = 85

def entailment_or_contradiction_or_neutral(min_marks_english_premise, min_marks_mathematics_premise, min_marks_physics_premise, min_marks_chemistry_premise, min_marks_biology_premise, marks_english_hypothesis, marks_mathematics_hypothesis, marks_physics_hypothesis, marks_chemistry_hypothesis, marks_biology_hypothesis):
    # the hypothesis talks about the marks obtained by David in different subjects which are also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_marks_*_premise' for each subject, by checking if the marks from the hypothesis are lower or equal to 'min_marks_*_premise' 
    if marks_english_hypothesis <= min_marks_english_premise or \
        marks_mathematics_hypothesis <= min_marks_mathematics_premise or \
            marks_physics_hypothesis <= min_marks_physics_premise or \
                marks_chemistry_hypothesis <= min_marks_chemistry_premise or \
                    marks_biology_hypothesis <= min_marks_biology_premise:
        return False
    # any number of marks greater than the minimum ones are consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_marks_english_premise, min_marks_mathematics_premise, min_marks_physics_premise, min_marks_chemistry_premise, min_marks_biology_premise, marks_english_hypothesis, marks_mathematics_hypothesis, marks_physics_hypothesis, marks_chemistry_hypothesis, marks_biology_hypothesis))
"
7422,neutral,,entailment,"At the same time , Albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","At the same time , Albert gets on an elevator at the less than 61 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the less than 61 st floor of the same building and rides down at the rate of 63 floors per minute","start_floor_albert_premise = 51
start_floor_albert_hypothesis = 61
rate_albert = 63

def entailment_or_contradiction_or_neutral(start_floor_albert_premise, start_floor_albert_hypothesis, rate_albert):
    # both the hypothesis and premise are talking about the same event
    # where Albert starts at a particular floor and rides the elevator down at a certain rate
    # the hypothesis mentions that Albert starts at a floor less than 'start_floor_albert_hypothesis'
    # we need to check if this contradicts the premise where Albert starts at 'start_floor_albert_premise'
    if start_floor_albert_premise >= start_floor_albert_hypothesis:
        return False
    # the rate at which Albert rides the elevator down is the same in both the hypothesis and premise
    # hence there is no contradiction or entailment there
    # if Albert starts at a floor number less than 61, it does not entail or contradict that he starts at the 51st floor
    # so it is neutral
    return None

print(entailment_or_contradiction_or_neutral(start_floor_albert_premise, start_floor_albert_hypothesis, rate_albert))
"
6939,contradiction,,entailment,At the same time Jose gets on an elevator on the 51 st floor of the same building and rides down at a rate of 63 floors per minute,At the same time Jose gets on an elevator on the less than 61 st floor of the same building and rides down at a rate of 63 floors per minute,at the same time jose gets on an elevator on the 51 st floor of the same building and rides down at a rate of 63 floors per minute,at the same time jose gets on an elevator on the less than 61 st floor of the same building and rides down at a rate of 63 floors per minute,"jose_floor_premise = 51
jose_floor_hypothesis = 61

def entailment_or_contradiction_or_neutral(jose_floor_premise, jose_floor_hypothesis):
    # the hypothesis talks about the floor number where Jose gets on an elevator, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the floor number in the hypothesis is greater than the one in the premise
    if jose_floor_hypothesis > jose_floor_premise:
        return False
    # since the hypothesis states that Jose got on the elevator on a floor less than 61, and the premise states he got on the 51st floor, which is less than 61, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(jose_floor_premise, jose_floor_hypothesis))
"
5917,entailment,,neutral,"If Jerry wants to raise his average by less than 7 points , what score must he earn on the fourth test ?","If Jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by less than 7 points , what score must he earn on the fourth test ?","if jerry wants to raise his average by 2 points , what score must he earn on the fourth test ?","max_avg_increase_premise = 7
avg_increase_hypothesis = 2

def entailment_or_contradiction_or_neutral(max_avg_increase_premise, avg_increase_hypothesis):
    # the hypothesis refers to Jerry's average increase mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_avg_increase_premise', by checking if the average increase from the hypothesis is greater or equal to 'max_avg_increase_premise'
    if avg_increase_hypothesis >= max_avg_increase_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_avg_increase_premise, avg_increase_hypothesis))
"
7088,entailment,,contradiction,"If Dan works alone for 6 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for less than 6 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for 6 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for less than 6 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_hours_premise = 6
max_dan_work_hours_hypothesis = 6

def entailment_or_contradiction_or_neutral(dan_work_hours_premise, max_dan_work_hours_hypothesis):
    # the hypothesis discusses Dan's work hours, which are also mentioned in the premise
    # the hypothesis estimates Dan's work hours to be less than 'max_dan_work_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Dan's work hours in the premise are greater than 'max_dan_work_hours_hypothesis'
    if dan_work_hours_premise > max_dan_work_hours_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_work_hours_premise, max_dan_work_hours_hypothesis))
"
7348,entailment,,neutral,"Jose joined him less than 8 months later , investing Rs","Jose joined him 2 months later , investing Rs","jose joined him less than 8 months later , investing rs","jose joined him 2 months later , investing rs","max_join_time_premise = 8
join_time_hypothesis = 2

def entailment_or_contradiction_or_neutral(max_join_time_premise, join_time_hypothesis):
    # the hypothesis refers to the time that Jose joined, which is also mentioned in the premise
    # the hypothesis states that Jose joined 2 months later 
    # check if the hypothesis contradicts the premise estimate of joining time being less than 'max_join_time_premise', by checking if the join time from the hypothesis is greater than 'max_join_time_premise'
    if join_time_hypothesis > max_join_time_premise:
        return False
    # any join time less than 8 months is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_join_time_premise, join_time_hypothesis))
"
6024,neutral,,entailment,"If Dana gives her parents 4 % of that amount back each month , how much will she still owe her parents after four years of college ?","If Dana gives her parents less than 6 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents 4 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents less than 6 % of that amount back each month , how much will she still owe her parents after four years of college ?","monthly_return_premise = 4
monthly_return_hypothesis = 6

def entailment_or_contradiction_or_neutral(monthly_return_premise, monthly_return_hypothesis):
    # the hypothesis refers to the percentage of monthly return mentioned in the premise
    # the hypothesis estimates the monthly return to be less than 'monthly_return_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the monthly return reported in the premise is more than 'monthly_return_hypothesis'
    if monthly_return_premise > monthly_return_hypothesis:
        return False
    else:
        # as the premise does not provide any upper limit on the monthly return, the hypothesis does not entail the premise
        return None

print(entailment_or_contradiction_or_neutral(monthly_return_premise, monthly_return_hypothesis))
"
6396,neutral,,entailment,In 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,In less than 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the United States used Kennedy Airport,in 1979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,in less than 6979 approximately 1 / 3 of the 32.3 million airline passengers traveling to or from the united states used kennedy airport,"year_premise = 1979
year_hypothesis = 6979

def entailment_or_contradiction_or_neutral(year_premise, year_hypothesis):
    # the hypothesis refers to the year when 1/3 of the 32.3 million airline passengers traveled to or from the US using Kennedy Airport
    # check if the hypothesis contradicts the premise by checking if 'year_hypothesis' is less than 'year_premise'
    if year_hypothesis < year_premise:
        return False
    # if 'year_hypothesis' is greater than or equal to 'year_premise', it is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(year_premise, year_hypothesis))
"
7523,entailment,,contradiction,John has 6 friends who want to ride in his new car that can accommodate only 5 people at a time ( John plus 4 passengers ),John has 5 friends who want to ride in his new car that can accommodate only 5 people at a time ( John plus 4 passengers ),john has 6 friends who want to ride in his new car that can accommodate only 5 people at a time ( john plus 4 passengers ),john has 5 friends who want to ride in his new car that can accommodate only 5 people at a time ( john plus 4 passengers ),"friends_premise = 6
friends_hypothesis = 5
car_capacity = 5

def entailment_or_contradiction_or_neutral(friends_premise, friends_hypothesis, car_capacity):
    # the hypothesis talks about the number of John's friends that want to ride in his new car
    # check if the hypothesis contradicts the premise by checking if the number of friends from the hypothesis is greater than the number of friends from the premise
    if friends_hypothesis > friends_premise:
        return False
    # if the number of friends from the hypothesis is less than or equal to the number of friends from the premise, it is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(friends_premise, friends_hypothesis, car_capacity))
"
6077,entailment,,contradiction,It takes John exactly 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,It takes John exactly more than 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,it takes john exactly 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,it takes john exactly more than 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,"john_raking_time_premise = 30
todd_raking_time_premise = 60
john_raking_time_hypothesis = 30
todd_raking_time_hypothesis = 60

def entailment_or_contradiction_or_neutral(john_raking_time_premise, todd_raking_time_premise, john_raking_time_hypothesis, todd_raking_time_hypothesis):
    # the hypothesis contradicts the premise about John's raking time by stating that it takes him more than 30 minutes, while the premise asserts it takes him exactly 30 minutes
    if john_raking_time_hypothesis > john_raking_time_premise:
        return False
    # the hypothesis is consistent with the premise about Todd's raking time, so it does not contradict it
    elif todd_raking_time_hypothesis == todd_raking_time_premise:
        return True
    # any other situation would mean the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(john_raking_time_premise, todd_raking_time_premise, john_raking_time_hypothesis, todd_raking_time_hypothesis))
"
5956,entailment,,neutral,"Last year less than 56 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","Last year 26 members of a certain club traveled to England , 26 members traveled to France , and 32 members traveled to Italy","last year less than 56 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","last year 26 members of a certain club traveled to england , 26 members traveled to france , and 32 members traveled to italy","max_uk_travelers_premise = 56
uk_travelers_hypothesis = 26
france_travelers_premise = 26
france_travelers_hypothesis = 26
italy_travelers_premise = 32
italy_travelers_hypothesis = 32

def entailment_or_contradiction_or_neutral(max_uk_travelers_premise, uk_travelers_hypothesis, france_travelers_premise, france_travelers_hypothesis, italy_travelers_premise, italy_travelers_hypothesis):
    # the hypothesis talks about the number of club members that traveled to each of the three countries, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_uk_travelers_premise' by checking if the number of UK travelers from the hypothesis is greater than 'max_uk_travelers_premise'
    if uk_travelers_hypothesis > max_uk_travelers_premise:
        return False
    # check if the number of France and Italy travelers from the hypothesis match the number of France and Italy travelers from the premise
    elif france_travelers_hypothesis == france_travelers_premise and italy_travelers_hypothesis == italy_travelers_premise:
        return True
    # any other scenario would result in the hypothesis being neutral with respect to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_uk_travelers_premise, uk_travelers_hypothesis, france_travelers_premise, france_travelers_hypothesis, italy_travelers_premise, italy_travelers_hypothesis))
"
5907,contradiction,,entailment,"Shekar scored 76 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","Shekar scored more than 46 , 65 , 82 , 67 and 75 marks in Mathematics , Science , Social studies , English and Biology respectively","shekar scored 76 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","shekar scored more than 46 , 65 , 82 , 67 and 75 marks in mathematics , science , social studies , english and biology respectively","#extracting the scores from the premise
maths_score_premise = 76
science_score_premise = 65
social_studies_score_premise = 82
english_score_premise = 67
biology_score_premise = 75

#extracting the minimum scores from the hypothesis
min_maths_score_hypothesis = 46
min_science_score_hypothesis = 65
min_social_studies_score_hypothesis = 82
min_english_score_hypothesis = 67
min_biology_score_hypothesis = 75

def entailment_or_contradiction_or_neutral(maths_score_premise, science_score_premise, social_studies_score_premise, english_score_premise, biology_score_premise, min_maths_score_hypothesis, min_science_score_hypothesis, min_social_studies_score_hypothesis, min_english_score_hypothesis, min_biology_score_hypothesis):
    # the hypothesis refers to Shekar's scores in each subject mentioned in the premise
    # and estimates that the scores are more than the minimum scores stated in the hypothesis
    # check if the hypothesis contradicts the premise by checking if any of the actual scores in the premise are lower than the corresponding minimum scores in the hypothesis
    if maths_score_premise <= min_maths_score_hypothesis or science_score_premise <= min_science_score_hypothesis or social_studies_score_premise <= min_social_studies_score_hypothesis or english_score_premise <= min_english_score_hypothesis or biology_score_premise <= min_biology_score_hypothesis:
        return False
    # if no contradictions are found, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(maths_score_premise, science_score_premise, social_studies_score_premise, english_score_premise, biology_score_premise, min_maths_score_hypothesis, min_science_score_hypothesis, min_social_studies_score_hypothesis, min_english_score_hypothesis, min_biology_score_hypothesis))
"
6290,entailment,,contradiction,Smitha bought 8 Kg of kiwi fruit at an average rate of 360,Smitha bought more than 8 Kg of kiwi fruit at an average rate of 360,smitha bought 8 kg of kiwi fruit at an average rate of 360,smitha bought more than 8 kg of kiwi fruit at an average rate of 360,"kiwi_weight_premise = 8
min_kiwi_weight_hypothesis = 8
avg_rate_premise = 360
avg_rate_hypothesis = 360

def entailment_or_contradiction_or_neutral(kiwi_weight_premise, min_kiwi_weight_hypothesis, avg_rate_premise, avg_rate_hypothesis):
    # the hypothesis refers to the weight of kiwi fruit and the average rate mentioned in the premise
    # first, check if the average rate in the hypothesis is different than the one in the premise
    if avg_rate_premise != avg_rate_hypothesis:
        return False
    # second, check if the hypothesis contradicts the premise by checking if the premise weight is less than the minimum weight from the hypothesis
    if kiwi_weight_premise < min_kiwi_weight_hypothesis:
        return False
    # if there is no contradiction, check if the hypothesis entails the premise by checking if the premise weight is equal to the minimum weight from the hypothesis
    if kiwi_weight_premise == min_kiwi_weight_hypothesis:
        return True
    # if the premise weight is more than the hypothesis minimum weight, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(kiwi_weight_premise, min_kiwi_weight_hypothesis, avg_rate_premise, avg_rate_hypothesis))
"
7028,neutral,,contradiction,Dan leaves City A 120 minutes after Cara,Dan leaves City A more than 120 minutes after Cara,dan leaves city a 120 minutes after cara,dan leaves city a more than 120 minutes after cara,"dan_time_after_cara_premise = 120
min_dan_time_after_cara_hypothesis = 120

def entailment_or_contradiction_or_neutral(dan_time_after_cara_premise, min_dan_time_after_cara_hypothesis):
    # the hypothesis refers to the time Dan leaves after Cara, as mentioned in the premise
    # the hypothesis states Dan leaves 'min_dan_time_after_cara_hypothesis' or more minutes after Cara
    # check if the hypothesis contradicts the premise by checking if the time Dan leaves after Cara in the premise is less than 'min_dan_time_after_cara_hypothesis'
    if dan_time_after_cara_premise < min_dan_time_after_cara_hypothesis:
        return False
    # if Dan leaves exactly 120 minutes after Cara, as stated in the premise, the hypothesis is neutral, since it allows for Dan to leave more than or equal to 120 minutes after Cara.
    return None

print(entailment_or_contradiction_or_neutral(dan_time_after_cara_premise, min_dan_time_after_cara_hypothesis))
"
6051,contradiction,,entailment,Aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,Aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 6 miles per hour,"jogging_speed_premise = 3
jogging_speed_hypothesis = 4
walking_speed_premise = 6
walking_speed_hypothesis = 6

def entailment_or_contradiction_or_neutral(jogging_speed_premise, jogging_speed_hypothesis, walking_speed_premise, walking_speed_hypothesis):
    # the hypothesis refers to the jogging and walking speeds mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the jogging speed is greater than 'jogging_speed_premise' or the walking speed is different than 'walking_speed_premise'
    if jogging_speed_hypothesis > jogging_speed_premise or walking_speed_hypothesis != walking_speed_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(jogging_speed_premise, jogging_speed_hypothesis, walking_speed_premise, walking_speed_hypothesis))
"
7513,entailment,,neutral,"If an outfit consists of less than 4 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of less than 4 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","max_shirts_premise = 4
shirts_hypothesis = 1

def entailment_or_contradiction_or_neutral(max_shirts_premise, shirts_hypothesis):
    # the hypothesis refers to the number of shirts in an outfit mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of shirts from the hypothesis is more than 'max_shirts_premise'
    if shirts_hypothesis > max_shirts_premise:
        return False
    # any number of shirts less than or equal to 4 is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_shirts_premise, shirts_hypothesis))
"
5950,contradiction,,neutral,"If T = more than 2 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","If T = 5 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","if t = more than 2 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","if t = 5 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","T_premise = 20
T_hypothesis = 20
ratio_premise = 2 / 9
ratio_hypothesis = 5 / 9

def entailment_or_contradiction_or_neutral(T_premise, T_hypothesis, ratio_premise, ratio_hypothesis):
    # the hypothesis and premise both refer to the same system of equations, where T is a function of K
    # calculate the values of K from the premise and the hypothesis
    K_premise = (T_premise / ratio_premise) + 32
    K_hypothesis = (T_hypothesis / ratio_hypothesis) + 32
    # check if the calculated value of K from the hypothesis contradicts the one from the premise
    if K_hypothesis != K_premise:
        return False
    else:
        # if there is no contradiction, then the hypothesis is neutral because it does not provide any new information
        return None

print(entailment_or_contradiction_or_neutral(T_premise, T_hypothesis, ratio_premise, ratio_hypothesis))
"
7451,neutral,,contradiction,Bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,Bhanu spends more than 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,bhanu spends more than 30 % of his income on petrol on scooter 12 % of the remaining on house rent and the balance on food,"# The quantities mentioned in both premise and hypothesis
petrol_expense_premise = 30 # in percentage
rent_expense_premise = 12 # in percentage
petrol_expense_hypothesis = 30 # in percentage
rent_expense_hypothesis = 12 # in percentage

def entailment_or_contradiction_or_neutral(petrol_expense_premise, rent_expense_premise, petrol_expense_hypothesis, rent_expense_hypothesis):
    # the hypothesis is about Bhanu's expenses, like the premise
    # check if the hypothesis contradicts the premise by checking if the petrol expense percentage in the hypothesis is higher than in the premise
    if petrol_expense_hypothesis > petrol_expense_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the rent expense percentage in the hypothesis is higher than in the premise
    elif rent_expense_hypothesis > rent_expense_premise:
        return False
    # if there's no contradiction, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(petrol_expense_premise, rent_expense_premise, petrol_expense_hypothesis, rent_expense_hypothesis))
"
6071,entailment,,contradiction,"The 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from Chennai in
numbering the 100 homes ?","The more than 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from Chennai in numbering the 100 homes ?","the 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from chennai innumbering the 100 homes ?","the more than 2 nd builder builds in 15 days , then how many 2 ' s are used by the builder from chennai in numbering the 100 homes ?","builder_rank_premise = 2
builder_rank_hypothesis = 2
construction_days_premise = 15
construction_days_hypothesis = 15
numbered_homes_premise = 100
numbered_homes_hypothesis = 100

def entailment_or_contradiction_or_neutral(builder_rank_premise, builder_rank_hypothesis, construction_days_premise, construction_days_hypothesis, numbered_homes_premise, numbered_homes_hypothesis):
    # the hypothesis refers to the ranking of the builder, the construction days and the numbered homes mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the builder rank, construction days or numbered homes from the hypothesis are different than those from the premise
    if builder_rank_hypothesis != builder_rank_premise or construction_days_hypothesis != construction_days_premise or numbered_homes_hypothesis != numbered_homes_premise:
        return False
    # the builder rank, the construction days and the numbered homes in the hypothesis are the same as those in the premise, so there is entailment
    else:
        return True

print(entailment_or_contradiction_or_neutral(builder_rank_premise, builder_rank_hypothesis, construction_days_premise, construction_days_hypothesis, numbered_homes_premise, numbered_homes_hypothesis))
"
7525,entailment,,neutral,How many different combinations of more than 2 passengers can be formed from John ' s 6 friends ?,How many different combinations of 4 passengers can be formed from John ' s 6 friends ?,how many different combinations of more than 2 passengers can be formed from john ' s 6 friends ?,how many different combinations of 4 passengers can be formed from john ' s 6 friends ?,"from math import comb

# Number of friends John has
friends_premise = 6
# Minimum number of friends from the premise that can form a combination
min_combinations_premise = 2

# Number of friends from the hypothesis that form a combination
combinations_hypothesis = 4

def entailment_or_contradiction_or_neutral(friends_premise, min_combinations_premise, combinations_hypothesis):
    # the hypothesis talks about the number of combinations of John's friends
    # check if the hypothesis contradicts the premise by checking if the number of friends forming a combination from the hypothesis is lower or equal to 'min_combinations_premise'
    if combinations_hypothesis <= min_combinations_premise:
        return False
    # if the number of combinations from the hypothesis is greater than 'min_combinations_premise', check if it is less or equal to the number of John's friends
    if combinations_hypothesis > friends_premise:
        return False
    return True

print(entailment_or_contradiction_or_neutral(friends_premise, min_combinations_premise, combinations_hypothesis))
"
7465,entailment,,neutral,"If the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","if the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","max_ball_types_premise = 4
max_board_game_types_premise = 6

ball_types_hypothesis = 3
board_game_types_hypothesis = 6

def entailment_or_contradiction_or_neutral(max_ball_types_premise, max_board_game_types_premise, ball_types_hypothesis, board_game_types_hypothesis):
    # the hypothesis and premise are about the number of types of balls and board games in a toy store
    # hypothesis contradicts the premise if number of types of balls in the hypothesis is more than 'max_ball_types_premise' or number of types of board games is more than 'max_board_game_types_premise'
    if ball_types_hypothesis > max_ball_types_premise or board_game_types_hypothesis > max_board_game_types_premise:
        return False
    # if the hypothesis does not contradict the premise, then it must be entailed by the premise since all the quantities and details in the hypothesis are covered in the premise
    return True

print(entailment_or_contradiction_or_neutral(max_ball_types_premise, max_board_game_types_premise, ball_types_hypothesis, board_game_types_hypothesis))
"
6131,neutral,,contradiction,"Each week , Harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first 11 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 21 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 11 hours and 1.5 x dollars for each additional hour worked that week","regular_hours_premise = 21
regular_hours_hypothesis = 11

def entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis):
    # both the premise and the hypothesis talk about the number of regular hours Harry is paid for
    # check if the hypothesis contradicts the premise by checking if the number of regular hours in the hypothesis is greater than in the premise
    if regular_hours_hypothesis > regular_hours_premise:
        return False
    # any number of regular hours less than or equal to 21 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(regular_hours_premise, regular_hours_hypothesis))
"
5997,neutral,,entailment,"To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","To be considered for “ movie of the year , ” a film must appear in at least less than 4 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","to be considered for “ movie of the year , ” a film must appear in at least less than 4 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 760 members","min_lists_premise = 1/4
max_lists_hypothesis = 4/4

def entailment_or_contradiction_or_neutral(min_lists_premise, max_lists_hypothesis):
    # the hypothesis refers to the number of lists a movie should be on to be considered for 'movie of the year'
    # the hypothesis estimates the movie should be on less than 'max_lists_hypothesis' of the lists
    # check if the hypothesis contradicts the premise by checking if the list count required by the premise is higher than 'max_lists_hypothesis'
    if min_lists_premise > max_lists_hypothesis:
        return False
    # any list count less than 4/4 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_lists_premise, max_lists_hypothesis))
"
6080,neutral,,contradiction,"What is the height difference between the two if the Empire
State Building is 435 m tall and the Petronas Towers is 445 m tall ?",What is the height difference between the two if the Empire State Building is less than 435 m tall and the Petronas Towers is 445 m tall ?,what is the height difference between the two if the empirestate building is 435 m tall and the petronas towers is 445 m tall ?,what is the height difference between the two if the empire state building is less than 435 m tall and the petronas towers is 445 m tall ?,"empire_state_building_height_premise = 435
petronas_towers_height_premise = 445
empire_state_building_height_hypothesis = 435

def entailment_or_contradiction_or_neutral(empire_state_building_height_premise, petronas_towers_height_premise, empire_state_building_height_hypothesis):
    # the hypothesis refers to the height of the Empire State Building and the Petronas Towers mentioned in the premise
    # the hypothesis states that the Empire State Building is less than 'empire_state_building_height_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the Empire State Building's height reported in the premise is less than 'empire_state_building_height_hypothesis'
    if empire_state_building_height_premise < empire_state_building_height_hypothesis:
        return False
    # since the height of the Empire State Building in the premise is equal to 'empire_state_building_height_hypothesis', the hypothesis does not entail the premise
    return None

print(entailment_or_contradiction_or_neutral(empire_state_building_height_premise, petronas_towers_height_premise, empire_state_building_height_hypothesis))
"
6311,entailment,,contradiction,From a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,From a group of 1 boys & 4 girls a Committee of 4 persons is to be formed,from a group of 6 boys & 4 girls a committee of 4 persons is to be formed,from a group of 1 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
boys_hypothesis = 1
girls_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis):
    # the hypothesis talks about the number of boys and girls in a group, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the number of boys or girls in the hypothesis is greater than in the premise
    if boys_hypothesis > boys_premise or girls_hypothesis > girls_premise:
        return False
    # since the number of boys and girls in the hypothesis is less than or equal to the premise, it is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, boys_hypothesis, girls_hypothesis))
"
6568,entailment,,neutral,"If the trip home took less than 7 / 2 hour longer than the trip to the beach , how many kilometers u did Carl drive each way ?","If the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers u did Carl drive each way ?","if the trip home took less than 7 / 2 hour longer than the trip to the beach , how many kilometers u did carl drive each way ?","if the trip home took 1 / 2 hour longer than the trip to the beach , how many kilometers u did carl drive each way ?","max_trip_time_difference_premise = 7 / 2
trip_time_difference_hypothesis = 1 / 2

def entailment_or_contradiction_or_neutral(max_trip_time_difference_premise, trip_time_difference_hypothesis):
    # the hypothesis refers to the difference between the trip home and the trip to the beach
    # the hypothesis estimates the difference to be equal to 'trip_time_difference_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the difference stated in the hypothesis is greater than 'max_trip_time_difference_premise'
    if trip_time_difference_hypothesis > max_trip_time_difference_premise:
        return False
    # if the difference from the hypothesis is less or equal to the premise, then it is consistent with the premise, so it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_trip_time_difference_premise, trip_time_difference_hypothesis))
"
6469,entailment,,neutral,less than 30 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,20 percent of Andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,less than 30 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,20 percent of andrea ' s living room floor is covered by a carpet that is 4 feet by 9 feet,"max_carpet_coverage_premise = 30
carpet_coverage_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_carpet_coverage_premise, carpet_coverage_hypothesis):
    # the hypothesis refers to the percentage of Andrea's living room floor covered by a carpet, mentioned also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_carpet_coverage_premise', by checking if the coverage from the hypothesis is greater or equal to 'max_carpet_coverage_premise'
    if carpet_coverage_hypothesis >= max_carpet_coverage_premise:
        return False
    # any percentage of coverage less than 30 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_carpet_coverage_premise, carpet_coverage_hypothesis))
"
7540,entailment,,neutral,Amanda goes to the toy store to buy less than 6 ball and 3 different board games,Amanda goes to the toy store to buy 1 ball and 3 different board games,amanda goes to the toy store to buy less than 6 ball and 3 different board games,amanda goes to the toy store to buy 1 ball and 3 different board games,"max_balls_premise = 6
balls_hypothesis = 1
board_games_premise = 3
board_games_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis):
    # the hypothesis refers to the number of balls and board games Amanda buys mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if balls or board games bought as per the hypothesis are more than the premise
    if balls_hypothesis > max_balls_premise or board_games_hypothesis > board_games_premise:
        return False
    else:
        # if no contradiction and the hypothesis quantities are all in the premise, then it's an entailment
        return True

print(entailment_or_contradiction_or_neutral(max_balls_premise, balls_hypothesis, board_games_premise, board_games_hypothesis))
"
7436,neutral,,contradiction,"Store Z : $ 90 , a 20 % sales tax , and $ 10 rebate after tax
Isaac can purchase a certain item in four different ways , as shown in the table","Store Z : $ less than 90 , a 20 % sales tax , and $ 10 rebate after tax Isaac can purchase a certain item in four different ways , as shown in the table","store z : $ 90 , a 20 % sales tax , and $ 10 rebate after taxisaac can purchase a certain item in four different ways , as shown in the table","store z : $ less than 90 , a 20 % sales tax , and $ 10 rebate after tax isaac can purchase a certain item in four different ways , as shown in the table","store_z_price_premise = 90
store_z_price_hypothesis = 90 #it is less than 90 in the hypothesis but we will use 90 for comparison

def entailment_or_contradiction_or_neutral(store_z_price_premise, store_z_price_hypothesis):
    # the hypothesis talks about the price of an item at store Z, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of $90, by checking if the price from the hypothesis is higher than 'store_z_price_premise'
    if store_z_price_hypothesis > store_z_price_premise:
        return False
    # any price less than or equal to $90 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(store_z_price_premise, store_z_price_hypothesis))
"
7467,neutral,,entailment,Level - 1 college graduates account for 10 % of Listco ' s sales staff,Level - less than 7 college graduates account for 10 % of Listco ' s sales staff,level - 1 college graduates account for 10 % of listco ' s sales staff,level - less than 7 college graduates account for 10 % of listco ' s sales staff,"level_graduates_premise = 1
level_graduates_hypothesis = 7

def entailment_or_contradiction_or_neutral(level_graduates_premise, level_graduates_hypothesis):
    # the hypothesis talks about the level of college graduates in Listco's sales staff
    # it suggests that the level of graduates is less than 7
    # check if the hypothesis contradicts the premise, which states that the level is 1
    # by checking if the level in the hypothesis is less than the level in the premise
    if level_graduates_hypothesis < level_graduates_premise:
        return False
    # check if the level in the hypothesis is greater than the level in the premise which means the hypothesis is neutral to the premise
    elif level_graduates_hypothesis > level_graduates_premise:
        return None
    # if neither contradiction nor neutrality, the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(level_graduates_premise, level_graduates_hypothesis))
"
6758,entailment,,contradiction,Tom goes after 8 P,Tom goes after 6 P,tom goes after 8 p,tom goes after 6 p,"Tom_go_hour_premise = 8
Tom_go_hour_hypothesis = 6

def entailment_or_contradiction_or_neutral(Tom_go_hour_premise, Tom_go_hour_hypothesis):
    # The hypothesis refers to the time Tom goes, which is also mentioned in the premise
    # Checking if the hypothesis contradicts the premise by verifying if the time from the hypothesis is later than that from the premise
    if Tom_go_hour_hypothesis > Tom_go_hour_premise:
        return False
    # Any time after 6 P.M., including and after 8 P.M., is consistent with the hypothesis, so the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(Tom_go_hour_premise, Tom_go_hour_hypothesis))
"
7309,entailment,,neutral,How many minutes does it take James to type more than 7 words if he types at the rate of 4 words per minute ?,How many minutes does it take James to type 8 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type more than 7 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type 8 words if he types at the rate of 4 words per minute ?,"min_words_typed_premise = 7
words_per_minute = 4
words_typed_hypothesis = 8

def entailment_or_contradiction_or_neutral(min_words_typed_premise, words_per_minute, words_typed_hypothesis):
    # the hypothesis talks about the time it takes to type a number of words, as does the premise
    # check if the hypothesis contradicts the premise by checking if the number of words typed in the hypothesis is less than or equal to 'min_words_typed_premise'
    if words_typed_hypothesis <= min_words_typed_premise:
        return False
    # compute the time it takes to type the words in both the premise and the hypothesis
    time_premise = min_words_typed_premise / words_per_minute
    time_hypothesis = words_typed_hypothesis / words_per_minute
    # check if the time computed from the hypothesis is less than the time computed from the premise
    if time_hypothesis < time_premise:
        return False
    # if the time computed from the hypothesis is equal to or more than the time computed from the premise, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_words_typed_premise, words_per_minute, words_typed_hypothesis))
"
6034,entailment,,neutral,"In the city of San Durango , less than 70 people own cats , dogs , or rabbits","In the city of San Durango , 40 people own cats , dogs , or rabbits","in the city of san durango , less than 70 people own cats , dogs , or rabbits","in the city of san durango , 40 people own cats , dogs , or rabbits","max_pet_owners_premise = 70
pet_owners_hypothesis = 40

def entailment_or_contradiction_or_neutral(max_pet_owners_premise, pet_owners_hypothesis):
    # the hypothesis talks about the number of pet owners in San Durango, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_pet_owners_premise', by checking if the number of pet owners from the hypothesis is greater than 'max_pet_owners_premise'
    if pet_owners_hypothesis > max_pet_owners_premise:
        return False
    # any number of pet owners less than 70 is consistent with the premise, so the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(max_pet_owners_premise, pet_owners_hypothesis))
"
7249,entailment,,neutral,Lilly has less than 60 fish and Rosy has 9 fish,Lilly has 10 fish and Rosy has 9 fish,lilly has less than 60 fish and rosy has 9 fish,lilly has 10 fish and rosy has 9 fish,"max_fish_lilly_premise = 60
fish_rosy_premise = 9
fish_lilly_hypothesis = 10
fish_rosy_hypothesis = 9

def entailment_or_contradiction_or_neutral(max_fish_lilly_premise, fish_rosy_premise, fish_lilly_hypothesis, fish_rosy_hypothesis):
    # the hypothesis states the specific number of fish Lilly and Rosy has
    # check if the hypothesis contradicts the premise, by checking if Lilly's fish from the hypothesis is more than 'max_fish_lilly_premise' or Rosy's fish from the hypothesis is not equal to 'fish_rosy_premise'
    if fish_lilly_hypothesis > max_fish_lilly_premise or fish_rosy_hypothesis != fish_rosy_premise:
        return False
    # Lilly having 10 fish is entailed by the premise since it's less than 60, and Rosy having 9 fish is stated in both
    return True

print(entailment_or_contradiction_or_neutral(max_fish_lilly_premise, fish_rosy_premise, fish_lilly_hypothesis, fish_rosy_hypothesis))
"
6125,entailment,,contradiction,"In a group of 60 people , 35 have visited Iceland and 23 have visited Norway","In a group of 40 people , 35 have visited Iceland and 23 have visited Norway","in a group of 60 people , 35 have visited iceland and 23 have visited norway","in a group of 40 people , 35 have visited iceland and 23 have visited norway","people_group_premise = 60
people_group_hypothesis = 40
visited_iceland = 35
visited_norway = 23

def entailment_or_contradiction_or_neutral(people_group_premise, people_group_hypothesis, visited_iceland, visited_norway):
    # the hypothesis refers to the same group of people and number of visits to Iceland and Norway
    # check if the hypothesis contradicts the premise by having a smaller group number
    if people_group_hypothesis <= people_group_premise and visited_iceland <= people_group_hypothesis and visited_norway <= people_group_hypothesis:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(people_group_premise, people_group_hypothesis, visited_iceland, visited_norway))
"
6350,neutral,,contradiction,Four months later Mr Praveen joined the business by investing 90000,Four months later Mr Praveen joined the business by investing more than 90000,four months later mr praveen joined the business by investing 90000,four months later mr praveen joined the business by investing more than 90000,"investment_premise = 90000
min_investment_hypothesis = 90000

def entailment_or_contradiction_or_neutral(investment_premise, min_investment_hypothesis):
    # the hypothesis talks about the investment by Mr. Praveen, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the investment mentioned in the premise is less than 'min_investment_hypothesis'
    if investment_premise < min_investment_hypothesis:
        return False
    # the premise states the exact investment, so any number greater than 90000 contradicts the premise
    elif investment_premise > min_investment_hypothesis:
        return False
    # the premise and hypothesis state the same amount, so there's no contradiction or entailment
    return None

print(entailment_or_contradiction_or_neutral(investment_premise, min_investment_hypothesis))
"
6090,contradiction,,entailment,A “ Sophie Germain ” prime is any positive prime number p for which 2 p + 1 is also prime,A “ Sophie Germain ” prime is any positive prime number p for which less than 3 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which 2 p + 1 is also prime,a “ sophie germain ” prime is any positive prime number p for which less than 3 p + 1 is also prime,"# the hypothesis and premise are qualitative statements about the definition of a 'Sophie Germain' prime
# the hypothesis suggests a different condition for the prime number 'p' than the premise
# thus, the hypothesis contradicts the premise
def entailment_or_contradiction_or_neutral():
    # no quantitative comparison is necessary as the hypothesis contradicts the premise based on the conditions specified
    return False

print(entailment_or_contradiction_or_neutral())
"
6247,entailment,,neutral,Raviraj invested an amount of less than 600000 at compound interest rate of 10 pcpa for a period of three years,Raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of less than 600000 at compound interest rate of 10 pcpa for a period of three years,raviraj invested an amount of 100000 at compound interest rate of 10 pcpa for a period of three years,"max_investment_premise = 600000
investment_hypothesis = 100000

def entailment_or_contradiction_or_neutral(max_investment_premise, investment_hypothesis):
    # the hypothesis refers to the amount of money invested by Raviraj, as mentioned in the premise
    # the hypothesis estimates the investment to be 'investment_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the investment suggested in the hypothesis is greater than 'max_investment_premise'
    if investment_hypothesis >= max_investment_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_investment_premise, investment_hypothesis))
"
6659,neutral,,contradiction,"Assuming that Karen drives at an average speed of 60 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","Assuming that Karen drives at an average speed of 70 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","assuming that karen drives at an average speed of 60 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","assuming that karen drives at an average speed of 70 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","karen_speed_premise = 60
tom_speed_premise = 45
karen_speed_hypothesis = 70
tom_speed_hypothesis = 45

def entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis):
    # In both premise and hypothesis, Tom's speed is the same, but Karen's speed is different.
    # If Karen's speed in the hypothesis is lower than in the premise, it contradicts the premise
    if karen_speed_hypothesis < karen_speed_premise:
        return False
    # If Karen's speed in the hypothesis is higher than in the premise, it is neutral to the premise
    elif karen_speed_hypothesis > karen_speed_premise:
        return None
    # If Karen's speed in the hypothesis is the same as in the premise, it entails the premise
    elif karen_speed_hypothesis == karen_speed_premise:
        return True

print(entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis))
"
7564,entailment,,neutral,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 70 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 70 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,"hourly_wage_premise = 8.00
hourly_wage_hypothesis = 8.00
max_tip_rate_premise = 0.70
tip_rate_hypothesis = 0.30

def entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, max_tip_rate_premise, tip_rate_hypothesis):
    # the hypothesis refers to Jill's hourly wage and tip rate, which are also mentioned in the premise
    # first, check if the hourly wage in the hypothesis contradicts the one in the premise
    if hourly_wage_premise != hourly_wage_hypothesis:
        return False
    # then, check if the tip rate in the hypothesis contradicts the premise by being more than 'max_tip_rate_premise'
    if tip_rate_hypothesis > max_tip_rate_premise:
        return False
    # if there is no contradiction, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, max_tip_rate_premise, tip_rate_hypothesis))
"
6608,neutral,,contradiction,How much loss would Indu has suffered had she given it to Bindu for 2 years at 4 % per annum simple interest ?,How much loss would Indu has suffered had she given it to Bindu for 6 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 2 years at 4 % per annum simple interest ?,how much loss would indu has suffered had she given it to bindu for 6 years at 4 % per annum simple interest ?,"interest_rate = 4
years_premise = 2
years_hypothesis = 6

def entailment_or_contradiction_or_neutral(interest_rate, years_premise, years_hypothesis):
    # the premise and hypothesis are comparing the loss Indu would have suffered if she had given something to Bindu for a certain number of years at a certain interest rate
    # since the interest rate is the same in both cases, we only need to compare the number of years
    # if the number of years in the hypothesis is less than or equal to the number of years in the premise, then the hypothesis contradicts the premise
    if years_hypothesis <= years_premise:
        return False
    # if the number of years in the hypothesis is greater than the number of years in the premise, then the hypothesis is neutral to the premise, because the premise does not provide enough information to confirm or refute the hypothesis
    return None

print(entailment_or_contradiction_or_neutral(interest_rate, years_premise, years_hypothesis))
"
6253,entailment,,neutral,"Angel played the game , getting at least one score of each of less than 7 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","Angel played the game , getting at least one score of each of 1 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","angel played the game , getting at least one score of each of less than 7 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","angel played the game , getting at least one score of each of 1 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","min_score_premise = 7
min_score_hypothesis = 1

def entailment_or_contradiction_or_neutral(min_score_premise, min_score_hypothesis):
    # the hypothesis refers to the minimum score that Angel got in the game, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the minimum score in the hypothesis is greater than or equal to 'min_score_premise'
    if min_score_hypothesis >= min_score_premise:
        return False
    # if the minimum score in the hypothesis is less than 'min_score_premise', it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_score_premise, min_score_hypothesis))
"
6313,entailment,,neutral,How many ways are there for more than 2 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,How many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,how many ways are there for more than 2 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,how many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,"min_males_premise = 2
females_premise = 3
males_hypothesis = 4
females_hypothesis = 3

def entailment_or_contradiction_or_neutral(min_males_premise, females_premise, males_hypothesis, females_hypothesis):
    # the hypothesis is about the number of males and females who can sit around a table, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of males in the hypothesis is less or equal to minimum number of males in the premise
    if males_hypothesis <= min_males_premise:
        return False
    # check if the number of females in the hypothesis is different than the number of females in the premise
    if females_hypothesis != females_premise:
        return False
    # the number of males in the hypothesis is more than the minimum number of males in the premise and the number of females is the same
    # so, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_males_premise, females_premise, males_hypothesis, females_hypothesis))
"
6082,contradiction,,neutral,"If Rahul finds that he is less than 62 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","If Rahul finds that he is 12 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","if rahul finds that he is less than 62 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","if rahul finds that he is 12 th from the right in a line of boys and 4 th from the left , how many boys should be added to the line such that there are 28 boys in the line ?","rahul_position_right_premise = 62
rahul_position_left_premise = 4
total_boys_premise = 28

rahul_position_right_hypothesis = 12
rahul_position_left_hypothesis = 4
total_boys_hypothesis = 28

def entailment_or_contradiction_or_neutral(rahul_position_right_premise, rahul_position_left_premise, total_boys_premise, rahul_position_right_hypothesis, rahul_position_left_hypothesis, total_boys_hypothesis):
    # the hypothesis talks about Rahul's position in line and the number of boys in line
    # check if the hypothesis contradicts the premise by comparing Rahul's position from the right and the total number of boys in line
    if rahul_position_right_hypothesis != rahul_position_right_premise or total_boys_hypothesis != total_boys_premise:
        return False
    # check if Rahul's position from the left is consistent with the premise
    if rahul_position_left_hypothesis == rahul_position_left_premise:
        return True
    # if neither contradiction nor entailment, return neutral
    return None

print(entailment_or_contradiction_or_neutral(rahul_position_right_premise, rahul_position_left_premise, total_boys_premise, rahul_position_right_hypothesis, rahul_position_left_hypothesis, total_boys_hypothesis))
"
6187,entailment,,neutral,How many liters of blue paint must be added to less than 86 liters of Fuchsia to change it to Mauve paint ?,How many liters of blue paint must be added to 16 liters of Fuchsia to change it to Mauve paint ?,how many liters of blue paint must be added to less than 86 liters of fuchsia to change it to mauve paint ?,how many liters of blue paint must be added to 16 liters of fuchsia to change it to mauve paint ?,"max_fuchsia_premise = 86
fuchsia_hypothesis = 16

def entailment_or_contradiction_or_neutral(max_fuchsia_premise, fuchsia_hypothesis):
    # the hypothesis refers to the number of liters of Fuchsia paint mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the amount of Fuchsia paint in the hypothesis is greater than 'max_fuchsia_premise'
    if fuchsia_hypothesis > max_fuchsia_premise:
        return False
    # if the amount of Fuchsia paint in the hypothesis is less than 'max_fuchsia_premise', it's consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_fuchsia_premise, fuchsia_hypothesis))
"
6267,contradiction,,entailment,"10 % people of a village in Sri Lanka died by bombardment , 20 % of the remainder left the village on account of fear","less than 30 % people of a village in Sri Lanka died by bombardment , 20 % of the remainder left the village on account of fear","10 % people of a village in sri lanka died by bombardment , 20 % of the remainder left the village on account of fear","less than 30 % people of a village in sri lanka died by bombardment , 20 % of the remainder left the village on account of fear","death_percentage_premise = 10
death_percentage_hypothesis = 30

def entailment_or_contradiction_or_neutral(death_percentage_premise, death_percentage_hypothesis):
    # the hypothesis talks about the percentage of people who died in the village, referred in the premise
    # check if the hypothesis contradicts the premise estimate of 'death_percentage_premise', by checking if the death_percentage from the hypothesis is more than 'death_percentage_premise'
    if death_percentage_hypothesis > death_percentage_premise:
        return False
    # any death percentage less than or equal to 10 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(death_percentage_premise, death_percentage_hypothesis))
"
5942,neutral,,contradiction,"In a friendship gang Mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","In a friendship gang Mala has more than 5 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has 5 gang , in how many ways can he invite one or more of the gang to his house ?","in a friendship gang mala has more than 5 gang , in how many ways can he invite one or more of the gang to his house ?","gangs_mala_premise = 5
min_gangs_mala_hypothesis = 6

def entailment_or_contradiction_or_neutral(gangs_mala_premise, min_gangs_mala_hypothesis):
    # the hypothesis talks about the number of gangs Mala has, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'gangs_mala_premise', by checking if the number of gangs from the hypothesis is less or equal to 'gangs_mala_premise'
    if min_gangs_mala_hypothesis <= gangs_mala_premise:
        return False
    # any number of gangs greater than 5 is not consistent with the premise, so the hypothesis contradicts the premise
    return None

print(entailment_or_contradiction_or_neutral(gangs_mala_premise, min_gangs_mala_hypothesis))
"
6167,neutral,,contradiction,I want to give 95 $ to John,I want to give less than 95 $ to John,i want to give 95 $ to john,i want to give less than 95 $ to john,"money_premise = 95
max_money_hypothesis = 95

def entailment_or_contradiction_or_neutral(money_premise, max_money_hypothesis):
    # the hypothesis refers to the amount of money mentioned in the premise
    # the hypothesis estimates the money amount to less than 'max_money_hypothesis'
    # check if the hypothesis contradicts the premise by checking if money amount in the premise is more than 'max_money_hypothesis'
    if money_premise > max_money_hypothesis:
        return False
    # if the amount of money in the premise is exactly 'max_money_hypothesis', then the hypothesis is neutral
    elif money_premise == max_money_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(money_premise, max_money_hypothesis))
"
6176,entailment,,contradiction,"If it takes Darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","If it takes Darcy a total of more than 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of more than 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","extra_time_walk_premise = 15
min_extra_time_walk_hypothesis = 15

def entailment_or_contradiction_or_neutral(extra_time_walk_premise, min_extra_time_walk_hypothesis):
    # the hypothesis talks about the extra time Darcy takes to commute to work by walking than by riding the train, referenced in the premise
    # the hypothesis estimates the extra time to be more than 'min_extra_time_walk_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the extra time reported in the premise is less than 'min_extra_time_walk_hypothesis'
    if extra_time_walk_premise < min_extra_time_walk_hypothesis:
        return False
    # the premise and hypothesis both mention an extra 15 minutes, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(extra_time_walk_premise, min_extra_time_walk_hypothesis))
"
6052,entailment,,neutral,Aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 6 miles per hour,Aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at less than 4 miles per hour and then walk back home by the same route at 6 miles per hour,aaron will jog from home at 3 miles per hour and then walk back home by the same route at 6 miles per hour,"jog_speed_limit_premise = 4
jog_speed_hypothesis = 3
walk_speed_premise = 6
walk_speed_hypothesis = 6

def entailment_or_contradiction_or_neutral(jog_speed_limit_premise, jog_speed_hypothesis, walk_speed_premise, walk_speed_hypothesis):
    # the hypothesis talks about Aaron's jogging and walking speed, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the jogging speed from the hypothesis is greater than 'jog_speed_limit_premise' or if the walking speed from the hypothesis is not equal to 'walk_speed_premise'
    if jog_speed_hypothesis > jog_speed_limit_premise or walk_speed_hypothesis != walk_speed_premise:
        return False
    # since the jogging speed from the hypothesis is less than 'jog_speed_limit_premise' and the walking speed from the hypothesis is equal to 'walk_speed_premise', the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(jog_speed_limit_premise, jog_speed_hypothesis, walk_speed_premise, walk_speed_hypothesis))
"
6355,entailment,,neutral,"An investor can sell her MicroTron stock for less than 76 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","An investor can sell her MicroTron stock for 36 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","an investor can sell her microtron stock for less than 76 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","an investor can sell her microtron stock for 36 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","microtron_price_premise = 76
dynaco_price_premise = 48
total_shares_sold_premise = 300
average_price_premise = 40

microtron_price_hypothesis = 36
dynaco_price_hypothesis = 48
total_shares_sold_hypothesis = 300
average_price_hypothesis = 40

def entailment_or_contradiction_or_neutral(microtron_price_premise, dynaco_price_premise, total_shares_sold_premise, average_price_premise, microtron_price_hypothesis, dynaco_price_hypothesis, total_shares_sold_hypothesis, average_price_hypothesis):
    # the hypothesis talks about the selling price of MicroTron and Dynaco stocks, the number of shares sold, and the average selling price per share
    # first, check if the hypothesis contradicts the premise information
    if microtron_price_hypothesis > microtron_price_premise or dynaco_price_hypothesis > dynaco_price_premise or total_shares_sold_hypothesis > total_shares_sold_premise or average_price_hypothesis > average_price_premise:
        return False
    # if there is no contradiction, check if the hypothesis entails the premise
    elif microtron_price_hypothesis <= microtron_price_premise and dynaco_price_hypothesis <= dynaco_price_premise and total_shares_sold_hypothesis <= total_shares_sold_premise and average_price_hypothesis <= average_price_premise:
        return True
    # if the hypothesis neither contradicts nor entails the premise, it is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(microtron_price_premise, dynaco_price_premise, total_shares_sold_premise, average_price_premise, microtron_price_hypothesis, dynaco_price_hypothesis, total_shares_sold_hypothesis, average_price_hypothesis))
"
7039,entailment,,neutral,"Calculate the average marks of a student who obtained more than 26 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","Calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in Geography , History and Government , Art , Computer Science and Modern Literature ?","calculate the average marks of a student who obtained more than 26 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","calculate the average marks of a student who obtained 56 , 60 , 72 , 85 and 80 marks ( out of 100 ) in geography , history and government , art , computer science and modern literature ?","min_mark_geo_hist_gov_premise = 26
mark_geo_hist_gov_hypothesis = 56
mark_history_premise = mark_history_hypothesis = 60
mark_art_premise = mark_art_hypothesis = 72
mark_comp_sci_premise = mark_comp_sci_hypothesis = 85
mark_mod_lit_premise = mark_mod_lit_hypothesis = 80

def entailment_or_contradiction_or_neutral(min_mark_geo_hist_gov_premise, mark_geo_hist_gov_hypothesis, mark_history_premise, mark_history_hypothesis, mark_art_premise, mark_art_hypothesis, mark_comp_sci_premise, mark_comp_sci_hypothesis, mark_mod_lit_premise, mark_mod_lit_hypothesis):
    # the hypothesis refers to the marks obtained by a student in the same subjects referenced in the premise
    # the hypothesis provides specific marks for each subject, while the premise only provides a minimum for Geography, History and Government
    # check if the hypothesis contradicts the premise by checking if the mark for Geography, History and Government from the hypothesis is lower than 'min_mark_geo_hist_gov_premise'
    if mark_geo_hist_gov_hypothesis < min_mark_geo_hist_gov_premise:
        return False
    # since the hypothesis mark for Geography, History and Government is greater than 'min_mark_geo_hist_gov_premise', the hypothesis is consistent with the premise
    # as for the other subjects, the marks are the same in both premise and hypothesis, so they do not contradict
    # hence, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_mark_geo_hist_gov_premise, mark_geo_hist_gov_hypothesis, mark_history_premise, mark_history_hypothesis, mark_art_premise, mark_art_hypothesis, mark_comp_sci_premise, mark_comp_sci_hypothesis, mark_mod_lit_premise, mark_mod_lit_hypothesis))
"
6036,neutral,,entailment,Each of the 59 members in Lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,Each of the more than 19 members in Lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,each of the 59 members in lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,each of the more than 19 members in lourdes school class is required to sign up for a minimum of one and a maximum of three academic clubs,"members_school_class_premise = 59
min_members_school_class_hypothesis = 19

def entailment_or_contradiction_or_neutral(members_school_class_premise, min_members_school_class_hypothesis):
    # the hypothesis talks about the number of members in Lourdes school class, which is also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 'members_school_class_premise', by checking if the number of members from the hypothesis is greater than 'members_school_class_premise'
    if min_members_school_class_hypothesis > members_school_class_premise:
        return False
    # any number of members less than or equal to 59 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(members_school_class_premise, min_members_school_class_hypothesis))
"
6215,neutral,,contradiction,than how many more emploies should NHAI hire to finish it in time working 10 hours a day,than how many more emploies should NHAI hire to finish it in time working 70 hours a day,than how many more emploies should nhai hire to finish it in time working 10 hours a day,than how many more emploies should nhai hire to finish it in time working 70 hours a day,"# This is a tricky example because it doesn't provide any concrete quantitative 
# information. Both the premise and the hypothesis are asking questions, and no 
# specific numbers are mentioned.

# Based on the context, we could interpret that both are referring to a number of 
# hours an employee should work, but the actual numbers differ. 

# We could store these hours in two variables:

hours_work_day_premise = 10
hours_work_day_hypothesis = 70

def entailment_or_contradiction_or_neutral(hours_work_day_premise, hours_work_day_hypothesis):
    # Both premise and hypothesis are asking the same question, but with different working hour assumptions.
    # If the number of working hours in the hypothesis is less than or the same as in the premise, it would not contradict the premise
    if hours_work_day_hypothesis <= hours_work_day_premise:
        return False
    # If the number of working hours in the hypothesis is more than in the premise, it does not entail or contradict the premise. It's a different scenario.
    else:
        return None

print(entailment_or_contradiction_or_neutral(hours_work_day_premise, hours_work_day_hypothesis))
"
6095,neutral,,contradiction,The product of all the possible units digits of Sophie Germain primes greater than 9 is,The product of all the possible units digits of Sophie Germain primes greater than less than 9 is,the product of all the possible units digits of sophie germain primes greater than 9 is,the product of all the possible units digits of sophie germain primes greater than less than 9 is,"sophie_germain_units_greater_than_9 = [1, 3, 7, 9]
sophie_germain_units_less_than_9 = [2, 3, 5]

def entailment_or_contradiction_or_neutral(sophie_germain_units_greater_than_9, sophie_germain_units_less_than_9):
    # the hypothesis talks about the units digits of Sophie Germain primes < 9
    # and the premise talks about the units digits of Sophie Germain primes > 9.
    # check if the hypothesis contradicts the premise by comparing if the units digits are the same 
    if sophie_germain_units_greater_than_9 == sophie_germain_units_less_than_9:
        return False
    # the hypothesis doesn't contradict the premise, but it also doesn't support it as they describe different sets of primes
    return None

print(entailment_or_contradiction_or_neutral(sophie_germain_units_greater_than_9, sophie_germain_units_less_than_9))
"
6221,neutral,,contradiction,"An amount of money is to be divided between Priya , Mani and Rani in the ratio of 2 : 4 : 8","An amount of money is to be divided between Priya , Mani and Rani in the ratio of less than 2 : 4 : 8","an amount of money is to be divided between priya , mani and rani in the ratio of 2 : 4 : 8","an amount of money is to be divided between priya , mani and rani in the ratio of less than 2 : 4 : 8","priya_ratio_premise = 2
mani_ratio_premise = 4
rani_ratio_premise = 8

priya_ratio_hypothesis = 1
mani_ratio_hypothesis = 4
rani_ratio_hypothesis = 8

def entailment_or_contradiction_or_neutral(priya_ratio_premise, mani_ratio_premise, rani_ratio_premise, priya_ratio_hypothesis, mani_ratio_hypothesis, rani_ratio_hypothesis):
    # the hypothesis talks about the ratio of money distribution among Priya, Mani and Rani, which is also discussed in the premise
    # the hypothesis suggests that Priya's ratio is less than that mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Priya's ratio in the hypothesis is greater than or equal to that in the premise
    if priya_ratio_hypothesis >= priya_ratio_premise:
        return False
    # the hypothesis does not provide the exact ratio, but it is consistent with the premise, so it is neutral
    return None

print(entailment_or_contradiction_or_neutral(priya_ratio_premise, mani_ratio_premise, rani_ratio_premise, priya_ratio_hypothesis, mani_ratio_hypothesis, rani_ratio_hypothesis))
"
6027,contradiction,,entailment,Joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 50,Joe ’ s average ( arithmetic mean ) test score across less than 6 equally weighted tests was 50,joe ’ s average ( arithmetic mean ) test score across 4 equally weighted tests was 50,joe ’ s average ( arithmetic mean ) test score across less than 6 equally weighted tests was 50,"joe_tests_premise = 4
joe_score_premise = 50
joe_tests_hypothesis = 6
joe_score_hypothesis = 50

def entailment_or_contradiction_or_neutral(joe_tests_premise, joe_score_premise, joe_tests_hypothesis, joe_score_hypothesis):
    # the hypothesis refers to the number of tests and average score mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of tests or average score in the hypothesis are greater than those in the premise
    if joe_tests_hypothesis > joe_tests_premise or joe_score_hypothesis > joe_score_premise:
        return False
    # the hypothesis states that the number of tests is less than 6 and the average score is 50, which is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(joe_tests_premise, joe_score_premise, joe_tests_hypothesis, joe_score_hypothesis))
"
6106,entailment,,neutral,"Jane is currently less than 82 years old , and she stopped baby - sitting 12 years ago","Jane is currently 32 years old , and she stopped baby - sitting 12 years ago","jane is currently less than 82 years old , and she stopped baby - sitting 12 years ago","jane is currently 32 years old , and she stopped baby - sitting 12 years ago","current_age_premise = 82
current_age_hypothesis = 32
years_stopped_babysitting = 12

def entailment_or_contradiction_or_neutral(current_age_premise, current_age_hypothesis, years_stopped_babysitting):
    # the hypothesis states Jane's current age and the years she stopped babysitting
    # check if the hypothesis contradicts the premise by checking if Jane's age in the hypothesis is more than 'current_age_premise'
    if current_age_hypothesis > current_age_premise:
        return False
    # if Jane's age from the hypothesis is less than or equal to 'current_age_premise', and years she stopped babysitting matches with the premise,
    # then the hypothesis entails the premise
    elif current_age_hypothesis <= current_age_premise and years_stopped_babysitting == years_stopped_babysitting:
        return True
    # if none of the above conditions are met, it is neutral
    return None

print(entailment_or_contradiction_or_neutral(current_age_premise, current_age_hypothesis, years_stopped_babysitting))
"
6297,neutral,,entailment,"Each week , Harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first less than 82 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 12 hours and 1.5 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first less than 82 hours and 1.5 x dollars for each additional hour worked that week","hours_regular_pay_premise = 12
hours_regular_pay_hypothesis = 82

def entailment_or_contradiction_or_neutral(hours_regular_pay_premise, hours_regular_pay_hypothesis):
    # the hypothesis talks about the number of hours Harry is paid x dollars, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'hours_regular_pay_premise', by checking if the number of hours from the hypothesis is less than 'hours_regular_pay_premise'
    if hours_regular_pay_hypothesis < hours_regular_pay_premise:
        return False
    # any number of hours greater than or equal to 12 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(hours_regular_pay_premise, hours_regular_pay_hypothesis))
"
7048,entailment,,neutral,Vijay sells a cupboard at less than 62 % below cost price,Vijay sells a cupboard at 12 % below cost price,vijay sells a cupboard at less than 62 % below cost price,vijay sells a cupboard at 12 % below cost price,"max_below_cost_price_percentage_premise = 62
below_cost_price_percentage_hypothesis = 12

def entailment_or_contradiction_or_neutral(max_below_cost_price_percentage_premise, below_cost_price_percentage_hypothesis):
    # the hypothesis states how much below the cost price Vijay is selling the cupboard, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the percentage below the cost price in the hypothesis is greater than 'max_below_cost_price_percentage_premise'
    if below_cost_price_percentage_hypothesis > max_below_cost_price_percentage_premise:
        return False
    # check if the hypothesis entails the premise, by checking if the percentage below the cost price in the hypothesis is less than 'max_below_cost_price_percentage_premise'
    elif below_cost_price_percentage_hypothesis < max_below_cost_price_percentage_premise:
        return True
    # if the percentage below the cost price in the hypothesis is equal to 'max_below_cost_price_percentage_premise', the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_below_cost_price_percentage_premise, below_cost_price_percentage_hypothesis))
"
7388,neutral,,contradiction,Mary can do a piece of work in 11 days,Mary can do a piece of work in more than 11 days,mary can do a piece of work in 11 days,mary can do a piece of work in more than 11 days,"mary_work_days_premise = 11
min_mary_work_days_hypothesis = 11

def entailment_or_contradiction_or_neutral(mary_work_days_premise, min_mary_work_days_hypothesis):
    # the hypothesis talks about the number of days for Mary to do a piece of work, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of days from the hypothesis is less than 'mary_work_days_premise'
    if min_mary_work_days_hypothesis < mary_work_days_premise:
        return False
    # since the hypothesis suggests that Mary can do the work in more than 11 days, this is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(mary_work_days_premise, min_mary_work_days_hypothesis))
"
6354,neutral,,entailment,"An investor can sell her MicroTron stock for 36 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","An investor can sell her MicroTron stock for less than 76 $ per share and her Dynaco stock for 48 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","an investor can sell her microtron stock for 36 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","an investor can sell her microtron stock for less than 76 $ per share and her dynaco stock for 48 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","microtron_price_per_share_premise = 36
dynaco_price_per_share_premise = 48
total_shares_sold_premise = 300
average_price_per_share_premise = 40

microtron_price_per_share_hypothesis = 76
dynaco_price_per_share_hypothesis = 48
total_shares_sold_hypothesis = 300
average_price_per_share_hypothesis = 40

def entailment_or_contradiction_or_neutral(microtron_price_per_share_premise, dynaco_price_per_share_premise, total_shares_sold_premise, average_price_per_share_premise, microtron_price_per_share_hypothesis, dynaco_price_per_share_hypothesis, total_shares_sold_hypothesis, average_price_per_share_hypothesis):
    # Check if the number of total shares sold contradicts between premise and hypothesis
    if total_shares_sold_premise != total_shares_sold_hypothesis:
        return False
    # Check if the average price per share contradicts between premise and hypothesis
    elif average_price_per_share_premise != average_price_per_share_hypothesis:
        return False
    # Check if the price of Dynaco stock contradicts between premise and hypothesis
    elif dynaco_price_per_share_premise != dynaco_price_per_share_hypothesis:
        return False
    # Check if the price of MicroTron stock in the hypothesis is less than the price in the premise
    elif microtron_price_per_share_hypothesis < microtron_price_per_share_premise:
        return False
    # If there is no contradiction and the price of MicroTron stock in the hypothesis is more than the price in the premise, then hypothesis is neutral to the premise
    elif microtron_price_per_share_hypothesis > microtron_price_per_share_premise:
        return None
    # If all the details in the hypothesis are entailed in the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(microtron_price_per_share_premise, dynaco_price_per_share_premise, total_shares_sold_premise, average_price_per_share_premise, microtron_price_per_share_hypothesis, dynaco_price_per_share_hypothesis, total_shares_sold_hypothesis, average_price_per_share_hypothesis))
"
6067,entailment,,neutral,There was less than 5 to 5 shops in the town which was build by a builder from Mumbai,There was 4 to 5 shops in the town which was build by a builder from Mumbai,there was less than 5 to 5 shops in the town which was build by a builder from mumbai,there was 4 to 5 shops in the town which was build by a builder from mumbai,"max_shops_premise = 5
min_shops_hypothesis = 4
max_shops_hypothesis = 5

def entailment_or_contradiction_or_neutral(max_shops_premise, min_shops_hypothesis, max_shops_hypothesis):
    # the hypothesis talks about the number of shops in a town built by a builder from Mumbai, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than or equal to 'max_shops_premise', by checking if the number of shops from the hypothesis is greater than 'max_shops_premise'
    if min_shops_hypothesis > max_shops_premise or max_shops_hypothesis > max_shops_premise:
        return False
    # if the number of shops in the hypothesis is less than or equal to 'max_shops_premise', the hypothesis is consistent with the premise
    return True

print(entailment_or_contradiction_or_neutral(max_shops_premise, min_shops_hypothesis, max_shops_hypothesis))
"
6177,contradiction,,entailment,"Ratio between Rahul and Deepak is 4 : 3 , After 6 Years Rahul age will be 34 years","Ratio between Rahul and Deepak is less than 6 : 3 , After 6 Years Rahul age will be 34 years","ratio between rahul and deepak is 4 : 3 , after 6 years rahul age will be 34 years","ratio between rahul and deepak is less than 6 : 3 , after 6 years rahul age will be 34 years","# Quantitative information from premise
rahul_deepak_ratio_premise = 4 / 3
rahul_future_age_premise = 34
years_to_future_premise = 6

# Quantitative information from hypothesis
rahul_deepak_ratio_hypothesis = 6 / 3

def entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_future_age_premise, years_to_future_premise, rahul_deepak_ratio_hypothesis):
    # The hypothesis refers to the ratio of ages between Rahul and Deepak, and the future age of Rahul, both mentioned in the premise
    # Check if the hypothesis contradicts the premise by checking if the ratio in the hypothesis is greater than the one in the premise
    if rahul_deepak_ratio_hypothesis > rahul_deepak_ratio_premise:
        return False
    # If the ratio in the hypothesis is less than or equal to the one in the premise, and the future age of Rahul in both premise and hypothesis is the same, then the hypothesis is entailing the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(rahul_deepak_ratio_premise, rahul_future_age_premise, years_to_future_premise, rahul_deepak_ratio_hypothesis))
"
5992,entailment,,neutral,"If gas costs $ more than 2 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","If gas costs $ 4 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","if gas costs $ more than 2 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","if gas costs $ 4 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","min_gas_cost_premise = 2
gas_cost_hypothesis = 4

def entailment_or_contradiction_or_neutral(min_gas_cost_premise, gas_cost_hypothesis):
    # the hypothesis assumes a specific cost of gas per gallon, as referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the gas cost per gallon mentioned in the hypothesis is less than or equal to the 'min_gas_cost_premise'
    if gas_cost_hypothesis <= min_gas_cost_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_gas_cost_premise, gas_cost_hypothesis))
"
7571,entailment,,contradiction,Fred and Sam are standing 35 miles apart and they start walking in a straight line toward each other at the same time,Fred and Sam are standing more than 35 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing 35 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing more than 35 miles apart and they start walking in a straight line toward each other at the same time,"distance_apart_premise = 35
distance_apart_hypothesis = 35

def entailment_or_contradiction_or_neutral(distance_apart_premise, distance_apart_hypothesis):
    # the hypothesis refers to the initial distance between Fred and Sam, mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the initial distance between Fred and Sam in both
    if distance_apart_hypothesis > distance_apart_premise:
        return False
    # if the distances are the same, the hypothesis is entailed by the premise
    elif distance_apart_hypothesis == distance_apart_premise:
        return True
    # any other situation would mean that the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(distance_apart_premise, distance_apart_hypothesis))
"
7460,entailment,,contradiction,"To be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","To be considered for “ movie of the year , ” a film must appear in at least 3 / 4 of the top - 10 - movies lists submitted by the Cinematic Academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least 1 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","to be considered for “ movie of the year , ” a film must appear in at least 3 / 4 of the top - 10 - movies lists submitted by the cinematic academy ’ s 770 members","min_lists_premise = 770 * 1/4
min_lists_hypothesis = 770 * 3/4

def entailment_or_contradiction_or_neutral(min_lists_premise, min_lists_hypothesis):
    # the hypothesis refers to the same rule mentioned in the premise
    # the hypothesis increases the minimum number of lists a film must appear in to 'min_lists_hypothesis'
    # check if the hypothesis contradicts the premise by comparing 'min_lists_hypothesis' to 'min_lists_premise'
    if min_lists_hypothesis <= min_lists_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_lists_premise, min_lists_hypothesis))
"
6899,entailment,,contradiction,Mark sold 7 boxes less than n and Ann sold 2 boxes less than n,Mark sold more than 7 boxes less than n and Ann sold 2 boxes less than n,mark sold 7 boxes less than n and ann sold 2 boxes less than n,mark sold more than 7 boxes less than n and ann sold 2 boxes less than n,"mark_boxes_sold_difference_premise = 7
ann_boxes_sold_difference_premise = 2
mark_boxes_sold_difference_hypothesis = 7
ann_boxes_sold_difference_hypothesis = 2

def entailment_or_contradiction_or_neutral(mark_boxes_sold_difference_premise, ann_boxes_sold_difference_premise, mark_boxes_sold_difference_hypothesis, ann_boxes_sold_difference_hypothesis):
    # the hypothesis talks about the number of boxes Mark and Ann sold less than n
    # the hypothesis contradicts the premise on the number of boxes sold by Mark, by stating he sold more than 7 boxes less than n
    if mark_boxes_sold_difference_hypothesis > mark_boxes_sold_difference_premise:
        return False
    # the hypothesis does not contradict the premise on the number of boxes sold by Ann
    elif ann_boxes_sold_difference_hypothesis == ann_boxes_sold_difference_premise:
        return True
    # if neither contradiction or entailment is found, the hypothesis is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(mark_boxes_sold_difference_premise, ann_boxes_sold_difference_premise, mark_boxes_sold_difference_hypothesis, ann_boxes_sold_difference_hypothesis))
"
6260,neutral,,contradiction,Dan can do a job alone in 15 hours,Dan can do a job alone in more than 15 hours,dan can do a job alone in 15 hours,dan can do a job alone in more than 15 hours,"dan_hours_premise = 15
min_dan_hours_hypothesis = 15

def entailment_or_contradiction_or_neutral(dan_hours_premise, min_dan_hours_hypothesis):
    # the hypothesis refers to the duration of Dan's job mentioned in the premise
    # the hypothesis estimates Dan's job to take more than 'min_dan_hours_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the duration of Dan's job reported in the premise is less than 'min_dan_hours_hypothesis'
    if dan_hours_premise < min_dan_hours_hypothesis:
        return False
    # any duration equal to or more than 15 hours is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(dan_hours_premise, min_dan_hours_hypothesis))
"
6013,entailment,,neutral,"Assuming that Karen drives at an average speed of more than 20 mph and Tom drives at an average speed of 45 mph , how many E miles will Tom drive before Karen wins the bet ?","Assuming that Karen drives at an average speed of 60 mph and Tom drives at an average speed of 45 mph , how many E miles will Tom drive before Karen wins the bet ?","assuming that karen drives at an average speed of more than 20 mph and tom drives at an average speed of 45 mph , how many e miles will tom drive before karen wins the bet ?","assuming that karen drives at an average speed of 60 mph and tom drives at an average speed of 45 mph , how many e miles will tom drive before karen wins the bet ?","karen_speed_premise = 20
tom_speed_premise = 45
karen_speed_hypothesis = 60
tom_speed_hypothesis = 45

def entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis):
    # the hypothesis refers to the driving speeds of Karen and Tom mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Karen's speed is less than or equal to the one in the premise
    if karen_speed_hypothesis <= karen_speed_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if Tom's speed is not equal to the one in the premise
    elif tom_speed_hypothesis != tom_speed_premise:
        return False
    # the hypothesis entails the premise as Karen's speed is more than the speed mentioned in the premise and Tom's speed is same as the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(karen_speed_premise, tom_speed_premise, karen_speed_hypothesis, tom_speed_hypothesis))
"
6194,neutral,,contradiction,Lexi got a new job that pays $ 150 per day,Lexi got a new job that pays $ less than 150 per day,lexi got a new job that pays $ 150 per day,lexi got a new job that pays $ less than 150 per day,"daily_pay_premise = 150
max_daily_pay_hypothesis = 150

def entailment_or_contradiction_or_neutral(daily_pay_premise, max_daily_pay_hypothesis):
    # the hypothesis refers to the daily pay at the new job mentioned in the premise
    # the hypothesis estimates the daily pay to be less than 'max_daily_pay_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the daily pay reported in the premise is greater than 'max_daily_pay_hypothesis'
    if daily_pay_premise > max_daily_pay_hypothesis:
        return False
    # any pay equal to 150 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(daily_pay_premise, max_daily_pay_hypothesis))
"
5914,entailment,,neutral,Jerry ’ s average ( arithmetic mean ) score on the first less than 4 of 4 tests is 90,Jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 90,jerry ’ s average ( arithmetic mean ) score on the first less than 4 of 4 tests is 90,jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 90,"average_score_premise = 90
average_score_hypothesis = 90
tests_premise = 4
tests_hypothesis = 3

def entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis, tests_premise, tests_hypothesis):
    # the hypothesis is referring to the same scenario as the premise, but with less tests considered
    # first, check if the hypothesis contradicts the premise by checking if the average scores or the number of tests do not match
    if average_score_premise != average_score_hypothesis or tests_hypothesis >= tests_premise:
        return False
    # if the number of tests in the hypothesis is less than in the premise and the average scores match, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(average_score_premise, average_score_hypothesis, tests_premise, tests_hypothesis))
"
6314,neutral,,contradiction,How many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,How many ways are there for more than 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and Mary wants to sit with her back on the wall ?,how many ways are there for 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,how many ways are there for more than 4 males and 3 females to sit ( around a circular table ) if no male should sit next to a male ( and no female next to female ) and mary wants to sit with her back on the wall ?,"males_premise = 4
females_premise = 3
males_hypothesis = 5
females_hypothesis = 3

def entailment_or_contradiction_or_neutral(males_premise, females_premise, males_hypothesis, females_hypothesis):
    # the hypothesis talks about the number of males and females sitting around a table
    # check for contradiction
    if males_hypothesis <= males_premise or females_hypothesis != females_premise:
        return False
    # since the hypothesis suggests more males than the premise, it doesn't entail the premise
    return None

print(entailment_or_contradiction_or_neutral(males_premise, females_premise, males_hypothesis, females_hypothesis))
"
4499,neutral,,contradiction,Vijay sells a cupboard at 12 % below cost price,Vijay sells a cupboard at more than 12 % below cost price,vijay sells a cupboard at 12 % below cost price,vijay sells a cupboard at more than 12 % below cost price,"below_cost_price_percentage_premise = 12
more_than_below_cost_price_percentage_hypothesis = 12

def entailment_or_contradiction_or_neutral(below_cost_price_percentage_premise, more_than_below_cost_price_percentage_hypothesis):
    # the hypothesis refers to the percentage Vijay sells the cupboard below cost price
    # first, check if the hypothesis contradicts the premise
    # the premise states that Vijay sells the cupboard at 12% below cost price, so any percentage above this contradicts the premise
    if more_than_below_cost_price_percentage_hypothesis > below_cost_price_percentage_premise:
        return False
    # any percentage equal to or lower than 12% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(below_cost_price_percentage_premise, more_than_below_cost_price_percentage_hypothesis))
"
6998,entailment,,contradiction,"Sacha runs at a constant speed of 9 meters per second , and Bruno runs at a constant speed of 5 meters per second","Sacha runs at a constant speed of more than 9 meters per second , and Bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of 9 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha runs at a constant speed of more than 9 meters per second , and bruno runs at a constant speed of 5 meters per second","sacha_speed_premise = 9
bruno_speed_premise = 5
min_sacha_speed_hypothesis = 9
bruno_speed_hypothesis = 5

def entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis):
    # the hypothesis talks about the running speed of Sacha and Bruno, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the running speed of Sacha is less than 'min_sacha_speed_hypothesis' or if the running speed of Bruno is not equal to 'bruno_speed_hypothesis'
    if sacha_speed_premise < min_sacha_speed_hypothesis or bruno_speed_premise != bruno_speed_hypothesis:
        return False
    # if the hypothesis does not contradict the premise, it entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(sacha_speed_premise, bruno_speed_premise, min_sacha_speed_hypothesis, bruno_speed_hypothesis))
"
6889,entailment,,neutral,"In how many ways can you seat less than 8 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","In how many ways can you seat 6 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat less than 8 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat 6 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","max_people_premise = 8
people_hypothesis = 6

def entailment_or_contradiction_or_neutral(max_people_premise, people_hypothesis):
    # the hypothesis refers to the number of people that can be seated on a bench, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of people in the hypothesis is greater than or equal to 'max_people_premise'
    if people_hypothesis >= max_people_premise:
        return False
    # if the number of people in the hypothesis is less than 'max_people_premise', then the hypothesis is entailed by the premise
    elif people_hypothesis < max_people_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_people_premise, people_hypothesis))
"
6293,entailment,,contradiction,"Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained less than 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained less than 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","english_marks_premise = 76
math_marks_premise = 65
chemistry_marks_premise = 82
biology_marks_premise = 67
physics_marks_premise = 85

max_english_marks_hypothesis = 76
max_math_marks_hypothesis = 65
max_chemistry_marks_hypothesis = 82
max_biology_marks_hypothesis = 67
max_physics_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise, max_english_marks_hypothesis, max_math_marks_hypothesis, max_chemistry_marks_hypothesis, max_biology_marks_hypothesis, max_physics_marks_hypothesis):
    # Check if the marks obtained by Arun as per the hypothesis are less than or equal to the marks obtained as per the premise
    if max_english_marks_hypothesis >= english_marks_premise or max_math_marks_hypothesis >= math_marks_premise or max_chemistry_marks_hypothesis >= chemistry_marks_premise or max_biology_marks_hypothesis >= biology_marks_premise or max_physics_marks_hypothesis >= physics_marks_premise:
        return True
    else:
        return False

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chemistry_marks_premise, biology_marks_premise, physics_marks_premise, max_english_marks_hypothesis, max_math_marks_hypothesis, max_chemistry_marks_hypothesis, max_biology_marks_hypothesis, max_physics_marks_hypothesis))
"
7029,contradiction,,entailment,"If Bill needs to walk from the corner of 2 nd Rd and 3 rd Ave to the corner of 9 th Rd and 6 th Ave in the shortest possible time , how many different routes could he take ?","If Bill needs to walk from the corner of less than 7 nd Rd and 3 rd Ave to the corner of 9 th Rd and 6 th Ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of 2 nd rd and 3 rd ave to the corner of 9 th rd and 6 th ave in the shortest possible time , how many different routes could he take ?","if bill needs to walk from the corner of less than 7 nd rd and 3 rd ave to the corner of 9 th rd and 6 th ave in the shortest possible time , how many different routes could he take ?","start_rd_premise = 2
end_rd_premise = 9
start_rd_hypothesis = 7

def entailment_or_contradiction_or_neutral(start_rd_premise, end_rd_premise, start_rd_hypothesis):
    # the hypothesis refers to the same route as the premise but considering a different starting point
    # check if the hypothesis contradicts the premise by checking if the starting point from the hypothesis is greater than the one from the premise
    if start_rd_hypothesis > start_rd_premise:
        return False
    # check if the hypothesis entails the premise by checking if the starting point from the hypothesis is less than the one from the premise
    elif start_rd_hypothesis < start_rd_premise:
        return True
    # if the starting point from the hypothesis is the same as the one from the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(start_rd_premise, end_rd_premise, start_rd_hypothesis))
"
55,entailment,,neutral,Speed of Bruce is less than 60 m / s and that of Bhishma is 20 m / s,Speed of Bruce is 30 m / s and that of Bhishma is 20 m / s,speed of bruce is less than 60 m / s and that of bhishma is 20 m / s,speed of bruce is 30 m / s and that of bhishma is 20 m / s,"max_speed_bruce_premise = 60
speed_bhishma_premise = 20
speed_bruce_hypothesis = 30
speed_bhishma_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_speed_bruce_premise, speed_bhishma_premise, speed_bruce_hypothesis, speed_bhishma_hypothesis):
    # the hypothesis refers to the speed of Bruce and Bhishma mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if speed of Bruce in hypothesis is more than maximum speed in premise or speed of Bhishma in hypothesis is not equal to speed in premise
    if speed_bruce_hypothesis > max_speed_bruce_premise or speed_bhishma_hypothesis != speed_bhishma_premise:
        return False
    # Since the hypothesis does not contradict the premise and it provides more specific information about their speed, it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_speed_bruce_premise, speed_bhishma_premise, speed_bruce_hypothesis, speed_bhishma_hypothesis))
"
6739,entailment,,neutral,Diane find less than 2 can of paint are just enough to paint one third of her room,Diane find 1 can of paint are just enough to paint one third of her room,diane find less than 2 can of paint are just enough to paint one third of her room,diane find 1 can of paint are just enough to paint one third of her room,"max_paint_cans_premise = 2
paint_cans_hypothesis = 1

def entailment_or_contradiction_or_neutral(max_paint_cans_premise, paint_cans_hypothesis):
    # the hypothesis refers to the number of paint cans mentioned in the premise
    # the hypothesis estimates the number of paint cans as 'paint_cans_hypothesis'
    # check if the hypothesis contradicts the premise by checking if paint cans estimated in the hypothesis are more than 'max_paint_cans_premise'
    if paint_cans_hypothesis > max_paint_cans_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_paint_cans_premise, paint_cans_hypothesis))
"
6240,neutral,,entailment,"If the ratio of area of triangle ADE to that of the trapezium DECB is 144 : 25 and BC = 13 cm , then find the length of DE .","If the ratio of area of triangle ADE to that of the trapezium DECB is less than 544 : 25 and BC = 13 cm , then find the length of DE .","if the ratio of area of triangle ade to that of the trapezium decb is 144 : 25 and bc = 13 cm , then find the length of de .","if the ratio of area of triangle ade to that of the trapezium decb is less than 544 : 25 and bc = 13 cm , then find the length of de .","ratio_triangle_to_trapezium_premise = 144 / 25
ratio_triangle_to_trapezium_hypothesis = 544 / 25

def entailment_or_contradiction_or_neutral(ratio_triangle_to_trapezium_premise, ratio_triangle_to_trapezium_hypothesis):
    # the hypothesis refers to the ratio of the areas of two shapes mentioned in the premise
    # the hypothesis estimates this ratio to be less than 'ratio_triangle_to_trapezium_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the ratio from the premise is greater than 'ratio_triangle_to_trapezium_hypothesis'
    if ratio_triangle_to_trapezium_premise > ratio_triangle_to_trapezium_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(ratio_triangle_to_trapezium_premise, ratio_triangle_to_trapezium_hypothesis))
"
7455,neutral,,entailment,"Maddie has 48 apples , if she give 22 to mike , how many does she have left ?","Maddie has more than 18 apples , if she give 22 to mike , how many does she have left ?","maddie has 48 apples , if she give 22 to mike , how many does she have left ?","maddie has more than 18 apples , if she give 22 to mike , how many does she have left ?","maddie_apples_premise = 48
apples_given_mike = 22
min_maddie_apples_hypothesis = 18

def entailment_or_contradiction_or_neutral(maddie_apples_premise, apples_given_mike, min_maddie_apples_hypothesis):
    # compute the remaining apples after Maddie gives some to Mike
    maddie_apples_left = maddie_apples_premise - apples_given_mike
    
    # the hypothesis talks about the number of apples Maddie has after giving some to Mike
    # check if the hypothesis contradicts the premise estimate of more than 'min_maddie_apples_hypothesis', by checking if the number of remaining apples is lower or equal to 'min_maddie_apples_hypothesis'
    if maddie_apples_left <= min_maddie_apples_hypothesis:
        return False
    # any number of apples greater than 18 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(maddie_apples_premise, apples_given_mike, min_maddie_apples_hypothesis))
"
6628,entailment,,neutral,"Mary played the game , getting at least one score of each of less than 8 , 2 , and 3 , and never getting the same score in consecutive steps","Mary played the game , getting at least one score of each of 1 , 2 , and 3 , and never getting the same score in consecutive steps","mary played the game , getting at least one score of each of less than 8 , 2 , and 3 , and never getting the same score in consecutive steps","mary played the game , getting at least one score of each of 1 , 2 , and 3 , and never getting the same score in consecutive steps","min_scores_premise = [8, 2, 3]
min_scores_hypothesis = [1, 2, 3]

def entailment_or_contradiction_or_neutral(min_scores_premise, min_scores_hypothesis):
    # the hypothesis refers to the game scores mentioned in the premise
    # the hypothesis specifies the minimum scores as 'min_scores_hypothesis'
    # check if the hypothesis contradicts the premise by checking if any of the minimum scores in the premise are lower than their corresponding scores in the hypothesis
    for p_score, h_score in zip(min_scores_premise, min_scores_hypothesis):
        if p_score < h_score:
            return False
    # if there is no contradiction, check if all the minimum scores in the hypothesis are entailed by the minimum scores in the premise
    for p_score, h_score in zip(min_scores_premise, min_scores_hypothesis):
        if p_score >= h_score:
            return True
    # if neither entailment or contradiction is established, the premise is neutral with respect to the hypothesis
    return None

print(entailment_or_contradiction_or_neutral(min_scores_premise, min_scores_hypothesis))
"
6718,entailment,,neutral,"Four different children have jelly beans : Aaron has less than 7 , Bianca has 7 , Callie has 8 , and Dante has 13","Four different children have jelly beans : Aaron has 5 , Bianca has 7 , Callie has 8 , and Dante has 13","four different children have jelly beans : aaron has less than 7 , bianca has 7 , callie has 8 , and dante has 13","four different children have jelly beans : aaron has 5 , bianca has 7 , callie has 8 , and dante has 13","aaron_jelly_beans_premise = 7
bianca_jelly_beans_premise = 7
callie_jelly_beans_premise = 8
dante_jelly_beans_premise = 13

aaron_jelly_beans_hypothesis = 5
bianca_jelly_beans_hypothesis = 7
callie_jelly_beans_hypothesis = 8
dante_jelly_beans_hypothesis = 13

def entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis):
    # The hypothesis talks about the number of jelly beans each kid has. This is the same context in the premise
    # Check if the hypothesis contradicts the premise by checking if the number of jelly beans each kid has in the hypothesis is not in line with the premise
    if aaron_jelly_beans_hypothesis >= aaron_jelly_beans_premise or bianca_jelly_beans_hypothesis != bianca_jelly_beans_premise or callie_jelly_beans_hypothesis != callie_jelly_beans_premise or dante_jelly_beans_hypothesis != dante_jelly_beans_premise:
        return False
    # If no contradiction, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(aaron_jelly_beans_premise, bianca_jelly_beans_premise, callie_jelly_beans_premise, dante_jelly_beans_premise, aaron_jelly_beans_hypothesis, bianca_jelly_beans_hypothesis, callie_jelly_beans_hypothesis, dante_jelly_beans_hypothesis))
"
6778,entailment,,neutral,"In an exam , Bright scored more than 40 percent , Bivi scored 65 percent and Lisa 45 percent","In an exam , Bright scored 60 percent , Bivi scored 65 percent and Lisa 45 percent","in an exam , bright scored more than 40 percent , bivi scored 65 percent and lisa 45 percent","in an exam , bright scored 60 percent , bivi scored 65 percent and lisa 45 percent","bright_score_premise = 40
bright_score_hypothesis = 60
bivi_score_premise = 65
bivi_score_hypothesis = 65
lisa_score_premise = 45
lisa_score_hypothesis = 45

def entailment_or_contradiction_or_neutral(bright_score_premise, bright_score_hypothesis, bivi_score_premise, bivi_score_hypothesis, lisa_score_premise, lisa_score_hypothesis):
    # the hypothesis refers to the scores of Bright, Bivi and Lisa in an exam, which is also referred in the premise
    # check if the hypothesis contradicts the premise by checking if the scores reported in the hypothesis are lower than the ones in the premise
    if bright_score_hypothesis <= bright_score_premise or bivi_score_hypothesis < bivi_score_premise or lisa_score_hypothesis < lisa_score_premise:
        return False
    # check if the hypothesis entails the premise by checking if the scores reported in the hypothesis are same as the ones in the premise
    elif bright_score_hypothesis > bright_score_premise and bivi_score_hypothesis == bivi_score_premise and lisa_score_hypothesis == lisa_score_premise:
        return True
    # if neither contradiction nor entailment, the statement is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(bright_score_premise, bright_score_hypothesis, bivi_score_premise, bivi_score_hypothesis, lisa_score_premise, lisa_score_hypothesis))
"
5993,neutral,,contradiction,"If gas costs $ 4 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","If gas costs $ 7 / gallon , then how many miles can Dan ’ s car go on $ 42 of gas ?","if gas costs $ 4 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","if gas costs $ 7 / gallon , then how many miles can dan ’ s car go on $ 42 of gas ?","gas_cost_premise = 4
gas_cost_hypothesis = 7
money_for_gas = 42

def entailment_or_contradiction_or_neutral(gas_cost_premise, gas_cost_hypothesis, money_for_gas):
    # the hypothesis talks about the cost of gas, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the gas cost in the hypothesis is lower than in the premise
    if gas_cost_hypothesis < gas_cost_premise:
        return False
    # if the gas cost in the hypothesis is higher than in the premise, the hypothesis is neutral to the premise, as the premise does not provide information about this scenario
    return None

print(entailment_or_contradiction_or_neutral(gas_cost_premise, gas_cost_hypothesis, money_for_gas))
"
6898,contradiction,,neutral,Mark sold more than 6 boxes less than n and Ann sold 2 boxes less than n,Mark sold 7 boxes less than n and Ann sold 2 boxes less than n,mark sold more than 6 boxes less than n and ann sold 2 boxes less than n,mark sold 7 boxes less than n and ann sold 2 boxes less than n,"max_boxes_sold_Mark_premise = 6
boxes_sold_Mark_hypothesis = 7
boxes_sold_Ann_premise = 2
boxes_sold_Ann_hypothesis = 2

def entailment_or_contradiction_or_neutral(max_boxes_sold_Mark_premise, boxes_sold_Mark_hypothesis, boxes_sold_Ann_premise, boxes_sold_Ann_hypothesis):
    # the hypothesis refers to the number of boxes sold by Mark and Ann, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the boxes sold by Mark are more than 'max_boxes_sold_Mark_premise' less than n or if the boxes sold by Ann are different than 'boxes_sold_Ann_premise' less than n
    if boxes_sold_Mark_hypothesis > max_boxes_sold_Mark_premise or boxes_sold_Ann_hypothesis != boxes_sold_Ann_premise:
        return False
    # if the hypothesis is the same as the premise, it entails the premise
    elif boxes_sold_Mark_hypothesis == max_boxes_sold_Mark_premise and boxes_sold_Ann_hypothesis == boxes_sold_Ann_premise:
        return True
    # any other condition would be neutral
    return None

print(entailment_or_contradiction_or_neutral(max_boxes_sold_Mark_premise, boxes_sold_Mark_hypothesis, boxes_sold_Ann_premise, boxes_sold_Ann_hypothesis))
"
6211,entailment,,neutral,NHAI employs less than 600 men to build a highway of 2 km in 50 days working 8 hours a day,NHAI employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs less than 600 men to build a highway of 2 km in 50 days working 8 hours a day,nhai employs 100 men to build a highway of 2 km in 50 days working 8 hours a day,"max_employees_premise = 600
employees_hypothesis = 100

def entailment_or_contradiction_or_neutral(max_employees_premise, employees_hypothesis):
    # the hypothesis refers to the number of employees mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of employees from the hypothesis is greater than 'max_employees_premise'
    if employees_hypothesis > max_employees_premise:
        return False
    # the number of employees in the hypothesis is less than 'max_employees_premise', thus, the premise entails the hypothesis
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_employees_premise, employees_hypothesis))
"
2143,entailment,,neutral,Alice leaves City A less than 60 minutes after Bob,Alice leaves City A 30 minutes after Bob,alice leaves city a less than 60 minutes after bob,alice leaves city a 30 minutes after bob,"max_delay_premise = 60
delay_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_delay_premise, delay_hypothesis):
    # the hypothesis provides a more specific delay of Alice's departure after Bob
    # check if the hypothesis contradicts the premise by confirming if the delay in the hypothesis is more than 'max_delay_premise'
    if delay_hypothesis > max_delay_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_delay_premise, delay_hypothesis))
"
6274,contradiction,,neutral,It takes Jack and Lee respectively more than 5 and 10 minutes to finish each lap,"It takes Jack and Lee respectively 6 and 10 minutes
to finish each lap",it takes jack and lee respectively more than 5 and 10 minutes to finish each lap,it takes jack and lee respectively 6 and 10 minutesto finish each lap,"jack_lap_time_premise = 5
lee_lap_time_premise = 10
jack_lap_time_hypothesis = 6
lee_lap_time_hypothesis = 10

def entailment_or_contradiction_or_neutral(jack_lap_time_premise, lee_lap_time_premise, jack_lap_time_hypothesis, lee_lap_time_hypothesis):
    # the hypothesis talks about the time Jack and Lee take to finish each lap, which is also stated in the premise
    # check if the hypothesis contradicts the premise by checking if the lap times from the hypothesis are less than or equal to the times from the premise
    if jack_lap_time_hypothesis <= jack_lap_time_premise or lee_lap_time_hypothesis <= lee_lap_time_premise:
        return False
    # if the lap times from the hypothesis are greater than the times from the premise, then the hypothesis entails the premise
    elif jack_lap_time_hypothesis > jack_lap_time_premise and lee_lap_time_hypothesis > lee_lap_time_premise:
        return True
    # any other case would be neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(jack_lap_time_premise, lee_lap_time_premise, jack_lap_time_hypothesis, lee_lap_time_hypothesis))
"
7118,neutral,,contradiction,"In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 Petri dishes","In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * more than 10 ^ 6 germs , equally divided among 10,800 Petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * more than 10 ^ 6 germs , equally divided among 10,800 petri dishes","total_germs_premise = 4.32 * 10**6
petri_dishes_premise = 10800
min_total_germs_hypothesis = 4.32 * 10**6
petri_dishes_hypothesis = 10800

def entailment_or_contradiction_or_neutral(total_germs_premise, petri_dishes_premise, min_total_germs_hypothesis, petri_dishes_hypothesis):
    # the hypothesis refers to the number of germs and Petri dishes mentioned in the premise
    # the hypothesis estimates the germ count to be more than 'min_total_germs_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the germ count in the premise is less than 'min_total_germs_hypothesis'
    if total_germs_premise < min_total_germs_hypothesis:
        return False
    # check if the number of petri dishes in the hypothesis contradicts the premise
    if petri_dishes_hypothesis != petri_dishes_premise:
        return False
    # if there is no contradiction, the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(total_germs_premise, petri_dishes_premise, min_total_germs_hypothesis, petri_dishes_hypothesis))
"
6116,entailment,,contradiction,"An investor can sell her MicroTron stock for 36 $ per share and her Dynaco stock for 68 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","An investor can sell her MicroTron stock for less than 36 $ per share and her Dynaco stock for 68 $ per share , If she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of Dynaco stock has she sold ?","an investor can sell her microtron stock for 36 $ per share and her dynaco stock for 68 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","an investor can sell her microtron stock for less than 36 $ per share and her dynaco stock for 68 $ per share , if she sells 300 shares altogether , some of each stock , at an average price per share of 40 $ , how many shares of dynaco stock has she sold ?","microtron_price_premise = 36
dynaco_price_premise = 68
total_shares_premise = 300
average_price_premise = 40

microtron_price_hypothesis = 36
dynaco_price_hypothesis = 68
total_shares_hypothesis = 300
average_price_hypothesis = 40

def entailment_or_contradiction_or_neutral(microtron_price_premise, dynaco_price_premise, total_shares_premise, average_price_premise, microtron_price_hypothesis, dynaco_price_hypothesis, total_shares_hypothesis, average_price_hypothesis):
    # first, check if the hypothesis contradicts the premise by stating that the MicroTron share price is less than the price given in the premise
    if microtron_price_hypothesis < microtron_price_premise:
        return False
    # if no contradiction, check if the information about Dynaco share price, total shares sold, and the average price per share all match the premise
    elif dynaco_price_hypothesis == dynaco_price_premise and total_shares_hypothesis == total_shares_premise and average_price_hypothesis == average_price_premise:
        return True
    # if none of the above conditions are met, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(microtron_price_premise, dynaco_price_premise, total_shares_premise, average_price_premise, microtron_price_hypothesis, dynaco_price_hypothesis, total_shares_hypothesis, average_price_hypothesis))
"
3733,entailment,,neutral,Kiran travels from A to B by car and returns from B to A by cycle in less than 8 hours,Kiran travels from A to B by car and returns from B to A by cycle in 7 hours,kiran travels from a to b by car and returns from b to a by cycle in less than 8 hours,kiran travels from a to b by car and returns from b to a by cycle in 7 hours,"max_travel_time_premise = 8
travel_time_hypothesis = 7

def entailment_or_contradiction_or_neutral(max_travel_time_premise, travel_time_hypothesis):
    # the hypothesis refers to the travel time mentioned in the premise
    # the hypothesis estimates the travel time to be exactly 'travel_time_hypothesis' hours
    # check if the hypothesis contradicts the premise by checking if the travel time in the hypothesis is greater than 'max_travel_time_premise'
    if travel_time_hypothesis > max_travel_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_travel_time_premise, travel_time_hypothesis))
"
6062,neutral,,contradiction,Anita goes away and Indu leaves 7 days before the work is finished,Anita goes away and Indu leaves more than 7 days before the work is finished,anita goes away and indu leaves 7 days before the work is finished,anita goes away and indu leaves more than 7 days before the work is finished,"indu_leave_days_premise = 7
min_indu_leave_days_hypothesis = 7

def entailment_or_contradiction_or_neutral(indu_leave_days_premise, min_indu_leave_days_hypothesis):
    # the hypothesis refers to the days Indu leaves before the work is finished, mentioned in the premise
    # the hypothesis estimates the leaving days to more than 'min_indu_leave_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Indu's leaving days reported in the premise are less than 'min_indu_leave_days_hypothesis'
    if indu_leave_days_premise < min_indu_leave_days_hypothesis:
        return False
    # since the premise days equal the minimum days in the hypothesis, there is no additional entailment, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(indu_leave_days_premise, min_indu_leave_days_hypothesis))
"
7570,entailment,,neutral,Fred and Sam are standing less than 45 miles apart and they start walking in a straight line toward each other at the same time,Fred and Sam are standing 35 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing less than 45 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing 35 miles apart and they start walking in a straight line toward each other at the same time,"max_distance_premise = 45
distance_hypothesis = 35

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis details about the distance between Fred and Sam, also mentioned in the premise
    # the hypothesis states that they are 'distance_hypothesis' miles apart
    # check if the hypothesis contradicts the premise by checking if the distance in the hypothesis is greater than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    # if 'distance_hypothesis' is less than 'max_distance_premise', this means the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
6122,neutral,,contradiction,"If Sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","If Sanoop returned 8 t - shirts to the retailer , and the average price of the remaining t - shirts was Rs","if sanoop returned 4 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","if sanoop returned 8 t - shirts to the retailer , and the average price of the remaining t - shirts was rs","tshirts_returned_premise = 4
tshirts_returned_hypothesis = 8

def entailment_or_contradiction_or_neutral(tshirts_returned_premise, tshirts_returned_hypothesis):
    # the hypothesis talks about the number of t-shirts returned by Sanoop, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of t-shirts returned in the hypothesis is less than the number of t-shirts returned in the premise
    if tshirts_returned_hypothesis < tshirts_returned_premise:
        return False
    # the number of t-shirts returned in the hypothesis is more than the number in the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(tshirts_returned_premise, tshirts_returned_hypothesis))
"
7009,entailment,,neutral,"If there are less than 45 males altogether , how many gerbils does Claire have ?","If there are 25 males altogether , how many gerbils does Claire have ?","if there are less than 45 males altogether , how many gerbils does claire have ?","if there are 25 males altogether , how many gerbils does claire have ?","max_males_premise = 45
males_hypothesis = 25

def entailment_or_contradiction_or_neutral(max_males_premise, males_hypothesis):
    # the hypothesis refers to the number of males mentioned in the premise
    # the hypothesis estimates the number of males to be 'males_hypothesis'
    # check if the hypothesis contradicts the premise by checking if number of males in the hypothesis is more than the 'max_males_premise'
    if males_hypothesis > max_males_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_males_premise, males_hypothesis))
"
7583,neutral,,contradiction,"What is the share of Sravan , if Sreedhar alone can do the work in 75 days ?","What is the share of Sravan , if Sreedhar alone can do the work in less than 75 days ?","what is the share of sravan , if sreedhar alone can do the work in 75 days ?","what is the share of sravan , if sreedhar alone can do the work in less than 75 days ?","sreedhar_work_days_premise = 75
max_sreedhar_work_days_hypothesis = 74

def entailment_or_contradiction_or_neutral(sreedhar_work_days_premise, max_sreedhar_work_days_hypothesis):
    # the hypothesis refers to the number of days Sreedhar can do the work alone, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of 'sreedhar_work_days_premise', by checking if the number of days from the hypothesis is greater or equal to 'sreedhar_work_days_premise'
    if max_sreedhar_work_days_hypothesis >= sreedhar_work_days_premise:
        return False
    # any number of days less than 75 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(sreedhar_work_days_premise, max_sreedhar_work_days_hypothesis))
"
6365,neutral,,contradiction,After Sally left mike had 136 watermelons,After Sally left mike had less than 136 watermelons,after sally left mike had 136 watermelons,after sally left mike had less than 136 watermelons,"watermelons_premise = 136
max_watermelons_hypothesis = 136

def entailment_or_contradiction_or_neutral(watermelons_premise, max_watermelons_hypothesis):
    # the hypothesis refers to the number of watermelons Mike has after Sally left, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of watermelons from the premise is more than 'max_watermelons_hypothesis'
    if watermelons_premise > max_watermelons_hypothesis:
        return False
    # if the number of watermelons from the premise equals 'max_watermelons_hypothesis', the hypothesis is neutral to the premise
    elif watermelons_premise == max_watermelons_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(watermelons_premise, max_watermelons_hypothesis))
"
6220,entailment,,neutral,"An amount of money is to be divided between Priya , Mani and Rani in the ratio of less than 4 : 4 : 8","An amount of money is to be divided between Priya , Mani and Rani in the ratio of 2 : 4 : 8","an amount of money is to be divided between priya , mani and rani in the ratio of less than 4 : 4 : 8","an amount of money is to be divided between priya , mani and rani in the ratio of 2 : 4 : 8","priya_ratio_premise = 4
priya_ratio_hypothesis = 2

def entailment_or_contradiction_or_neutral(priya_ratio_premise, priya_ratio_hypothesis):
    # the hypothesis talks about the ratio of money division for Priya, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of less than 4, by checking if the ratio from the hypothesis is greater or equal to 4
    if priya_ratio_hypothesis >= priya_ratio_premise:
        return False
    # any ratio less than 4 is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(priya_ratio_premise, priya_ratio_hypothesis))
"
6331,entailment,,neutral,"If there are less than 8 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","If there are 5 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","if there are less than 8 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","if there are 5 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","max_boxes_case_premise = 8
boxes_case_hypothesis = 5

def entailment_or_contradiction_or_neutral(max_boxes_case_premise, boxes_case_hypothesis):
    # the hypothesis refers to the number of boxes of cigarettes in a case, which is also mentioned in the premise
    # the hypothesis assumes there are 'boxes_case_hypothesis' boxes in a case
    # check if the hypothesis contradicts the premise by checking if 'boxes_case_hypothesis' is greater than 'max_boxes_case_premise'
    if boxes_case_hypothesis > max_boxes_case_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_boxes_case_premise, boxes_case_hypothesis))
"
7464,contradiction,,entailment,"If the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","If the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections W of the 4 items can Amanda make ?","if the toy store is stocked with 3 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","if the toy store is stocked with less than 4 types of balls and 6 types of board games , how many different selections w of the 4 items can amanda make ?","ball_types_premise = 3
ball_types_hypothesis = 4
board_game_types = 6
selection_items = 4

def entailment_or_contradiction_or_neutral(ball_types_premise, ball_types_hypothesis, board_game_types, selection_items):
    # the hypothesis refers to the number of ball types and board game types mentioned in the premise
    # check if the hypothesis contradicts or is neutral to the premise by comparing the number of ball types in both
    if ball_types_hypothesis > ball_types_premise:
        return False
    elif ball_types_hypothesis < ball_types_premise:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(ball_types_premise, ball_types_hypothesis, board_game_types, selection_items))
"
7524,neutral,,entailment,How many different combinations of 4 passengers can be formed from John ' s 6 friends ?,How many different combinations of more than 2 passengers can be formed from John ' s 6 friends ?,how many different combinations of 4 passengers can be formed from john ' s 6 friends ?,how many different combinations of more than 2 passengers can be formed from john ' s 6 friends ?,"from math import factorial

friends_premise = 6
group_size_premise = 4
min_group_size_hypothesis = 3

def entailment_or_contradiction_or_neutral(friends_premise, group_size_premise, min_group_size_hypothesis):
    # both premise and hypothesis talk about combinations of John's friends
    # we can compute the number of combinations using the formula nCr = n! / r!(n-r)!
    combinations_premise = factorial(friends_premise) / (factorial(group_size_premise) * factorial(friends_premise - group_size_premise))
    # the hypothesis talks about more than 'min_group_size_hypothesis' friends, so we need to consider all possibilities from 'min_group_size_hypothesis' + 1 to 'friends_premise'
    combinations_hypothesis = sum([factorial(friends_premise) / (factorial(r) * factorial(friends_premise - r)) for r in range(min_group_size_hypothesis + 1, friends_premise + 1)])
    # check if the hypothesis contradicts the premise by checking if the computed combinations for the hypothesis is less than the combinations computed for the premise
    if combinations_hypothesis < combinations_premise:
        return False
    # otherwise, if the combinations computed for the hypothesis is equal to the combinations computed for the premise, then the hypothesis entails the premise
    elif combinations_hypothesis == combinations_premise:
        return True
    # if neither contradiction nor entailment, then the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(friends_premise, group_size_premise, min_group_size_hypothesis))
"
7435,entailment,,neutral,"Store Z : $ more than 70 , a 20 % sales tax , and $ 10 rebate after tax Isaac can purchase a certain item in four different ways , as shown in the table","Store Z : $ 90 , a 20 % sales tax , and $ 10 rebate after tax
Isaac can purchase a certain item in four different ways , as shown in the table","store z : $ more than 70 , a 20 % sales tax , and $ 10 rebate after tax isaac can purchase a certain item in four different ways , as shown in the table","store z : $ 90 , a 20 % sales tax , and $ 10 rebate after taxisaac can purchase a certain item in four different ways , as shown in the table","min_price_store_z_premise = 70
price_store_z_hypothesis = 90
sales_tax_premise = sales_tax_hypothesis = 0.20
rebate_premise = rebate_hypothesis = 10

def entailment_or_contradiction_or_neutral(min_price_store_z_premise, price_store_z_hypothesis, sales_tax_premise, sales_tax_hypothesis, rebate_premise, rebate_hypothesis):
    # the hypothesis refers to the price of a certain item at Store Z, the sales tax, and the rebate, all mentioned in the premise
    # the hypothesis estimates the price to be $90, the sales tax to be 20% and the rebate to be $10
    # check if the hypothesis contradicts the premise by checking if the price reported in the hypothesis is lower than or equal to the minimum price in the premise
    if price_store_z_hypothesis <= min_price_store_z_premise:
        return False
    # check if the sales tax or the rebate contradict the premise
    if sales_tax_hypothesis != sales_tax_premise or rebate_hypothesis != rebate_premise:
        return False
    # if there are no contradictions, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_price_store_z_premise, price_store_z_hypothesis, sales_tax_premise, sales_tax_hypothesis, rebate_premise, rebate_hypothesis))
"
7565,entailment,,contradiction,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 30 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 30 % of the cost of the orders she serves,"hourly_wage_premise = 8.0
tip_rate_premise = 30
hourly_wage_hypothesis = 8.0
max_tip_rate_hypothesis = 30

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis):
    # the hypothesis talks about the hourly wage and tip rate of Jill
    # check if the hypothesis contradicts the premise by comparing the hourly wage and tip rate
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_premise < max_tip_rate_hypothesis:
        return False
    # the hypothesis suggests that the tip rate is less than the premise, which contradicts the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis))
"
5921,entailment,,contradiction,Carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,Carl drove from his home to the beach at an average speed of more than 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,carl drove from his home to the beach at an average speed of more than 80 kilometers per hour and returned home by the same route at an average speed of 70 kilometers per hour,"speed_to_beach_premise = 80
speed_home_premise = 70
min_speed_to_beach_hypothesis = 80
speed_home_hypothesis = 70

def entailment_or_contradiction_or_neutral(speed_to_beach_premise, speed_home_premise, min_speed_to_beach_hypothesis, speed_home_hypothesis):
    # the hypothesis refers to the speeds of Carl's trips mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the speed to the beach reported in the premise is lower than 'min_speed_to_beach_hypothesis' or the speed home is different from the premise
    if speed_to_beach_premise < min_speed_to_beach_hypothesis or speed_home_premise != speed_home_hypothesis:
        return False
    # check if the hypothesis entails the premise by checking if the speed to the beach reported in the premise is equal to 'min_speed_to_beach_hypothesis' and the speed home is equal to the premise
    elif speed_to_beach_premise == min_speed_to_beach_hypothesis and speed_home_premise == speed_home_hypothesis:
        return True
    # if neither contradiction nor entailment is found, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(speed_to_beach_premise, speed_home_premise, min_speed_to_beach_hypothesis, speed_home_hypothesis))
"
6598,entailment,,neutral,"Efrida and Frazer who live less than 35 miles apart , meet at a restaurant that is directly north of Efrida ' s home and directly east of Frazer ' s home","Efrida and Frazer who live 15 miles apart , meet at a restaurant that is directly north of Efrida ' s home and directly east of Frazer ' s home","efrida and frazer who live less than 35 miles apart , meet at a restaurant that is directly north of efrida ' s home and directly east of frazer ' s home","efrida and frazer who live 15 miles apart , meet at a restaurant that is directly north of efrida ' s home and directly east of frazer ' s home","max_distance_premise = 35
distance_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis refers to the distance between Efrida and Frazer mentioned in the premise
    # the hypothesis estimates the distance to be 'distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance from the hypothesis is greater than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
7425,contradiction,,entailment,"David obtained 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in English , mathematics , physics , chemistry and biology","David obtained less than 86 , 65 , 82 , 67 and 85 marks ( out of 100 ) in English , mathematics , physics , chemistry and biology","david obtained 76 , 65 , 82 , 67 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","david obtained less than 86 , 65 , 82 , 67 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","# Marks obtained by David in each subject as per the premise
english_marks_premise = 76
math_marks_premise = 65
physics_marks_premise = 82
chemistry_marks_premise = 67
biology_marks_premise = 85

# Maximum marks that David could have obtained in each subject as per the hypothesis
max_english_marks_hypothesis = 86
max_math_marks_hypothesis = 65
max_physics_marks_hypothesis = 82
max_chemistry_marks_hypothesis = 67
max_biology_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, 
                                           chemistry_marks_premise, biology_marks_premise, max_english_marks_hypothesis, 
                                           max_math_marks_hypothesis, max_physics_marks_hypothesis, 
                                           max_chemistry_marks_hypothesis, max_biology_marks_hypothesis):
    # Check if the marks obtained by David in each subject as per the premise are more than the maximum marks as per the hypothesis
    if english_marks_premise >= max_english_marks_hypothesis or math_marks_premise >= max_math_marks_hypothesis or physics_marks_premise >= max_physics_marks_hypothesis or chemistry_marks_premise >= max_chemistry_marks_hypothesis or biology_marks_premise >= max_biology_marks_hypothesis:
        return False
    else:
        # If the marks obtained by David as per the premise are less than the maximum marks as per the hypothesis, then the hypothesis is entailed by the premise
        return True

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, 
                                             chemistry_marks_premise, biology_marks_premise, max_english_marks_hypothesis, 
                                             max_math_marks_hypothesis, max_physics_marks_hypothesis, 
                                             max_chemistry_marks_hypothesis, max_biology_marks_hypothesis))
"
7534,entailment,,neutral,"If Leo gains less than 50 pounds , he will weigh 50 % more than his sister Kendra","If Leo gains 10 pounds , he will weigh 50 % more than his sister Kendra","if leo gains less than 50 pounds , he will weigh 50 % more than his sister kendra","if leo gains 10 pounds , he will weigh 50 % more than his sister kendra","max_weight_gain_premise = 50
weight_gain_hypothesis = 10

def entailment_or_contradiction_or_neutral(max_weight_gain_premise, weight_gain_hypothesis):
    # the hypothesis refers to how much weight Leo gains, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Leo's weight gain in the hypothesis is more than 'max_weight_gain_premise'
    if weight_gain_hypothesis > max_weight_gain_premise:
        return False
    # if the weight gain is less than or equal to 'max_weight_gain_premise', then the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_weight_gain_premise, weight_gain_hypothesis))
"
6658,entailment,,neutral,"Assuming that Karen drives at an average speed of less than 80 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","Assuming that Karen drives at an average speed of 60 mph and Tom drives at an average speed of 45 mph , how many Q miles will Tom drive before Karen wins the bet ?","assuming that karen drives at an average speed of less than 80 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","assuming that karen drives at an average speed of 60 mph and tom drives at an average speed of 45 mph , how many q miles will tom drive before karen wins the bet ?","max_speed_karen_premise = 80
speed_tom_premise = 45
speed_karen_hypothesis = 60
speed_tom_hypothesis = 45

def entailment_or_contradiction_or_neutral(max_speed_karen_premise, speed_tom_premise, speed_karen_hypothesis, speed_tom_hypothesis):
    # the hypothesis refers to the same scenario as the premise, namely the speeds at which Karen and Tom drive
    # check if the hypothesis contradicts the premise by checking if Karen's speed in the hypothesis is greater than the maximum speed mentioned in the premise
    if speed_karen_hypothesis > max_speed_karen_premise:
        return False
    # check if the speed of Tom in the hypothesis is different than the one in the premise
    elif speed_tom_hypothesis != speed_tom_premise:
        return False
    # if there is no contradiction, then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_speed_karen_premise, speed_tom_premise, speed_karen_hypothesis, speed_tom_hypothesis))
"
7531,entailment,,neutral,"List L : ABC , BCA , CAB In list L above , there are less than 4 positive integers , where each of A , B , and C is a different nonzero digit","List L : ABC , BCA , CAB
In list L above , there are 3 positive integers , where each of A , B , and C is a different nonzero digit","list l : abc , bca , cab in list l above , there are less than 4 positive integers , where each of a , b , and c is a different nonzero digit","list l : abc , bca , cabin list l above , there are 3 positive integers , where each of a , b , and c is a different nonzero digit","max_integers_premise = 4
integers_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_integers_premise, integers_hypothesis):
    # the hypothesis is about the number of positive integers in a list, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_integers_premise', by checking if the number of integers from the hypothesis is greater or equal to 'max_integers_premise'
    if integers_hypothesis >= max_integers_premise:
        return False
    # any number of integers less than 4 is consistent with the premise, so the hypothesis does not contradict the premise
    # since the hypothesis is exactly one less than the maximum number of integers in the premise, it can be inferred from the premise
    return True

print(entailment_or_contradiction_or_neutral(max_integers_premise, integers_hypothesis))
"
7420,entailment,,neutral,David gets on the elevator at the less than 61 th floor of a building and rides up at the rate of 57 floors per minute,David gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the less than 61 th floor of a building and rides up at the rate of 57 floors per minute,david gets on the elevator at the 11 th floor of a building and rides up at the rate of 57 floors per minute,"max_floor_premise = 61
floor_hypothesis = 11
rate_premise = rate_hypothesis = 57

def entailment_or_contradiction_or_neutral(max_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis):
    # the hypothesis talks about the floor number at which David gets on the elevator, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the floor number from the hypothesis is greater or equal to 'max_floor_premise'
    if floor_hypothesis >= max_floor_premise:
        return False
    # the hypothesis also refers to the rate at which David rides the elevator
    # check if the rate from the hypothesis contradicts the rate from the premise
    if rate_hypothesis != rate_premise:
        return False
    # if no contradiction was found, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis))
"
5951,entailment,,contradiction,"If T = 5 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","If T = less than 5 / 9 * ( K - 32 ) , and if T = 20 , then what is the value of K ?","if t = 5 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","if t = less than 5 / 9 * ( k - 32 ) , and if t = 20 , then what is the value of k ?","T_premise = 20
T_hypothesis = 20

def entailment_or_contradiction_or_neutral(T_premise, T_hypothesis):
    # the hypothesis is describing a situation where T is less than the value computed in the premise
    # however, both premise and hypothesis are using the same value for T
    # therefore, the hypothesis contradicts the premise
    if T_hypothesis < T_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(T_premise, T_hypothesis))
"
7563,neutral,,entailment,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 70 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of 30 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 8.00 per hour and a standard tip rate of less than 70 % of the cost of the orders she serves,"hourly_wage_premise = 8.00
tip_rate_premise = 0.30

hourly_wage_hypothesis = 8.00
max_tip_rate_hypothesis = 0.70

def entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis):
    # the hypothesis talks about Jill's hourly wage and tip rate, both also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the hourly wage or tip rate in the hypothesis are different from the premise
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_premise > max_tip_rate_hypothesis:
        return False
    # the hypothesis tip rate of less than 70% is consistent with the premise of 30%, and the hourly wage is the same, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, tip_rate_premise, hourly_wage_hypothesis, max_tip_rate_hypothesis))
"
7423,entailment,,neutral,"At the same time , Albert gets on an elevator at the less than 61 st floor of the same building and rides down at the rate of 63 floors per minute","At the same time , Albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the less than 61 st floor of the same building and rides down at the rate of 63 floors per minute","at the same time , albert gets on an elevator at the 51 st floor of the same building and rides down at the rate of 63 floors per minute","max_floor_premise = 61
floor_hypothesis = 51
rate_premise = 63
rate_hypothesis = 63

def entailment_or_contradiction_or_neutral(max_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis):
    # the hypothesis refers to the floor number and the rate of descending, both mentioned in the premise
    # check if the hypothesis contradicts the premise by having a floor number greater than max_floor_premise or a different descending rate
    if floor_hypothesis > max_floor_premise or rate_hypothesis != rate_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_floor_premise, floor_hypothesis, rate_premise, rate_hypothesis))
"
6878,neutral,,contradiction,"The total of the ages of Amar , Akbar and Anthony is 66 years","The total of the ages of Amar , Akbar and Anthony is less than 66 years","the total of the ages of amar , akbar and anthony is 66 years","the total of the ages of amar , akbar and anthony is less than 66 years","total_age_premise = 66
max_total_age_hypothesis = 66

def entailment_or_contradiction_or_neutral(total_age_premise, max_total_age_hypothesis):
    # the hypothesis talks about the total age of Amar, Akbar, and Anthony, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the total age from the premise is more than 'max_total_age_hypothesis'
    if total_age_premise > max_total_age_hypothesis:
        return False
    else:
        # if total age from the premise is equal to 'max_total_age_hypothesis', then there is no contradiction or entailment
        return None

print(entailment_or_contradiction_or_neutral(total_age_premise, max_total_age_hypothesis))
"
6938,neutral,,contradiction,Stalin gets on the elevator at the 11 th floor of a building and rides up at a rate of 57 floors per minute,Stalin gets on the elevator at the more than 11 th floor of a building and rides up at a rate of 57 floors per minute,stalin gets on the elevator at the 11 th floor of a building and rides up at a rate of 57 floors per minute,stalin gets on the elevator at the more than 11 th floor of a building and rides up at a rate of 57 floors per minute,"start_floor_premise = 11
start_floor_hypothesis = 11  # this is the minimum floor number according to the hypothesis
elevator_speed_premise = 57
elevator_speed_hypothesis = 57

def entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, elevator_speed_premise, elevator_speed_hypothesis):
    # the hypothesis refers to two quantities mentioned in the premise
    # it states that the start floor is higher than the 11th floor and the elevator speed is 57 floors per minute
    # check if the hypothesis contradicts the premise by checking if the start floor in the premise is lower than the one stated in the hypothesis
    if start_floor_premise < start_floor_hypothesis:
        return False
    # check if the elevator speed in the premise contradicts the one in the hypothesis
    if elevator_speed_premise != elevator_speed_hypothesis:
        return False
    # if there is no contradiction, the hypothesis is neutral regarding the premise
    return None

print(entailment_or_contradiction_or_neutral(start_floor_premise, start_floor_hypothesis, elevator_speed_premise, elevator_speed_hypothesis))
"
6272,neutral,,contradiction,Meg and Bob are among the 7 participants in a cycling race,Meg and Bob are among the 2 participants in a cycling race,meg and bob are among the 7 participants in a cycling race,meg and bob are among the 2 participants in a cycling race,"participants_race_premise = 7
participants_race_hypothesis = 2

def entailment_or_contradiction_or_neutral(participants_race_premise, participants_race_hypothesis):
    # the hypothesis talks about the number of participants in a race, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'participants_race_premise', by checking if the number of participants from the hypothesis is higher than 'participants_race_premise'
    if participants_race_hypothesis > participants_race_premise:
        return False
    # any number of participants less than or equal to 7 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(participants_race_premise, participants_race_hypothesis))
"
6500,neutral,,contradiction,"One hour after Matthew started waking from t to y , a distance of 45 km , Johnny started walking along the same road from y to t","One hour after Matthew started waking from t to y , a distance of more than 45 km , Johnny started walking along the same road from y to t","one hour after matthew started waking from t to y , a distance of 45 km , johnny started walking along the same road from y to t","one hour after matthew started waking from t to y , a distance of more than 45 km , johnny started walking along the same road from y to t","distance_walked_matthew_premise = 45
min_distance_walked_matthew_hypothesis = 45

def entailment_or_contradiction_or_neutral(distance_walked_matthew_premise, min_distance_walked_matthew_hypothesis):
    # the hypothesis refers to the distance walked by Matthew mentioned in the premise
    # the hypothesis estimates the distance walked to more than 'min_distance_walked_matthew_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance walked reported in the premise is lower than 'min_distance_walked_matthew_hypothesis'
    if distance_walked_matthew_premise < min_distance_walked_matthew_hypothesis:
        return False
    # if hypothesis distance is equal to premise distance, then it is neutral
    elif distance_walked_matthew_premise == min_distance_walked_matthew_hypothesis:
        return None
    else:
        return True

print(entailment_or_contradiction_or_neutral(distance_walked_matthew_premise, min_distance_walked_matthew_hypothesis))
"
6332,neutral,,contradiction,"If there are 5 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","If there are 1 boxes of cigarettes in one case , how many cases can Kramer pack in 2 hours ?","if there are 5 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","if there are 1 boxes of cigarettes in one case , how many cases can kramer pack in 2 hours ?","boxes_per_case_premise = 5
boxes_per_case_hypothesis = 1

def entailment_or_contradiction_or_neutral(boxes_per_case_premise, boxes_per_case_hypothesis):
    # the hypothesis refers to the number of boxes per case, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of boxes per case in the hypothesis is greater than that in the premise
    if boxes_per_case_hypothesis > boxes_per_case_premise:
        return False
    # if the number of boxes per case in the hypothesis is less than or equal to that in the premise, the hypothesis does not contradict the premise
    # however, the hypothesis does not entail the premise either, because it does not provide the exact same information
    return None

print(entailment_or_contradiction_or_neutral(boxes_per_case_premise, boxes_per_case_hypothesis))
"
6821,neutral,,contradiction,"How many combinations does Barbara have , if she doesn ’ t wear 2 specific socks with 1 specific pair of shoes ?","How many combinations does Barbara have , if she doesn ’ t wear 7 specific socks with 1 specific pair of shoes ?","how many combinations does barbara have , if she doesn ’ t wear 2 specific socks with 1 specific pair of shoes ?","how many combinations does barbara have , if she doesn ’ t wear 7 specific socks with 1 specific pair of shoes ?","socks_not_worn_premise = 2
socks_not_worn_hypothesis = 7

def entailment_or_contradiction_or_neutral(socks_not_worn_premise, socks_not_worn_hypothesis):
    # the hypothesis refers to the number of socks not worn mentioned in the premise
    # the hypothesis estimates the socks not worn to be 'socks_not_worn_hypothesis'
    # check if the hypothesis contradicts the premise by checking if socks not worn reported in the premise are more than 'socks_not_worn_hypothesis'
    if socks_not_worn_premise > socks_not_worn_hypothesis:
        return False
    # if 'socks_not_worn_premise' is less than or equal to 'socks_not_worn_hypothesis', it means the hypothesis is providing additional information, so it is neutral to the premise
    elif socks_not_worn_premise <= socks_not_worn_hypothesis:
        return None

print(entailment_or_contradiction_or_neutral(socks_not_worn_premise, socks_not_worn_hypothesis))
"
6930,neutral,,entailment,"After 6 years , Sandy ’ s age will be 30 years","After more than 2 years , Sandy ’ s age will be 30 years","after 6 years , sandy ’ s age will be 30 years","after more than 2 years , sandy ’ s age will be 30 years","years_until_sandy_is_30_premise = 6
min_years_until_sandy_is_30_hypothesis = 2

def entailment_or_contradiction_or_neutral(years_until_sandy_is_30_premise, min_years_until_sandy_is_30_hypothesis):
    # the hypothesis refers to the number of years until Sandy turns 30, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate of 'years_until_sandy_is_30_premise', by checking if the number of years from the hypothesis is greater than 'years_until_sandy_is_30_premise'
    if min_years_until_sandy_is_30_hypothesis > years_until_sandy_is_30_premise:
        return False
    # any number of years less than 6 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(years_until_sandy_is_30_premise, min_years_until_sandy_is_30_hypothesis))
"
6175,entailment,,neutral,"If it takes Darcy a total of less than 55 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","If it takes Darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of less than 55 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","if it takes darcy a total of 15 more minutes to commute to work by walking than it takes her to commute to work by riding the train , what is the value of x ?","max_extra_time_walk_premise = 55
extra_time_walk_hypothesis = 15

def entailment_or_contradiction_or_neutral(max_extra_time_walk_premise, extra_time_walk_hypothesis):
    # the hypothesis refers to the extra time Darcy takes to walk to work, as compared to taking the train, which is also mentioned in the premise
    # the hypothesis estimates the extra walking time to be 'extra_time_walk_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the extra walking time from the hypothesis is more than 'max_extra_time_walk_premise'
    if extra_time_walk_hypothesis > max_extra_time_walk_premise:
        return False
    # if the extra walking time from the hypothesis is less or equal to 'max_extra_time_walk_premise', the hypothesis is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_extra_time_walk_premise, extra_time_walk_hypothesis))
"
6448,entailment,,neutral,In less than 8 years John will be twice as old as Frank,In 5 years John will be twice as old as Frank,in less than 8 years john will be twice as old as frank,in 5 years john will be twice as old as frank,"max_years_premise = 8
years_hypothesis = 5

def entailment_or_contradiction_or_neutral(max_years_premise, years_hypothesis):
    # the hypothesis refers to the years mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the years from the hypothesis are greater than 'max_years_premise'
    if years_hypothesis > max_years_premise:
        return False
    # check if the hypothesis is entailed in the premise by checking if the years from the hypothesis are less than 'max_years_premise'
    if years_hypothesis <= max_years_premise:
        return True
    # if neither contradiction nor entailment can be established, return None
    return None

print(entailment_or_contradiction_or_neutral(max_years_premise, years_hypothesis))
"
7573,entailment,,neutral,"If Fred walks at a constant speed of less than 7 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","If Fred walks at a constant speed of 2 miles per hour and Sam walks at a constant speed of 5 miles per hour , how many miles has Sam walked when they meet ?","if fred walks at a constant speed of less than 7 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","if fred walks at a constant speed of 2 miles per hour and sam walks at a constant speed of 5 miles per hour , how many miles has sam walked when they meet ?","max_speed_fred_premise = 7
speed_fred_hypothesis = 2
speed_sam = 5

def entailment_or_contradiction_or_neutral(max_speed_fred_premise, speed_fred_hypothesis, speed_sam):
    # the hypothesis talks about the speed at which Fred and Sam are walking, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Fred's speed from the hypothesis exceeds the maximum speed given in the premise
    if speed_fred_hypothesis > max_speed_fred_premise:
        return False
    # any speed of Fred less than 7 miles per hour is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_speed_fred_premise, speed_fred_hypothesis, speed_sam))
"
6685,entailment,,neutral,Vinod climbs less than 80 steps in 40 seconds,Vinod climbs 60 steps in 40 seconds,vinod climbs less than 80 steps in 40 seconds,vinod climbs 60 steps in 40 seconds,"max_steps_premise = 80
steps_hypothesis = 60

def entailment_or_contradiction_or_neutral(max_steps_premise, steps_hypothesis):
    # the hypothesis refers to the number of steps Vinod climbs in a specific time duration, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the steps climbed in the hypothesis is greater than 'max_steps_premise'
    if steps_hypothesis > max_steps_premise:
        return False
    # any number of steps less than 80 is consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_steps_premise, steps_hypothesis))
"
6801,contradiction,,entailment,"If bonds are sold in $ 50 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","If bonds are sold in $ less than 70 or $ 100 denominations only , which of the following CAN NOT be the number of US saving bonds that Robert purchased ?","if bonds are sold in $ 50 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","if bonds are sold in $ less than 70 or $ 100 denominations only , which of the following can not be the number of us saving bonds that robert purchased ?","# The bond denominations in the premise and hypothesis
min_bond_denomination_premise = 50
max_bond_denomination_premise = 100
min_bond_denomination_hypothesis = 70
max_bond_denomination_hypothesis = 100

def entailment_or_contradiction_or_neutral(min_bond_denomination_premise, max_bond_denomination_premise, min_bond_denomination_hypothesis, max_bond_denomination_hypothesis):
    # both the premise and hypothesis talk about the possible bond denominations
    # the hypothesis contradicts the premise if the minimum bond denomination in the hypothesis is greater than the minimum bond denomination in the premise
    if min_bond_denomination_hypothesis > min_bond_denomination_premise:
        return False
    # the hypothesis is neutral to the premise if the minimum bond denomination in the hypothesis is less than or equal to the minimum bond denomination in the premise
    elif min_bond_denomination_hypothesis <= min_bond_denomination_premise:
        return None
    # the hypothesis entails the premise if the maximum bond denomination in the hypothesis is equal to the maximum bond denomination in the premise
    elif max_bond_denomination_hypothesis == max_bond_denomination_premise:
        return True

print(entailment_or_contradiction_or_neutral(min_bond_denomination_premise, max_bond_denomination_premise, min_bond_denomination_hypothesis, max_bond_denomination_hypothesis))
"
6493,entailment,,neutral,"If Dana gives her parents less than 7 % of that amount back each month , how much will she still owe her parents after four years of college ?","If Dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents less than 7 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","max_percentage_premise = 7
percentage_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_percentage_premise, percentage_hypothesis):
    # the hypothesis refers to the percentage Dana gives back to her parents each month
    # check if the hypothesis contradicts the premise by checking if the percentage in the hypothesis is greater than the maximum percentage mentioned in the premise
    if percentage_hypothesis > max_percentage_premise:
        return False
    # if the percentage in the hypothesis is less than or equal to the maximum percentage in the premise, then the hypothesis is consistent with the premise and can be considered as entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_percentage_premise, percentage_hypothesis))
"
6794,neutral,,contradiction,"In an exam , Dibi scored 25 percent , Balan scored 38 percent and Cristen 23 percent","In an exam , Dibi scored less than 25 percent , Balan scored 38 percent and Cristen 23 percent","in an exam , dibi scored 25 percent , balan scored 38 percent and cristen 23 percent","in an exam , dibi scored less than 25 percent , balan scored 38 percent and cristen 23 percent","dibi_score_premise = 25
balan_score_premise = 38
cristen_score_premise = 23
dibi_score_hypothesis = 24
balan_score_hypothesis = 38
cristen_score_hypothesis = 23

def entailment_or_contradiction_or_neutral(dibi_score_premise, balan_score_premise, cristen_score_premise, dibi_score_hypothesis, balan_score_hypothesis, cristen_score_hypothesis):
    # the hypothesis talks about the scores of Dibi, Balan and Cristen in an exam, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if any of the scores from the hypothesis are greater than the scores reported in the premise
    if dibi_score_hypothesis > dibi_score_premise or balan_score_hypothesis > balan_score_premise or cristen_score_hypothesis > cristen_score_premise:
        return False
    # check if the hypothesis entails the premise by checking if all the scores from the hypothesis are equal to the scores reported in the premise
    elif dibi_score_hypothesis == dibi_score_premise and balan_score_hypothesis == balan_score_premise and cristen_score_hypothesis == cristen_score_premise:
        return True
    # if the scores from the hypothesis are neither greater than nor equal to the scores from the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(dibi_score_premise, balan_score_premise, cristen_score_premise, dibi_score_hypothesis, balan_score_hypothesis, cristen_score_hypothesis))
"
7580,neutral,,contradiction,"With the help of Pavan , they completed the work in 8 days and earned Rs","With the help of Pavan , they completed the work in more than 8 days and earned Rs","with the help of pavan , they completed the work in 8 days and earned rs","with the help of pavan , they completed the work in more than 8 days and earned rs","work_days_premise = 8
min_work_days_hypothesis = 8

def entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis):
    # The hypothesis refers to the number of days to complete the work mentioned in the premise.
    # The hypothesis estimates the work days to be more than 'min_work_days_hypothesis'.
    # Check if the hypothesis contradicts the premise by checking if work days reported in the premise are less than or equal to 'min_work_days_hypothesis'.
    if work_days_premise <= min_work_days_hypothesis:
        return None
    else:
        return False

print(entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis))
"
6676,contradiction,,neutral,"Dacid obtained more than 16 , 95 , 82 , 87 and 92 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained more than 16 , 95 , 82 , 87 and 92 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained 96 , 95 , 82 , 87 and 92 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","# defining the scores obtained by Dacid in different subjects as per the premise and the hypothesis
english_premise = 16
math_premise = 95
physics_premise = 82
chemistry_premise = 87
biology_premise = 92

english_hypothesis = 96
math_hypothesis = 95
physics_hypothesis = 82
chemistry_hypothesis = 87
biology_hypothesis = 92

def entailment_or_contradiction_or_neutral(english_premise, math_premise, physics_premise, chemistry_premise, biology_premise, english_hypothesis, math_hypothesis, physics_hypothesis, chemistry_hypothesis, biology_hypothesis):
    # the hypothesis talks about the marks obtained by Dacid in different subjects, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of more than the marks mentioned in the premise, by checking if the marks in the hypothesis are lower or equal to the marks in the premise
    if english_hypothesis <= english_premise or math_hypothesis <= math_premise or physics_hypothesis <= physics_premise or chemistry_hypothesis <= chemistry_premise or biology_hypothesis <= biology_premise:
        return False
    # any number of marks greater than the ones mentioned in the premise is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(english_premise, math_premise, physics_premise, chemistry_premise, biology_premise, english_hypothesis, math_hypothesis, physics_hypothesis, chemistry_hypothesis, biology_hypothesis))
"
5932,entailment,,neutral,"Antony can divide his herd into more than 4 equal parts and also to 6 equal parts , but not to 9 equal parts","Antony can divide his herd into 5 equal parts and also to 6 equal parts , but not to 9 equal parts","antony can divide his herd into more than 4 equal parts and also to 6 equal parts , but not to 9 equal parts","antony can divide his herd into 5 equal parts and also to 6 equal parts , but not to 9 equal parts","min_parts_premise = 4
parts_hypothesis = 5
equal_parts = 6 
no_parts = 9

def entailment_or_contradiction_or_neutral(min_parts_premise, parts_hypothesis, equal_parts, no_parts):
    # the hypothesis refers to the number of parts Antony can divide his herd into
    # check if the hypothesis contradicts the premise by checking if the number of parts in the hypothesis is less or equal to the premise
    if parts_hypothesis <= min_parts_premise:
        return False
    # if the hypothesis doesn't contradict the premise, it must entail it
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_parts_premise, parts_hypothesis, equal_parts, no_parts))
"
6409,entailment,,neutral,"Shop Offered less than 80 % offer for every Shirt , Smith bought a shirt at Rs","Shop Offered 20 % offer for every Shirt , Smith bought a shirt at Rs","shop offered less than 80 % offer for every shirt , smith bought a shirt at rs","shop offered 20 % offer for every shirt , smith bought a shirt at rs","max_discount_premise = 80
discount_hypothesis = 20

def entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis):
    # the hypothesis talks about the discount rate for a shirt, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_discount_premise', by checking if the discount from the hypothesis is greater or equal to 'max_discount_premise'
    if discount_hypothesis >= max_discount_premise:
        return False
    # any discount less than 80% is consistent with the premise, so the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis))
"
6559,entailment,,neutral,Jerry ’ s average ( arithmetic mean ) score on the first less than 6 of 4 tests is 78,Jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first less than 6 of 4 tests is 78,jerry ’ s average ( arithmetic mean ) score on the first 3 of 4 tests is 78,"tests_taken_premise = 6
tests_taken_hypothesis = 3
avg_score_premise = 78
avg_score_hypothesis = 78

def entailment_or_contradiction_or_neutral(tests_taken_premise, tests_taken_hypothesis, avg_score_premise, avg_score_hypothesis):
    # the hypothesis refers to the same average score and number of tests as the premise
    # check if the hypothesis contradicts the premise by checking if the number of tests in the hypothesis is greater than the number of tests in the premise or if the average score in hypothesis is not equal to the average score in premise
    if tests_taken_hypothesis > tests_taken_premise or avg_score_hypothesis != avg_score_premise:
        return False
    # check if the hypothesis entails the premise by checking if the number of tests in hypothesis is less than or equal to the number of tests in premise and if the average score in hypothesis is equal to the average score in premise
    elif tests_taken_hypothesis <= tests_taken_premise and avg_score_hypothesis == avg_score_premise:
        return True
    # if neither entailment nor contradiction, return None for neutrality
    else:
        return None

print(entailment_or_contradiction_or_neutral(tests_taken_premise, tests_taken_hypothesis, avg_score_premise, avg_score_hypothesis))
"
6955,entailment,,neutral,"The average number of shirts with Salman , Ambani and Dalmiya is less than 80 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","The average number of shirts with Salman , Ambani and Dalmiya is 40 , if all of them reached a shopping mall in Delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is less than 80 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","the average number of shirts with salman , ambani and dalmiya is 40 , if all of them reached a shopping mall in delhi and purchased 8 shirts each of them then average number of shirt each of them now has","avg_shirts_before_shopping_premise = 80
shirts_bought_each = 8
avg_shirts_before_shopping_hypothesis = 40

def entailment_or_contradiction_or_neutral(avg_shirts_before_shopping_premise, shirts_bought_each, avg_shirts_before_shopping_hypothesis):
    # the hypothesis refers to the average number of shirts each person has before and after shopping
    # the hypothesis suggests the average number of shirts before shopping is 'avg_shirts_before_shopping_hypothesis' and they all buy 'shirts_bought_each' shirts
    # check if the hypothesis contradicts the premise by checking if the average number of shirts before shopping in the hypothesis is higher than or equal to 'avg_shirts_before_shopping_premise'
    if avg_shirts_before_shopping_hypothesis >= avg_shirts_before_shopping_premise:
        return False
    # if the average number of shirts before shopping in the hypothesis is less than 'avg_shirts_before_shopping_premise', the hypothesis is consistent with the premise
    # so we check if the total number of shirts after shopping in the hypothesis is less than 'avg_shirts_before_shopping_premise'
    if (avg_shirts_before_shopping_hypothesis + shirts_bought_each) < avg_shirts_before_shopping_premise:
        return True
    # if the total number of shirts after shopping in the hypothesis is not less than 'avg_shirts_before_shopping_premise', the hypothesis is neutral with the premise
    return None

print(entailment_or_contradiction_or_neutral(avg_shirts_before_shopping_premise, shirts_bought_each, avg_shirts_before_shopping_hypothesis))
"
6596,neutral,,contradiction,In a certain province in France there are 9 cities,In a certain province in France there are less than 9 cities,in a certain province in france there are 9 cities,in a certain province in france there are less than 9 cities,"cities_premise = 9
max_cities_hypothesis = 9

def entailment_or_contradiction_or_neutral(cities_premise, max_cities_hypothesis):
    # the hypothesis talks about the number of cities in a certain province in France, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the number of cities from the hypothesis is equal or higher than 'cities_premise'
    if max_cities_hypothesis >= cities_premise:
        return None
    else:
        return False

print(entailment_or_contradiction_or_neutral(cities_premise, max_cities_hypothesis))
"
6904,entailment,,neutral,"If Rahul paid a total of $ less than 360 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","If Rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ less than 360 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","if rahul paid a total of $ 160 , excluding sales tax , to rent the tool , for how many hours did she rent it ?","max_payment_premise = 360
payment_hypothesis = 160

def entailment_or_contradiction_or_neutral(max_payment_premise, payment_hypothesis):
    # the hypothesis refers to the amount of money Rahul paid to rent the tool, also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the payment in the hypothesis is greater than the 'max_payment_premise'
    if payment_hypothesis > max_payment_premise:
        return False
    # if the payment in the hypothesis is less than the 'max_payment_premise', then the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_payment_premise, payment_hypothesis))
"
5906,neutral,,contradiction,"Michael ate 1 / 8 of the cookies , Steve ate one half and Tyler ate 150 more cookies than Michael","Michael ate more than 1 / 8 of the cookies , Steve ate one half and Tyler ate 150 more cookies than Michael","michael ate 1 / 8 of the cookies , steve ate one half and tyler ate 150 more cookies than michael","michael ate more than 1 / 8 of the cookies , steve ate one half and tyler ate 150 more cookies than michael","michael_cookies_premise = 1 / 8
michael_cookies_hypothesis = 1 / 8
steve_cookies_premise = 1 / 2
steve_cookies_hypothesis = 1 / 2
tyler_more_cookies_than_michael_premise = 150
tyler_more_cookies_than_michael_hypothesis = 150

def entailment_or_contradiction_or_neutral(michael_cookies_premise, michael_cookies_hypothesis, steve_cookies_premise, steve_cookies_hypothesis, tyler_more_cookies_than_michael_premise, tyler_more_cookies_than_michael_hypothesis):
    # the hypothesis talks about the quantity of cookies eaten by Michael, Steve and Tyler, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the cookies eaten by Michael, Steve and Tyler from the hypothesis is not equal to the premise
    if michael_cookies_hypothesis > michael_cookies_premise or steve_cookies_hypothesis != steve_cookies_premise or tyler_more_cookies_than_michael_hypothesis != tyler_more_cookies_than_michael_premise:
        return False
    # if the hypothesis does not contradict the premise, it is neutral to it
    return None

print(entailment_or_contradiction_or_neutral(michael_cookies_premise, michael_cookies_hypothesis, steve_cookies_premise, steve_cookies_hypothesis, tyler_more_cookies_than_michael_premise, tyler_more_cookies_than_michael_hypothesis))
"
6975,contradiction,,entailment,"If an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","If an outfit consists of less than 8 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does Jordan have ?","if an outfit consists of 1 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","if an outfit consists of less than 8 shirt , 1 pair of jeans , and 1 pair of sneakers , how many different outfits does jordan have ?","shirt_premise = 1
shirt_hypothesis = 8

def entailment_or_contradiction_or_neutral(shirt_premise, shirt_hypothesis):
    # the hypothesis and premise are talking about the number of shirts in an outfit
    # check if the hypothesis contradicts the premise by checking if the number of shirts in an outfit from the hypothesis is greater than that in the premise
    if shirt_hypothesis > shirt_premise:
        return False
    # if no contradiction, check if the hypothesis entails the premise by checking if the number of shirts in an outfit from the hypothesis is less than or equal to that in the premise
    elif shirt_hypothesis <= shirt_premise:
        return True
    # if neither contradiction nor entailment, return None for neutrality
    else:
        return None

print(entailment_or_contradiction_or_neutral(shirt_premise, shirt_hypothesis))
"
7376,neutral,,contradiction,"If she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four more than 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four more than 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","# Quantities from the premise
shifts_premise = 4
hours_per_shift_premise = 16
average_orders_per_hour_premise = 40

# Quantities from the hypothesis
shifts_hypothesis = 4
hours_per_shift_hypothesis = 16 + 4  # ""four more than 16-hour shifts"" means the shifts were 20 hours long
average_orders_per_hour_hypothesis = 40

def entailment_or_contradiction_or_neutral(shifts_premise, hours_per_shift_premise, average_orders_per_hour_premise, shifts_hypothesis, hours_per_shift_hypothesis, average_orders_per_hour_hypothesis):
    # First, calculate the total earnings for the week based on the premise and hypothesis
    total_earnings_premise = shifts_premise * hours_per_shift_premise * average_orders_per_hour_premise
    total_earnings_hypothesis = shifts_hypothesis * hours_per_shift_hypothesis * average_orders_per_hour_hypothesis
    
    # The hypothesis contradicts the premise if the total earnings based on the hypothesis are less than the total earnings based on the premise
    if total_earnings_hypothesis < total_earnings_premise:
        return False
    # The hypothesis is neutral to the premise if the total earnings based on the hypothesis are greater than the total earnings based on the premise
    elif total_earnings_hypothesis > total_earnings_premise:
        return None
    # The hypothesis entails the premise if the total earnings based on the hypothesis are equal to the total earnings based on the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(shifts_premise, hours_per_shift_premise, average_orders_per_hour_premise, shifts_hypothesis, hours_per_shift_hypothesis, average_orders_per_hour_hypothesis))
"
7310,neutral,,contradiction,How many minutes does it take James to type 8 words if he types at the rate of 4 words per minute ?,How many minutes does it take James to type less than 8 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type 8 words if he types at the rate of 4 words per minute ?,how many minutes does it take james to type less than 8 words if he types at the rate of 4 words per minute ?,"words_premise = 8
words_per_minute_premise = 4
words_hypothesis = 7
words_per_minute_hypothesis = 4

def entailment_or_contradiction_or_neutral(words_premise, words_per_minute_premise, words_hypothesis, words_per_minute_hypothesis):
    # the hypothesis refers to the time it takes for James to type a certain number of words
    # the premise also refers to the same situation
    # the hypothesis assumes that James is typing less than 'words_premise' number of words
    # check if the hypothesis contradicts the premise by checking if words_per_minute_premise are different than words_per_minute_hypothesis
    if words_per_minute_premise != words_per_minute_hypothesis:
        return False
    # check if the hypothesis contradicts the premise by checking if words_hypothesis is greater than words_premise
    elif words_hypothesis > words_premise:
        return False
    # if the hypothesis does not contradict the premise, it can only be neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(words_premise, words_per_minute_premise, words_hypothesis, words_per_minute_hypothesis))
"
6731,neutral,,contradiction,How many oranges must Mary put back so that the average price of the pieces of fruit that she keeps is 50 ¢ ?,How many oranges must Mary put back so that the average price of the pieces of fruit that she keeps is 40 ¢ ?,how many oranges must mary put back so that the average price of the pieces of fruit that she keeps is 50 ¢ ?,how many oranges must mary put back so that the average price of the pieces of fruit that she keeps is 40 ¢ ?,"# The premise and the hypothesis both ask about the number of oranges Mary must put back to achieve a certain average price per piece of fruit.
# However, the average prices in the premise and the hypothesis are different.
# Therefore, the premise and the hypothesis are neutral to each other, since the number of oranges Mary must put back to achieve an average price of 50 cents does not entail or contradict the number of oranges she must put back to achieve an average price of 40 cents.

def entailment_or_contradiction_or_neutral():
    # the hypothesis and premise refer to the same event, but with different conditions
    # there is no way to compare the two conditions, so the hypothesis is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral())
"
7324,entailment,,neutral,"After less than 2 more week , the average number of times Rikki goes to the gym increases to 3 times per week","After 1 more week , the average number of times Rikki goes to the gym increases to 3 times per week","after less than 2 more week , the average number of times rikki goes to the gym increases to 3 times per week","after 1 more week , the average number of times rikki goes to the gym increases to 3 times per week","max_weeks_premise = 2
weeks_hypothesis = 1
average_gym_visits_premise = 3
average_gym_visits_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_weeks_premise, weeks_hypothesis, average_gym_visits_premise, average_gym_visits_hypothesis):
    # the hypothesis refers to the time period and the average number of gym visits mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the time period in the hypothesis is greater than 'max_weeks_premise' or if the average gym visits in the hypothesis is different from 'average_gym_visits_premise'
    if weeks_hypothesis > max_weeks_premise or average_gym_visits_hypothesis != average_gym_visits_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_weeks_premise, weeks_hypothesis, average_gym_visits_premise, average_gym_visits_hypothesis))
"
7253,neutral,,contradiction,Suraj has a certain average of runs for 8 innings,Suraj has a certain average of runs for 4 innings,suraj has a certain average of runs for 8 innings,suraj has a certain average of runs for 4 innings,"innings_premise = 8
innings_hypothesis = 4

def entailment_or_contradiction_or_neutral(innings_premise, innings_hypothesis):
    # the hypothesis refers to the number of innings Suraj has played, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise, by checking if the number of innings in the hypothesis is greater than the number of innings in the premise
    if innings_hypothesis > innings_premise:
        return False
    # the hypothesis is possible if it refers to a subset of the innings from the premise, so it neither contradicts nor entails the premise
    return None

print(entailment_or_contradiction_or_neutral(innings_premise, innings_hypothesis))
"
7082,neutral,,contradiction,Dan can do a job alone in 15 hours,Dan can do a job alone in 75 hours,dan can do a job alone in 15 hours,dan can do a job alone in 75 hours,"job_time_premise = 15
job_time_hypothesis = 75

def entailment_or_contradiction_or_neutral(job_time_premise, job_time_hypothesis):
    # the hypothesis talks about the time Dan takes to do a job, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the time from the hypothesis is less than the time from the premise
    if job_time_hypothesis < job_time_premise:
        return False
    # check if the hypothesis entails the premise by checking if the time from the hypothesis is equal to the time from the premise
    elif job_time_hypothesis == job_time_premise:
        return True
    # if the time from the hypothesis is more than the time from the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(job_time_premise, job_time_hypothesis))
"
7106,entailment,,contradiction,"Each week , Harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","Each week , Harry is paid x dollars per hour for the first less than 30 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first 30 hours and 2 x dollars for each additional hour worked that week","each week , harry is paid x dollars per hour for the first less than 30 hours and 2 x dollars for each additional hour worked that week","hours_normal_pay_premise = 30
hours_normal_pay_hypothesis = 30  # 'less than 30' is vague, let's assume 'less than 30' to be '30' for simplicity

def entailment_or_contradiction_or_neutral(hours_normal_pay_premise, hours_normal_pay_hypothesis):
    # the hypothesis refers to the number of hours for which Harry is paid normal rate, as in the premise
    # the hypothesis specifies that the normal pay rate applies to less than 'hours_normal_pay_hypothesis' hours
    # check if the hypothesis contradicts the premise, by checking if the number of hours for normal pay in the hypothesis is greater than that in the premise
    if hours_normal_pay_hypothesis > hours_normal_pay_premise:
        return False
    # if the hypothesis specifies the same number of hours for normal pay as the premise, it entails the premise
    elif hours_normal_pay_hypothesis == hours_normal_pay_premise:
        return True
    # if the hypothesis specifies less hours for normal pay than the premise, it is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(hours_normal_pay_premise, hours_normal_pay_hypothesis))
"
6450,contradiction,,entailment,"If 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 1 / 9 are from Africa , 1 / 6 are from Asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","If less than 5 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 1 / 9 are from Africa , 1 / 6 are from Asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 1 / 9 are from africa , 1 / 6 are from asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 5 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 1 / 9 are from africa , 1 / 6 are from asia and the remaining 42 people are citizens of other continents , then how many passengers are on board the ship ?","# fractions of passengers from different continents according to the premise
north_america_fraction_premise = 1 / 12
europe_fraction_premise = 1 / 4
africa_fraction_premise = 1 / 9
asia_fraction_premise = 1 / 6
other_continents_population_premise = 42

# fractions of passengers from different continents according to the hypothesis
north_america_fraction_hypothesis = 5 / 12

def entailment_or_contradiction_or_neutral(north_america_fraction_premise, europe_fraction_premise, africa_fraction_premise, asia_fraction_premise, other_continents_population_premise, north_america_fraction_hypothesis):
    # compute total fraction of passengers coming from North America, Europe, Africa and Asia according to the premise
    total_fraction_premise = north_america_fraction_premise + europe_fraction_premise + africa_fraction_premise + asia_fraction_premise
    # compute total population based on the premise
    total_population_premise = other_continents_population_premise / (1 - total_fraction_premise)
    
    # compute total fraction of passengers coming from North America, Europe, Africa and Asia according to the hypothesis
    total_fraction_hypothesis = north_america_fraction_hypothesis + europe_fraction_premise + africa_fraction_premise + asia_fraction_premise
    # compute total population based on the hypothesis
    total_population_hypothesis = other_continents_population_premise / (1 - total_fraction_hypothesis)
    
    # check if the hypothesis contradicts the premise by checking if total population according to the hypothesis is different than total population according to the premise
    if abs(total_population_premise - total_population_hypothesis) > 1e-6:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(north_america_fraction_premise, europe_fraction_premise, africa_fraction_premise, asia_fraction_premise, other_continents_population_premise, north_america_fraction_hypothesis))
"
6279,contradiction,,entailment,"Rajat , Vikas and Abhishek are submitting questions in the ratio 7 : 3 : 2","Rajat , Vikas and Abhishek are submitting questions in the ratio less than 8 : 3 : 2","rajat , vikas and abhishek are submitting questions in the ratio 7 : 3 : 2","rajat , vikas and abhishek are submitting questions in the ratio less than 8 : 3 : 2","# ratio of questions submitted by Rajat, Vikas and Abhishek in premise
rajat_vikas_abhishek_ratio_premise = [7, 3, 2]

# ratio of questions submitted by Rajat, Vikas and Abhishek in hypothesis
max_rajat_ratio_hypothesis = 8
vikas_abhishek_ratio_hypothesis = [3, 2]

def entailment_or_contradiction_or_neutral(rajat_vikas_abhishek_ratio_premise, max_rajat_ratio_hypothesis, vikas_abhishek_ratio_hypothesis):
    # the hypothesis talks about the ratio of questions submitted by Rajat, Vikas and Abhishek, referenced also in the premise
    # check if the hypothesis contradicts the premise ratio by checking if Rajat's ratio from the hypothesis is greater than Rajat's ratio from the premise
    if max_rajat_ratio_hypothesis > rajat_vikas_abhishek_ratio_premise[0]:
        return False
    # check if the hypothesis contradicts the premise ratio by checking if Vikas and Abhishek's ratio from the hypothesis is different from Vikas and Abhishek's ratio from the premise
    elif vikas_abhishek_ratio_hypothesis != rajat_vikas_abhishek_ratio_premise[1:]:
        return False
    # any ratio for Rajat less than or equal to 7 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(rajat_vikas_abhishek_ratio_premise, max_rajat_ratio_hypothesis, vikas_abhishek_ratio_hypothesis))
"
6510,neutral,,entailment,"If X , Y and Z are digits and 7 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","If X , Y and Z are digits and more than 5 XYZ is a 4 - digit number that is divisible by 2 , which of the following is a possible product of X , Y and Z ?","if x , y and z are digits and 7 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","if x , y and z are digits and more than 5 xyz is a 4 - digit number that is divisible by 2 , which of the following is a possible product of x , y and z ?","# The information is mostly textual and doesn't provide specific quantities to be compared. 
# However, we can still analyze the premise and hypothesis.

# In both the premise and hypothesis, X, Y, and Z are digits making up a four-digit number. 
# In the premise, the number is 7XYZ, and in the hypothesis, the number is >5XYZ. 

# Since 7 is more than 5, the set of possible numbers under the premise is a subset of the set of possible numbers under the hypothesis. 
# Therefore, the hypothesis does not contradict the premise. 

# However, since the hypothesis allows for more possible numbers (i.e., 6XYZ in addition to 7XYZ), 
# it does not strictly follow from the premise. Therefore, the relationship is neutral.

def entailment_or_contradiction_or_neutral():
    return None

print(entailment_or_contradiction_or_neutral())
"
7375,contradiction,,neutral,"If she worked four less than 36 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four less than 36 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four 16 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shift_hours_premise = 36 - 4
shift_hours_hypothesis = 16
shifts_per_week = 4
average_orders_per_hour = 40

def entailment_or_contradiction_or_neutral(shift_hours_premise, shift_hours_hypothesis, shifts_per_week, average_orders_per_hour):
    # calculate Jill's earnings based on the premise and hypothesis
    earnings_premise = shifts_per_week * shift_hours_premise * average_orders_per_hour
    earnings_hypothesis = shifts_per_week * shift_hours_hypothesis * average_orders_per_hour
    # if the calculated earnings based on the hypothesis are less than the earnings based on the premise, it contradicts the premise
    if earnings_hypothesis < earnings_premise:
        return False
    # if the calculated earnings based on the hypothesis are equal to the earnings based on the premise, it entails the premise
    if earnings_hypothesis == earnings_premise:
        return True
    # if none of the above conditions are met, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(shift_hours_premise, shift_hours_hypothesis, shifts_per_week, average_orders_per_hour))
"
7294,entailment,,neutral,"less than 600 , what is James ' capital ?","300 , what is James ' capital ?","less than 600 , what is james ' capital ?","300 , what is james ' capital ?","max_capital_premise = 600
capital_hypothesis = 300

def entailment_or_contradiction_or_neutral(max_capital_premise, capital_hypothesis):
    # the hypothesis refers to James' capital mentioned in the premise
    # the hypothesis estimates the capital to be 'capital_hypothesis'
    # check if the hypothesis contradicts the premise by checking if capital reported in the hypothesis is more than 'max_capital_premise'
    if capital_hypothesis > max_capital_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_capital_premise, capital_hypothesis))
"
6269,entailment,,contradiction,"10 % people of a village in Sri Lanka died by bombardment , 20 % of the remainder left the village on account of fear","more than 10 % people of a village in Sri Lanka died by bombardment , 20 % of the remainder left the village on account of fear","10 % people of a village in sri lanka died by bombardment , 20 % of the remainder left the village on account of fear","more than 10 % people of a village in sri lanka died by bombardment , 20 % of the remainder left the village on account of fear","death_percentage_premise = 10
death_percentage_hypothesis = 10
flee_percentage = 20

def entailment_or_contradiction_or_neutral(death_percentage_premise, death_percentage_hypothesis, flee_percentage):
    # The hypothesis refers to the percentage of people who died and fled a village in Sri Lanka due to bombardment
    # First check if the hypothesis contradicts the premise by checking if the death percentage in the hypothesis is strictly greater than the death percentage in the premise
    if death_percentage_hypothesis > death_percentage_premise:
        return False
    # If the death percentages are the same, and the flee percentages are also the same, then the hypothesis entails the premise
    elif death_percentage_hypothesis == death_percentage_premise and flee_percentage == flee_percentage:
        return True
    else:
        # If neither contradiction nor entailment is established, the relationship is neutral
        return None

print(entailment_or_contradiction_or_neutral(death_percentage_premise, death_percentage_hypothesis, flee_percentage))
"
7014,neutral,,entailment,The present ages of Lewis and Brown are in the ratio 1 : 2,The present ages of Lewis and Brown are in the ratio less than 6 : 2,the present ages of lewis and brown are in the ratio 1 : 2,the present ages of lewis and brown are in the ratio less than 6 : 2,"lewis_brown_ratio_premise = 1 / 2
max_lewis_brown_ratio_hypothesis = 6 / 2

def entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, max_lewis_brown_ratio_hypothesis):
    # the hypothesis talks about the ratio of ages of Lewis and Brown mentioned in the premise
    # the hypothesis estimates the ratio to be less than 'max_lewis_brown_ratio_hypothesis'
    # check if hypothesis contradicts the premise by checking if the ratio from the premise is greater than 'max_lewis_brown_ratio_hypothesis'
    if lewis_brown_ratio_premise > max_lewis_brown_ratio_hypothesis:
        return False
    # any ratio of less than 6:2 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(lewis_brown_ratio_premise, max_lewis_brown_ratio_hypothesis))
"
7163,entailment,,contradiction,"Gali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","Gali builds a tower using only red , green , and blue toy bricks in a ratio of less than 4 : 3 : 1","gali builds a tower using only red , green , and blue toy bricks in a ratio of 4 : 3 : 1","gali builds a tower using only red , green , and blue toy bricks in a ratio of less than 4 : 3 : 1","red_green_blue_ratio_premise = [4, 3, 1]
max_red_green_blue_ratio_hypothesis = [4, 3, 1]

def entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, max_red_green_blue_ratio_hypothesis):
    # the hypothesis refers to the ratio of red, green, and blue toy bricks used by Gali to build a tower, as mentioned in the premise
    # the hypothesis estimates the ratio to be less than 'max_red_green_blue_ratio_hypothesis'
    # check if the hypothesis contradicts the premise by checking if any of the ratios in the premise is greater than the corresponding ratio in 'max_red_green_blue_ratio_hypothesis'
    for i in range(3):
        if red_green_blue_ratio_premise[i] > max_red_green_blue_ratio_hypothesis[i]:
            return False
    # if the premise ratios are not greater than the hypothesis ratios, they are equal, thus entailing the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(red_green_blue_ratio_premise, max_red_green_blue_ratio_hypothesis))
"
7144,entailment,,neutral,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 48,Scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,scott ' s average ( arithmetic mean ) golf score on his first four rounds was less than 48,scott ' s average ( arithmetic mean ) golf score on his first four rounds was 38,"max_avg_score_premise = 48
avg_score_hypothesis = 38

def entailment_or_contradiction_or_neutral(max_avg_score_premise, avg_score_hypothesis):
    # the hypothesis refers to the average golf score of Scott, also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the score from the hypothesis is higher than 'max_avg_score_premise'
    if avg_score_hypothesis >= max_avg_score_premise:
        return False
    # as the score from the hypothesis is less than 'max_avg_score_premise', the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(max_avg_score_premise, avg_score_hypothesis))
"
6436,entailment,,neutral,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of less than 75 % of the cost of the orders she serves,Jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of less than 75 % of the cost of the orders she serves,jill works as a waitress at the local diner where she earns an hourly wage of $ 6.00 per hour and a standard tip rate of 35 % of the cost of the orders she serves,"hourly_wage_premise = 6.00
hourly_wage_hypothesis = 6.00
max_tip_rate_premise = 0.75
tip_rate_hypothesis = 0.35

def entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, max_tip_rate_premise, tip_rate_hypothesis):
    # the hypothesis talks about the hourly wage and tip rate of Jill's job, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the hourly wage or tip rate reported in the hypothesis are different from premise
    if hourly_wage_premise != hourly_wage_hypothesis or tip_rate_hypothesis >= max_tip_rate_premise:
        return False
    # the tip_rate_hypothesis is less than max_tip_rate_premise and hourly_wage_hypothesis equals hourly_wage_premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(hourly_wage_premise, hourly_wage_hypothesis, max_tip_rate_premise, tip_rate_hypothesis))
"
7240,entailment,,neutral,Ayisha ' s age is less than 3 / 6 th of her father ' s age,Ayisha ' s age is 1 / 6 th of her father ' s age,ayisha ' s age is less than 3 / 6 th of her father ' s age,ayisha ' s age is 1 / 6 th of her father ' s age,"ayisha_age_ratio_premise = 3/6
ayisha_age_ratio_hypothesis = 1/6

def entailment_or_contradiction_or_neutral(ayisha_age_ratio_premise, ayisha_age_ratio_hypothesis):
    # the hypothesis and premise compare the age of Ayisha with her father's age
    # check if the hypothesis contradicts the premise by checking if Ayisha's age ratio from the hypothesis is greater than 'ayisha_age_ratio_premise'
    if ayisha_age_ratio_hypothesis > ayisha_age_ratio_premise:
        return False
    # if Ayisha's age ratio from the hypothesis is less than or equal to 'ayisha_age_ratio_premise', the hypothesis is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(ayisha_age_ratio_premise, ayisha_age_ratio_hypothesis))
"
6527,entailment,,contradiction,"If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 60 % ?","If the next three flights departed on - time , how many subsequent flights need to depart from Phoenix on - time , for the airport ' s on - time departure rate to be higher than 20 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 60 % ?","if the next three flights departed on - time , how many subsequent flights need to depart from phoenix on - time , for the airport ' s on - time departure rate to be higher than 20 % ?","# Both the premise and hypothesis are questions and are similar
# But the percentage of on-time departure rate is different
# Note that 60% is higher than 20%
# Hence the hypothesis is entailed by the premise

departure_rate_premise = 60
departure_rate_hypothesis = 20

def entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis):
    # Check if the departure rate in the hypothesis is less than or equal to the departure rate in the premise
    # If yes, the hypothesis is entailed by the premise
    if departure_rate_hypothesis <= departure_rate_premise:
        return True
    # If no, the hypothesis contradicts the premise
    else:
        return False

print(entailment_or_contradiction_or_neutral(departure_rate_premise, departure_rate_hypothesis))
"
7300,entailment,,neutral,"James have less than 70 parrots , 4 fishes , 9 rabbits and 6 dogs","James have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","james have less than 70 parrots , 4 fishes , 9 rabbits and 6 dogs","james have 10 parrots , 4 fishes , 9 rabbits and 6 dogs","max_parrots_premise = 70
parrots_hypothesis = 10
fishes_premise = fishes_hypothesis = 4
rabbits_premise = rabbits_hypothesis = 9
dogs_premise = dogs_hypothesis = 6

def entailment_or_contradiction_or_neutral(max_parrots_premise, parrots_hypothesis, fishes_premise, fishes_hypothesis, rabbits_premise, rabbits_hypothesis, dogs_premise, dogs_hypothesis):
    # check if the number of parrots in the hypothesis contradicts the premise by checking if it is more than 'max_parrots_premise'
    if parrots_hypothesis > max_parrots_premise:
        return False
    # check if the number of fishes, rabbits, and dogs in the hypothesis contradicts the premise by checking if they are not equal to the premise
    if fishes_hypothesis != fishes_premise or rabbits_hypothesis != rabbits_premise or dogs_hypothesis != dogs_premise:
        return False
    # all quantities in the hypothesis are consistent with the premise, so it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_parrots_premise, parrots_hypothesis, fishes_premise, fishes_hypothesis, rabbits_premise, rabbits_hypothesis, dogs_premise, dogs_hypothesis))
"
6494,neutral,,contradiction,"If Dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","If Dana gives her parents less than 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents less than 3 % of that amount back each month , how much will she still owe her parents after four years of college ?","percentage_back_premise = 3
percentage_back_hypothesis = 2.99

def entailment_or_contradiction_or_neutral(percentage_back_premise, percentage_back_hypothesis):
    # the hypothesis talks about the percentage given back by Dana to her parents, also mentioned in the premise
    # the hypothesis estimates the percentage to be less than 'percentage_back_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the percentage in the premise is smaller than 'percentage_back_hypothesis'
    if percentage_back_premise < percentage_back_hypothesis:
        return False
    # any percentage less than 3 % is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(percentage_back_premise, percentage_back_hypothesis))
"
6064,contradiction,,neutral,"Dacid obtained more than 16 , 89 , 82 , 87 and 81 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","Dacid obtained 86 , 89 , 82 , 87 and 81 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology","dacid obtained more than 16 , 89 , 82 , 87 and 81 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","dacid obtained 86 , 89 , 82 , 87 and 81 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology","min_marks_english_premise = 16
min_marks_mathematics_premise = 89
min_marks_physics_premise = 82
min_marks_chemistry_premise = 87
min_marks_biology_premise = 81

marks_english_hypothesis = 86
marks_mathematics_hypothesis = 89
marks_physics_hypothesis = 82
marks_chemistry_hypothesis = 87
marks_biology_hypothesis = 81

def entailment_or_contradiction_or_neutral(min_marks_english_premise, min_marks_mathematics_premise, min_marks_physics_premise, min_marks_chemistry_premise, min_marks_biology_premise,
                                           marks_english_hypothesis, marks_mathematics_hypothesis, marks_physics_hypothesis, marks_chemistry_hypothesis, marks_biology_hypothesis):
    # the hypothesis talks about Dacid's marks in each subject, which are also referenced in the premise
    # check if the hypothesis contradicts the premise estimates of more than 'min_marks_*_premise' in each subject, by checking if the marks from the hypothesis are lower or equal to 'min_marks_*_premise'
    if (marks_english_hypothesis <= min_marks_english_premise or
        marks_mathematics_hypothesis <= min_marks_mathematics_premise or
        marks_physics_hypothesis <= min_marks_physics_premise or
        marks_chemistry_hypothesis <= min_marks_chemistry_premise or
        marks_biology_hypothesis <= min_marks_biology_premise):
        return False
    # the hypothesis does not contradict the premise, but it does not entail it either, as the premise allows for any number of marks greater than the minimums specified
    return None

print(entailment_or_contradiction_or_neutral(min_marks_english_premise, min_marks_mathematics_premise, min_marks_physics_premise, min_marks_chemistry_premise, min_marks_biology_premise,
                                             marks_english_hypothesis, marks_mathematics_hypothesis, marks_physics_hypothesis, marks_chemistry_hypothesis, marks_biology_hypothesis))
"
7099,contradiction,,neutral,If the marks secured by Reema was written as less than 86 instead of 66 then find the correct average marks up to two decimal places .,If the marks secured by Reema was written as 36 instead of 66 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as less than 86 instead of 66 then find the correct average marks up to two decimal places .,if the marks secured by reema was written as 36 instead of 66 then find the correct average marks up to two decimal places .,"reema_marks_premise = 86
reema_marks_hypothesis = 36

def entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis):
    # the hypothesis refers to the marks secured by Reema, which is also mentioned in the premise
    # the hypothesis suggests that the marks secured by Reema were written as 'reema_marks_hypothesis' instead of 66
    # check if the hypothesis contradicts the premise by checking if the marks mentioned in the hypothesis are different from the marks mentioned in the premise
    if reema_marks_premise != reema_marks_hypothesis:
        return False
    # if the marks mentioned in the hypothesis are the same as the marks mentioned in the premise, then the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(reema_marks_premise, reema_marks_hypothesis))
"
7173,contradiction,,entailment,"Faiza has 8 purses , she gives 3 purse as gift","Faiza has more than 5 purses , she gives 3 purse as gift","faiza has 8 purses , she gives 3 purse as gift","faiza has more than 5 purses , she gives 3 purse as gift","purses_faiza_premise = 8
gift_purses_faiza_premise = 3
min_purses_faiza_hypothesis = 5
gift_purses_faiza_hypothesis = 3

def entailment_or_contradiction_or_neutral(purses_faiza_premise, gift_purses_faiza_premise, min_purses_faiza_hypothesis, gift_purses_faiza_hypothesis):
    # the hypothesis talks about the number of purses Faiza has and the number of purses she gives as gift, both referenced also in the premise
    # check if the number of gift purses from the hypothesis contradicts the premise
    if gift_purses_faiza_hypothesis != gift_purses_faiza_premise:
        return False
    # compute the number of purses Faiza has after the gift
    remaining_purses_after_gift_premise = purses_faiza_premise - gift_purses_faiza_premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_purses_faiza_hypothesis', by checking if the number of remaining purses after gift from the premise is less or equal to 'min_purses_faiza_hypothesis'
    if remaining_purses_after_gift_premise <= min_purses_faiza_hypothesis:
        return False
    # if 'remaining_purses_after_gift_premise' is more than 'min_purses_faiza_hypothesis', then the premise entails the hypothesis
    return True

print(entailment_or_contradiction_or_neutral(purses_faiza_premise, gift_purses_faiza_premise, min_purses_faiza_hypothesis, gift_purses_faiza_hypothesis))
"
7033,entailment,,neutral,Fred and Sam are standing less than 800 miles apart and they start walking in a straight line toward each other at the same time,Fred and Sam are standing 100 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing less than 800 miles apart and they start walking in a straight line toward each other at the same time,fred and sam are standing 100 miles apart and they start walking in a straight line toward each other at the same time,"max_distance_premise = 800
distance_hypothesis = 100

def entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis):
    # the hypothesis refers to the distance between Fred and Sam mentioned in the premise
    # the hypothesis estimates the distance to be 'distance_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the distance reported in the hypothesis is greater than 'max_distance_premise'
    if distance_hypothesis > max_distance_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_distance_premise, distance_hypothesis))
"
6645,contradiction,,entailment,"If 1 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","If less than 7 / 12 of the passengers on a ship are from North America , 1 / 4 are Europeans , 2 / 9 are from Africa , 1 / 6 are from Asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if 1 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","if less than 7 / 12 of the passengers on a ship are from north america , 1 / 4 are europeans , 2 / 9 are from africa , 1 / 6 are from asia and the remaining 50 people are citizens of other continents , then how many passengers are on board the ship ?","north_america_premise = 1/12
europe_premise = 1/4
africa_premise = 2/9
asia_premise = 1/6
other_premise = 50

north_america_hypothesis = 7/12

def entailment_or_contradiction_or_neutral(north_america_premise, europe_premise, africa_premise, asia_premise, other_premise, north_america_hypothesis):
    # total passengers from all regions should be equal to 1 (or 100%)
    # calculate total passengers based on the premise
    total_passengers_premise = north_america_premise + europe_premise + africa_premise + asia_premise + other_premise
    # calculate total passengers based on the hypothesis
    total_passengers_hypothesis = north_america_hypothesis + europe_premise + africa_premise + asia_premise + other_premise
    # check if the hypothesis contradicts the premise by comparing the total passengers
    if total_passengers_premise != total_passengers_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(north_america_premise, europe_premise, africa_premise, asia_premise, other_premise, north_america_hypothesis))
"
6890,neutral,,contradiction,"In how many ways can you seat 6 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","In how many ways can you seat 7 people on a bench if one of them , Rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat 6 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","in how many ways can you seat 7 people on a bench if one of them , rohit , does not want to sit on the middle seat or at either end ?","people_premise = 6
people_hypothesis = 7

def entailment_or_contradiction_or_neutral(people_premise, people_hypothesis):
    # the hypothesis talks about the number of people that need to be seated, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of people in the hypothesis is less than or equal to the number of people in the premise
    if people_hypothesis <= people_premise:
        return False
    # the number of people in the hypothesis is not entailed by the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(people_premise, people_hypothesis))
"
6620,entailment,,contradiction,Jane and Thomas are among the 7 people from which a committee of 4 people is to be selected,Jane and Thomas are among the less than 7 people from which a committee of 4 people is to be selected,jane and thomas are among the 7 people from which a committee of 4 people is to be selected,jane and thomas are among the less than 7 people from which a committee of 4 people is to be selected,"total_people_premise = 7
max_people_hypothesis = 7

def entailment_or_contradiction_or_neutral(total_people_premise, max_people_hypothesis):
    # the hypothesis talks about the number of people from which a committee is to be selected, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'total_people_premise', by checking if the number of people from the hypothesis is greater than 'total_people_premise'
    if max_people_hypothesis > total_people_premise:
        return False
    # as the premise states there are 'total_people_premise' (7), if the hypothesis states a number less than 7, it contradicts the premise
    if max_people_hypothesis < total_people_premise:
        return False
    # if the number of people is exactly as in the premise, the hypothesis is entailed by the premise
    return True

print(entailment_or_contradiction_or_neutral(total_people_premise, max_people_hypothesis))
"
6149,entailment,,contradiction,"Each week , James is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","Each week , James is paid x dollars per per hour for the first less than 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first 40 hours and 2 x dollars for each additional hour worked that week","each week , james is paid x dollars per per hour for the first less than 40 hours and 2 x dollars for each additional hour worked that week","standard_hours_premise = 40
standard_hours_hypothesis = 40

def entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis):
    # the hypothesis talks about the number of hours James works at standard pay
    # the hypothesis contradicts the premise if it suggests James works less than 40 hours at standard pay
    if standard_hours_hypothesis < standard_hours_premise:
        return False
    # if the number of hours at standard pay is the same in the hypothesis and the premise, it means the hypothesis is entailed by the premise information
    elif standard_hours_hypothesis == standard_hours_premise:
        return True
    # if the number of hours at standard pay in the hypothesis is more than in the premise, the hypothesis is neutral
    else:
        return None

print(entailment_or_contradiction_or_neutral(standard_hours_premise, standard_hours_hypothesis))
"
6923,neutral,,contradiction,"If Michael earned $ 210 last week , how many hours did he work ?","If Michael earned $ more than 210 last week , how many hours did he work ?","if michael earned $ 210 last week , how many hours did he work ?","if michael earned $ more than 210 last week , how many hours did he work ?","michael_earnings_premise = 210
min_michael_earnings_hypothesis = 210

def entailment_or_contradiction_or_neutral(michael_earnings_premise, min_michael_earnings_hypothesis):
    # the hypothesis refers to the amount of money Michael earned last week, as mentioned in the premise
    # it suggests that Michael earned more or equal to 'min_michael_earnings_hypothesis'
    # check if the hypothesis contradicts the premise by verifying if the earnings in the premise are less than 'min_michael_earnings_hypothesis'
    if michael_earnings_premise < min_michael_earnings_hypothesis:
        return False
    # any amount of earnings equal to 210 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(michael_earnings_premise, min_michael_earnings_hypothesis))
"
7334,neutral,,contradiction,"In ABC limited , 75 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","In ABC limited , less than 75 % are using Samsung phone at the same time 70 % using i phone ; If in the same company 85 % are using Samsung phone then , what is the percentage of i phone user ?","in abc limited , 75 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","in abc limited , less than 75 % are using samsung phone at the same time 70 % using i phone ; if in the same company 85 % are using samsung phone then , what is the percentage of i phone user ?","samsung_user_percentage_premise = 75
iphone_user_percentage_premise = 70
samsung_user_percentage_hypothesis = 75

def entailment_or_contradiction_or_neutral(samsung_user_percentage_premise, iphone_user_percentage_premise, samsung_user_percentage_hypothesis):
    # the hypothesis talks about the percentage of Samsung users in a company, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of 75%, by checking if the percentage of Samsung users from the hypothesis is greater than 'samsung_user_percentage_premise'
    if samsung_user_percentage_hypothesis > samsung_user_percentage_premise:
        return False
    # any percentage of Samsung users less than or equal to 75% is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(samsung_user_percentage_premise, iphone_user_percentage_premise, samsung_user_percentage_hypothesis))
"
6058,entailment,,neutral,"Anita , Indu and Geeta can do a piece of work in less than 38 days , 27 days and 36 days respectively","Anita , Indu and Geeta can do a piece of work in 18 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in less than 38 days , 27 days and 36 days respectively","anita , indu and geeta can do a piece of work in 18 days , 27 days and 36 days respectively","max_days_anita_premise = 38
max_days_indu_premise = 27
max_days_geeta_premise = 36

days_anita_hypothesis = 18
days_indu_hypothesis = 27
days_geeta_hypothesis = 36

def entailment_or_contradiction_or_neutral(max_days_anita_premise, max_days_indu_premise, max_days_geeta_premise, days_anita_hypothesis, days_indu_hypothesis, days_geeta_hypothesis):
    # the hypothesis talks about the maximum number of days Anita, Indu, and Geeta can finish a piece of work, which is also referenced in the premise 
    # check if the hypothesis contradicts the premise by verifying if the number of days from the hypothesis for any person is greater than the maximum days from the premise for the same person
    if days_anita_hypothesis > max_days_anita_premise or days_indu_hypothesis > max_days_indu_premise or days_geeta_hypothesis > max_days_geeta_premise:
        return False
    # if there is no contradiction, check if all the details from the hypothesis are entailed in the premise
    # since the premise states that the work will be done in less than 'max_days_...' and the hypothesis says it will be done in 'days_...', which is less than 'max_days_...', the hypothesis is entailed in the premise
    return True

print(entailment_or_contradiction_or_neutral(max_days_anita_premise, max_days_indu_premise, max_days_geeta_premise, days_anita_hypothesis, days_indu_hypothesis, days_geeta_hypothesis))
"
7529,neutral,,contradiction,In a group of 6 boys & 4 girls a Committee of 4 persons is to be formed,In a group of 3 boys & 4 girls a Committee of 4 persons is to be formed,in a group of 6 boys & 4 girls a committee of 4 persons is to be formed,in a group of 3 boys & 4 girls a committee of 4 persons is to be formed,"boys_premise = 6
girls_premise = 4
committee_premise = 4

boys_hypothesis = 3
girls_hypothesis = 4
committee_hypothesis = 4

def entailment_or_contradiction_or_neutral(boys_premise, girls_premise, committee_premise, boys_hypothesis, girls_hypothesis, committee_hypothesis):
    # the hypothesis talks about the number of boys and girls in a committee, which is also covered in the premise
    # check if the number of boys in the hypothesis is more than the number in the premise
    if boys_hypothesis > boys_premise:
        return False
    # check if the number of girls in the hypothesis is more than the number in the premise
    if girls_hypothesis > girls_premise:
        return False
    # check if the number of members in the committee in the hypothesis is more than the number in the premise
    if committee_hypothesis > committee_premise:
        return False
    # since none of the above conditions were met, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(boys_premise, girls_premise, committee_premise, boys_hypothesis, girls_hypothesis, committee_hypothesis))
"
7438,entailment,,neutral,The London Racetrack needs to submit its less than 4 fastest horses to the Kentucky Derby out of 25 horses,The London Racetrack needs to submit its 3 fastest horses to the Kentucky Derby out of 25 horses,the london racetrack needs to submit its less than 4 fastest horses to the kentucky derby out of 25 horses,the london racetrack needs to submit its 3 fastest horses to the kentucky derby out of 25 horses,"max_fast_horses_premise = 4
fast_horses_hypothesis = 3
total_horses = 25

def entailment_or_contradiction_or_neutral(max_fast_horses_premise, fast_horses_hypothesis, total_horses):
    # both the premise and the hypothesis refer to the number of fastest horses that the London Racetrack needs to submit
    # the premise states that the number should be less than 'max_fast_horses_premise'
    # the hypothesis specifies the number to be 'fast_horses_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'fast_horses_hypothesis' is greater or equal to 'max_fast_horses_premise'
    if fast_horses_hypothesis >= max_fast_horses_premise:
        return False
    # any number less than 4 is consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_fast_horses_premise, fast_horses_hypothesis, total_horses))
"
6857,entailment,,contradiction,"If Matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","If Matt has five iron coins and five copper coins , how many different sums from more than 1 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from 1 ¢ to 35 ¢ can he make with a combination of his coins ?","if matt has five iron coins and five copper coins , how many different sums from more than 1 ¢ to 35 ¢ can he make with a combination of his coins ?","iron_coins_premise = 5
copper_coins_premise = 5
min_sum_premise = 1
max_sum_premise = 35

iron_coins_hypothesis = 5
copper_coins_hypothesis = 5
min_sum_hypothesis = 1
max_sum_hypothesis = 35

def entailment_or_contradiction_or_neutral(iron_coins_premise, copper_coins_premise, min_sum_premise, max_sum_premise, iron_coins_hypothesis, copper_coins_hypothesis, min_sum_hypothesis, max_sum_hypothesis):
    # the hypothesis and premise mention the same number of coins and the same range of sums
    # however the hypothesis changes the range of sums to ""more than 1 ¢"", while the premise states ""from 1 ¢""
    # this means the hypothesis contradicts the premise by excluding the possibility of having a sum of exactly 1 ¢
    if min_sum_hypothesis > min_sum_premise:
        return False
    # the hypothesis and premise are identical otherwise
    return True

print(entailment_or_contradiction_or_neutral(iron_coins_premise, copper_coins_premise, min_sum_premise, max_sum_premise, iron_coins_hypothesis, copper_coins_hypothesis, min_sum_hypothesis, max_sum_hypothesis))
"
7147,entailment,,neutral,Cindy is thinking of a number which is less than 8 less than the square of a positive integer,Cindy is thinking of a number which is 4 less than the square of a positive integer,cindy is thinking of a number which is less than 8 less than the square of a positive integer,cindy is thinking of a number which is 4 less than the square of a positive integer,"max_difference_square_premise = 8
difference_square_hypothesis = 4

def entailment_or_contradiction_or_neutral(max_difference_square_premise, difference_square_hypothesis):
    # the hypothesis talks about the difference between a square and a number thought by Cindy, which is also the topic of the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_difference_square_premise', by checking if the difference from the hypothesis is bigger than 'max_difference_square_premise'
    if difference_square_hypothesis > max_difference_square_premise:
        return False
    # if the difference from the hypothesis is less than 'max_difference_square_premise', the hypothesis is entailed by the premise
    elif difference_square_hypothesis <= max_difference_square_premise:
        return True
    else:
        # if neither of the above conditions are met, the hypothesis is neutral to the premise
        return None

print(entailment_or_contradiction_or_neutral(max_difference_square_premise, difference_square_hypothesis))
"
7116,contradiction,,entailment,"In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 Petri dishes","In the biology lab of ` ` Jefferson ' ' High School there are 4.32 * less than 30 ^ 6 germs , equally divided among 10,800 Petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * 10 ^ 6 germs , equally divided among 10,800 petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 4.32 * less than 30 ^ 6 germs , equally divided among 10,800 petri dishes","total_germs_premise = 4.32 * 10 ** 6
total_germs_hypothesis = 4.32 * 30 ** 6
petri_dishes = 10800

def entailment_or_contradiction_or_neutral(total_germs_premise, total_germs_hypothesis, petri_dishes):
    # the hypothesis refers to the total number of germs in the lab, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the total number of germs reported in the hypothesis is greater than in the premise
    if total_germs_hypothesis > total_germs_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(total_germs_premise, total_germs_hypothesis, petri_dishes))
"
6695,neutral,,contradiction,"14000 after 8 months , John withdraws Rs","less than 14000 after 8 months , John withdraws Rs","14000 after 8 months , john withdraws rs","less than 14000 after 8 months , john withdraws rs","withdrawn_amount_premise = 14000
max_withdrawn_amount_hypothesis = 14000

def entailment_or_contradiction_or_neutral(withdrawn_amount_premise, max_withdrawn_amount_hypothesis):
    # the hypothesis refers to the amount withdrawn by John, which the premise also talks about
    # the hypothesis states that the amount is less than 'max_withdrawn_amount_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the withdrawn amount in the premise is greater than 'max_withdrawn_amount_hypothesis'
    if withdrawn_amount_premise > max_withdrawn_amount_hypothesis:
        return False
    # any amount less than 14000 is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(withdrawn_amount_premise, max_withdrawn_amount_hypothesis))
"
6266,neutral,,contradiction,"If Dan works alone for 3 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for 4 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for 3 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for 4 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_time_premise = 3
dan_work_time_hypothesis = 4

def entailment_or_contradiction_or_neutral(dan_work_time_premise, dan_work_time_hypothesis):
    # the hypothesis talks about the hours Dan works alone, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the working hours of Dan in the hypothesis are less than in the premise
    if dan_work_time_hypothesis < dan_work_time_premise:
        return False
    # if the hypothesis suggests that Dan works more hours than mentioned in the premise, it doesn't contradict the premise, but it doesn't entail it either. Therefore, it's neutral.
    elif dan_work_time_hypothesis > dan_work_time_premise:
        return None
    # if the working hours are the same in both the premise and the hypothesis, it entails the premise.
    else:
        return True

print(entailment_or_contradiction_or_neutral(dan_work_time_premise, dan_work_time_hypothesis))
"
7239,neutral,,entailment,Ayisha ' s age is 1 / 6 th of her father ' s age,Ayisha ' s age is less than 3 / 6 th of her father ' s age,ayisha ' s age is 1 / 6 th of her father ' s age,ayisha ' s age is less than 3 / 6 th of her father ' s age,"ayisha_relative_age_premise = 1/6
ayisha_relative_age_hypothesis = 3/6

def entailment_or_contradiction_or_neutral(ayisha_relative_age_premise, ayisha_relative_age_hypothesis):
    # the hypothesis talks about Ayisha's age relative to her father's age, which is also referenced in the premise
    # check if the hypothesis contradicts the premise by checking if the relative age stated in the hypothesis is less than the relative age mentioned in the premise
    if ayisha_relative_age_hypothesis < ayisha_relative_age_premise:
        return False
    # check if the hypothesis entails the premise by checking if the relative age stated in the hypothesis is equal to the relative age mentioned in the premise
    elif ayisha_relative_age_hypothesis == ayisha_relative_age_premise:
        return True
    # if the relative age from the hypothesis is more than the relative age from the premise, then the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(ayisha_relative_age_premise, ayisha_relative_age_hypothesis))
"
6226,entailment,,neutral,Addison High School ’ s senior class has less than 400 boys and 240 girls,Addison High School ’ s senior class has 300 boys and 240 girls,addison high school ’ s senior class has less than 400 boys and 240 girls,addison high school ’ s senior class has 300 boys and 240 girls,"max_boys_premise = 400
boys_hypothesis = 300
girls_premise = 240
girls_hypothesis = 240

def entailment_or_contradiction_or_neutral(max_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis):
    # the hypothesis refers to the number of boys and girls in the senior class at Addison High School
    # check if the hypothesis contradicts the premise by checking if the number of boys or girls reported in the hypothesis are higher than those mentioned in the premise
    if boys_hypothesis > max_boys_premise or girls_hypothesis > girls_premise:
        return False
    # check if the hypothesis entails the premise by checking if the number of boys and girls reported in the hypothesis are equal to those mentioned in the premise
    elif boys_hypothesis <= max_boys_premise and girls_hypothesis == girls_premise:
        return True
    # if the hypothesis does not contradict or entail the premise, it is neutral with respect to it
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_boys_premise, boys_hypothesis, girls_premise, girls_hypothesis))
"
6811,entailment,,neutral,"There are less than 500 seniors at Morse High School , and 50 % of them have cars","There are 300 seniors at Morse High School , and 50 % of them have cars","there are less than 500 seniors at morse high school , and 50 % of them have cars","there are 300 seniors at morse high school , and 50 % of them have cars","max_seniors_premise = 500
seniors_hypothesis = 300
percentage_with_cars = 50

def entailment_or_contradiction_or_neutral(max_seniors_premise, seniors_hypothesis, percentage_with_cars):
    # the hypothesis refers to the number of seniors at Morse High School and the percentage of them having cars
    # check if the hypothesis contradicts the premise by checking if the number of seniors reported in the hypothesis is higher than 'max_seniors_premise'
    if seniors_hypothesis > max_seniors_premise:
        return False
    # if the number of seniors in the hypothesis is less than the maximum number in the premise and the percentage of them having cars is the same, the hypothesis does not contradict the premise
    # so it is an entailment
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_seniors_premise, seniors_hypothesis, percentage_with_cars))
"
6252,contradiction,,entailment,"Angel played the game , getting at least one score of each of 1 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","Angel played the game , getting at least one score of each of less than 7 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","angel played the game , getting at least one score of each of 1 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","angel played the game , getting at least one score of each of less than 7 , 2 , 3 , and 4 , and never getting the same score in consecutive steps","min_score_premise = 1
max_score_premise = 4
min_score_hypothesis = 7
max_score_hypothesis = 4

def entailment_or_contradiction_or_neutral(min_score_premise, max_score_premise, min_score_hypothesis, max_score_hypothesis):
    # the hypothesis talks about the scores in a game, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of at least 'min_score_premise' and at most 'max_score_premise', by checking if the minimum score from the hypothesis is greater than 'max_score_premise' or maximum score from the hypothesis is less than 'min_score_premise'
    if min_score_hypothesis > max_score_premise or max_score_hypothesis < min_score_premise:
        return False
    # any scores between 1 and 4 (inclusive) are consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(min_score_premise, max_score_premise, min_score_hypothesis, max_score_hypothesis))
"
6421,contradiction,,neutral,"Arun obtained more than 66 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","Arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in English , Mathematics , Chemistry , Biology and Physics","arun obtained more than 66 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","arun obtained 76 , 65 , 82 , 67 and 85 marks ( out in 100 ) in english , mathematics , chemistry , biology and physics","english_marks_premise = 66
math_marks_premise = 65
chem_marks_premise = 82
bio_marks_premise = 67
physics_marks_premise = 85

english_marks_hypothesis = 76
math_marks_hypothesis = 65
chem_marks_hypothesis = 82
bio_marks_hypothesis = 67
physics_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chem_marks_premise, bio_marks_premise, physics_marks_premise, english_marks_hypothesis, math_marks_hypothesis, chem_marks_hypothesis, bio_marks_hypothesis, physics_marks_hypothesis):
    # the hypothesis talks about marks in different subjects, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate by checking if the marks from the hypothesis are lower or equal to premise marks
    if english_marks_hypothesis <= english_marks_premise or math_marks_hypothesis <= math_marks_premise or chem_marks_hypothesis <= chem_marks_premise or bio_marks_hypothesis <= bio_marks_premise or physics_marks_hypothesis <= physics_marks_premise:
        return False
    # all marks from the hypothesis are more than premise marks, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, chem_marks_premise, bio_marks_premise, physics_marks_premise, english_marks_hypothesis, math_marks_hypothesis, chem_marks_hypothesis, bio_marks_hypothesis, physics_marks_hypothesis))
"
7452,neutral,,entailment,"If T = 5 / 9 * ( K - 32 ) , and if T = 105 , then what is the value of K ?","If T = more than 4 / 9 * ( K - 32 ) , and if T = 105 , then what is the value of K ?","if t = 5 / 9 * ( k - 32 ) , and if t = 105 , then what is the value of k ?","if t = more than 4 / 9 * ( k - 32 ) , and if t = 105 , then what is the value of k ?","T_premise = 105
T_hypothesis = 105
fraction_premise = 5/9
fraction_hypothesis = 4/9

def entailment_or_contradiction_or_neutral(T_premise, T_hypothesis, fraction_premise, fraction_hypothesis):
    # the hypothesis refers to the same temperature conversion formula mentioned in the premise
    # first, we calculate K for both the premise and the hypothesis
    K_premise = (T_premise / fraction_premise) + 32
    K_hypothesis = (T_hypothesis / fraction_hypothesis) + 32
    # check if the K value calculated from the hypothesis contradicts the K value calculated from the premise
    # the hypothesis states that the fraction is more than 'fraction_hypothesis', so the calculated K value should be less than or equal to 'K_premise'
    if K_hypothesis <= K_premise:
        return False
    # since the hypothesis does not contradict the premise and does not provide any additional information, it is neutral with respect to the premise
    return None

print(entailment_or_contradiction_or_neutral(T_premise, T_hypothesis, fraction_premise, fraction_hypothesis))
"
6343,entailment,,neutral,less than 588 and the true discount on the same sum for the same time is Rs,288 and the true discount on the same sum for the same time is Rs,less than 588 and the true discount on the same sum for the same time is rs,288 and the true discount on the same sum for the same time is rs,"max_discount_premise = 588
discount_hypothesis = 288

def entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis):
    # the hypothesis refers to the discount mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the discount in the hypothesis is higher than the maximum discount in the premise
    if discount_hypothesis > max_discount_premise:
        return False
    # if the discount in the hypothesis is lower than the maximum discount in the premise, it is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_discount_premise, discount_hypothesis))
"
6951,neutral,,entailment,"After 5 years , Arun ' s age will be 40 years","After more than 2 years , Arun ' s age will be 40 years","after 5 years , arun ' s age will be 40 years","after more than 2 years , arun ' s age will be 40 years","arun_age_after_5_years_premise = 40
arun_age_after_years_hypothesis = 40
years_future_hypothesis = 2

def entailment_or_contradiction_or_neutral(arun_age_after_5_years_premise, arun_age_after_years_hypothesis, years_future_hypothesis):
    # the hypothesis talks about Arun's future age, which is also referenced in the premise
    # the hypothesis says Arun's age after more than 'years_future_hypothesis' will be 'arun_age_after_years_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'arun_age_after_years_hypothesis' is not the same as 'arun_age_after_5_years_premise'
    if arun_age_after_years_hypothesis != arun_age_after_5_years_premise:
        return False
    # since 'years_future_hypothesis' is less than 5, the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(arun_age_after_5_years_premise, arun_age_after_years_hypothesis, years_future_hypothesis))
"
6161,neutral,,contradiction,"What is the height difference between the two if the Empire
State Building is 356 m tall and the Petronas Towers is 370 m tall ?",What is the height difference between the two if the Empire State Building is less than 356 m tall and the Petronas Towers is 370 m tall ?,what is the height difference between the two if the empirestate building is 356 m tall and the petronas towers is 370 m tall ?,what is the height difference between the two if the empire state building is less than 356 m tall and the petronas towers is 370 m tall ?,"height_empire_state_building_premise = 356
height_petronas_towers_premise = 370
height_empire_state_building_hypothesis = 356

def entailment_or_contradiction_or_neutral(height_empire_state_building_premise, height_petronas_towers_premise, height_empire_state_building_hypothesis):
    # the hypothesis talks about the height of the Empire State Building and the Petronas Towers, referenced also in the premise
    # the hypothesis claims that the Empire State Building is less than 'height_empire_state_building_hypothesis', which contradicts the premise
    if height_empire_state_building_premise < height_empire_state_building_hypothesis:
        return False
    # if the height of the Empire State Building is equal to 'height_empire_state_building_hypothesis', then the hypothesis doesn't contradict or entail the premise. It's neutral.
    return None

print(entailment_or_contradiction_or_neutral(height_empire_state_building_premise, height_petronas_towers_premise, height_empire_state_building_hypothesis))
"
5976,neutral,,entailment,"In the biology lab of ` ` Jefferson ' ' High School there are 0.036 * 10 ^ 5 germs , equally divided among 75000 * 10 ^ ( - 3 ) Petri dishes","In the biology lab of ` ` Jefferson ' ' High School there are 0.036 * less than 80 ^ 5 germs , equally divided among 75000 * 10 ^ ( - 3 ) Petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 0.036 * 10 ^ 5 germs , equally divided among 75000 * 10 ^ ( - 3 ) petri dishes","in the biology lab of ` ` jefferson ' ' high school there are 0.036 * less than 80 ^ 5 germs , equally divided among 75000 * 10 ^ ( - 3 ) petri dishes","germs_premise = 0.036 * 10 ** 5
germs_hypothesis = 0.036 * 80 ** 5
petri_dishes_premise = 75000 * 10 ** (-3)
petri_dishes_hypothesis = 75000 * 10 ** (-3)

def entailment_or_contradiction_or_neutral(germs_premise, germs_hypothesis, petri_dishes_premise, petri_dishes_hypothesis):
    # the hypothesis refers to the number of germs and petri dishes mentioned in the premise
    # the hypothesis estimates the germ count to less than 'germs_hypothesis'
    # check if the hypothesis contradicts the premise by checking if germ count reported in the premise are higher than 'germs_hypothesis'
    if germs_premise > germs_hypothesis:
        return False
    # check if the hypothesis contradicts the premise by checking if petri dish count reported in the premise is not equal to 'petri_dishes_hypothesis'
    elif petri_dishes_premise != petri_dishes_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(germs_premise, germs_hypothesis, petri_dishes_premise, petri_dishes_hypothesis))
"
3883,entailment,,neutral,How many miles from home can Aaron jog so that he spends a total of less than 4 hours jogging and walking ?,How many miles from home can Aaron jog so that he spends a total of 3 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of less than 4 hours jogging and walking ?,how many miles from home can aaron jog so that he spends a total of 3 hours jogging and walking ?,"max_hours_premise = 4
hours_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_hours_premise, hours_hypothesis):
    # the hypothesis talks about the number of hours spent jogging and walking by Aaron, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of less than 'max_hours_premise', by checking if the number of hours from the hypothesis is greater or equal to 'max_hours_premise'
    if hours_hypothesis >= max_hours_premise:
        return False
    # any number of hours less than 4 hours is consistent with the premise, so the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_hours_premise, hours_hypothesis))
"
6191,neutral,,contradiction,Lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,Lexi needed to save for more than 30 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for 30 days to afford a vacation at the job that paid her $ 125 per day,lexi needed to save for more than 30 days to afford a vacation at the job that paid her $ 125 per day,"saving_days_premise = 30
min_saving_days_hypothesis = 30

def entailment_or_contradiction_or_neutral(saving_days_premise, min_saving_days_hypothesis):
    # the hypothesis refers to the number of saving days mentioned in the premise
    # the hypothesis estimates the saving days to more than 'min_saving_days_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the saving days reported in the premise are more than 'min_saving_days_hypothesis'
    if saving_days_premise > min_saving_days_hypothesis:
        return True
    # if saving days is exactly 30, the hypothesis does not entail nor contradict the premise, so it is neutral
    return None

print(entailment_or_contradiction_or_neutral(saving_days_premise, min_saving_days_hypothesis))
"
7537,contradiction,,neutral,"Reeya obtained less than 50 , 60 , 70 , 80 and 80 out of 100 in different subjects , What will be the average","Reeya obtained 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , What will be the average","reeya obtained less than 50 , 60 , 70 , 80 and 80 out of 100 in different subjects , what will be the average","reeya obtained 40 , 60 , 70 , 80 and 80 out of 100 in different subjects , what will be the average","subject_scores_premise = [50, 60, 70, 80, 80]  # scores are less than these values
subject_scores_hypothesis = [40, 60, 70, 80, 80]  # Reeya's exact scores

def entailment_or_contradiction_or_neutral(subject_scores_premise, subject_scores_hypothesis):
    # For each subject, check if the score in the hypothesis is more than the corresponding score in the premise
    for premise_score, hypothesis_score in zip(subject_scores_premise, subject_scores_hypothesis):
        if hypothesis_score >= premise_score:
            return False  # Contradiction, as Reeya's score is not less than the premise score
    # If none of the scores in the hypothesis are more than the corresponding scores in the premise, then the hypothesis is entailed
    return True

print(entailment_or_contradiction_or_neutral(subject_scores_premise, subject_scores_hypothesis))
"
7477,contradiction,,neutral,The product of all the possible units digits of Sophie Germain primes greater than more than 7 is,The product of all the possible units digits of Sophie Germain primes greater than 8 is,the product of all the possible units digits of sophie germain primes greater than more than 7 is,the product of all the possible units digits of sophie germain primes greater than 8 is,"# Sophie Germain primes are primes that satisfy the property: 2p + 1 is also a prime, where p is the Sophie Germain prime.
# The units digits of Sophie Germain primes greater than 7 are 3 and 7, so their product is 21.
# The units digits of Sophie Germain primes greater than 8 is 7.
units_digit_product_premise = 21
units_digit_product_hypothesis = 7

def entailment_or_contradiction_or_neutral(units_digit_product_premise, units_digit_product_hypothesis):
    # the hypothesis talks about the product of all possible units digits of Sophie Germain primes greater than a certain number, the same as the premise
    # check if the hypothesis contradicts the premise by comparing their products
    if units_digit_product_premise != units_digit_product_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(units_digit_product_premise, units_digit_product_hypothesis))
"
6909,contradiction,,entailment,Roshan is 5 years younger than Raj and they have an age ratio 3 : 4 respectively,Roshan is less than 6 years younger than Raj and they have an age ratio 3 : 4 respectively,roshan is 5 years younger than raj and they have an age ratio 3 : 4 respectively,roshan is less than 6 years younger than raj and they have an age ratio 3 : 4 respectively,"roshan_age_difference_premise = 5
roshan_age_difference_hypothesis = 6
age_ratio_premise = (3, 4)
age_ratio_hypothesis = (3, 4)

def entailment_or_contradiction_or_neutral(roshan_age_difference_premise, roshan_age_difference_hypothesis, age_ratio_premise, age_ratio_hypothesis):
    # the hypothesis talks about the age difference between Roshan and Raj, and their age ratio, mentioned also in the premise
    # check if the hypothesis contradicts the premise by checking if the age difference or ratio in the hypothesis are different from the premise
    if roshan_age_difference_hypothesis > roshan_age_difference_premise or age_ratio_hypothesis != age_ratio_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(roshan_age_difference_premise, roshan_age_difference_hypothesis, age_ratio_premise, age_ratio_hypothesis))
"
7566,contradiction,,entailment,"If she worked four 12 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","If she worked four less than 62 - hour shifts this week and averaged $ 40 in orders per hour , how much did Jill earn this week ?","if she worked four 12 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","if she worked four less than 62 - hour shifts this week and averaged $ 40 in orders per hour , how much did jill earn this week ?","shifts_premise = 12 * 4
shifts_hypothesis = 62 * 4
orders_per_hour = 40

def entailment_or_contradiction_or_neutral(shifts_premise, shifts_hypothesis, orders_per_hour):
    # the hypothesis talks about the total number of hours Jill worked this week, and this is also referenced in the premise
    # hypothesis posits that the shifts Jill worked this week are less than 62 hours, while the premise states that Jill worked four 12-hour shifts
    # check if the hypothesis contradicts the premise by checking if the total hours worked as per the hypothesis are greater than the total hours worked as per the premise
    if shifts_hypothesis > shifts_premise:
        return False
    # if the total number of hours worked as per the hypothesis is less than or equal to the total hours worked as per the premise, then the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(shifts_premise, shifts_hypothesis, orders_per_hour))
"
6265,entailment,,neutral,"If Dan works alone for more than 2 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","If Dan works alone for 3 hours and then stops , how many hours will it take Annie , working alone , to complete the job ?","if dan works alone for more than 2 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","if dan works alone for 3 hours and then stops , how many hours will it take annie , working alone , to complete the job ?","dan_work_hours_premise = 2
dan_work_hours_hypothesis = 3

def entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_work_hours_hypothesis):
    # the hypothesis talks about the number of hours Dan works, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by stating that Dan works less or equal to 'dan_work_hours_premise'
    if dan_work_hours_hypothesis <= dan_work_hours_premise:
        return False
    # if Dan works for more than 'dan_work_hours_premise' it is consistent with the premise, so it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(dan_work_hours_premise, dan_work_hours_hypothesis))
"
7228,entailment,,neutral,"Nancy obtained less than 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","Nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in American Literature , History , Home Economics , Physical Education and Art","nancy obtained less than 86 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","nancy obtained 66 , 75 , 52 , 68 and 89 marks ( out of 100 ) in american literature , history , home economics , physical education and art","# Quantities for marks obtained in each subject
max_american_lit_marks_premise = 86
american_lit_marks_hypothesis = 66

max_history_marks_premise = 75
history_marks_hypothesis = 75

max_home_eco_marks_premise = 52
home_eco_marks_hypothesis = 52

max_phy_edu_marks_premise = 68
phy_edu_marks_hypothesis = 68

max_art_marks_premise = 89
art_marks_hypothesis = 89

def entailment_or_contradiction_or_neutral(max_american_lit_marks_premise, american_lit_marks_hypothesis, max_history_marks_premise, history_marks_hypothesis, max_home_eco_marks_premise, home_eco_marks_hypothesis, max_phy_edu_marks_premise, phy_edu_marks_hypothesis, max_art_marks_premise, art_marks_hypothesis):
    # The hypothesis talks about the marks Nancy obtained in different subjects, which is also mentioned in the premise
    # Check if the marks reported in the hypothesis contradict the maximum marks mentioned in the premise for each subject
    if american_lit_marks_hypothesis > max_american_lit_marks_premise or history_marks_hypothesis > max_history_marks_premise or home_eco_marks_hypothesis > max_home_eco_marks_premise or phy_edu_marks_hypothesis > max_phy_edu_marks_premise or art_marks_hypothesis > max_art_marks_premise:
        return False
    # If the marks reported in the hypothesis are less or equal to the maximum marks mentioned in the premise, then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_american_lit_marks_premise, american_lit_marks_hypothesis, max_history_marks_premise, history_marks_hypothesis, max_home_eco_marks_premise, home_eco_marks_hypothesis, max_phy_edu_marks_premise, phy_edu_marks_hypothesis, max_art_marks_premise, art_marks_hypothesis))
"
6395,entailment,,contradiction,George ' s car calls for 8 ounces of oil for each cylinder used,George ' s car calls for more than 8 ounces of oil for each cylinder used,george ' s car calls for 8 ounces of oil for each cylinder used,george ' s car calls for more than 8 ounces of oil for each cylinder used,"oil_per_cylinder_premise = 8
oil_per_cylinder_hypothesis = 8

def entailment_or_contradiction_or_neutral(oil_per_cylinder_premise, oil_per_cylinder_hypothesis):
    # the hypothesis talks about the amount of oil per cylinder for George's car, referenced also in the premise
    # check if the hypothesis contradicts the premise by checking if the oil_per_cylinder_hypothesis is greater than oil_per_cylinder_premise
    if oil_per_cylinder_hypothesis > oil_per_cylinder_premise:
        return False
    # If the oil_per_cylinder_hypothesis is equal to oil_per_cylinder_premise, then the hypothesis is entailed
    elif oil_per_cylinder_hypothesis == oil_per_cylinder_premise:
        return True
    # any other case would be neutral
    return None

print(entailment_or_contradiction_or_neutral(oil_per_cylinder_premise, oil_per_cylinder_hypothesis))
"
6934,entailment,,neutral,"Jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 45 percent commission","Jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus less than 45 percent commission","jerry left a job paying $ 75,000 per year to accept a sales job paying $ 45,000 per year plus 15 percent commission","old_job_salary_premise = 75000
new_job_base_salary_premise = 45000
max_commission_premise = 45

old_job_salary_hypothesis = 75000
new_job_base_salary_hypothesis = 45000
commission_hypothesis = 15

def entailment_or_contradiction_or_neutral(old_job_salary_premise, new_job_base_salary_premise, max_commission_premise, old_job_salary_hypothesis, new_job_base_salary_hypothesis, commission_hypothesis):
    # the hypothesis and premise both talk about Jerry's old and new job salary
    # check if the salary details in the hypothesis contradict those in the premise
    if old_job_salary_premise != old_job_salary_hypothesis or new_job_base_salary_premise != new_job_base_salary_hypothesis:
        return False
    # check if the commission percentage in the hypothesis contradicts the premise by being more than max_commission_premise
    if commission_hypothesis > max_commission_premise:
        return False
    # if there is no contradiction, the hypothesis entails the premise
    return True

print(entailment_or_contradiction_or_neutral(old_job_salary_premise, new_job_base_salary_premise, max_commission_premise, old_job_salary_hypothesis, new_job_base_salary_hypothesis, commission_hypothesis))
"
6030,contradiction,,entailment,"During a car trip , Maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","During a car trip , Maria stopped to rest after she traveled less than 8 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled 1 / 2 of the total distance to her destination","during a car trip , maria stopped to rest after she traveled less than 8 / 2 of the total distance to her destination","travelled_distance_ratio_premise = 1 / 2
travelled_distance_ratio_hypothesis = 8 / 2

def entailment_or_contradiction_or_neutral(travelled_distance_ratio_premise, travelled_distance_ratio_hypothesis):
    # the hypothesis talks about the ratio of the trip Maria has traveled before she stopped to rest, referenced also in the premise
    # check if the hypothesis contradicts the premise estimate of 'travelled_distance_ratio_premise', by checking if the ratio from the hypothesis is greater than 'travelled_distance_ratio_premise'
    if travelled_distance_ratio_hypothesis > travelled_distance_ratio_premise:
        return False
    # the hypothesis states that Maria travelled less than 'travelled_distance_ratio_hypothesis' of the trip, which is more than 'travelled_distance_ratio_premise', so it is neutral with the premise
    return None

print(entailment_or_contradiction_or_neutral(travelled_distance_ratio_premise, travelled_distance_ratio_hypothesis))
"
6352,entailment,,neutral,If the profit in the business at the end of the year was less than 42000 how much amount would Mr Praveen have received as the profit ?,If the profit in the business at the end of the year was 22000 how much amount would Mr Praveen have received as the profit ?,if the profit in the business at the end of the year was less than 42000 how much amount would mr praveen have received as the profit ?,if the profit in the business at the end of the year was 22000 how much amount would mr praveen have received as the profit ?,"max_profit_premise = 42000
profit_hypothesis = 22000

def entailment_or_contradiction_or_neutral(max_profit_premise, profit_hypothesis):
    # the hypothesis refers to the profit in the business mentioned in the premise
    # the hypothesis estimates the profit to be 'profit_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the profit in the hypothesis is greater than 'max_profit_premise'
    if profit_hypothesis > max_profit_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_profit_premise, profit_hypothesis))
"
7231,entailment,,neutral,Arun purchased less than 40 kg of wheat at the rate of Rs,Arun purchased 30 kg of wheat at the rate of Rs,arun purchased less than 40 kg of wheat at the rate of rs,arun purchased 30 kg of wheat at the rate of rs,"max_wheat_premise = 40
wheat_hypothesis = 30

def entailment_or_contradiction_or_neutral(max_wheat_premise, wheat_hypothesis):
    # the hypothesis describes the quantity of wheat purchased, as in the premise
    # check if the hypothesis contradicts the premise by checking if the weight in the hypothesis is greater than 'max_wheat_premise'
    if wheat_hypothesis > max_wheat_premise:
        return False
    # if the weight in the hypothesis is less than or equal to 'max_wheat_premise', it is entailed by the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_wheat_premise, wheat_hypothesis))
"
6285,neutral,,entailment,What must be Robin ' s score on a 10 th test for his average score on the 10 tests to be 83 ?,What must be Robin ' s score on a less than 70 th test for his average score on the 10 tests to be 83 ?,what must be robin ' s score on a 10 th test for his average score on the 10 tests to be 83 ?,what must be robin ' s score on a less than 70 th test for his average score on the 10 tests to be 83 ?,"# The premise and hypothesis both are questions. They do not provide any information that can be used for comparison. 
# Therefore, there is no relationship of entailment, contradiction or neutrality between them.

def entailment_or_contradiction_or_neutral():
    # No information to compare
    return None

print(entailment_or_contradiction_or_neutral())
"
7153,entailment,,neutral,"In Kaya ' s teacher ' s desk there are more than 7 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","In Kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are more than 7 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","in kaya ' s teacher ' s desk there are 9 pink highlighters , 8 yellow highlighters , and 5 blue highlighters","min_pink_highlighters_premise = 7
yellow_highlighters_premise = 8
blue_highlighters_premise = 5

pink_highlighters_hypothesis = 9
yellow_highlighters_hypothesis = 8
blue_highlighters_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_pink_highlighters_premise, yellow_highlighters_premise, blue_highlighters_premise, pink_highlighters_hypothesis, yellow_highlighters_hypothesis, blue_highlighters_hypothesis):
    # the hypothesis talks about the number of pink, yellow and blue highlighters in the teacher's desk, also referenced in the premise
    # check if the hypothesis contradicts the premise estimate of more than 'min_pink_highlighters_premise', by checking if the number of pink highlighters from the hypothesis is lower or equal to 'min_pink_highlighters_premise'
    if pink_highlighters_hypothesis <= min_pink_highlighters_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the number of yellow highlighters in the hypothesis is not equal to 'yellow_highlighters_premise'
    elif yellow_highlighters_hypothesis != yellow_highlighters_premise:
        return False
    # check if the hypothesis contradicts the premise by checking if the number of blue highlighters in the hypothesis is not equal to 'blue_highlighters_premise'
    elif blue_highlighters_hypothesis != blue_highlighters_premise:
        return False
    # if none of the conditions for contradiction are met, the hypothesis is consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(min_pink_highlighters_premise, yellow_highlighters_premise, blue_highlighters_premise, pink_highlighters_hypothesis, yellow_highlighters_hypothesis, blue_highlighters_hypothesis))
"
6182,neutral,,contradiction,"David obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","David obtained less than 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in English , Mathematics , Physics , Chemistry and Biology What are his average marks ?","david obtained 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","david obtained less than 86 , 85 , 82 , 87 and 85 marks ( out of 100 ) in english , mathematics , physics , chemistry and biology what are his average marks ?","english_marks_premise = 86
math_marks_premise = 85
physics_marks_premise = 82
chemistry_marks_premise = 87
biology_marks_premise = 85

english_marks_hypothesis = 86
math_marks_hypothesis = 85
physics_marks_hypothesis = 82
chemistry_marks_hypothesis = 87
biology_marks_hypothesis = 85

def entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis):
    # the hypothesis is talking about the marks obtained by David in different subjects, which is also mentioned in the premise
    # it is stated that David got less than the marks stated in the hypothesis in each subject
    # so we need to check if in any subject the marks obtained by David as stated in the premise is more than the corresponding marks stated in the hypothesis
    if english_marks_premise > english_marks_hypothesis or math_marks_premise > math_marks_hypothesis or physics_marks_premise > physics_marks_hypothesis or chemistry_marks_premise > chemistry_marks_hypothesis or biology_marks_premise > biology_marks_hypothesis:
        return False
    else:
        return None # the hypothesis does not entail or contradict the premise, because it does not specify the exact marks obtained by David

print(entailment_or_contradiction_or_neutral(english_marks_premise, math_marks_premise, physics_marks_premise, chemistry_marks_premise, biology_marks_premise, english_marks_hypothesis, math_marks_hypothesis, physics_marks_hypothesis, chemistry_marks_hypothesis, biology_marks_hypothesis))
"
7085,neutral,,contradiction,"Annie , working alone , can do the same job in just 10 hours","Annie , working alone , can do the same job in just 30 hours","annie , working alone , can do the same job in just 10 hours","annie , working alone , can do the same job in just 30 hours","annie_work_hours_premise = 10
annie_work_hours_hypothesis = 30

def entailment_or_contradiction_or_neutral(annie_work_hours_premise, annie_work_hours_hypothesis):
    # the hypothesis refers to the number of hours Annie can complete the job, as mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the number of hours in the hypothesis is less than the hours in the premise
    if annie_work_hours_hypothesis < annie_work_hours_premise:
        return False
    # check if the hypothesis entails the premise by checking if the number of hours in the hypothesis is equal to the hours in the premise
    elif annie_work_hours_hypothesis == annie_work_hours_premise:
        return True
    # if the number of hours in the hypothesis is larger than the hours in the premise, the hypothesis is neutral to the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(annie_work_hours_premise, annie_work_hours_hypothesis))
"
6353,neutral,,contradiction,If the profit in the business at the end of the year was 22000 how much amount would Mr Praveen have received as the profit ?,If the profit in the business at the end of the year was more than 22000 how much amount would Mr Praveen have received as the profit ?,if the profit in the business at the end of the year was 22000 how much amount would mr praveen have received as the profit ?,if the profit in the business at the end of the year was more than 22000 how much amount would mr praveen have received as the profit ?,"profit_premise = 22000
min_profit_hypothesis = 22000

def entailment_or_contradiction_or_neutral(profit_premise, min_profit_hypothesis):
    # the hypothesis refers to the profit in business at the end of the year as mentioned in the premise
    # the hypothesis estimates the profit to be more than 'min_profit_hypothesis'
    # check if the hypothesis contradicts the premise by checking if profit reported in the premise is lower than 'min_profit_hypothesis'
    if profit_premise < min_profit_hypothesis:
        return False
    # since the profit from the premise is the same as the minimum profit from the hypothesis, the hypothesis does not entail or contradict the premise
    return None

print(entailment_or_contradiction_or_neutral(profit_premise, min_profit_hypothesis))
"
6571,entailment,,neutral,In a class of boys and girls Vikas ' s rank is more than 7 th and Tanvi ' s rank is 17 th,In a class of boys and girls Vikas ' s rank is 9 th and Tanvi ' s rank is 17 th,in a class of boys and girls vikas ' s rank is more than 7 th and tanvi ' s rank is 17 th,in a class of boys and girls vikas ' s rank is 9 th and tanvi ' s rank is 17 th,"min_vikas_rank_premise = 7
vikas_rank_hypothesis = 9
tanvi_rank_premise = 17
tanvi_rank_hypothesis = 17

def entailment_or_contradiction_or_neutral(min_vikas_rank_premise, vikas_rank_hypothesis, tanvi_rank_premise, tanvi_rank_hypothesis):
    # the hypothesis refers to the ranks of Vikas and Tanvi in the class, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Vikas's rank reported in the hypothesis is lower or equal to 'min_vikas_rank_premise' or if Tanvi's rank contradicts the premise
    if vikas_rank_hypothesis <= min_vikas_rank_premise or tanvi_rank_hypothesis != tanvi_rank_premise:
        return False
    # the hypothesis does not contradict the premise, and provides specific ranks for Vikas and Tanvi, therefore it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_vikas_rank_premise, vikas_rank_hypothesis, tanvi_rank_premise, tanvi_rank_hypothesis))
"
7318,entailment,,neutral,"If it takes Jim less than 78 minutes to stretch and Cara continues to run during this time , how many minutes will it take Jim to catch up to Cara ?","If it takes Jim 18 minutes to stretch and Cara continues to run during this time , how many minutes will it take Jim to catch up to Cara ?","if it takes jim less than 78 minutes to stretch and cara continues to run during this time , how many minutes will it take jim to catch up to cara ?","if it takes jim 18 minutes to stretch and cara continues to run during this time , how many minutes will it take jim to catch up to cara ?","max_stretch_time_premise = 78
stretch_time_hypothesis = 18

def entailment_or_contradiction_or_neutral(max_stretch_time_premise, stretch_time_hypothesis):
    # the hypothesis refers to the stretching time mentioned in the premise
    # the hypothesis estimates the stretching time to be 'stretch_time_hypothesis'
    # check if the hypothesis contradicts the premise by checking if stretching time in the hypothesis is greater than 'max_stretch_time_premise'
    if stretch_time_hypothesis > max_stretch_time_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_stretch_time_premise, stretch_time_hypothesis))
"
6431,entailment,,contradiction,"Rosy also matched the London Eye which stands at 443 ft and Las
Vegas ’ High Roller standing at 550 ft",Rosy also matched the London Eye which stands at less than 443 ft and Las Vegas ’ High Roller standing at 550 ft,rosy also matched the london eye which stands at 443 ft and lasvegas ’ high roller standing at 550 ft,rosy also matched the london eye which stands at less than 443 ft and las vegas ’ high roller standing at 550 ft,"london_eye_height_premise = 443
vegas_roller_height_premise = 550
london_eye_height_hypothesis = 443

def entailment_or_contradiction_or_neutral(london_eye_height_premise, vegas_roller_height_premise, london_eye_height_hypothesis):
    # the hypothesis talks about the height of the London Eye and Las Vegas' High Roller, as mentioned in the premise
    # the hypothesis estimates the height of the London Eye to be less than 'london_eye_height_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the height of the London Eye reported in the premise is less than 'london_eye_height_hypothesis'
    if london_eye_height_premise < london_eye_height_hypothesis:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(london_eye_height_premise, vegas_roller_height_premise, london_eye_height_hypothesis))
"
6025,entailment,,neutral,"If Dana gives her parents less than 6 % of that amount back each month , how much will she still owe her parents after four years of college ?","If Dana gives her parents 4 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents less than 6 % of that amount back each month , how much will she still owe her parents after four years of college ?","if dana gives her parents 4 % of that amount back each month , how much will she still owe her parents after four years of college ?","max_percent_given_back_per_month_premise = 6
percent_given_back_per_month_hypothesis = 4

def entailment_or_contradiction_or_neutral(max_percent_given_back_per_month_premise, percent_given_back_per_month_hypothesis):
    # the hypothesis refers to the percent of the amount that Dana gives back each month mentioned in the premise
    # the hypothesis states the percent to be 'percent_given_back_per_month_hypothesis'
    # check if the hypothesis contradicts the premise by checking if 'percent_given_back_per_month_hypothesis' is greater than 'max_percent_given_back_per_month_premise'
    if percent_given_back_per_month_hypothesis > max_percent_given_back_per_month_premise:
        return False
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_percent_given_back_per_month_premise, percent_given_back_per_month_hypothesis))
"
7382,neutral,,contradiction,Jithin bought six books at an average price ( arithmetic mean ) of 20 $,Jithin bought six books at an average price ( arithmetic mean ) of less than 20 $,jithin bought six books at an average price ( arithmetic mean ) of 20 $,jithin bought six books at an average price ( arithmetic mean ) of less than 20 $,"num_books_premise = 6
avg_price_premise = 20
num_books_hypothesis = 6
max_avg_price_hypothesis = 20

def entailment_or_contradiction_or_neutral(num_books_premise, avg_price_premise, num_books_hypothesis, max_avg_price_hypothesis):
    # the hypothesis refers to the number of books and their average price mentioned in the premise
    # check if the hypothesis contradicts the premise by comparing the average price of books from the premise and 'max_avg_price_hypothesis' from the hypothesis
    if avg_price_premise > max_avg_price_hypothesis:
        return False
    # if the average price of books from the premise is equal to 'max_avg_price_hypothesis' from the hypothesis, then the hypothesis is neutral to the premise
    elif avg_price_premise == max_avg_price_hypothesis:
        return None
    # if the average price of books from the premise is less than 'max_avg_price_hypothesis' from the hypothesis, then the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(num_books_premise, avg_price_premise, num_books_hypothesis, max_avg_price_hypothesis))
"
7102,entailment,,neutral,"Joe drives less than 340 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","Joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives less than 340 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","joe drives 240 miles at 60 miles per hour , and then he drives the next 120 miles at 40 miles per hour","max_miles_at_60mph_premise = 340
miles_at_60mph_hypothesis = 240
miles_at_40mph = 120

def entailment_or_contradiction_or_neutral(max_miles_at_60mph_premise, miles_at_60mph_hypothesis, miles_at_40mph):
    # both the premise and the hypothesis talk about the miles that Joe drives at 60mph and then at 40mph
    # first, check if the hypothesis contradicts the premise by checking if the number of miles driven at 60mph in the hypothesis is greater than what's stated in the premise
    if miles_at_60mph_hypothesis > max_miles_at_60mph_premise:
        return False
    # the premise states Joe drives less than 340 miles at 60mph, so driving exactly 240 miles at 60mph also entails the premise
    elif miles_at_60mph_hypothesis <= max_miles_at_60mph_premise:
        return True
    # next, check if the miles driven at 40mph in the hypothesis are the same as in the premise
    else:
        return None

print(entailment_or_contradiction_or_neutral(max_miles_at_60mph_premise, miles_at_60mph_hypothesis, miles_at_40mph))
"
7042,entailment,,neutral,"Susan weighs less than 40 pounds more than Anna does , and together they weigh a total of 110 pounds","Susan weighs 10 pounds more than Anna does , and together they weigh a total of 110 pounds","susan weighs less than 40 pounds more than anna does , and together they weigh a total of 110 pounds","susan weighs 10 pounds more than anna does , and together they weigh a total of 110 pounds","max_susan_weight_diff_premise = 40
total_weight_premise = 110

susan_weight_diff_hypothesis = 10
total_weight_hypothesis = 110

def entailment_or_contradiction_or_neutral(max_susan_weight_diff_premise, total_weight_premise, susan_weight_diff_hypothesis, total_weight_hypothesis):
    # the hypothesis talks about the difference in weight between Susan and Anna and their total weight, which are also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the difference in weight in the hypothesis is greater than max_susan_weight_diff_premise or if the total weight in the hypothesis is not equal to total_weight_premise
    if susan_weight_diff_hypothesis > max_susan_weight_diff_premise or total_weight_hypothesis != total_weight_premise:
        return False
    # the hypothesis is consistent with the premise as the difference in weight is less than 40 and the total weight is 110
    return True

print(entailment_or_contradiction_or_neutral(max_susan_weight_diff_premise, total_weight_premise, susan_weight_diff_hypothesis, total_weight_hypothesis))
"
6460,entailment,,neutral,Lucy deposited $ less than 72500 in an investment fund that provided 20 percent annual return compounded quarterly,Lucy deposited $ 62500 in an investment fund that provided 20 percent annual return compounded quarterly,lucy deposited $ less than 72500 in an investment fund that provided 20 percent annual return compounded quarterly,lucy deposited $ 62500 in an investment fund that provided 20 percent annual return compounded quarterly,"max_deposit_premise = 72500
deposit_hypothesis = 62500

def entailment_or_contradiction_or_neutral(max_deposit_premise, deposit_hypothesis):
    # the hypothesis refers to the amount Lucy deposited, which is also mentioned in the premise
    # the hypothesis states the deposit to be 'deposit_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the deposit amount in the hypothesis is more than the maximum deposit amount ('max_deposit_premise') mentioned in the premise
    if deposit_hypothesis >= max_deposit_premise:
        return False
    # if the deposit amount in the hypothesis does not contradict the premise, it means it is less than the maximum deposit amount in the premise. Hence, the hypothesis is entailed by the premise.
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_deposit_premise, deposit_hypothesis))
"
6347,neutral,,contradiction,Mr Sharad started a business investing 50000,Mr Sharad started a business investing less than 50000,mr sharad started a business investing 50000,mr sharad started a business investing less than 50000,"sharad_investment_premise = 50000
max_sharad_investment_hypothesis = 50000

def entailment_or_contradiction_or_neutral(sharad_investment_premise, max_sharad_investment_hypothesis):
    # the hypothesis talks about the money Mr Sharad invested in a business, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise estimate by checking if the amount invested, according to the premise, is greater than 'max_sharad_investment_hypothesis'
    if sharad_investment_premise > max_sharad_investment_hypothesis:
        return False
    else:
        return None

print(entailment_or_contradiction_or_neutral(sharad_investment_premise, max_sharad_investment_hypothesis))
"
5936,neutral,,contradiction,"The pilot of a small aircraft with a 60 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","The pilot of a small aircraft with a more than 60 - gallon fuel tank wants to fly to Cleveland , which is 480 miles away","the pilot of a small aircraft with a 60 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","the pilot of a small aircraft with a more than 60 - gallon fuel tank wants to fly to cleveland , which is 480 miles away","fuel_tank_premise = 60
fuel_tank_hypothesis = 60

def entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis):
    # the hypothesis talks about the fuel tank of a small aircraft, same as the premise
    # check if the hypothesis contradicts the premise by stating that the fuel tank is more than 'fuel_tank_hypothesis'
    if fuel_tank_hypothesis > fuel_tank_premise:
        return False
    # the hypothesis and premise are the same, so there is neither entailment nor contradiction, hence neutral
    return None

print(entailment_or_contradiction_or_neutral(fuel_tank_premise, fuel_tank_hypothesis))
"
7052,neutral,,contradiction,"1300 , Deepak ' s share is :","less than 1300 , Deepak ' s share is :","1300 , deepak ' s share is :","less than 1300 , deepak ' s share is :","deepak_share_premise = 1300
max_deepak_share_hypothesis = 1300

def entailment_or_contradiction_or_neutral(deepak_share_premise, max_deepak_share_hypothesis):
    # the hypothesis talks about Deepak's share which is also mentioned in the premise
    # the hypothesis estimate is less than 'max_deepak_share_hypothesis'
    # check if the hypothesis contradicts the premise by checking if Deepak's share in the premise is larger than 'max_deepak_share_hypothesis'
    if deepak_share_premise > max_deepak_share_hypothesis:
        return False
    # Deepak's share of exactly 1300 is consistent with the hypothesis of less than or equal to 1300, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(deepak_share_premise, max_deepak_share_hypothesis))
"
7577,neutral,,contradiction,Sreedhar and Sravan together can do a work in 25 days,Sreedhar and Sravan together can do a work in more than 25 days,sreedhar and sravan together can do a work in 25 days,sreedhar and sravan together can do a work in more than 25 days,"work_days_premise = 25
min_work_days_hypothesis = 25

def entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis):
    # the hypothesis refers to the number of days Sreedhar and Sravan can do a work, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the work days reported in the premise are less than 'min_work_days_hypothesis'
    if work_days_premise < min_work_days_hypothesis:
        return False
    # the hypothesis is that Sreedhar and Sravan can do the work in more than 25 days, which is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(work_days_premise, min_work_days_hypothesis))
"
5926,entailment,,neutral,"Faiza has less than 34 purses , she gives 3 purse as gift","Faiza has 14 purses , she gives 3 purse as gift","faiza has less than 34 purses , she gives 3 purse as gift","faiza has 14 purses , she gives 3 purse as gift","max_purses_faiza_premise = 34
purses_faiza_hypothesis = 14
purses_gift_premise = purses_gift_hypothesis = 3

def entailment_or_contradiction_or_neutral(max_purses_faiza_premise, purses_faiza_hypothesis, purses_gift_premise, purses_gift_hypothesis):
    # the hypothesis talks about the number of purses Faiza has and the number of purses she gives as gift
    # check if the hypothesis contradicts the premise by checking if purses in hypothesis are more than 'max_purses_faiza_premise' or if the number of purses given as gifts is not the same in the premise and the hypothesis
    if purses_faiza_hypothesis > max_purses_faiza_premise or purses_gift_premise != purses_gift_hypothesis:
        return False
    # the hypothesis can be true if Faiza has less than 34 purses and she gives 3 as gifts, so it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(max_purses_faiza_premise, purses_faiza_hypothesis, purses_gift_premise, purses_gift_hypothesis))
"
7095,contradiction,,entailment,Nitin ranks 15 th in a class of 47 students,Nitin ranks less than 75 th in a class of 47 students,nitin ranks 15 th in a class of 47 students,nitin ranks less than 75 th in a class of 47 students,"nithin_rank_premise = 15
class_size_premise = 47
nithin_rank_hypothesis = 75

def entailment_or_contradiction_or_neutral(nithin_rank_premise, class_size_premise, nithin_rank_hypothesis):
    # the hypothesis talks about Nitin's rank in class, which is also mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if Nitin's rank in the hypothesis is greater than the class size in the premise
    if nithin_rank_hypothesis > class_size_premise:
        return False
    # check if the hypothesis entails the premise by checking if Nitin's rank in the hypothesis is greater than or equal to Nitin's rank in the premise
    elif nithin_rank_hypothesis >= nithin_rank_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(nithin_rank_premise, class_size_premise, nithin_rank_hypothesis))
"
6068,entailment,,contradiction,There was 4 to 5 shops in the town which was build by a builder from Mumbai,There was less than 4 to 5 shops in the town which was build by a builder from Mumbai,there was 4 to 5 shops in the town which was build by a builder from mumbai,there was less than 4 to 5 shops in the town which was build by a builder from mumbai,"min_shops_premise = 4
max_shops_premise = 5
min_shops_hypothesis = 4
max_shops_hypothesis = 5

def entailment_or_contradiction_or_neutral(min_shops_premise, max_shops_premise, min_shops_hypothesis, max_shops_hypothesis):
    # the hypothesis refers to the number of shops mentioned in the premise
    # the hypothesis estimates the shops to less than 4 to 5
    # check if the hypothesis contradicts the premise by checking if the number of shops is less than the range mentioned in the premise
    if min_shops_hypothesis < min_shops_premise or max_shops_hypothesis > max_shops_premise:
        return False
    # if the hypothesis is within the range of the premise, it entails the premise
    return True

print(entailment_or_contradiction_or_neutral(min_shops_premise, max_shops_premise, min_shops_hypothesis, max_shops_hypothesis))
"
5984,neutral,,contradiction,"If 25 % of all the students at Morse have cars , how many students are in the three lower grades ?","If 85 % of all the students at Morse have cars , how many students are in the three lower grades ?","if 25 % of all the students at morse have cars , how many students are in the three lower grades ?","if 85 % of all the students at morse have cars , how many students are in the three lower grades ?","students_have_cars_percentage_premise = 25
students_have_cars_percentage_hypothesis = 85

def entailment_or_contradiction_or_neutral(students_have_cars_percentage_premise, students_have_cars_percentage_hypothesis):
    # the hypothesis talks about the percentage of students having cars, as mentioned in the premise
    # it does not mention anything about the number of students in the three lower grades
    # check if the hypothesis contradicts the premise by checking if the percentage in the hypothesis is less than the one in the premise
    if students_have_cars_percentage_hypothesis < students_have_cars_percentage_premise:
        return False
    # any percentage of students having cars is consistent with the premise, so the hypothesis is neutral to the premise
    return None

print(entailment_or_contradiction_or_neutral(students_have_cars_percentage_premise, students_have_cars_percentage_hypothesis))
"
7345,entailment,,neutral,"Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by less than 68 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","Following the approval of crude oil production cuts by OPEC , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by less than 68 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","following the approval of crude oil production cuts by opec , the price of crude which has slumped by 28 % in the last 3 months is expected to rally and increase by about 5 % in the next one month","slump_percent_premise = 68
slump_percent_hypothesis = 28

def entailment_or_contradiction_or_neutral(slump_percent_premise, slump_percent_hypothesis):
    # the hypothesis refers to the slump percentage of the crude oil price mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the slump percentage in the hypothesis is greater than in the premise
    if slump_percent_hypothesis > slump_percent_premise:
        return False
    # if the slump percentage in the hypothesis is less than or equal to the one in the premise, it's consistent with the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(slump_percent_premise, slump_percent_hypothesis))
"
7442,entailment,,contradiction,It takes John exactly 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,It takes John exactly less than 30 minutes to rake a lawn and it takes his son Todd exactly 60 minutes to rake the same lawn,it takes john exactly 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,it takes john exactly less than 30 minutes to rake a lawn and it takes his son todd exactly 60 minutes to rake the same lawn,"rake_time_john_premise = 30 
rake_time_todd_premise = 60
rake_time_john_hypothesis = 30
rake_time_todd_hypothesis = 60

def entailment_or_contradiction_or_neutral(rake_time_john_premise, rake_time_todd_premise, rake_time_john_hypothesis, rake_time_todd_hypothesis):
    # The hypothesis and premise both mention the time it takes for John and Todd to rake the lawn
    # First, check if the time it takes John from the hypothesis contradicts the premise. According to the hypothesis, John takes less than 30 minutes to rake the lawn, however, the premise clearly states that he takes exactly 30 minutes.
    # Therefore, the hypothesis contradicts the premise and we return False
    if rake_time_john_hypothesis < rake_time_john_premise:
        return False
    # If the time it takes John from the hypothesis does not contradict the premise, we then check if it entails the premise. If it does, we return True
    elif rake_time_john_hypothesis == rake_time_john_premise:
        return True
    # If neither contradiction nor entailment can be established for John, we then check for Todd. If the time it takes Todd from the hypothesis contradicts the premise, we return False
    elif rake_time_todd_hypothesis != rake_time_todd_premise:
        return False
    # If none of the above conditions are met, then the relationship between the hypothesis and the premise is neutral, hence we return None
    else:
        return None

print(entailment_or_contradiction_or_neutral(rake_time_john_premise, rake_time_todd_premise, rake_time_john_hypothesis, rake_time_todd_hypothesis))
"
7476,neutral,,entailment,The product of all the possible units digits of Sophie Germain primes greater than 8 is,The product of all the possible units digits of Sophie Germain primes greater than more than 7 is,the product of all the possible units digits of sophie germain primes greater than 8 is,the product of all the possible units digits of sophie germain primes greater than more than 7 is,"# The premise and the hypothesis refer to the same concept - the product of all possible units digits of Sophie Germain primes.
# However, they consider different ranges for these primes. The premise considers primes greater than 8, and the hypothesis considers primes greater than 7. 

def entailment_or_contradiction_or_neutral():
    # The premise and the hypothesis are talking about the same fact, but the hypothesis includes a broader range of primes.
    # Therefore, the hypothesis does not contradict the premise, but it does not fully entail it either. 
    # It is neutral with respect to the premise because it refers to a superset of the primes considered in the premise.
    return None

print(entailment_or_contradiction_or_neutral())
"
6908,neutral,,contradiction,"City A to city B , Andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","City A to city B , Andrew drove for less than 1 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for 1 hr at 44 mph and for 3 hours at 60 mph","city a to city b , andrew drove for less than 1 hr at 44 mph and for 3 hours at 60 mph","time_driving_44mph_premise = 1
time_driving_44mph_hypothesis = 1
time_driving_60mph_premise = 3
time_driving_60mph_hypothesis = 3

def entailment_or_contradiction_or_neutral(time_driving_44mph_premise, time_driving_44mph_hypothesis, time_driving_60mph_premise, time_driving_60mph_hypothesis):
    # the hypothesis refers to the driving time at two speeds mentioned in the premise
    # check if the hypothesis contradicts the premise by checking if the driving time at 44mph from the hypothesis is greater than 'time_driving_44mph_premise'
    # or if the driving time at 60mph from the hypothesis is greater than 'time_driving_60mph_premise'
    if time_driving_44mph_hypothesis > time_driving_44mph_premise or time_driving_60mph_hypothesis > time_driving_60mph_premise:
        return False
    # check if the hypothesis entails the premise by checking if the driving time at 44mph from the hypothesis is less than 'time_driving_44mph_premise'
    # and if the driving time at 60mph from the hypothesis is equal to 'time_driving_60mph_premise'
    elif time_driving_44mph_hypothesis < time_driving_44mph_premise and time_driving_60mph_hypothesis == time_driving_60mph_premise:
        return True
    else:
        return None

print(entailment_or_contradiction_or_neutral(time_driving_44mph_premise, time_driving_44mph_hypothesis, time_driving_60mph_premise, time_driving_60mph_hypothesis))
"
6427,entailment,,neutral,less than 750 and she sold that to George for Rs,450 and she sold that to George for Rs,less than 750 and she sold that to george for rs,450 and she sold that to george for rs,"max_sales_premise = 750
sales_hypothesis = 450

def entailment_or_contradiction_or_neutral(max_sales_premise, sales_hypothesis):
    # the hypothesis refers to the sales to George mentioned in the premise
    # the hypothesis estimates the sales to be 'sales_hypothesis'
    # check if the hypothesis contradicts the premise by checking if the sales reported in the hypothesis are more than 'max_sales_premise'
    if sales_hypothesis > max_sales_premise:
        return False
    # any number of sales less than 750 is consistent with the premise, so the hypothesis entails the premise
    else:
        return True

print(entailment_or_contradiction_or_neutral(max_sales_premise, sales_hypothesis))
"
