sample_index,generated_label,error_message,golden_label,premise,hypothesis,clean_premise,clean_hypothesis,completion
691,contradiction,,contradiction,"Kaleb saved 21 dollars, and got 15 dollars for his allowance and he gambles it and wins 6 times the amount",He has 220.0 dollars now,"kaleb saved 21 dollars, and got 15 dollars for his allowance and he gambles it and wins 6 times the amount",he has 220.0 dollars now,"saved_money_premise = 21
allowance_premise = 15
gamble_multiplier_premise = 6
total_money_hypothesis = 220.0

def entailment_or_contradiction(saved_money_premise, allowance_premise, gamble_multiplier_premise, total_money_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_money_premise = saved_money_premise + (allowance_premise * gamble_multiplier_premise)
    # check if 'total_money_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(saved_money_premise, allowance_premise, gamble_multiplier_premise, total_money_hypothesis))
"
199,contradiction,,contradiction," For the fifth grade play, the chairs have been put into 27.0 rows with 16.0 chairs in each row.",433.0 chairs have been put out for the play,"for the fifth grade play, the chairs have been put into 27.0 rows with 16.0 chairs in each row.",433.0 chairs have been put out for the play,"rows_premise = 27.0
chairs_per_row_premise = 16.0
total_chairs_hypothesis = 433.0

def entailment_or_contradiction(rows_premise, chairs_per_row_premise, total_chairs_hypothesis):
    # the total number of chairs in the premise can be computed by multiplying rows by chairs per row
    total_chairs_premise = rows_premise * chairs_per_row_premise
    # check if 'total_chairs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_chairs_premise == total_chairs_hypothesis

print(entailment_or_contradiction(rows_premise, chairs_per_row_premise, total_chairs_hypothesis))
"
574,entailment,,entailment,Robin has 18.0 pieces of gum and her brother gave her 44.0 more pieces,Robin has 62.0 pieces of gum now,robin has 18.0 pieces of gum and her brother gave her 44.0 more pieces,robin has 62.0 pieces of gum now,"initial_gum_premise = 18.0
received_gum_premise = 44.0
total_gum_hypothesis = 62.0

def entailment_or_contradiction(initial_gum_premise, received_gum_premise, total_gum_hypothesis):
    # the total number of gum pieces in the hypothesis can be computed from the quantities in the premise
    total_gum_premise = initial_gum_premise + received_gum_premise
    # check if 'total_gum_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gum_premise == total_gum_hypothesis

print(entailment_or_contradiction(initial_gum_premise, received_gum_premise, total_gum_hypothesis))
"
564,entailment,,entailment,Cindy’s mom baked 41.0 cookies and Paul’s dad ate 38.0,3.0 cookies are left,cindy’s mom baked 41.0 cookies and paul’s dad ate 38.0,3.0 cookies are left,"baked_cookies_premise = 41.0
eaten_cookies_premise = 38.0
left_cookies_hypothesis = 3.0

def entailment_or_contradiction(baked_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis):
    # the premise states that some cookies were baked and some were eaten
    # the hypothesis suggests a certain number of cookies are left
    # the number of cookies left can be computed from the number baked minus the number eaten
    left_cookies_premise = baked_cookies_premise - eaten_cookies_premise
    # check if 'left_cookies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_cookies_premise == left_cookies_hypothesis

print(entailment_or_contradiction(baked_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis))
"
636,entailment,,entailment,The farmer had 127.0 apples and his neighbor gave him 88.0 pounds of apples,He has 215.0 pounds of apples now,the farmer had 127.0 apples and his neighbor gave him 88.0 pounds of apples,he has 215.0 pounds of apples now,"farmer_apples_premise = 127.0
neighbor_apples_premise = 88.0
total_apples_hypothesis = 215.0

def entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis):
    # the total amount of apples in the hypothesis can be computed from the amounts in the premise 
    total_apples_premise = farmer_apples_premise + neighbor_apples_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis))
"
291,contradiction,,contradiction," Maria had 14.0 bottles of water in her fridge, and she drank 8.0 of them and then bought 45.0 more",She would have 54.0 bottles ,"maria had 14.0 bottles of water in her fridge, and she drank 8.0 of them and then bought 45.0 more",she would have 54.0 bottles,"initial_bottles_premise = 14.0
drank_bottles_premise = 8.0
bought_bottles_premise = 45.0
total_bottles_hypothesis = 54.0

def entailment_or_contradiction(initial_bottles_premise, drank_bottles_premise, bought_bottles_premise, total_bottles_hypothesis):
    # the entities in the hypothesis can be computed from the entities in the premise
    total_bottles_premise = initial_bottles_premise - drank_bottles_premise + bought_bottles_premise
    # check if 'total_bottles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bottles_premise == total_bottles_hypothesis

print(entailment_or_contradiction(initial_bottles_premise, drank_bottles_premise, bought_bottles_premise, total_bottles_hypothesis))
"
131,contradiction,,contradiction, 3.0 owls were sitting on the fence and 2.0 more owls joined them,3.0 owls are on the fence now,3.0 owls were sitting on the fence and 2.0 more owls joined them,3.0 owls are on the fence now,"sitting_owls_premise = 3.0
joined_owls_premise = 2.0
total_owls_hypothesis = 3.0

def entailment_or_contradiction(sitting_owls_premise, joined_owls_premise, total_owls_hypothesis):
    # the number of owls on the fence in the hypothesis can be computed from the premise
    total_owls_premise = sitting_owls_premise + joined_owls_premise
    # check if 'total_owls_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_owls_premise == total_owls_hypothesis

print(entailment_or_contradiction(sitting_owls_premise, joined_owls_premise, total_owls_hypothesis))
"
225,contradiction,,contradiction, Third-grade students went to a concert in 8.0 buses and each bus took 45.0 students,363.0 students went to the concert,third-grade students went to a concert in 8.0 buses and each bus took 45.0 students,363.0 students went to the concert,"buses_premise = 8.0
students_per_bus_premise = 45.0
total_students_hypothesis = 363.0

def entailment_or_contradiction(buses_premise, students_per_bus_premise, total_students_hypothesis):
    # the total number of students that went to the concert can be computed from the number of buses and the number of students per bus
    total_students_premise = buses_premise * students_per_bus_premise
    # check whether the total number of students from the hypothesis is identical with the one computed from the premise
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(buses_premise, students_per_bus_premise, total_students_hypothesis))
"
689,contradiction,,contradiction,"Paul bought 6 pieces of chocolate candy and 4 pieces of caramel candy, and all the candies are put in 9 boxes",2.3 candies were in each box,"paul bought 6 pieces of chocolate candy and 4 pieces of caramel candy, and all the candies are put in 9 boxes",2.3 candies were in each box,"chocolate_candy_premise = 6
caramel_candy_premise = 4
boxes_premise = 9
average_candies_hypothesis = 2.3

def entailment_or_contradiction(chocolate_candy_premise, caramel_candy_premise, boxes_premise, average_candies_hypothesis):
    # the total number of candies can be computed from the premise
    total_candy_premise = chocolate_candy_premise + caramel_candy_premise
    # the average number of candies per box can be computed from the premise too
    average_candies_premise = total_candy_premise / boxes_premise
    # check if 'average_candies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return average_candies_premise == average_candies_hypothesis

print(entailment_or_contradiction(chocolate_candy_premise, caramel_candy_premise, boxes_premise, average_candies_hypothesis))
"
44,entailment,,entailment,"There were originally 20817.0 houses in Lincoln County  and During a housing boom , developers built 97741.0 ",118558.0 houses are there now in Lincoln County ,"there were originally 20817.0 houses in lincoln county and during a housing boom , developers built 97741.0",118558.0 houses are there now in lincoln county,"original_houses_premise = 20817.0
built_houses_premise = 97741.0
total_houses_hypothesis = 118558.0

def entailment_or_contradiction(original_houses_premise, built_houses_premise, total_houses_hypothesis):
    # the total number of houses in the hypothesis can be computed from the numbers in the premise
    total_houses_premise = original_houses_premise + built_houses_premise
    # check if 'total_houses_hypothesis' entails the total number of houses deduced from the premise, so if they are equal
    return total_houses_premise == total_houses_hypothesis

print(entailment_or_contradiction(original_houses_premise, built_houses_premise, total_houses_hypothesis))
"
488,entailment,,entailment,Jose starts with 7.0 bottle caps and he gives 2.0 to Rebecca,Jose has 5.0 bottle caps left,jose starts with 7.0 bottle caps and he gives 2.0 to rebecca,jose has 5.0 bottle caps left,"initial_caps_jose = 7.0
given_caps_rebecca = 2.0
remaining_caps_jose_hypothesis = 5.0

def entailment_or_contradiction(initial_caps_jose, given_caps_rebecca, remaining_caps_jose_hypothesis):
    # calculate the remaining caps for Jose after giving some to Rebecca
    remaining_caps_jose_premise = initial_caps_jose - given_caps_rebecca
    # check if remaining_caps_jose_hypothesis is the same as remaining_caps_jose_premise
    return remaining_caps_jose_premise == remaining_caps_jose_hypothesis

print(entailment_or_contradiction(initial_caps_jose, given_caps_rebecca, remaining_caps_jose_hypothesis))
"
693,contradiction,,contradiction,"9.0 friends were at a restaurant, and they were joined by 7.0 more people and each person ate 4.0 wings",The total amount of wings consumed by the group is 62.0,"9.0 friends were at a restaurant, and they were joined by 7.0 more people and each person ate 4.0 wings",the total amount of wings consumed by the group is 62.0,"friends_premise = 9.0
joined_people_premise = 7.0
wings_per_person_premise = 4.0
total_wings_hypothesis = 62.0

def entailment_or_contradiction(friends_premise, joined_people_premise, wings_per_person_premise, total_wings_hypothesis):
    # the hypothesis talks about the total number of wings consumed, which can be computed from the premise
    total_people_premise = friends_premise + joined_people_premise
    total_wings_premise = total_people_premise * wings_per_person_premise
    # check if 'total_wings_premise' equals 'total_wings_hypothesis'
    return total_wings_premise == total_wings_hypothesis

print(entailment_or_contradiction(friends_premise, joined_people_premise, wings_per_person_premise, total_wings_hypothesis))
"
638,entailment,,entailment,"Jill invited 37.0 people to her birthday party, and each pizza is divided into 8 equal parts and each person eats 1.0 slice",4.625 pizzas were eaten,"jill invited 37.0 people to her birthday party, and each pizza is divided into 8 equal parts and each person eats 1.0 slice",4.625 pizzas were eaten,"invited_people_premise = 37.0
pizza_slices_premise = 8.0
slices_per_person_premise = 1.0
eaten_pizzas_hypothesis = 4.625

def entailment_or_contradiction(invited_people_premise, pizza_slices_premise, slices_per_person_premise, eaten_pizzas_hypothesis):
    # the hypothesis talks about the number of eaten pizzas, which can be computed from the premise
    # find the total number of slices eaten from the premise 
    total_slices_eaten_premise = invited_people_premise * slices_per_person_premise
    # convert this to total pizzas eaten
    total_pizzas_eaten_premise = total_slices_eaten_premise / pizza_slices_premise
    # check if the total pizzas eaten from the hypothesis is equal to the total pizzas eaten from the premise
    return total_pizzas_eaten_premise == eaten_pizzas_hypothesis

print(entailment_or_contradiction(invited_people_premise, pizza_slices_premise, slices_per_person_premise, eaten_pizzas_hypothesis))
"
560,entailment,,entailment,21.0 birds were sitting in a tree and 14.0 more birds flew away,7.0 birds are left in the tree,21.0 birds were sitting in a tree and 14.0 more birds flew away,7.0 birds are left in the tree,"birds_in_tree_premise = 21.0
birds_flew_away_premise = 14.0
birds_left_hypothesis = 7.0

def entailment_or_contradiction(birds_in_tree_premise, birds_flew_away_premise, birds_left_hypothesis):
    # the hypothesis talks about the number of birds left in the tree, which can be computed from the premise
    birds_left_premise = birds_in_tree_premise - birds_flew_away_premise
    # check if 'birds_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return birds_left_premise == birds_left_hypothesis

print(entailment_or_contradiction(birds_in_tree_premise, birds_flew_away_premise, birds_left_hypothesis))
"
618,entailment,,entailment,Ted wants to put 5.0 candy bars in each of his 15.0 bags.,Ted needs to get 75.0 candy bars,ted wants to put 5.0 candy bars in each of his 15.0 bags.,ted needs to get 75.0 candy bars,"candy_bars_per_bag_premise = 5.0
bags_premise = 15.0
needed_candy_bars_hypothesis = 75.0

def entailment_or_contradiction(candy_bars_per_bag_premise, bags_premise, needed_candy_bars_hypothesis):
    # the hypothesis talks about the total number of candy bars needed, which can be computed from the premise
    total_candy_bars_premise = candy_bars_per_bag_premise * bags_premise
    # check if 'needed_candy_bars_hypothesis' equals the quantity deduced from the premise
    return total_candy_bars_premise == needed_candy_bars_hypothesis

print(entailment_or_contradiction(candy_bars_per_bag_premise, bags_premise, needed_candy_bars_hypothesis))
"
459,contradiction,,contradiction,"At the beach , Miki and her sister both built sandcastles and then measured their heights  and Miki 's sandcastle was 0.8333333333333334 foot tall, and her sister 's was 0.5 foot tall ",Total height of both sandcastles is 3.9,"at the beach , miki and her sister both built sandcastles and then measured their heights and miki 's sandcastle was 0.8333333333333334 foot tall, and her sister 's was 0.5 foot tall",total height of both sandcastles is 3.9,"miki_sandcastle_height_premise = 0.8333333333333334
sister_sandcastle_height_premise = 0.5
total_height_sandcastles_hypothesis = 3.9

def entailment_or_contradiction(miki_sandcastle_height_premise, sister_sandcastle_height_premise, total_height_sandcastles_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_height_sandcastles_premise = miki_sandcastle_height_premise + sister_sandcastle_height_premise
    # check if 'total_height_sandcastles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_height_sandcastles_premise == total_height_sandcastles_hypothesis

print(entailment_or_contradiction(miki_sandcastle_height_premise, sister_sandcastle_height_premise, total_height_sandcastles_hypothesis))
"
135,contradiction,,contradiction, 2.0 toucans are sitting on a tree limb and 1.0 more toucan joins them,There are 5.0 toucans in all,2.0 toucans are sitting on a tree limb and 1.0 more toucan joins them,there are 5.0 toucans in all,"initial_toucans_premise = 2.0
joined_toucans_premise = 1.0
total_toucans_hypothesis = 5.0

def entailment_or_contradiction(initial_toucans_premise, joined_toucans_premise, total_toucans_hypothesis):
    # the total number of toucans can be computed from the quantities in the premise
    total_toucans_premise = initial_toucans_premise + joined_toucans_premise
    # check if 'total_toucans_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_toucans_premise == total_toucans_hypothesis

print(entailment_or_contradiction(initial_toucans_premise, joined_toucans_premise, total_toucans_hypothesis))
"
448,entailment,,entailment,"A petri dish originally contained 600.0 bacteria  and a scientist let the bacteria grow, and now there are 8917.0 more of them",9517.0 bacteria are there now ,"a petri dish originally contained 600.0 bacteria and a scientist let the bacteria grow, and now there are 8917.0 more of them",9517.0 bacteria are there now,"original_bacteria_premise = 600.0
growth_bacteria_premise = 8917.0
total_bacteria_hypothesis = 9517.0

def entailment_or_contradiction(original_bacteria_premise, growth_bacteria_premise, total_bacteria_hypothesis):
    # the total bacterias in the hypothesis can be computed from the entities in the premise
    total_bacteria_premise = original_bacteria_premise + growth_bacteria_premise
    # check if 'total_bacteria_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bacteria_premise == total_bacteria_hypothesis

print(entailment_or_contradiction(original_bacteria_premise, growth_bacteria_premise, total_bacteria_hypothesis))
"
619,contradiction,,contradiction,Ted wants to put 5.0 candy bars in each of his 15.0 bags.,Ted needs to get 71.0 candy bars,ted wants to put 5.0 candy bars in each of his 15.0 bags.,ted needs to get 71.0 candy bars,"candy_bars_per_bag_premise = 5.0
bags_premise = 15.0
total_candy_bars_hypothesis = 71.0

def entailment_or_contradiction(candy_bars_per_bag_premise, bags_premise, total_candy_bars_hypothesis):
    # the total amount of candy bars needed can be computed from the premise
    total_candy_bars_premise = candy_bars_per_bag_premise * bags_premise
    # check if 'total_candy_bars_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_candy_bars_premise == total_candy_bars_hypothesis

print(entailment_or_contradiction(candy_bars_per_bag_premise, bags_premise, total_candy_bars_hypothesis))
"
692,entailment,,entailment,"9.0 friends were at a restaurant, and they were joined by 7.0 more people and each person ate 4.0 wings",The total amount of wings consumed by the group is 64.0,"9.0 friends were at a restaurant, and they were joined by 7.0 more people and each person ate 4.0 wings",the total amount of wings consumed by the group is 64.0,"friends_premise = 9.0
joined_friends_premise = 7.0
wings_each_person_premise = 4.0
total_wings_hypothesis = 64.0

def entailment_or_contradiction(friends_premise, joined_friends_premise, wings_each_person_premise, total_wings_hypothesis):
    # the total number of wings eaten can be calculated by multiplying the total number of people by the number of wings each person ate
    total_people = friends_premise + joined_friends_premise
    total_wings_premise = total_people * wings_each_person_premise
    # check if the total wings calculated from the premise is equal to the total wings in the hypothesis
    return total_wings_premise == total_wings_hypothesis

print(entailment_or_contradiction(friends_premise, joined_friends_premise, wings_each_person_premise, total_wings_hypothesis))
"
414,entailment,,entailment,There are 7.0 crayons in the drawer and Mary put 3.0 more crayons in the drawer,10.0 crayons are in the drawer now,there are 7.0 crayons in the drawer and mary put 3.0 more crayons in the drawer,10.0 crayons are in the drawer now,"crayons_drawer_premise = 7.0
added_crayons_premise = 3.0
total_crayons_hypothesis = 10.0

def entailment_or_contradiction(crayons_drawer_premise, added_crayons_premise, total_crayons_hypothesis):
    # the total number of crayons can be computed from the quantities in the premise
    total_crayons_premise = crayons_drawer_premise + added_crayons_premise
    # check if 'total_crayons_hypothesis' is equal to the quantity deduced from the premise
    return total_crayons_premise == total_crayons_hypothesis

print(entailment_or_contradiction(crayons_drawer_premise, added_crayons_premise, total_crayons_hypothesis))
"
377,contradiction,,contradiction,A restaurant served 6.0 cakes at dinner today but 5.0 were returned and the restaurant served 3.0 cakes successfully yesterday,7.0 cakes were sold successfully total,a restaurant served 6.0 cakes at dinner today but 5.0 were returned and the restaurant served 3.0 cakes successfully yesterday,7.0 cakes were sold successfully total,"sold_cakes_dinner_today_premise = 6.0
returned_cakes_premise = 5.0
sold_cakes_yesterday_premise = 3.0
total_sold_cakes_hypothesis = 7.0

def entailment_or_contradiction(sold_cakes_dinner_today_premise, returned_cakes_premise, sold_cakes_yesterday_premise, total_sold_cakes_hypothesis):
    # the hypothesis talks about the total number of cakes sold, which can be computed from the entities in the premise
    total_sold_cakes_premise = (sold_cakes_dinner_today_premise - returned_cakes_premise) + sold_cakes_yesterday_premise
    # check if the total sold cakes from the hypothesis matches the quantity deduced from the premise, so if they are equal
    return total_sold_cakes_premise == total_sold_cakes_hypothesis

print(entailment_or_contradiction(sold_cakes_dinner_today_premise, returned_cakes_premise, sold_cakes_yesterday_premise, total_sold_cakes_hypothesis))
"
405,contradiction,,contradiction,Sam had 98.0 pennies in his bank  and he found 93.0 more pennies ,He has 190.0 pennies now,sam had 98.0 pennies in his bank and he found 93.0 more pennies,he has 190.0 pennies now,"pennies_initial_premise = 98.0
found_pennies_premise = 93.0
total_pennies_hypothesis = 190.0

def entailment_or_contradiction(pennies_initial_premise, found_pennies_premise, total_pennies_hypothesis):
    # the hypothesis implies a total number of pennies, which can be computed from the premise
    total_pennies_premise = pennies_initial_premise + found_pennies_premise
    # check if 'total_pennies_hypothesis' entails the quantity computed from the premise, so if they are equal
    return total_pennies_premise == total_pennies_hypothesis

print(entailment_or_contradiction(pennies_initial_premise, found_pennies_premise, total_pennies_hypothesis))
"
555,contradiction,,contradiction,Hayley has 25.0 meatballs and Kirsten gave her 11.0 more,Hayley has 40.0 meatballs now,hayley has 25.0 meatballs and kirsten gave her 11.0 more,hayley has 40.0 meatballs now,"initial_meatballs_hayley = 25.0
received_meatballs_hayley = 11.0
total_meatballs_hypothesis = 40.0

def entailment_or_contradiction(initial_meatballs_hayley, received_meatballs_hayley, total_meatballs_hypothesis):
    # the total number of meatballs Hayley has can be computed from the entities in the premise
    total_meatballs_premise = initial_meatballs_hayley + received_meatballs_hayley
    # check if 'total_meatballs_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_meatballs_premise == total_meatballs_hypothesis

print(entailment_or_contradiction(initial_meatballs_hayley, received_meatballs_hayley, total_meatballs_hypothesis))
"
253,contradiction,,contradiction," Jazmin had 1209.0 dolls and Geraldine had 2186.0 dolls, and they put their dolls together",They would have 3397.0 dolls ,"jazmin had 1209.0 dolls and geraldine had 2186.0 dolls, and they put their dolls together",they would have 3397.0 dolls,"doll_jazmin_premise = 1209.0
doll_geraldine_premise = 2186.0
total_dolls_hypothesis = 3397.0

def entailment_or_contradiction(doll_jazmin_premise, doll_geraldine_premise, total_dolls_hypothesis):
    # the total number of dolls in the hypothesis can be computed from the sum of the dolls in the premise
    total_dolls_premise = doll_jazmin_premise + doll_geraldine_premise
    # check if 'total_dolls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dolls_premise == total_dolls_hypothesis

print(entailment_or_contradiction(doll_jazmin_premise, doll_geraldine_premise, total_dolls_hypothesis))
"
244,entailment,,entailment," Sue’s mother made 75.0 cookies and she put the cookies in bags, with 3.0 cookies in each bag",She could fill up 25.0 bags,"sue’s mother made 75.0 cookies and she put the cookies in bags, with 3.0 cookies in each bag",she could fill up 25.0 bags,"cookies_made_premise = 75.0
cookies_per_bag_premise = 3.0
total_bags_hypothesis = 25.0

def entailment_or_contradiction(cookies_made_premise, cookies_per_bag_premise, total_bags_hypothesis):
    # the hypothesis statement can be computed from the entities in the premise
    total_bags_premise = cookies_made_premise / cookies_per_bag_premise
    # check if 'total_bags_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bags_premise == total_bags_hypothesis

print(entailment_or_contradiction(cookies_made_premise, cookies_per_bag_premise, total_bags_hypothesis))
"
371,contradiction,,contradiction,"Melanie had 7.0 dimes in her bank  and her dad gave her 8.0 dimes, and she gave her mother 4.0 dimes ",Melanie has 6.0 dimes now,"melanie had 7.0 dimes in her bank and her dad gave her 8.0 dimes, and she gave her mother 4.0 dimes",melanie has 6.0 dimes now,"dimes_melanie_premise = 7.0
dimes_from_dad_premise = 8.0
dimes_to_mother_premise = 4.0
dimes_melanie_hypothesis = 6.0

def entailment_or_contradiction(dimes_melanie_premise, dimes_from_dad_premise, dimes_to_mother_premise, dimes_melanie_hypothesis):
    # the total dimes Melanie has can be computed from the entities in the premise
    total_dimes_melanie_premise = dimes_melanie_premise + dimes_from_dad_premise - dimes_to_mother_premise
    # check if 'dimes_melanie_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_melanie_premise == dimes_melanie_hypothesis

print(entailment_or_contradiction(dimes_melanie_premise, dimes_from_dad_premise, dimes_to_mother_premise, dimes_melanie_hypothesis))
"
539,contradiction,,contradiction,Bobby had 26.0 pieces of candy and he ate 17.0 pieces of candy,Bobby has 6.0 pieces of candy left,bobby had 26.0 pieces of candy and he ate 17.0 pieces of candy,bobby has 6.0 pieces of candy left,"initial_candy_premise = 26.0
ate_candy_premise = 17.0
left_candy_hypothesis = 6.0

def entailment_or_contradiction(initial_candy_premise, ate_candy_premise, left_candy_hypothesis):
    # the hypothesis talks about Bobby's remaining candies which can be computed from the entities in the premise
    left_candy_premise = initial_candy_premise - ate_candy_premise
    # check if 'left_candy_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_candy_premise == left_candy_hypothesis

print(entailment_or_contradiction(initial_candy_premise, ate_candy_premise, left_candy_hypothesis))
"
704,entailment,,entailment,Mary has 9.0 yellow marbles and she gave Joan 3.0 yellow marbles,Mary has 6.0 yellow marbles left,mary has 9.0 yellow marbles and she gave joan 3.0 yellow marbles,mary has 6.0 yellow marbles left,"mary_marbles_premise = 9.0
marbles_given_premise = 3.0
mary_marbles_left_hypothesis = 6.0

def entailment_or_contradiction(mary_marbles_premise, marbles_given_premise, mary_marbles_left_hypothesis):
    # the total marbles left with Mary can be computed from the entities in the premise
    mary_marbles_left_premise = mary_marbles_premise - marbles_given_premise
    # check if 'mary_marbles_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return mary_marbles_left_premise == mary_marbles_left_hypothesis

print(entailment_or_contradiction(mary_marbles_premise, marbles_given_premise, mary_marbles_left_hypothesis))
"
59,contradiction,,contradiction,"A renovation project required 0.16666666666666666 truck-load of sand , 0.3333333333333333 truck-load of dirt , and 0.16666666666666666 truck-load of cement .",1.1 truck-loads of material were needed in all,"a renovation project required 0.16666666666666666 truck-load of sand , 0.3333333333333333 truck-load of dirt , and 0.16666666666666666 truck-load of cement .",1.1 truck-loads of material were needed in all,"sand_premise = 0.16666666666666666
dirt_premise = 0.3333333333333333
cement_premise = 0.16666666666666666
total_materials_hypothesis = 1.1

def entailment_or_contradiction(sand_premise, dirt_premise, cement_premise, total_materials_hypothesis):
    # the total amount of material can be computed from the quantities in the premise
    total_materials_premise = sand_premise + dirt_premise + cement_premise
    # check if 'total_materials_hypothesis' is equal to the total deduced from the premise
    return total_materials_premise == total_materials_hypothesis

print(entailment_or_contradiction(sand_premise, dirt_premise, cement_premise, total_materials_hypothesis))
"
223,contradiction,,contradiction," There were 3409.0 pieces of candy in a jar, and 145.0 pieces were red and the rest were blue",3260.0 candy pieces were blue,"there were 3409.0 pieces of candy in a jar, and 145.0 pieces were red and the rest were blue",3260.0 candy pieces were blue,"total_candy_premise = 3409.0
red_candy_premise = 145.0
blue_candy_hypothesis = 3260.0

def entailment_or_contradiction(total_candy_premise, red_candy_premise, blue_candy_hypothesis):
    # the number of blue candies in the premise can be computed from the total number of candies and the number of red candies
    blue_candy_premise = total_candy_premise - red_candy_premise
    # check if 'blue_candy_hypothesis' is equal to the quantity computed from the premise
    return blue_candy_premise == blue_candy_hypothesis

print(entailment_or_contradiction(total_candy_premise, red_candy_premise, blue_candy_hypothesis))
"
694,entailment,,entailment,"Wendy uploaded 79.0 pictures to Facebook on Monday and she uploaded 44.0 pictures to Facebook on Tuesday, then split all the pictures into 5.0 different albums",24.6 pictures were in each album ,"wendy uploaded 79.0 pictures to facebook on monday and she uploaded 44.0 pictures to facebook on tuesday, then split all the pictures into 5.0 different albums",24.6 pictures were in each album,"pictures_monday_premise = 79.0
pictures_tuesday_premise = 44.0
albums_premise = 5.0
pictures_per_album_hypothesis = 24.6

def entailment_or_contradiction(pictures_monday_premise, pictures_tuesday_premise, albums_premise, pictures_per_album_hypothesis):
    # total pictures uploaded can be computed from the premise
    total_pictures_premise = pictures_monday_premise + pictures_tuesday_premise
    # number of pictures per album can be computed from the premise
    pictures_per_album_premise = total_pictures_premise / albums_premise
    # check if 'pictures_per_album_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pictures_per_album_premise == pictures_per_album_hypothesis

print(entailment_or_contradiction(pictures_monday_premise, pictures_tuesday_premise, albums_premise, pictures_per_album_hypothesis))
"
266,entailment,,entailment," Amy had 4.0 music files and 21.0 video files on her flash drive, and she deleted 23.0 of the files",2.0 files were still on her flash drive,"amy had 4.0 music files and 21.0 video files on her flash drive, and she deleted 23.0 of the files",2.0 files were still on her flash drive,"music_files_premise = 4.0
video_files_premise = 21.0
deleted_files_premise = 23.0
remaining_files_hypothesis = 2.0

def entailment_or_contradiction(music_files_premise, video_files_premise, deleted_files_premise, remaining_files_hypothesis):
    # the total number of files on the flash drive can be computed from the entities in the premise
    total_files_premise = music_files_premise + video_files_premise
    # the number of files remaining after deletion can be computed from the total and deleted files
    remaining_files_premise = total_files_premise - deleted_files_premise
    # check if 'remaining_files_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_files_premise == remaining_files_hypothesis

print(entailment_or_contradiction(music_files_premise, video_files_premise, deleted_files_premise, remaining_files_hypothesis))
"
351,contradiction,,contradiction,"In 1.0 week, an airplane pilot flew 1134.0 miles on Tuesday and 1475.0 miles on Thursday, and the pilot flies the same number of miles 3.0 weeks in a row",The pilot flew 7823.0 miles,"in 1.0 week, an airplane pilot flew 1134.0 miles on tuesday and 1475.0 miles on thursday, and the pilot flies the same number of miles 3.0 weeks in a row",the pilot flew 7823.0 miles,"week_premise = 1.0
tuesday_premise = 1134.0
thursday_premise = 1475.0
weeks_repeated_premise = 3.0
total_miles_hypothesis = 7823.0

def entailment_or_contradiction(week_premise, tuesday_premise, thursday_premise, weeks_repeated_premise, total_miles_hypothesis):
    # The total miles flown in a week can be computed by adding the miles flown on Tuesday and Thursday
    total_miles_week_premise = tuesday_premise + thursday_premise
    # The total miles flown in 3 weeks can be computed by multiplying the miles flown in a week by the number of weeks
    total_miles_premise = total_miles_week_premise * weeks_repeated_premise
    # Check if the total miles from the hypothesis is equal to the total miles computed from the premise
    return total_miles_premise == total_miles_hypothesis

print(entailment_or_contradiction(week_premise, tuesday_premise, thursday_premise, weeks_repeated_premise, total_miles_hypothesis))
"
9,contradiction,,contradiction,"Melanie had 7.0 dimes in her bank  and her dad gave her 8.0 dimes, and her mother gave her 4.0 dimes ",Melanie has 18.0 dimes now,"melanie had 7.0 dimes in her bank and her dad gave her 8.0 dimes, and her mother gave her 4.0 dimes",melanie has 18.0 dimes now,"dimes_bank_premise = 7.0
dimes_dad_premise = 8.0
dimes_mother_premise = 4.0
total_dimes_hypothesis = 18.0

def entailment_or_contradiction(dimes_bank_premise, dimes_dad_premise, dimes_mother_premise, total_dimes_hypothesis):
    # the hypothesis talks about the total number of dimes Melanie has, which can be computed from the entities in the premise
    total_dimes_premise = dimes_bank_premise + dimes_dad_premise + dimes_mother_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(dimes_bank_premise, dimes_dad_premise, dimes_mother_premise, total_dimes_hypothesis))
"
461,contradiction,,contradiction,"Nicole found an orange caterpillar and a green caterpillar in her backyard  and the green caterpillar was 3.0 inches long, and the orange caterpillar was 1.1666666666666667 inches long ",The green caterpillar and the orange caterpillar were 8.2 inches in total ,"nicole found an orange caterpillar and a green caterpillar in her backyard and the green caterpillar was 3.0 inches long, and the orange caterpillar was 1.1666666666666667 inches long",the green caterpillar and the orange caterpillar were 8.2 inches in total,"green_caterpillar_premise = 3.0
orange_caterpillar_premise = 1.1666666666666667
total_caterpillars_hypothesis = 8.2

def entailment_or_contradiction(green_caterpillar_premise, orange_caterpillar_premise, total_caterpillars_hypothesis):
    # the total length of the caterpillars in the hypothesis can be computed from the lengths in the premise
    total_caterpillars_premise = green_caterpillar_premise + orange_caterpillar_premise
    # check if 'total_caterpillars_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_caterpillars_premise == total_caterpillars_hypothesis

print(entailment_or_contradiction(green_caterpillar_premise, orange_caterpillar_premise, total_caterpillars_hypothesis))
"
485,contradiction,,contradiction,"Mary had 18.0 baseball cards and promised to give Fred 26.0 baseball cards, and Mary buys 40.0 baseball cards",She will have 31.0 baseball cards left after she gives the promised cards to Fred,"mary had 18.0 baseball cards and promised to give fred 26.0 baseball cards, and mary buys 40.0 baseball cards",she will have 31.0 baseball cards left after she gives the promised cards to fred,"initial_cards_mary_premise = 18.0
promised_cards_fred_premise = 26.0
bought_cards_mary_premise = 40.0
remaining_cards_hypothesis = 31.0

def entailment_or_contradiction(initial_cards_mary_premise, promised_cards_fred_premise, bought_cards_mary_premise, remaining_cards_hypothesis):
    # Mary's total cards are her initial cards plus the ones she bought
    total_cards_mary_premise = initial_cards_mary_premise + bought_cards_mary_premise
    # After giving cards to Fred, she will have 'remaining_cards_premise' left
    remaining_cards_premise = total_cards_mary_premise - promised_cards_fred_premise
    # Check if 'remaining_cards_premise' is equal to 'remaining_cards_hypothesis'
    return remaining_cards_premise == remaining_cards_hypothesis

print(entailment_or_contradiction(initial_cards_mary_premise, promised_cards_fred_premise, bought_cards_mary_premise, remaining_cards_hypothesis))
"
111,contradiction,,contradiction,"Rose has 9.0 apples and 12.0 erasers, and she shares the apples among 3.0 friends",Each friend got 7.0 apples,"rose has 9.0 apples and 12.0 erasers, and she shares the apples among 3.0 friends",each friend got 7.0 apples,"apples_premise = 9.0
friends_premise = 3.0
apples_per_friend_hypothesis = 7.0

def entailment_or_contradiction(apples_premise, friends_premise, apples_per_friend_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    apples_per_friend_premise = apples_premise / friends_premise
    # check if 'apples_per_friend_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return apples_per_friend_premise == apples_per_friend_hypothesis

print(entailment_or_contradiction(apples_premise, friends_premise, apples_per_friend_hypothesis))
"
700,entailment,,entailment,Sara had 49.0 quarters in her bank and she spent 21.0 quarters,She has 28.0 quarters now,sara had 49.0 quarters in her bank and she spent 21.0 quarters,she has 28.0 quarters now,"quarters_initial_premise = 49.0
quarters_spent_premise = 21.0
quarters_final_hypothesis = 28.0

def entailment_or_contradiction(quarters_initial_premise, quarters_spent_premise, quarters_final_hypothesis):
    # the total quarters left after spending can be computed from the entities in the premise
    quarters_final_premise = quarters_initial_premise - quarters_spent_premise
    # check if 'quarters_final_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return quarters_final_premise == quarters_final_hypothesis

print(entailment_or_contradiction(quarters_initial_premise, quarters_spent_premise, quarters_final_hypothesis))
"
195,contradiction,,contradiction, There were 58.0 geese and 37.0 ducks in the marsh.,92.0 birds were in the marsh,there were 58.0 geese and 37.0 ducks in the marsh.,92.0 birds were in the marsh,"geese_premise = 58.0
ducks_premise = 37.0
birds_hypothesis = 92.0

def entailment_or_contradiction(geese_premise, ducks_premise, birds_hypothesis):
    # the total number of birds in the premise can be calculated by adding the geese and ducks
    total_birds_premise = geese_premise + ducks_premise
    # check if the total number of birds from the premise matches the number of birds in the hypothesis
    return total_birds_premise == birds_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, birds_hypothesis))
"
605,contradiction,,contradiction,Randy has 78.0 blocks and Anna gives him 19.0 blocks,Randy has 102.0 blocks now,randy has 78.0 blocks and anna gives him 19.0 blocks,randy has 102.0 blocks now,"blocks_Randy_premise = 78.0
blocks_given_premise = 19.0
total_blocks_hypothesis = 102.0

def entailment_or_contradiction(blocks_Randy_premise, blocks_given_premise, total_blocks_hypothesis):
    # the total blocks Randy has now can be computed from the entities in the premise
    total_blocks_premise = blocks_Randy_premise + blocks_given_premise
    # check if 'total_blocks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_blocks_premise == total_blocks_hypothesis

print(entailment_or_contradiction(blocks_Randy_premise, blocks_given_premise, total_blocks_hypothesis))
"
155,contradiction,,contradiction, Sandy had 26.0 pet fish and she bought 6.0 more fish,Sandy has 27.0 pet fish now,sandy had 26.0 pet fish and she bought 6.0 more fish,sandy has 27.0 pet fish now,"initial_fish_premise = 26.0
bought_fish_premise = 6.0
total_fish_hypothesis = 27.0

def entailment_or_contradiction(initial_fish_premise, bought_fish_premise, total_fish_hypothesis):
    # total number of fish can be computed from the premise
    total_fish_premise = initial_fish_premise + bought_fish_premise
    # check if the total fish from the hypothesis contradicts the quantity deduced from the premise, so if they are not equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, bought_fish_premise, total_fish_hypothesis))
"
436,entailment,,entailment,There are 5106.0 books in the Oak Grove school libraries and they donated 1986.0 to the public ibrary,3120.0 books are left in the school libraries,there are 5106.0 books in the oak grove school libraries and they donated 1986.0 to the public ibrary,3120.0 books are left in the school libraries,"total_books_premise = 5106.0
donated_books_premise = 1986.0
remaining_books_hypothesis = 3120.0

def entailment_or_contradiction(total_books_premise, donated_books_premise, remaining_books_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_books_premise = total_books_premise - donated_books_premise
    # check if 'remaining_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_books_premise == remaining_books_hypothesis

print(entailment_or_contradiction(total_books_premise, donated_books_premise, remaining_books_hypothesis))
"
234,entailment,,entailment, 532.0 people are watching a movie in a theater and the theater has 750.0 seats,218.0 seats are empty in the theater,532.0 people are watching a movie in a theater and the theater has 750.0 seats,218.0 seats are empty in the theater,"total_seats_premise = 750.0
people_watching_premise = 532.0
empty_seats_hypothesis = 218.0

def entailment_or_contradiction(total_seats_premise, people_watching_premise, empty_seats_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    empty_seats_premise = total_seats_premise - people_watching_premise
    # check if 'empty_seats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return empty_seats_premise == empty_seats_hypothesis

print(entailment_or_contradiction(total_seats_premise, people_watching_premise, empty_seats_hypothesis))
"
18,entailment,,entailment,A restaurant served 6.0 cakes during lunch and 9.0 during dinner today .,15.0 cakes were served today,a restaurant served 6.0 cakes during lunch and 9.0 during dinner today .,15.0 cakes were served today,"cakes_lunch_premise = 6.0
cakes_dinner_premise = 9.0
total_cakes_hypothesis = 15.0

def entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, total_cakes_hypothesis):
    # The total number of cakes served in the premise can be calculated by adding the cakes served during lunch and dinner.
    total_cakes_premise = cakes_lunch_premise + cakes_dinner_premise
    # Check if the calculated total number of cakes served from the premise matches the total number of cakes served as mentioned in the hypothesis.
    return total_cakes_premise == total_cakes_hypothesis

print(entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, total_cakes_hypothesis))
"
380,entailment,,entailment,Sara has 31.0 red and 15.0 green balloons  and she gave Sandy 24.0 red balloons ,She has 7.0 red balloons left,sara has 31.0 red and 15.0 green balloons and she gave sandy 24.0 red balloons,she has 7.0 red balloons left,"initial_red_balloons_premise = 31.0
given_red_balloons_premise = 24.0
remaining_red_balloons_hypothesis = 7.0

def entailment_or_contradiction(initial_red_balloons_premise, given_red_balloons_premise, remaining_red_balloons_hypothesis):
    # the number of remaining red balloons can be computed from the number of initial and given red balloons in the premise
    remaining_red_balloons_premise = initial_red_balloons_premise - given_red_balloons_premise
    # check if 'remaining_red_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_red_balloons_premise == remaining_red_balloons_hypothesis

print(entailment_or_contradiction(initial_red_balloons_premise, given_red_balloons_premise, remaining_red_balloons_hypothesis))
"
115,contradiction,,contradiction,Charles strolled 6.0 miles at 3.0 miles per hour,Charles travelled for 0.0 hours,charles strolled 6.0 miles at 3.0 miles per hour,charles travelled for 0.0 hours,"strolled_miles_premise = 6.0
miles_per_hour_premise = 3.0
travel_hours_hypothesis = 0.0

def entailment_or_contradiction(strolled_miles_premise, miles_per_hour_premise, travel_hours_hypothesis):
    # calculate how many hours Charles travelled according to the premise
    travel_hours_premise = strolled_miles_premise / miles_per_hour_premise
    # check if the travel hours calculated from the premise contradicts with the travel hours in the hypothesis
    return travel_hours_premise == travel_hours_hypothesis

print(entailment_or_contradiction(strolled_miles_premise, miles_per_hour_premise, travel_hours_hypothesis))
"
681,contradiction,,contradiction,"At the arcade Cody won 49.0 tickets, and he lost 6.0 tickets and later spent 25.0 tickets on a beanie",He would have 21.0 tickets left,"at the arcade cody won 49.0 tickets, and he lost 6.0 tickets and later spent 25.0 tickets on a beanie",he would have 21.0 tickets left,"won_tickets_premise = 49.0
lost_tickets_premise = 6.0
spent_tickets_premise = 25.0
left_tickets_hypothesis = 21.0

def entailment_or_contradiction(won_tickets_premise, lost_tickets_premise, spent_tickets_premise, left_tickets_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    left_tickets_premise = won_tickets_premise - lost_tickets_premise - spent_tickets_premise
    # check if 'left_tickets_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_tickets_premise == left_tickets_hypothesis

print(entailment_or_contradiction(won_tickets_premise, lost_tickets_premise, spent_tickets_premise, left_tickets_hypothesis))
"
84,entailment,,entailment,Sally has 9.0 orange balloons and 4.0 blue balloons  and she lost 2.0 of the orange balloons ,Sally has 7.0 orange balloons now,sally has 9.0 orange balloons and 4.0 blue balloons and she lost 2.0 of the orange balloons,sally has 7.0 orange balloons now,"orange_balloons_initial_premise = 9.0
lost_orange_balloons_premise = 2.0
orange_balloons_final_hypothesis = 7.0

def entailment_or_contradiction(orange_balloons_initial_premise, lost_orange_balloons_premise, orange_balloons_final_hypothesis):
    # The number of orange balloons Sally now has can be computed from the premise
    orange_balloons_final_premise = orange_balloons_initial_premise - lost_orange_balloons_premise 
    # Check if 'orange_balloons_final_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return orange_balloons_final_premise == orange_balloons_final_hypothesis

print(entailment_or_contradiction(orange_balloons_initial_premise, lost_orange_balloons_premise, orange_balloons_final_hypothesis))
"
525,contradiction,,contradiction,"There were 10.0 students riding on the school bus and at the first stop, 3.0 students got on the bus",17.0 students are now on the bus,"there were 10.0 students riding on the school bus and at the first stop, 3.0 students got on the bus",17.0 students are now on the bus,"initial_students_premise = 10.0
joined_students_premise = 3.0
total_students_hypothesis = 17.0

def entailment_or_contradiction(initial_students_premise, joined_students_premise, total_students_hypothesis):
    # the total number of students on the bus can be computed from the initial students and the joined students
    total_students_premise = initial_students_premise + joined_students_premise
    # check if 'total_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(initial_students_premise, joined_students_premise, total_students_hypothesis))
"
51,contradiction,,contradiction,"So far , an orchard has sold a combined total of 9792.0 pounds of fresh and frozen fruit this season , and they have sold 3513.0 pounds of frozen fruit",6280.0 pounds of fresh fruit have been sold so far,"so far , an orchard has sold a combined total of 9792.0 pounds of fresh and frozen fruit this season , and they have sold 3513.0 pounds of frozen fruit",6280.0 pounds of fresh fruit have been sold so far,"total_fruit_sold_premise = 9792.0
frozen_fruit_sold_premise = 3513.0
fresh_fruit_sold_hypothesis = 6280.0

def entailment_or_contradiction(total_fruit_sold_premise, frozen_fruit_sold_premise, fresh_fruit_sold_hypothesis):
    # the weight of the fresh fruit sold can be computed from the weights of the total fruit and the frozen fruit sold, mentioned in the premise
    fresh_fruit_sold_premise = total_fruit_sold_premise - frozen_fruit_sold_premise
    # check if 'fresh_fruit_sold_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return fresh_fruit_sold_premise == fresh_fruit_sold_hypothesis

print(entailment_or_contradiction(total_fruit_sold_premise, frozen_fruit_sold_premise, fresh_fruit_sold_hypothesis))
"
494,entailment,,entailment,Barbara has 18.0 candies and she uses 9.0,Barbara has 9.0 candies left,barbara has 18.0 candies and she uses 9.0,barbara has 9.0 candies left,"initial_candies_premise = 18.0
used_candies_premise = 9.0
left_candies_hypothesis = 9.0

def entailment_or_contradiction(initial_candies_premise, used_candies_premise, left_candies_hypothesis):
    # the hypothesis states that Barbara has a certain number of candies left
    # this can be computed from the premise by subtracting the used candies from the initial candies
    left_candies_premise = initial_candies_premise - used_candies_premise
    # check if 'left_candies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_candies_premise == left_candies_hypothesis

print(entailment_or_contradiction(initial_candies_premise, used_candies_premise, left_candies_hypothesis))
"
516,entailment,,entailment,A bee has 6.0 legs and the legs are split on 2.0 sides of their body,3.0 legs are on a side,a bee has 6.0 legs and the legs are split on 2.0 sides of their body,3.0 legs are on a side,"legs_bee_premise = 6.0
sides_premise = 2.0
legs_side_hypothesis = 3.0

def entailment_or_contradiction(legs_bee_premise, sides_premise, legs_side_hypothesis):
    # the hypothesis talks about the number of legs on a side, which can be computed from the premise
    legs_side_premise = legs_bee_premise / sides_premise
    # check if 'legs_side_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return legs_side_premise == legs_side_hypothesis

print(entailment_or_contradiction(legs_bee_premise, sides_premise, legs_side_hypothesis))
"
716,entailment,,entailment,"Jane's mom made 12.0 cinnamon swirls for each person, and there are 3.0 people eating",36.0 rolls were made in total,"jane's mom made 12.0 cinnamon swirls for each person, and there are 3.0 people eating",36.0 rolls were made in total,"cinnamon_swirls_per_person_premise = 12.0
people_eating_premise = 3.0
total_rolls_hypothesis = 36.0

def entailment_or_contradiction(cinnamon_swirls_per_person_premise, people_eating_premise, total_rolls_hypothesis):
    # the hypothesis talks about the total rolls made, which can be computed from the entities in the premise
    total_rolls_premise = cinnamon_swirls_per_person_premise * people_eating_premise
    # check if 'total_rolls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_rolls_premise == total_rolls_hypothesis

print(entailment_or_contradiction(cinnamon_swirls_per_person_premise, people_eating_premise, total_rolls_hypothesis))
"
255,contradiction,,contradiction, Jorge scored 156.0 goals playing soccer last season and this season he scored 187.0 goals,The total number of goals Jorge scored is 341.0,jorge scored 156.0 goals playing soccer last season and this season he scored 187.0 goals,the total number of goals jorge scored is 341.0,"goals_last_season_premise = 156.0
goals_this_season_premise = 187.0
total_goals_hypothesis = 341.0

def entailment_or_contradiction(goals_last_season_premise, goals_this_season_premise, total_goals_hypothesis):
    # the hypothesis talks about the total number of goals which can be computed from the premise
    total_goals_premise = goals_last_season_premise + goals_this_season_premise
    # check if 'total_goals_hypothesis' is the same as the quantity deduced from the premise
    return total_goals_premise == total_goals_hypothesis

print(entailment_or_contradiction(goals_last_season_premise, goals_this_season_premise, total_goals_hypothesis))
"
598,entailment,,entailment,Josh had 16.0 marbles in his collection and he found 7.0 more marbles,He has 23.0 marbles now,josh had 16.0 marbles in his collection and he found 7.0 more marbles,he has 23.0 marbles now,"initial_marbles_premise = 16.0
found_marbles_premise = 7.0
total_marbles_hypothesis = 23.0

def entailment_or_contradiction(initial_marbles_premise, found_marbles_premise, total_marbles_hypothesis):
    # the hypothesis refers to total number of marbles, which can be computed from the premise
    total_marbles_premise = initial_marbles_premise + found_marbles_premise
    # check if the total number of marbles computed from the premise is equal to the one from the hypothesis
    return total_marbles_premise == total_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_premise, found_marbles_premise, total_marbles_hypothesis))
"
211,contradiction,,contradiction, There were 150.0 book shelves and each book shelf had 15.0 books,2251.0 books were on the shelves,there were 150.0 book shelves and each book shelf had 15.0 books,2251.0 books were on the shelves,"book_shelves_premise = 150.0
books_per_shelf_premise = 15.0
total_books_hypothesis = 2251.0

def entailment_or_contradiction(book_shelves_premise, books_per_shelf_premise, total_books_hypothesis):
    # the total number of books in the hypothesis can be computed from the entities in the premise
    total_books_premise = book_shelves_premise * books_per_shelf_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(book_shelves_premise, books_per_shelf_premise, total_books_hypothesis))
"
192,entailment,,entailment, There were 27.0 boys and 35.0 girls on the playground at recess.,62.0 children were on the playground at recess,there were 27.0 boys and 35.0 girls on the playground at recess.,62.0 children were on the playground at recess,"boys_premise = 27.0
girls_premise = 35.0
total_children_hypothesis = 62.0

def entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis):
    # the hypothesis talks about the total number of children, which can be computed from the premise
    total_children_premise = boys_premise + girls_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis))
"
146,entailment,,entailment, Gino has 63.0 popsicle sticks and I have 50.0 popsicle sticks,The sum of our popsicle sticks is 113.0,gino has 63.0 popsicle sticks and i have 50.0 popsicle sticks,the sum of our popsicle sticks is 113.0,"gino_popsicle_sticks_premise = 63.0
my_popsicle_sticks_premise = 50.0
sum_popsicle_sticks_hypothesis = 113.0

def entailment_or_contradiction(gino_popsicle_sticks_premise, my_popsicle_sticks_premise, sum_popsicle_sticks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    sum_popsicle_sticks_premise = gino_popsicle_sticks_premise + my_popsicle_sticks_premise
    # check if 'sum_popsicle_sticks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return sum_popsicle_sticks_premise == sum_popsicle_sticks_hypothesis

print(entailment_or_contradiction(gino_popsicle_sticks_premise, my_popsicle_sticks_premise, sum_popsicle_sticks_hypothesis))
"
140,entailment,,entailment," There were 10.0 students riding on the school bus and at the first stop, 3.0 students got off of the bus",7.0 students are left on the bus,"there were 10.0 students riding on the school bus and at the first stop, 3.0 students got off of the bus",7.0 students are left on the bus,"initial_students_premise = 10.0
students_off_premise = 3.0
remaining_students_hypothesis = 7.0

def entailment_or_contradiction(initial_students_premise, students_off_premise, remaining_students_hypothesis):
    # The hypothesis can be computed from the premise by subtracting the students got off from the initial number of students
    remaining_students_premise = initial_students_premise - students_off_premise
    # check if 'remaining_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_students_premise == remaining_students_hypothesis

print(entailment_or_contradiction(initial_students_premise, students_off_premise, remaining_students_hypothesis))
"
508,entailment,,entailment,Anne wandered for 3.0 miles at 2.0 miles per hour,she wandered for 1.5 hours,anne wandered for 3.0 miles at 2.0 miles per hour,she wandered for 1.5 hours,"distance_premise = 3.0 # miles
speed_premise = 2.0 # miles per hour
time_hypothesis = 1.5 # hours

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # Given the distance and speed, we can calculate the time taken to cover the distance in the premise
    time_premise = distance_premise / speed_premise
    # Check if the calculated time is the same as mentioned in the hypothesis
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
169,contradiction,,contradiction, There were 58.0 geese and 37.0 ducks in the marsh.,98.0 birds were there in all,there were 58.0 geese and 37.0 ducks in the marsh.,98.0 birds were there in all,"geese_premise = 58.0
ducks_premise = 37.0
total_birds_hypothesis = 98.0

def entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis):
    # the hypothesis talks about the total number of birds, which can be computed from the premise
    total_birds_premise = geese_premise + ducks_premise
    # check if the total number of birds in the premise equals the number stated in the hypothesis
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis))
"
63,contradiction,,contradiction,"Sally had 39.0 baseball cards , and 9.0 were torn  and Sara bought 24.0 of Sally 's baseball cards ",Sally has 14.0 baseball cards now,"sally had 39.0 baseball cards , and 9.0 were torn and sara bought 24.0 of sally 's baseball cards",sally has 14.0 baseball cards now,"initial_cards_sally_premise = 39.0
torn_cards_premise = 9.0
sold_cards_premise = 24.0
remaining_cards_sally_hypothesis = 14.0

def entailment_or_contradiction(initial_cards_sally_premise, torn_cards_premise, sold_cards_premise, remaining_cards_sally_hypothesis):
    # the number of cards Sally has now can be computed from the entities in the premise
    remaining_cards_sally_premise = initial_cards_sally_premise - torn_cards_premise - sold_cards_premise
    # check if 'remaining_cards_sally_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cards_sally_premise == remaining_cards_sally_hypothesis

print(entailment_or_contradiction(initial_cards_sally_premise, torn_cards_premise, sold_cards_premise, remaining_cards_sally_hypothesis))
"
631,contradiction,,contradiction,The town of Milburg has 5256.0 grown-ups and children and 2987.0 are children,2270.0 adults live in Milburg,the town of milburg has 5256.0 grown-ups and children and 2987.0 are children,2270.0 adults live in milburg,"total_population_premise = 5256.0
children_premise = 2987.0
adults_hypothesis = 2270.0

def entailment_or_contradiction(total_population_premise, children_premise, adults_hypothesis):
    # the number of adults in the premise can be computed by subtracting the number of children from the total population
    adults_premise = total_population_premise - children_premise
    # check if 'adults_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return adults_premise == adults_hypothesis

print(entailment_or_contradiction(total_population_premise, children_premise, adults_hypothesis))
"
629,contradiction,,contradiction,"I have 4.0 pencil boxes, and I fill each box with 648.0 pencils",I will have 2595.0 pencils ,"i have 4.0 pencil boxes, and i fill each box with 648.0 pencils",i will have 2595.0 pencils,"pencil_boxes_premise = 4.0
pencils_per_box_premise = 648.0
total_pencils_hypothesis = 2595.0

def entailment_or_contradiction(pencil_boxes_premise, pencils_per_box_premise, total_pencils_hypothesis):
    # calculate total pencils from the numbers in the premise
    total_pencils_premise = pencil_boxes_premise * pencils_per_box_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencil_boxes_premise, pencils_per_box_premise, total_pencils_hypothesis))
"
632,entailment,,entailment,There is a jar with 3409.0 pieces of candy and there are also 145.0 secret eggs with a prize in them,3554.0 items in total are in the jar,there is a jar with 3409.0 pieces of candy and there are also 145.0 secret eggs with a prize in them,3554.0 items in total are in the jar,"candy_premise = 3409.0
eggs_premise = 145.0
total_items_h = 3554.0

def entailment_or_contradiction(candy_premise, eggs_premise, total_items_h):
    # the hypothesis talks about the total number of items, which can be calculated from the premise
    total_items_p = candy_premise + eggs_premise
    # check if 'total_items_h' entails the quantity deduced from the premise, so if they are equal
    return total_items_p == total_items_h

print(entailment_or_contradiction(candy_premise, eggs_premise, total_items_h))
"
370,entailment,,entailment,"Melanie had 7.0 dimes in her bank  and her dad gave her 8.0 dimes, and she gave her mother 4.0 dimes ",Melanie has 11.0 dimes now,"melanie had 7.0 dimes in her bank and her dad gave her 8.0 dimes, and she gave her mother 4.0 dimes",melanie has 11.0 dimes now,"initial_dimes_premise = 7.0
dimes_received_premise = 8.0
dimes_given_premise = 4.0
total_dimes_hypothesis = 11.0

def entailment_or_contradiction(initial_dimes_premise, dimes_received_premise, dimes_given_premise, total_dimes_hypothesis):
    # the premise talks about the number of dimes Melanie initially had, the number she received, and the number she gave away
    # calculate the total number of dimes Melanie has now according to the premise
    total_dimes_premise = initial_dimes_premise + dimes_received_premise - dimes_given_premise
    # check if the total number of dimes according to the hypothesis is equal to the number calculated from the premise
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(initial_dimes_premise, dimes_received_premise, dimes_given_premise, total_dimes_hypothesis))
"
49,contradiction,,contradiction,"A bathing suit manufacturer has a supply of 14797.0 bathing suits for men  and in addition , it has 4969.0 bathing suits for women ",19770.0 bathing suits are available overall ,"a bathing suit manufacturer has a supply of 14797.0 bathing suits for men and in addition , it has 4969.0 bathing suits for women",19770.0 bathing suits are available overall,"men_bathing_suits_premise = 14797.0
women_bathing_suits_premise = 4969.0
total_bathing_suits_hypothesis = 19770.0

def entailment_or_contradiction(men_bathing_suits_premise, women_bathing_suits_premise, total_bathing_suits_hypothesis):
    # the total number of bathing suits can be computed by adding the numbers from the premise
    total_bathing_suits_premise = men_bathing_suits_premise + women_bathing_suits_premise
    # check if the total number of bathing suits from the hypothesis is equal to the total number from the premise
    return total_bathing_suits_premise == total_bathing_suits_hypothesis

print(entailment_or_contradiction(men_bathing_suits_premise, women_bathing_suits_premise, total_bathing_suits_hypothesis))
"
390,entailment,,entailment,"Dan found 56.0 seashells on the beach,  Jessica gave him some of her seashells and she gave him 22.0 seashells",Dan has 78.0 seashells now,"dan found 56.0 seashells on the beach, jessica gave him some of her seashells and she gave him 22.0 seashells",dan has 78.0 seashells now,"found_seashells_premise = 56.0
received_seashells_premise = 22.0
total_seashells_hypothesis = 78.0

def entailment_or_contradiction(found_seashells_premise, received_seashells_premise, total_seashells_hypothesis):
    # total number of seashells in the premise can be computed by adding the found and received seashells
    total_seashells_premise = found_seashells_premise + received_seashells_premise
    # check if 'total_seashells_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_seashells_premise == total_seashells_hypothesis

print(entailment_or_contradiction(found_seashells_premise, received_seashells_premise, total_seashells_hypothesis))
"
568,entailment,,entailment,Misha has 34.0 dollars and she receives 47.0 dollars more,She has 81.0 dollars now,misha has 34.0 dollars and she receives 47.0 dollars more,she has 81.0 dollars now,"initial_money_premise = 34.0
received_money_premise = 47.0
total_money_hypothesis = 81.0

def entailment_or_contradiction(initial_money_premise, received_money_premise, total_money_hypothesis):
    # the total money in the hypothesis can be computed from the money in the premise
    total_money_premise = initial_money_premise + received_money_premise
    # check if 'total_money_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(initial_money_premise, received_money_premise, total_money_hypothesis))
"
70,entailment,,entailment,A restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch  and only 3.0 hamburgers were actually served ,6.0 hamburgers were left over ,a restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch and only 3.0 hamburgers were actually served,6.0 hamburgers were left over,"made_hamburgers_premise = 9.0
served_hamburgers_premise = 3.0
leftover_hamburgers_hypothesis = 6.0

def entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis):
    # the hypothesis refers to the number of hamburgers left over, which can be computed from the entities in the premise
    leftover_hamburgers_premise = made_hamburgers_premise - served_hamburgers_premise
    # check if 'leftover_hamburgers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return leftover_hamburgers_premise == leftover_hamburgers_hypothesis

print(entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis))
"
710,entailment,,entailment,You have 378 balls and 1.0 juggler is able to juggle 6 balls at a time,You need 63.0 jugglers,you have 378 balls and 1.0 juggler is able to juggle 6 balls at a time,you need 63.0 jugglers,"total_balls_premise = 378
balls_per_juggler_premise = 6
total_jugglers_hypothesis = 63

def entailment_or_contradiction(total_balls_premise, balls_per_juggler_premise, total_jugglers_hypothesis):
    # the total number of jugglers required can be computed from the total number of balls and the number of balls each juggler can juggle
    total_jugglers_premise = total_balls_premise / balls_per_juggler_premise
    # check if 'total_jugglers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_jugglers_premise == total_jugglers_hypothesis

print(entailment_or_contradiction(total_balls_premise, balls_per_juggler_premise, total_jugglers_hypothesis))
"
241,contradiction,,contradiction, A cereal box holds 18.0 cups of cereal and each serving is 2.0 cups,8.0 servings are in the whole box,a cereal box holds 18.0 cups of cereal and each serving is 2.0 cups,8.0 servings are in the whole box,"cereal_in_box_premise = 18.0
serving_size_premise = 2.0
servings_in_box_hypothesis = 8.0

def entailment_or_contradiction(cereal_in_box_premise, serving_size_premise, servings_in_box_hypothesis):
    # the hypothesis talks about the number of servings in a box, which can be computed from the premise
    servings_in_box_premise = cereal_in_box_premise / serving_size_premise
    # check if 'servings_in_box_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return servings_in_box_premise == servings_in_box_hypothesis

print(entailment_or_contradiction(cereal_in_box_premise, serving_size_premise, servings_in_box_hypothesis))
"
208,entailment,,entailment, We ordered 21.0 pizzas and each pizza has 8.0 slices,168.0 slices of pizza are there altogether,we ordered 21.0 pizzas and each pizza has 8.0 slices,168.0 slices of pizza are there altogether,"ordered_pizzas_premise = 21.0
slices_per_pizza_premise = 8.0
total_slices_hypothesis = 168.0

def entailment_or_contradiction(ordered_pizzas_premise, slices_per_pizza_premise, total_slices_hypothesis):
    # compute total slices from the premise
    total_slices_premise = ordered_pizzas_premise * slices_per_pizza_premise
    # check if the total slices deduced from the premise equals the total slices mentioned in the hypothesis
    return total_slices_premise == total_slices_hypothesis

print(entailment_or_contradiction(ordered_pizzas_premise, slices_per_pizza_premise, total_slices_hypothesis))
"
300,entailment,,entailment," Luke had 47.0 pieces of clothing to wash and he put 17.0 of them in 1.0 load, but decided to split the rest into 5.0 equal loads",6.0 pieces of clothing could go in each of the small loads,"luke had 47.0 pieces of clothing to wash and he put 17.0 of them in 1.0 load, but decided to split the rest into 5.0 equal loads",6.0 pieces of clothing could go in each of the small loads,"total_clothing_premise = 47.0
first_load_premise = 17.0
num_small_loads_premise = 5.0
clothing_per_small_load_hypothesis = 6.0

def entailment_or_contradiction(total_clothing_premise, first_load_premise, num_small_loads_premise, clothing_per_small_load_hypothesis):
    # calculate the number of clothing pieces left after the first load from the premise
    remaining_clothing_premise = total_clothing_premise - first_load_premise
    # calculate the number of clothing pieces per small load from the premise
    clothing_per_small_load_premise = remaining_clothing_premise / num_small_loads_premise
    # check if the number of clothing pieces per small load from the hypothesis is the same as calculated from the premise
    return clothing_per_small_load_premise == clothing_per_small_load_hypothesis

print(entailment_or_contradiction(total_clothing_premise, first_load_premise, num_small_loads_premise, clothing_per_small_load_hypothesis))
"
194,entailment,,entailment, There were 58.0 geese and 37.0 ducks in the marsh.,95.0 birds were in the marsh,there were 58.0 geese and 37.0 ducks in the marsh.,95.0 birds were in the marsh,"geese_premise = 58.0
ducks_premise = 37.0
total_birds_hypothesis = 95.0

def entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis):
    # the total number of birds in the premise can be computed from the number of geese and ducks
    total_birds_premise = geese_premise + ducks_premise
    # check if 'total_birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis))
"
721,contradiction,,contradiction,The farmer had 127.0 apples and his neighbor gave him 88.0 apples,Farmer has 217.0 apples now,the farmer had 127.0 apples and his neighbor gave him 88.0 apples,farmer has 217.0 apples now,"farmer_apples_premise = 127.0
neighbor_apples_premise = 88.0
total_apples_hypothesis = 217.0

def entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis):
    # the total number of apples the farmer has now can be calculated from the apples the farmer had initially and the apples he got from his neighbor 
    total_apples_premise = farmer_apples_premise + neighbor_apples_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis))
"
457,contradiction,,contradiction,"Milford Lake was originally blue because it only had 3263.0 algae plants and now there are 809.0 more algae plants, and the lake has turned green",4074.0 algae plants are in Milford Lake now,"milford lake was originally blue because it only had 3263.0 algae plants and now there are 809.0 more algae plants, and the lake has turned green",4074.0 algae plants are in milford lake now,"original_algae_premise = 3263.0
additional_algae_premise = 809.0
total_algae_hypothesis = 4074.0

def entailment_or_contradiction(original_algae_premise, additional_algae_premise, total_algae_hypothesis):
    # the total number of algae plants in the premise can be computed from the original and additional algae
    total_algae_premise = original_algae_premise + additional_algae_premise
    # check if 'total_algae_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_algae_premise == total_algae_hypothesis

print(entailment_or_contradiction(original_algae_premise, additional_algae_premise, total_algae_hypothesis))
"
556,entailment,,entailment,Mrs. Sheridan has 11.0 cats and she bought 43.0 more,She has 54.0 cats now,mrs. sheridan has 11.0 cats and she bought 43.0 more,she has 54.0 cats now,"cats_initially_premise = 11.0
bought_cats_premise = 43.0
total_cats_hypothesis = 54.0

def entailment_or_contradiction(cats_initially_premise, bought_cats_premise, total_cats_hypothesis):
    # The total number of cats Mrs. Sheridan has, according to the premise, can be computed by adding the cats she initially had and the ones she bought
    total_cats_premise = cats_initially_premise + bought_cats_premise
    # Check if 'total_cats_hypothesis' matches the quantity calculated from the premise
    return total_cats_premise == total_cats_hypothesis

print(entailment_or_contradiction(cats_initially_premise, bought_cats_premise, total_cats_hypothesis))
"
328,entailment,,entailment,"There are 24.0 bicycles and 14.0 tricycles in the storage area at Danny's apartment building and each bicycle has 2.0 wheels, and each tricycle has 3.0 wheels",90.0 wheels are there in all,"there are 24.0 bicycles and 14.0 tricycles in the storage area at danny's apartment building and each bicycle has 2.0 wheels, and each tricycle has 3.0 wheels",90.0 wheels are there in all,"bicycles_premise = 24.0
tricycles_premise = 14.0
bicycle_wheels_premise = 2.0
tricycle_wheels_premise = 3.0
total_wheels_hypothesis = 90.0

def entailment_or_contradiction(bicycles_premise, tricycles_premise, bicycle_wheels_premise, tricycle_wheels_premise, total_wheels_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_wheels_premise = (bicycles_premise * bicycle_wheels_premise) + (tricycles_premise * tricycle_wheels_premise)
    # check if 'total_wheels_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_wheels_premise == total_wheels_hypothesis

print(entailment_or_contradiction(bicycles_premise, tricycles_premise, bicycle_wheels_premise, tricycle_wheels_premise, total_wheels_hypothesis))
"
92,entailment,,entailment,There are 47.0 eggs in a box and Harry takes 5.0 eggs,42.0 eggs are left,there are 47.0 eggs in a box and harry takes 5.0 eggs,42.0 eggs are left,"total_eggs_premise = 47.0
taken_eggs_premise = 5.0
left_eggs_hypothesis = 42.0

def entailment_or_contradiction(total_eggs_premise, taken_eggs_premise, left_eggs_hypothesis):
    # the total number of eggs left can be computed from the total number of eggs and the number of eggs taken
    left_eggs_premise = total_eggs_premise - taken_eggs_premise
    # check if the remaining number of eggs from the hypothesis matches the computed remaining number from the premise
    return left_eggs_premise == left_eggs_hypothesis

print(entailment_or_contradiction(total_eggs_premise, taken_eggs_premise, left_eggs_hypothesis))
"
616,entailment,,entailment,There are 544.0 flowers and each pot has 32.0  in it,17.0 pots are there in all,there are 544.0 flowers and each pot has 32.0 in it,17.0 pots are there in all,"total_flowers_premise = 544.0
flowers_per_pot_premise = 32.0
total_pots_hypothesis = 17.0

def entailment_or_contradiction(total_flowers_premise, flowers_per_pot_premise, total_pots_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    total_pots_premise = total_flowers_premise / flowers_per_pot_premise
    # check if 'total_pots_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pots_premise == total_pots_hypothesis

print(entailment_or_contradiction(total_flowers_premise, flowers_per_pot_premise, total_pots_hypothesis))
"
127,contradiction,,contradiction, There are 6.0 birds and 3.0 nests.,There are 0.0 more birds than nests,there are 6.0 birds and 3.0 nests.,there are 0.0 more birds than nests,"birds_premise = 6.0
nests_premise = 3.0
birds_nests_difference_hypothesis = 0.0

def entailment_or_contradiction(birds_premise, nests_premise, birds_nests_difference_hypothesis):
    # the difference between the birds and nests in the premise should be equal to the hypothesis
    birds_nests_difference_premise = birds_premise - nests_premise
    # check if 'birds_nests_difference_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return birds_nests_difference_premise == birds_nests_difference_hypothesis

print(entailment_or_contradiction(birds_premise, nests_premise, birds_nests_difference_hypothesis))
"
217,contradiction,,contradiction, A candy store has 6.0 boxes of chocolates and each box has 500.0 pieces,2999.0 pieces are there altogether in the boxes,a candy store has 6.0 boxes of chocolates and each box has 500.0 pieces,2999.0 pieces are there altogether in the boxes,"boxes_premise = 6.0
pieces_per_box_premise = 500.0
total_pieces_hypothesis = 2999.0

def entailment_or_contradiction(boxes_premise, pieces_per_box_premise, total_pieces_hypothesis):
    # the hypothesis is about the total number of pieces, which can be computed from the premise
    total_pieces_premise = boxes_premise * pieces_per_box_premise
    # check if 'total_pieces_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pieces_premise == total_pieces_hypothesis

print(entailment_or_contradiction(boxes_premise, pieces_per_box_premise, total_pieces_hypothesis))
"
352,entailment,,entailment,The farmer had 127.0 apples and the farmer gave 88.0 apples to his neighbor,Farmer has 39.0 apples now,the farmer had 127.0 apples and the farmer gave 88.0 apples to his neighbor,farmer has 39.0 apples now,"initial_apples_premise = 127.0
given_apples_premise = 88.0
leftover_apples_hypothesis = 39.0

def entailment_or_contradiction(initial_apples_premise, given_apples_premise, leftover_apples_hypothesis):
    # the number of apples the farmer has now can be calculated by subtracting the given apples from the initial apples
    leftover_apples_premise = initial_apples_premise - given_apples_premise
    # check if the number of apples left in the hypothesis equals the calculated quantity from the premise
    return leftover_apples_premise == leftover_apples_hypothesis

print(entailment_or_contradiction(initial_apples_premise, given_apples_premise, leftover_apples_hypothesis))
"
216,entailment,,entailment, A candy store has 6.0 boxes of chocolates and each box has 500.0 pieces,3000.0 pieces are there altogether in the boxes,a candy store has 6.0 boxes of chocolates and each box has 500.0 pieces,3000.0 pieces are there altogether in the boxes,"boxes_premise = 6.0
pieces_per_box_premise = 500.0
total_pieces_hypothesis = 3000.0

def entailment_or_contradiction(boxes_premise, pieces_per_box_premise, total_pieces_hypothesis):
    # the total number of pieces in the hypothesis can be computed from the quantities in the premise
    total_pieces_premise = boxes_premise * pieces_per_box_premise
    # check if 'total_pieces_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pieces_premise == total_pieces_hypothesis

print(entailment_or_contradiction(boxes_premise, pieces_per_box_premise, total_pieces_hypothesis))
"
233,contradiction,,contradiction, A pet supply store has 600.0 bags of dog food and 327.0 bags of cat food.,271.0 more bags of dog food are there than cat food,a pet supply store has 600.0 bags of dog food and 327.0 bags of cat food.,271.0 more bags of dog food are there than cat food,"dog_food_premise = 600.0
cat_food_premise = 327.0
more_dog_food_hypothesis = 271.0

def entailment_or_contradiction(dog_food_premise, cat_food_premise, more_dog_food_hypothesis):
    # the hypothesis tells about the difference between the number of bags for dog food and cat food
    # compute this difference from the premise 
    difference_premise = dog_food_premise - cat_food_premise
    # check if 'more_dog_food_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return difference_premise == more_dog_food_hypothesis

print(entailment_or_contradiction(dog_food_premise, cat_food_premise, more_dog_food_hypothesis))
"
502,entailment,,entailment,"There are 35.0 bottle caps in every box of Beverly's bottle cap collection, and the bottle caps are organized into 7.0 boxes",245.0 bottle caps are there in total,"there are 35.0 bottle caps in every box of beverly's bottle cap collection, and the bottle caps are organized into 7.0 boxes",245.0 bottle caps are there in total,"bottle_caps_per_box_premise = 35.0
boxes_premise = 7.0
total_bottle_caps_hypothesis = 245.0

def entailment_or_contradiction(bottle_caps_per_box_premise, boxes_premise, total_bottle_caps_hypothesis):
    # the hypothesis talks about the total number of bottle caps, which can be computed from the premise
    total_bottle_caps_premise = bottle_caps_per_box_premise * boxes_premise
    # check if 'total_bottle_caps_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bottle_caps_premise == total_bottle_caps_hypothesis

print(entailment_or_contradiction(bottle_caps_per_box_premise, boxes_premise, total_bottle_caps_hypothesis))
"
496,entailment,,entailment,Denise adds 5.0 bananas to a jar and there were originally 46.0 bananas in the jar,51.0 bananas are left in the jar,denise adds 5.0 bananas to a jar and there were originally 46.0 bananas in the jar,51.0 bananas are left in the jar,"bananas_added_premise = 5.0
bananas_originally_premise = 46.0
bananas_left_hypothesis = 51.0

def entailment_or_contradiction(bananas_added_premise, bananas_originally_premise, bananas_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_bananas_premise = bananas_added_premise + bananas_originally_premise
    # check if 'bananas_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bananas_premise == bananas_left_hypothesis

print(entailment_or_contradiction(bananas_added_premise, bananas_originally_premise, bananas_left_hypothesis))
"
662,entailment,,entailment,"A pet store had 13.0 siamese cats and 5.0 house cats and During a purchase, they added 10.0 cats",They have 28.0 cats left,"a pet store had 13.0 siamese cats and 5.0 house cats and during a purchase, they added 10.0 cats",they have 28.0 cats left,"siamese_cats_premise = 13.0
house_cats_premise = 5.0
added_cats_premise = 10.0
total_cats_hypothesis = 28.0

def entailment_or_contradiction(siamese_cats_premise, house_cats_premise, added_cats_premise, total_cats_hypothesis):
    # the premise talks about the number of siamese cats, house cats, and additional cats, from which we can compute the total number of cats
    total_cats_premise = siamese_cats_premise + house_cats_premise + added_cats_premise
    # check if 'total_cats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cats_premise == total_cats_hypothesis

print(entailment_or_contradiction(siamese_cats_premise, house_cats_premise, added_cats_premise, total_cats_hypothesis))
"
346,entailment,,entailment,Paco had 93.0 cookies and Paco ate 15.0 of them,Paco has 78.0 cookies left,paco had 93.0 cookies and paco ate 15.0 of them,paco has 78.0 cookies left,"initial_cookies_premise = 93.0
consumed_cookies_premise = 15.0
final_cookies_hypothesis = 78.0

def entailment_or_contradiction(initial_cookies_premise, consumed_cookies_premise, final_cookies_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    final_cookies_premise = initial_cookies_premise - consumed_cookies_premise
    # check if 'final_cookies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return final_cookies_premise == final_cookies_hypothesis

print(entailment_or_contradiction(initial_cookies_premise, consumed_cookies_premise, final_cookies_hypothesis))
"
513,contradiction,,contradiction,Lisa took a plane trip of 256.0 miles and she took this trip 32.0 times,She has flown 8191.0 miles,lisa took a plane trip of 256.0 miles and she took this trip 32.0 times,she has flown 8191.0 miles,"trip_distance_premise = 256.0
trips_num_premise = 32.0
total_distance_hypothesis = 8191.0

def entailment_or_contradiction(trip_distance_premise, trips_num_premise, total_distance_hypothesis):
    # the total distance flown by Lisa can be computed from the entities in the premise
    total_distance_premise = trip_distance_premise * trips_num_premise
    # check if 'total_distance_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_distance_premise == total_distance_hypothesis

print(entailment_or_contradiction(trip_distance_premise, trips_num_premise, total_distance_hypothesis))
"
611,contradiction,,contradiction,Gary had 73.0 dollars and he sold his pet snake for 55.0 dollars,Gary has 125.0 dollars now,gary had 73.0 dollars and he sold his pet snake for 55.0 dollars,gary has 125.0 dollars now,"initial_money_premise = 73.0
snake_sale_premise = 55.0
total_money_hypothesis = 125.0

def entailment_or_contradiction(initial_money_premise, snake_sale_premise, total_money_hypothesis):
    # the total money in the hypothesis can be computed from the money quantities in the premise
    total_money_premise = initial_money_premise + snake_sale_premise
    # check if 'total_money_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(initial_money_premise, snake_sale_premise, total_money_hypothesis))
"
588,entailment,,entailment,Connie had 73 marbles and she gave 70.0 to Juan,Connie has 3.0 marbles now,connie had 73 marbles and she gave 70.0 to juan,connie has 3.0 marbles now,"initial_marbles_premise = 73
given_marbles_premise = 70.0
remaining_marbles_hypothesis = 3.0

def entailment_or_contradiction(initial_marbles_premise, given_marbles_premise, remaining_marbles_hypothesis):
    # compute the remaining marbles according to the premise
    remaining_marbles_premise = initial_marbles_premise - given_marbles_premise
    # check if 'remaining_marbles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_marbles_premise == remaining_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_premise, given_marbles_premise, remaining_marbles_hypothesis))
"
149,contradiction,,contradiction," There were 105.0 parents in the program and 698.0 pupils, too.",799.0 people were present in the program,"there were 105.0 parents in the program and 698.0 pupils, too.",799.0 people were present in the program,"parents_premise = 105.0
pupils_premise = 698.0
total_people_hypothesis = 799.0

def entailment_or_contradiction(parents_premise, pupils_premise, total_people_hypothesis):
    # Find the total number of people in the premise.
    total_people_premise = parents_premise + pupils_premise
    # Check if the total number of people in the hypothesis is the same as the total number of people in the premise.
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(parents_premise, pupils_premise, total_people_hypothesis))
"
157,contradiction,,contradiction, The clown blew up 47.0 balloons and then he blew up 13.0 more balloons,Clown has 63.0 balloons now,the clown blew up 47.0 balloons and then he blew up 13.0 more balloons,clown has 63.0 balloons now,"initial_balloons_premise = 47.0
additional_balloons_premise = 13.0
total_balloons_hypothesis = 63.0

def entailment_or_contradiction(initial_balloons_premise, additional_balloons_premise, total_balloons_hypothesis):
    # the total quantity of balloons in the hypothesis can be computed from the quantities in the premise
    total_balloons_premise = initial_balloons_premise + additional_balloons_premise
    # check if 'total_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(initial_balloons_premise, additional_balloons_premise, total_balloons_hypothesis))
"
317,contradiction,,contradiction,"There are 390.0 students at a school, and each classroom holds 30.0 students",11.0 classrooms are needed at the school,"there are 390.0 students at a school, and each classroom holds 30.0 students",11.0 classrooms are needed at the school,"students_premise = 390.0
classroom_capacity_premise = 30.0
classrooms_hypothesis = 11.0

def entailment_or_contradiction(students_premise, classroom_capacity_premise, classrooms_hypothesis):
    # the hypothesis talks about the number of classrooms needed, which can be computed from the premise
    classrooms_premise = students_premise // classroom_capacity_premise
    if students_premise % classroom_capacity_premise > 0:
        classrooms_premise += 1
    # check if 'classrooms_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return classrooms_premise == classrooms_hypothesis

print(entailment_or_contradiction(students_premise, classroom_capacity_premise, classrooms_hypothesis))
"
28,entailment,,entailment,Sam had 98.0 pennies in his bank  and he spent 93.0 of his pennies ,He has 5.0 pennies now,sam had 98.0 pennies in his bank and he spent 93.0 of his pennies,he has 5.0 pennies now,"initial_pennies_premise = 98.0
spent_pennies_premise = 93.0
remaining_pennies_hypothesis = 5.0

def entailment_or_contradiction(initial_pennies_premise, spent_pennies_premise, remaining_pennies_hypothesis):
    # the remaining pennies can be calculated from the initial pennies and the spent pennies in the premise
    remaining_pennies_premise = initial_pennies_premise - spent_pennies_premise
    # check if the remaining pennies from the premise equals the remaining pennies in the hypothesis
    return remaining_pennies_premise == remaining_pennies_hypothesis

print(entailment_or_contradiction(initial_pennies_premise, spent_pennies_premise, remaining_pennies_hypothesis))
"
45,contradiction,,contradiction,"There were originally 20817.0 houses in Lincoln County  and During a housing boom , developers built 97741.0 ",118560.0 houses are there now in Lincoln County ,"there were originally 20817.0 houses in lincoln county and during a housing boom , developers built 97741.0",118560.0 houses are there now in lincoln county,"original_houses_premise = 20817.0
built_houses_premise = 97741.0
total_houses_hypothesis = 118560.0

def entailment_or_contradiction(original_houses_premise, built_houses_premise, total_houses_hypothesis):
    # the hypothesis talks about the total number of houses, which can be computed from the entities in the premise
    total_houses_premise = original_houses_premise + built_houses_premise
    # check if 'total_houses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_houses_premise == total_houses_hypothesis

print(entailment_or_contradiction(original_houses_premise, built_houses_premise, total_houses_hypothesis))
"
210,entailment,,entailment, There were 150.0 book shelves and each book shelf had 15.0 books,2250.0 books were on the shelves,there were 150.0 book shelves and each book shelf had 15.0 books,2250.0 books were on the shelves,"book_shelves_premise = 150.0
books_each_shelf_premise = 15.0
total_books_hypothesis = 2250.0

def entailment_or_contradiction(book_shelves_premise, books_each_shelf_premise, total_books_hypothesis):
    # the total books on the shelves can be computed from the entities in the premise
    total_books_premise = book_shelves_premise * books_each_shelf_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(book_shelves_premise, books_each_shelf_premise, total_books_hypothesis))
"
279,contradiction,,contradiction," A waiter had 19.0 customers to wait on, and 14.0 customers left and he got another 36.0 customers",He would have 37.0 customers ,"a waiter had 19.0 customers to wait on, and 14.0 customers left and he got another 36.0 customers",he would have 37.0 customers,"initial_customers_premise = 19.0
left_customers_premise = 14.0
added_customers_premise = 36.0
total_customers_hypothesis = 37.0

def entailment_or_contradiction(initial_customers_premise, left_customers_premise, added_customers_premise, total_customers_hypothesis):
    # the total number of customers in the hypothesis can be computed from the entities in the premise
    total_customers_premise = initial_customers_premise - left_customers_premise + added_customers_premise
    # check if 'total_customers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_customers_premise == total_customers_hypothesis

print(entailment_or_contradiction(initial_customers_premise, left_customers_premise, added_customers_premise, total_customers_hypothesis))
"
637,contradiction,,contradiction,The farmer had 127.0 apples and his neighbor gave him 88.0 pounds of apples,He has 210.0 pounds of apples now,the farmer had 127.0 apples and his neighbor gave him 88.0 pounds of apples,he has 210.0 pounds of apples now,"initial_apples_premise = 127.0
received_apples_premise = 88.0
total_apples_hypothesis = 210.0

def entailment_or_contradiction(initial_apples_premise, received_apples_premise, total_apples_hypothesis):
    # The total amount of apples can be calculated by adding the initial apples to the received apples.
    total_apples_premise = initial_apples_premise + received_apples_premise
    # If the total apples calculated from the premise equals the total apples in the hypothesis, then the hypothesis is entailed by the premise.
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(initial_apples_premise, received_apples_premise, total_apples_hypothesis))
"
463,contradiction,,contradiction,Sally had 39.0 baseball cards and Sara gave Sally 24.0 more,Sally has 64.0 baseball cards now,sally had 39.0 baseball cards and sara gave sally 24.0 more,sally has 64.0 baseball cards now,"initial_cards_sally_premise = 39.0
received_cards_sally_premise = 24.0
total_cards_sally_hypothesis = 64.0

def entailment_or_contradiction(initial_cards_sally_premise, received_cards_sally_premise, total_cards_sally_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_cards_sally_premise = initial_cards_sally_premise + received_cards_sally_premise
    # check if 'total_cards_sally_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cards_sally_premise == total_cards_sally_hypothesis

print(entailment_or_contradiction(initial_cards_sally_premise, received_cards_sally_premise, total_cards_sally_hypothesis))
"
176,entailment,,entailment," Joe had 50.0 toy cars, and he gets 12.0 more cars",He will have 62.0 cars then,"joe had 50.0 toy cars, and he gets 12.0 more cars",he will have 62.0 cars then,"initial_cars_premise = 50.0
additional_cars_premise = 12.0
total_cars_hypothesis = 62.0

def entailment_or_contradiction(initial_cars_premise, additional_cars_premise, total_cars_hypothesis):
    # the total number of cars in the hypothesis can be computed from the initial and additional cars in the premise
    total_cars_premise = initial_cars_premise + additional_cars_premise
    # check if 'total_cars_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cars_premise == total_cars_hypothesis

print(entailment_or_contradiction(initial_cars_premise, additional_cars_premise, total_cars_hypothesis))
"
11,contradiction,,contradiction,A restaurant served 5.0 cakes during lunch and 6.0 during dinner today  and the restaurant served 3.0 cakes yesterday ,16.0 cakes were served in total ,a restaurant served 5.0 cakes during lunch and 6.0 during dinner today and the restaurant served 3.0 cakes yesterday,16.0 cakes were served in total,"cakes_lunch_premise = 5.0
cakes_dinner_premise = 6.0
cakes_yesterday_premise = 3.0
total_cakes_hypothesis = 16.0

def entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, cakes_yesterday_premise, total_cakes_hypothesis):
    # the hypothesis talks about the total number of cakes, which can be computed from the premise
    # find the total number of cakes served from the premise 
    total_cakes_premise = cakes_lunch_premise + cakes_dinner_premise + cakes_yesterday_premise
    # check if the total cakes from the hypothesis is equal to the total cakes from the premise
    return total_cakes_premise == total_cakes_hypothesis

print(entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, cakes_yesterday_premise, total_cakes_hypothesis))
"
164,entailment,,entailment, 14.0 birds were sitting in a tree and 21.0 more birds flew up to the tree,35.0 birds were there altogether in the tree,14.0 birds were sitting in a tree and 21.0 more birds flew up to the tree,35.0 birds were there altogether in the tree,"birds_sitting_premise = 14.0
birds_flew_premise = 21.0
total_birds_hypothesis = 35.0

def entailment_or_contradiction(birds_sitting_premise, birds_flew_premise, total_birds_hypothesis):
    # the total number of birds in the tree can be computed from the entities in the premise
    total_birds_premise = birds_sitting_premise + birds_flew_premise
    # check if 'total_birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(birds_sitting_premise, birds_flew_premise, total_birds_hypothesis))
"
706,entailment,,entailment,"The farmers reported that they harvest 45.0 sacks of apples from an orchard that comprises 8.0 sections, and the same amount of apples is harvested from each section",5.625 sacks are harvested from a section,"the farmers reported that they harvest 45.0 sacks of apples from an orchard that comprises 8.0 sections, and the same amount of apples is harvested from each section",5.625 sacks are harvested from a section,"total_sacks_premise = 45.0
sections_premise = 8.0
sacks_per_section_hypothesis = 5.625

def entailment_or_contradiction(total_sacks_premise, sections_premise, sacks_per_section_hypothesis):
    # the hypothesis talks about the amount of sacks harvested per section, which can be computed from the premise
    sacks_per_section_premise = total_sacks_premise / sections_premise
    # check if the 'sacks_per_section_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return sacks_per_section_premise == sacks_per_section_hypothesis

print(entailment_or_contradiction(total_sacks_premise, sections_premise, sacks_per_section_hypothesis))
"
81,contradiction,,contradiction,"Mike picked 7.0 apples , Nancy picked 3.0 apples , and Keith picked 6.0 apples and 4.0 pears , at the farm .",20.0 apples were picked in total,"mike picked 7.0 apples , nancy picked 3.0 apples , and keith picked 6.0 apples and 4.0 pears , at the farm .",20.0 apples were picked in total,"mike_apples_premise = 7.0
nancy_apples_premise = 3.0
keith_apples_premise = 6.0
total_apples_hypothesis = 20.0

def entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, total_apples_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_apples_premise = mike_apples_premise + nancy_apples_premise + keith_apples_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, total_apples_hypothesis))
"
676,entailment,,entailment,"Maria picked 48.0 carrots from her garden, and she threw out 15.0 of them and then threw away another 11.0 more the next day",She would have 22.0 carrots left,"maria picked 48.0 carrots from her garden, and she threw out 15.0 of them and then threw away another 11.0 more the next day",she would have 22.0 carrots left,"picked_carrots_premise = 48.0
thrown_carrots_day1_premise = 15.0
thrown_carrots_day2_premise = 11.0
remaining_carrots_hypothesis = 22.0

def entailment_or_contradiction(picked_carrots_premise, thrown_carrots_day1_premise, thrown_carrots_day2_premise, remaining_carrots_hypothesis):
    # The total remaining carrots after all the throwing away can be computed from the premise
    remaining_carrots_premise = picked_carrots_premise - thrown_carrots_day1_premise - thrown_carrots_day2_premise
    # Check if 'remaining_carrots_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_carrots_premise == remaining_carrots_hypothesis

print(entailment_or_contradiction(picked_carrots_premise, thrown_carrots_day1_premise, thrown_carrots_day2_premise, remaining_carrots_hypothesis))
"
147,contradiction,,contradiction, Gino has 63.0 popsicle sticks and I have 50.0 popsicle sticks,The sum of our popsicle sticks is 110.0,gino has 63.0 popsicle sticks and i have 50.0 popsicle sticks,the sum of our popsicle sticks is 110.0,"gino_popsicle_sticks_premise = 63.0
my_popsicle_sticks_premise = 50.0
total_popsicle_sticks_hypothesis = 110.0

def entailment_or_contradiction(gino_popsicle_sticks_premise, my_popsicle_sticks_premise, total_popsicle_sticks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_popsicle_sticks_premise = gino_popsicle_sticks_premise + my_popsicle_sticks_premise
    # check if 'total_popsicle_sticks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_popsicle_sticks_premise == total_popsicle_sticks_hypothesis

print(entailment_or_contradiction(gino_popsicle_sticks_premise, my_popsicle_sticks_premise, total_popsicle_sticks_hypothesis))
"
582,entailment,,entailment,Josh had 142.0 pencils and he got 31.0 pencils from Dorothy,Josh has 173.0 pencils now,josh had 142.0 pencils and he got 31.0 pencils from dorothy,josh has 173.0 pencils now,"pencils_initial_premise = 142.0
received_pencils_premise = 31.0
total_pencils_hypothesis = 173.0

def entailment_or_contradiction(pencils_initial_premise, received_pencils_premise, total_pencils_hypothesis):
    # Josh's total number of pencils can be computed from the entities in the premise
    total_pencils_premise = pencils_initial_premise + received_pencils_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencils_initial_premise, received_pencils_premise, total_pencils_hypothesis))
"
182,entailment,,entailment, Mrs. Hilt has 50.0 cents and a pencil costs 5.0 cents,She can buy 10.0 pencils with the money she has,mrs. hilt has 50.0 cents and a pencil costs 5.0 cents,she can buy 10.0 pencils with the money she has,"cents_premise = 50.0
cost_pencil_premise = 5.0
pencils_hypothesis = 10.0

def entailment_or_contradiction(cents_premise, cost_pencil_premise, pencils_hypothesis):
    # the number of pencils she can buy can be computed from the entities in the premise
    pencils_premise = cents_premise / cost_pencil_premise
    # check if 'pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pencils_premise == pencils_hypothesis

print(entailment_or_contradiction(cents_premise, cost_pencil_premise, pencils_hypothesis))
"
26,entailment,,entailment,"Alyssa picked 42.0 pears, and Nancy picked 17.0 pears from the pear tree .",59.0 pears were picked in all,"alyssa picked 42.0 pears, and nancy picked 17.0 pears from the pear tree .",59.0 pears were picked in all,"alyssa_pears_premise = 42.0
nancy_pears_premise = 17.0
total_pears_hypothesis = 59.0

def entailment_or_contradiction(alyssa_pears_premise, nancy_pears_premise, total_pears_hypothesis):
    # the total pears picked is a quantity that can be deduced from the premise
    total_pears_premise = alyssa_pears_premise + nancy_pears_premise
    # check if 'total_pears_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pears_premise == total_pears_hypothesis

print(entailment_or_contradiction(alyssa_pears_premise, nancy_pears_premise, total_pears_hypothesis))
"
580,entailment,,entailment,Todd has 54.0 pieces of gum and Steve gave him 16.0 more pieces,Todd has 70.0 pieces of gum now,todd has 54.0 pieces of gum and steve gave him 16.0 more pieces,todd has 70.0 pieces of gum now,"initial_gum_Todd_premise = 54.0
received_gum_Todd_premise = 16.0
total_gum_Todd_hypothesis = 70.0

def entailment_or_contradiction(initial_gum_Todd_premise, received_gum_Todd_premise, total_gum_Todd_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_gum_Todd_premise = initial_gum_Todd_premise + received_gum_Todd_premise
    # check if 'total_gum_Todd_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gum_Todd_premise == total_gum_Todd_hypothesis

print(entailment_or_contradiction(initial_gum_Todd_premise, received_gum_Todd_premise, total_gum_Todd_hypothesis))
"
227,contradiction,,contradiction, 6.0 students were sitting at each table in the lunchroom and there are 34.0 tables,202.0 students were sitting in the lunchroom,6.0 students were sitting at each table in the lunchroom and there are 34.0 tables,202.0 students were sitting in the lunchroom,"students_per_table_premise = 6.0
tables_premise = 34.0
total_students_hypothesis = 202.0

def entailment_or_contradiction(students_per_table_premise, tables_premise, total_students_hypothesis):
    # calculate the total number of students from the premise
    total_students_premise = students_per_table_premise * tables_premise
    # check if 'total_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(students_per_table_premise, tables_premise, total_students_hypothesis))
"
563,contradiction,,contradiction,42.0 birds were sitting in a tree and then 29.0 more flew up to the tree,75.0 birds are there in the tree,42.0 birds were sitting in a tree and then 29.0 more flew up to the tree,75.0 birds are there in the tree,"birds_initial_premise = 42.0
birds_flew_premise = 29.0
birds_hypothesis = 75.0

def entailment_or_contradiction(birds_initial_premise, birds_flew_premise, birds_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_birds_premise = birds_initial_premise + birds_flew_premise
    # check if 'birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_birds_premise == birds_hypothesis

print(entailment_or_contradiction(birds_initial_premise, birds_flew_premise, birds_hypothesis))
"
544,entailment,,entailment,Mrs. Sheridan has 17.0 cats and Mrs. Sheridan gave away 14.0 cats,Sheridan has 3.0 cats now,mrs. sheridan has 17.0 cats and mrs. sheridan gave away 14.0 cats,sheridan has 3.0 cats now,"initial_cats_premise = 17.0
given_cats_premise = 14.0
cats_now_hypothesis = 3.0

def entailment_or_contradiction(initial_cats_premise, given_cats_premise, cats_now_hypothesis):
    # the hypothesis talks about the number of cats Mrs. Sheridan has now, which can be computed from the premise
    cats_now_premise = initial_cats_premise - given_cats_premise
    # check if 'cats_now_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return cats_now_premise == cats_now_hypothesis

print(entailment_or_contradiction(initial_cats_premise, given_cats_premise, cats_now_hypothesis))
"
548,entailment,,entailment,Cade had 87.0 marbles and he got 8.0 from Dylan,He has 95.0 marbles now,cade had 87.0 marbles and he got 8.0 from dylan,he has 95.0 marbles now,"initial_marbles_cade_premise = 87.0
received_marbles_premise = 8.0
total_marbles_hypothesis = 95.0

def entailment_or_contradiction(initial_marbles_cade_premise, received_marbles_premise, total_marbles_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_marbles_premise = initial_marbles_cade_premise + received_marbles_premise
    # check if 'total_marbles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_marbles_premise == total_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_cade_premise, received_marbles_premise, total_marbles_hypothesis))
"
401,contradiction,,contradiction,Mike has 87.0 baseball cards and Sam gave Mike 13.0 more baseball cards,Mike has 96.0 baseball cards now,mike has 87.0 baseball cards and sam gave mike 13.0 more baseball cards,mike has 96.0 baseball cards now,"baseball_cards_mike_premise = 87.0
baseball_cards_given_premise = 13.0
total_baseball_cards_hypothesis = 96.0

def entailment_or_contradiction(baseball_cards_mike_premise, baseball_cards_given_premise, total_baseball_cards_hypothesis):
    # the total number of baseball cards that Mike has can be computed from the entities in the premise
    total_baseball_cards_premise = baseball_cards_mike_premise + baseball_cards_given_premise
    # check if 'total_baseball_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_baseball_cards_premise == total_baseball_cards_hypothesis

print(entailment_or_contradiction(baseball_cards_mike_premise, baseball_cards_given_premise, total_baseball_cards_hypothesis))
"
554,entailment,,entailment,Hayley has 25.0 meatballs and Kirsten gave her 11.0 more,Hayley has 36.0 meatballs now,hayley has 25.0 meatballs and kirsten gave her 11.0 more,hayley has 36.0 meatballs now,"meatballs_hayley_premise = 25.0
meatballs_given_premise = 11.0
total_meatballs_hypothesis = 36.0

def entailment_or_contradiction(meatballs_hayley_premise, meatballs_given_premise, total_meatballs_hypothesis):
    # the total number of meatballs Hayley has can be computed from the premise  
    total_meatballs_premise = meatballs_hayley_premise + meatballs_given_premise
    # check if 'total_meatballs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_meatballs_premise == total_meatballs_hypothesis

print(entailment_or_contradiction(meatballs_hayley_premise, meatballs_given_premise, total_meatballs_hypothesis))
"
475,contradiction,,contradiction,There were 9.0 red orchids and 3.0 white orchids in the vase  and Sally cut 15.0 red orchids from her flower garden and put them in the vase ,27.0 red orchids are there now in the vase,there were 9.0 red orchids and 3.0 white orchids in the vase and sally cut 15.0 red orchids from her flower garden and put them in the vase,27.0 red orchids are there now in the vase,"initial_red_orchids_premise = 9.0
cut_red_orchids_premise = 15.0
total_red_orchids_hypothesis = 27.0

def entailment_or_contradiction(initial_red_orchids_premise, cut_red_orchids_premise, total_red_orchids_hypothesis):
    # the hypothesis talks about the total number of red orchids, which can be computed from the initial number of red orchids and the number of cut red orchids
    total_red_orchids_premise = initial_red_orchids_premise + cut_red_orchids_premise
    # check if 'total_red_orchids_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_red_orchids_premise == total_red_orchids_hypothesis

print(entailment_or_contradiction(initial_red_orchids_premise, cut_red_orchids_premise, total_red_orchids_hypothesis))
"
667,contradiction,,contradiction,"In fourth grade there were 42.0 students at the start of the year and During the year, 4.0 students left, and 10.0 students were transferred to fifth grade",26.0 students were in fourth grade at the end,"in fourth grade there were 42.0 students at the start of the year and during the year, 4.0 students left, and 10.0 students were transferred to fifth grade",26.0 students were in fourth grade at the end,"students_start_premise = 42.0
students_left_premise = 4.0
students_transferred_premise = 10.0
students_end_hypothesis = 26.0

def entailment_or_contradiction(students_start_premise, students_left_premise, students_transferred_premise, students_end_hypothesis):
    # the hypothesis talks about the number of students at the end of the year, which can be computed from the entities in the premise
    students_end_premise = students_start_premise - students_left_premise - students_transferred_premise
    # check if 'students_end_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return students_end_premise == students_end_hypothesis

print(entailment_or_contradiction(students_start_premise, students_left_premise, students_transferred_premise, students_end_hypothesis))
"
385,contradiction,,contradiction,Jason picked 46.0 pears and Keith picked 47.0 pears from the pear tree  and Mike ate 12.0 of those pears ,They have 84.0 pears left,jason picked 46.0 pears and keith picked 47.0 pears from the pear tree and mike ate 12.0 of those pears,they have 84.0 pears left,"pears_picked_by_jason = 46.0
pears_picked_by_keith = 47.0
pears_eaten_by_mike = 12.0
pears_left_hypothesis = 84.0

def entailment_or_contradiction(pears_picked_by_jason, pears_picked_by_keith, pears_eaten_by_mike, pears_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_pears_picked = pears_picked_by_jason + pears_picked_by_keith
    pears_left_premise = total_pears_picked - pears_eaten_by_mike
    # check if 'pears_left_hypothesis' equals the quantity deduced from the premise
    return pears_left_premise == pears_left_hypothesis

print(entailment_or_contradiction(pears_picked_by_jason, pears_picked_by_keith, pears_eaten_by_mike, pears_left_hypothesis))
"
384,entailment,,entailment,Jason picked 46.0 pears and Keith picked 47.0 pears from the pear tree  and Mike ate 12.0 of those pears ,They have 81.0 pears left,jason picked 46.0 pears and keith picked 47.0 pears from the pear tree and mike ate 12.0 of those pears,they have 81.0 pears left,"pears_picked_Jason = 46.0
pears_picked_Keith = 47.0
pears_eaten_Mike = 12.0
pears_left_hypothesis = 81.0

def entailment_or_contradiction(pears_picked_Jason, pears_picked_Keith, pears_eaten_Mike, pears_left_hypothesis):
    # calculate the total number of pears picked by Jason and Keith
    total_pears_picked = pears_picked_Jason + pears_picked_Keith
    # compute pears left by subtracting the number of pears eaten by Mike from total pears picked
    pears_left_premise = total_pears_picked - pears_eaten_Mike
    # check if the number of pears left from the premise equals the number of pears left in the hypothesis
    return pears_left_premise == pears_left_hypothesis

print(entailment_or_contradiction(pears_picked_Jason, pears_picked_Keith, pears_eaten_Mike, pears_left_hypothesis))
"
159,contradiction,,contradiction," Isha’s pencil is 12.0 cubes long, and she gets another pencil that is 12.0 cubes long",Both pencils are 26.0 cubes long,"isha’s pencil is 12.0 cubes long, and she gets another pencil that is 12.0 cubes long",both pencils are 26.0 cubes long,"pencil1_premise = 12.0
pencil2_premise = 12.0
total_length_hypothesis = 26.0

def entailment_or_contradiction(pencil1_premise, pencil2_premise, total_length_hypothesis):
    # the total length of both pencils can be computed from the individual lengths in the premise
    total_length_premise = pencil1_premise + pencil2_premise
    # check if 'total_length_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_length_premise == total_length_hypothesis

print(entailment_or_contradiction(pencil1_premise, pencil2_premise, total_length_hypothesis))
"
172,entailment,,entailment, There are 40.0 boys and some girls on the playground and there are 117.0 children altogether,77.0 girls are on the playground,there are 40.0 boys and some girls on the playground and there are 117.0 children altogether,77.0 girls are on the playground,"boys_premise = 40.0
total_children_premise = 117.0
girls_hypothesis = 77.0

def entailment_or_contradiction(boys_premise, total_children_premise, girls_hypothesis):
    # the number of girls on the playground can be computed from the total number of children and number of boys on the playground
    girls_premise = total_children_premise - boys_premise
    # check if 'girls_hypothesis' is the same as the number of girls computed from the premise
    return girls_premise == girls_hypothesis

print(entailment_or_contradiction(boys_premise, total_children_premise, girls_hypothesis))
"
465,contradiction,,contradiction,Mike had 33.0 quarters and 87.0 nickels in his bank  and his dad gave Mike 75.0 nickels,He has 161.0 nickels now,mike had 33.0 quarters and 87.0 nickels in his bank and his dad gave mike 75.0 nickels,he has 161.0 nickels now,"quarters_premise = 33.0
nickels_premise = 87.0
nickels_from_dad_premise = 75.0
total_nickels_hypothesis = 161.0

def entailment_or_contradiction(quarters_premise, nickels_premise, nickels_from_dad_premise, total_nickels_hypothesis):
    # the total number of nickels in the hypothesis can be computed from the premise
    total_nickels_premise = nickels_premise + nickels_from_dad_premise
    # check if 'total_nickels_hypothesis' equals the quantity computed from the premise
    return total_nickels_premise == total_nickels_hypothesis

print(entailment_or_contradiction(quarters_premise, nickels_premise, nickels_from_dad_premise, total_nickels_hypothesis))
"
719,contradiction,,contradiction,"1,250  people visited the zoo on Friday and 3 times as many people visited on Friday than on Saturday",413.7 people visited the zoo on Saturday,"1,250 people visited the zoo on friday and 3 times as many people visited on friday than on saturday",413.7 people visited the zoo on saturday,"friday_visitors_premise = 1250
saturday_visitors_hypothesis = 413.7

def entailment_or_contradiction(friday_visitors_premise, saturday_visitors_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    saturday_visitors_premise = friday_visitors_premise / 3
    # check if 'saturday_visitors_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return saturday_visitors_premise == saturday_visitors_hypothesis

print(entailment_or_contradiction(friday_visitors_premise, saturday_visitors_hypothesis))
"
218,entailment,,entailment," White t-shirts can be purchased in packages of 6.0, and Mom buys 71.0 packages",She will have 426.0 white t-shirts ,"white t-shirts can be purchased in packages of 6.0, and mom buys 71.0 packages",she will have 426.0 white t-shirts,"packages_premise = 71.0
tshirts_per_package_premise = 6.0
total_tshirts_hypothesis = 426.0

def entailment_or_contradiction(packages_premise, tshirts_per_package_premise, total_tshirts_hypothesis):
    # the total number of t-shirts in the hypothesis can be computed from the quantities in the premise
    total_tshirts_premise = packages_premise * tshirts_per_package_premise
    # check if 'total_tshirts_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_tshirts_premise == total_tshirts_hypothesis

print(entailment_or_contradiction(packages_premise, tshirts_per_package_premise, total_tshirts_hypothesis))
"
688,entailment,,entailment,"Paul bought 6 pieces of chocolate candy and 4 pieces of caramel candy, and all the candies are put in 9 boxes",1.11111111111 candies were in each box,"paul bought 6 pieces of chocolate candy and 4 pieces of caramel candy, and all the candies are put in 9 boxes",1.11111111111 candies were in each box,"chocolate_candy_premise = 6
caramel_candy_premise = 4
boxes_premise = 9
candies_per_box_hypothesis = 1.11111111111

def entailment_or_contradiction(chocolate_candy_premise, caramel_candy_premise, boxes_premise, candies_per_box_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_candies_premise = chocolate_candy_premise + caramel_candy_premise
    candies_per_box_premise = total_candies_premise / boxes_premise
    # check if 'candies_per_box_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return abs(candies_per_box_premise - candies_per_box_hypothesis) < 0.00001

print(entailment_or_contradiction(chocolate_candy_premise, caramel_candy_premise, boxes_premise, candies_per_box_hypothesis))
"
545,contradiction,,contradiction,Mrs. Sheridan has 17.0 cats and Mrs. Sheridan gave away 14.0 cats,Sheridan has 5.0 cats now,mrs. sheridan has 17.0 cats and mrs. sheridan gave away 14.0 cats,sheridan has 5.0 cats now,"initial_cats_premise = 17.0
given_away_cats_premise = 14.0
current_cats_hypothesis = 5.0

def entailment_or_contradiction(initial_cats_premise, given_away_cats_premise, current_cats_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    current_cats_premise = initial_cats_premise - given_away_cats_premise
    # check if 'current_cats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return current_cats_premise == current_cats_hypothesis

print(entailment_or_contradiction(initial_cats_premise, given_away_cats_premise, current_cats_hypothesis))
"
90,entailment,,entailment,Denise removes 5.0 bananas from a jar and there were originally 46.0 bananas in the jar,41.0 bananas are left in the jar,denise removes 5.0 bananas from a jar and there were originally 46.0 bananas in the jar,41.0 bananas are left in the jar,"original_bananas_premise = 46.0
removed_bananas_premise = 5.0
left_bananas_hypothesis = 41.0

def entailment_or_contradiction(original_bananas_premise, removed_bananas_premise, left_bananas_hypothesis):
    # The number of bananas left can be computed from the entities in the premise
    left_bananas_premise = original_bananas_premise - removed_bananas_premise
    # Check if 'left_bananas_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_bananas_premise == left_bananas_hypothesis

print(entailment_or_contradiction(original_bananas_premise, removed_bananas_premise, left_bananas_hypothesis))
"
112,entailment,,entailment,"Joshua has 40.0 Skittles and 6.0 eggs, and he shares the Skittles among 5.0 friends",Each friend got 8.0 Skittles,"joshua has 40.0 skittles and 6.0 eggs, and he shares the skittles among 5.0 friends",each friend got 8.0 skittles,"skittles_premise = 40.0
friends_premise = 5.0
skittles_per_friend_hypothesis = 8.0

def entailment_or_contradiction(skittles_premise, friends_premise, skittles_per_friend_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    skittles_per_friend_premise = skittles_premise / friends_premise
    # check if 'skittles_per_friend_hypothesis' entails the quantity deduced from the premise
    return skittles_per_friend_premise == skittles_per_friend_hypothesis

print(entailment_or_contradiction(skittles_premise, friends_premise, skittles_per_friend_hypothesis))
"
22,entailment,,entailment,Joan 's cat had 8.0 kittens  and she gave 2.0 to her friends ,She has 6.0 kittens now,joan 's cat had 8.0 kittens and she gave 2.0 to her friends,she has 6.0 kittens now,"kittens_born_premise = 8.0
kittens_given_premise = 2.0
kittens_left_hypothesis = 6.0

def entailment_or_contradiction(kittens_born_premise, kittens_given_premise, kittens_left_hypothesis):
    # the number of kittens Joan has can be computed from the entities in the premise
    kittens_left_premise = kittens_born_premise - kittens_given_premise
    # check if 'kittens_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return kittens_left_premise == kittens_left_hypothesis

print(entailment_or_contradiction(kittens_born_premise, kittens_given_premise, kittens_left_hypothesis))
"
326,entailment,,entailment,Sara got fast food for lunch and Sara spent $5.36 on a hotdog and $5.1 on a salad,The total of the lunch bill is 10.46,sara got fast food for lunch and sara spent $5.36 on a hotdog and $5.1 on a salad,the total of the lunch bill is 10.46,"hotdog_premise = 5.36
salad_premise = 5.1
total_lunch_bill_hypothesis = 10.46

def entailment_or_contradiction(hotdog_premise, salad_premise, total_lunch_bill_hypothesis):
    # the hypothesis talks about the total lunch bill, which can be computed from the entities in the premise
    total_lunch_bill_premise = hotdog_premise + salad_premise
    # check if 'total_lunch_bill_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_lunch_bill_premise == total_lunch_bill_hypothesis

print(entailment_or_contradiction(hotdog_premise, salad_premise, total_lunch_bill_hypothesis))
"
701,contradiction,,contradiction,Sara had 49.0 quarters in her bank and she spent 21.0 quarters,She has 27.0 quarters now,sara had 49.0 quarters in her bank and she spent 21.0 quarters,she has 27.0 quarters now,"quarters_initial_premise = 49.0
quarters_spent_premise = 21.0
quarters_remaining_hypothesis = 27.0

def entailment_or_contradiction(quarters_initial_premise, quarters_spent_premise, quarters_remaining_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    quarters_remaining_premise = quarters_initial_premise - quarters_spent_premise
    # check if 'quarters_remaining_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return quarters_remaining_premise == quarters_remaining_hypothesis

print(entailment_or_contradiction(quarters_initial_premise, quarters_spent_premise, quarters_remaining_hypothesis))
"
425,contradiction,,contradiction,"Mike bought some toys and he bought marbles for $9.05, a football for $4.95, and received $6.52 for returning a baseball",The net amount Mike spent on toys is 3.7,"mike bought some toys and he bought marbles for $9.05, a football for $4.95, and received $6.52 for returning a baseball",the net amount mike spent on toys is 3.7,"marbles_price_premise = 9.05
football_price_premise = 4.95
return_baseball_premise = 6.52
net_spent_hypothesis = 3.7

def entailment_or_contradiction(marbles_price_premise, football_price_premise, return_baseball_premise, net_spent_hypothesis):
    # the net amount Mike spent on toys can be computed from the entities in the premise
    net_spent_premise = marbles_price_premise + football_price_premise - return_baseball_premise
    # check if 'net_spent_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return net_spent_premise == net_spent_hypothesis

print(entailment_or_contradiction(marbles_price_premise, football_price_premise, return_baseball_premise, net_spent_hypothesis))
"
363,contradiction,,contradiction,A restaurant served 9 pizzas but 6 were returned.,0.0 pizzas were successfully served,a restaurant served 9 pizzas but 6 were returned.,0.0 pizzas were successfully served,"served_pizzas_premise = 9
returned_pizzas_premise = 6
successful_pizzas_hypothesis = 0.0

def entailment_or_contradiction(served_pizzas_premise, returned_pizzas_premise, successful_pizzas_hypothesis):
    # The premise provides the number of pizzas that were served and returned.
    # The hypothesis states the number of pizzas that were successfully served.
    # We can compute this number from the premise by subtracting the returned pizzas from the served ones.
    successful_pizzas_premise = served_pizzas_premise - returned_pizzas_premise
    # Check whether the hypothesis is consistent with the computed value from the premise.
    return successful_pizzas_premise == successful_pizzas_hypothesis

print(entailment_or_contradiction(served_pizzas_premise, returned_pizzas_premise, successful_pizzas_hypothesis))
"
235,contradiction,,contradiction, 532.0 people are watching a movie in a theater and the theater has 750.0 seats,219.0 seats are empty in the theater,532.0 people are watching a movie in a theater and the theater has 750.0 seats,219.0 seats are empty in the theater,"people_watching_movie_premise = 532.0
total_seats_premise = 750.0
empty_seats_hypothesis = 219.0

def entailment_or_contradiction(people_watching_movie_premise, total_seats_premise, empty_seats_hypothesis):
    # The hypothesis talks about the number of empty seats in the theater, which can be computed from the premise by subtracting the number of people watching the movie from the total seats
    empty_seats_premise = total_seats_premise - people_watching_movie_premise
    # Check if the number of empty seats from the hypothesis is equal to the computed number of empty seats from the premise
    return empty_seats_premise == empty_seats_hypothesis

print(entailment_or_contradiction(people_watching_movie_premise, total_seats_premise, empty_seats_hypothesis))
"
647,contradiction,,contradiction,532.0 people are watching a movie in a theater and there are 750.0 seats free,1284.0 seats are there in the theater,532.0 people are watching a movie in a theater and there are 750.0 seats free,1284.0 seats are there in the theater,"people_watching_premise = 532.0
free_seats_premise = 750.0
total_seats_hypothesis = 1284.0

def entailment_or_contradiction(people_watching_premise, free_seats_premise, total_seats_hypothesis):
    # the total seats in the theater can be computed from the entities in the premise
    total_seats_premise = people_watching_premise + free_seats_premise
    # check if 'total_seats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_seats_premise == total_seats_hypothesis

print(entailment_or_contradiction(people_watching_premise, free_seats_premise, total_seats_hypothesis))
"
224,entailment,,entailment, Third-grade students went to a concert in 8.0 buses and each bus took 45.0 students,360.0 students went to the concert,third-grade students went to a concert in 8.0 buses and each bus took 45.0 students,360.0 students went to the concert,"buses_premise = 8.0
students_per_bus_premise = 45.0
total_students_hypothesis = 360.0

def entailment_or_contradiction(buses_premise, students_per_bus_premise, total_students_hypothesis):
    # the hypothesis talks about the total number of students, which can be computed from the premise
    total_students_premise = buses_premise * students_per_bus_premise
    # check if 'total_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(buses_premise, students_per_bus_premise, total_students_hypothesis))
"
13,contradiction,,contradiction,There are 11.0 rulers and 34.0 crayons in the drawer  and Tim placed 14.0 rulers in the drawer ,29.0 rulers are now there in all ,there are 11.0 rulers and 34.0 crayons in the drawer and tim placed 14.0 rulers in the drawer,29.0 rulers are now there in all,"rulers_premise = 11.0
crayons_premise = 34.0
added_rulers_premise = 14.0
total_rulers_hypothesis = 29.0

def entailment_or_contradiction(rulers_premise, crayons_premise, added_rulers_premise, total_rulers_hypothesis):
    # The hypothesis talks about the total number of rulers, which can be computed from the quantities in the premise
    total_rulers_premise = rulers_premise + added_rulers_premise
    # check if the total number of rulers from the premise is equal to the total number of rulers in the hypothesis
    return total_rulers_premise == total_rulers_hypothesis

print(entailment_or_contradiction(rulers_premise, crayons_premise, added_rulers_premise, total_rulers_hypothesis))
"
33,contradiction,,contradiction,Jason has 676.0 Pokemon cards  and Alyssa bought 224.0 of Jason 's Pokemon cards ,Jason has 453.0 Pokemon cards now,jason has 676.0 pokemon cards and alyssa bought 224.0 of jason 's pokemon cards,jason has 453.0 pokemon cards now,"initial_cards_jason = 676.0
bought_cards_alyssa = 224.0
remaining_cards_jason_hypothesis = 453.0

def entailment_or_contradiction(initial_cards_jason, bought_cards_alyssa, remaining_cards_jason_hypothesis):
    # The hypothesis talks about the number of cards Jason has now, which can be derived from the premise
    # Jason's current card count can be derived by subtracting the cards bought by Alyssa from his initial count
    remaining_cards_jason_premise = initial_cards_jason - bought_cards_alyssa
    # Check if the remaining cards according to the hypothesis matches the quantity derived from the premise
    return remaining_cards_jason_premise == remaining_cards_jason_hypothesis

print(entailment_or_contradiction(initial_cards_jason, bought_cards_alyssa, remaining_cards_jason_hypothesis))
"
56,entailment,,entailment,"1.0 evening , a restaurant served a total of 0.5 loaf of wheat bread and 0.4 loaf of white bread .",0.9 loaves were served in all,"1.0 evening , a restaurant served a total of 0.5 loaf of wheat bread and 0.4 loaf of white bread .",0.9 loaves were served in all,"wheat_bread_premise = 0.5
white_bread_premise = 0.4
total_loaves_hypothesis = 0.9

def entailment_or_contradiction(wheat_bread_premise, white_bread_premise, total_loaves_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_loaves_premise = wheat_bread_premise + white_bread_premise
    # check if 'total_loaves_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_loaves_premise == total_loaves_hypothesis

print(entailment_or_contradiction(wheat_bread_premise, white_bread_premise, total_loaves_hypothesis))
"
540,entailment,,entailment,Sandy has 26.0 pet fish and her cat ate 6.0,Sandy has 20.0 now,sandy has 26.0 pet fish and her cat ate 6.0,sandy has 20.0 now,"initial_fish_premise = 26.0
eaten_fish_premise = 6.0
remaining_fish_hypothesis = 20.0

def entailment_or_contradiction(initial_fish_premise, eaten_fish_premise, remaining_fish_hypothesis):
    # the hypothesis mentions the number of fish Sandy has now, which can be calculated from the premise
    remaining_fish_premise = initial_fish_premise - eaten_fish_premise
    # check if 'remaining_fish_hypothesis' is equal to the calculated 'remaining_fish_premise'
    return remaining_fish_premise == remaining_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, eaten_fish_premise, remaining_fish_hypothesis))
"
440,entailment,,entailment,"A dust storm sweeps across the prairie and it covers 64535.0 acres of the prairie in the dust, and leaves 522.0 acres untouched",65057.0 acres are in the prarie,"a dust storm sweeps across the prairie and it covers 64535.0 acres of the prairie in the dust, and leaves 522.0 acres untouched",65057.0 acres are in the prarie,"covered_acres_premise = 64535.0
untouched_acres_premise = 522.0
total_acres_hypothesis = 65057.0

def entailment_or_contradiction(covered_acres_premise, untouched_acres_premise, total_acres_hypothesis):
    # the total number of acres in the prairie can be computed from the entities in the premise
    total_acres_premise = covered_acres_premise + untouched_acres_premise
    # check if 'total_acres_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_acres_premise == total_acres_hypothesis

print(entailment_or_contradiction(covered_acres_premise, untouched_acres_premise, total_acres_hypothesis))
"
515,contradiction,,contradiction,4.0 birds were sitting on the fence and 2.0 more birds flew away,3.0 birds are now sitting on the fence,4.0 birds were sitting on the fence and 2.0 more birds flew away,3.0 birds are now sitting on the fence,"birds_initial_premise = 4.0
birds_flew_away_premise = 2.0
birds_left_hypothesis = 3.0

def entailment_or_contradiction(birds_initial_premise, birds_flew_away_premise, birds_left_hypothesis):
    # calculate the number of birds left on the fence after some flew away using the quantities from the premise
    birds_left_premise = birds_initial_premise - birds_flew_away_premise
    # check if the number of birds from the hypothesis matches with the number calculated from the premise
    return birds_left_premise == birds_left_hypothesis

print(entailment_or_contradiction(birds_initial_premise, birds_flew_away_premise, birds_left_hypothesis))
"
599,contradiction,,contradiction,Josh had 16.0 marbles in his collection and he found 7.0 more marbles,He has 25.0 marbles now,josh had 16.0 marbles in his collection and he found 7.0 more marbles,he has 25.0 marbles now,"initial_marbles_premise = 16.0
found_marbles_premise = 7.0
total_marbles_hypothesis = 25.0

def entailment_or_contradiction(initial_marbles_premise, found_marbles_premise, total_marbles_hypothesis):
    # the total count of marbles in the hypothesis can be computed from the entities in the premise
    total_marbles_premise = initial_marbles_premise + found_marbles_premise
    # check if 'total_marbles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_marbles_premise == total_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_premise, found_marbles_premise, total_marbles_hypothesis))
"
420,entailment,,entailment,"Mike joined his school's band and he bought a trumpet for $145.16, and sold a song book which was $5.84",The net amount that Mike spent at the music store is 139.32,"mike joined his school's band and he bought a trumpet for $145.16, and sold a song book which was $5.84",the net amount that mike spent at the music store is 139.32,"trumpet_cost_premise = 145.16
songbook_cost_premise = 5.84
net_cost_hypothesis = 139.32

def entailment_or_contradiction(trumpet_cost_premise, songbook_cost_premise, net_cost_hypothesis):
    # net cost can be calculated by subtracting the cost of the sold song book from the cost of the bought trumpet
    net_cost_premise = trumpet_cost_premise - songbook_cost_premise
    # check if 'net_cost_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return net_cost_premise == net_cost_hypothesis

print(entailment_or_contradiction(trumpet_cost_premise, songbook_cost_premise, net_cost_hypothesis))
"
324,entailment,,entailment,There were a total of 13.0 hockey games a month and the season is played for  14.0 months,182.0 hockey games are played in the season ,there were a total of 13.0 hockey games a month and the season is played for 14.0 months,182.0 hockey games are played in the season,"games_per_month_premise = 13.0
months_premise = 14.0
total_games_hypothesis = 182.0

def entailment_or_contradiction(games_per_month_premise, months_premise, total_games_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_games_premise = games_per_month_premise * months_premise
    # check if 'total_games_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_games_premise == total_games_hypothesis

print(entailment_or_contradiction(games_per_month_premise, months_premise, total_games_hypothesis))
"
552,entailment,,entailment,Daniel had 54.0 noodles and he gave 12.0 noodles to William,Daniel has 42.0 noodles left,daniel had 54.0 noodles and he gave 12.0 noodles to william,daniel has 42.0 noodles left,"initial_noodles_daniel_premise = 54.0
given_noodles_premise = 12.0
remaining_noodles_daniel_hypothesis = 42.0

def entailment_or_contradiction(initial_noodles_daniel_premise, given_noodles_premise, remaining_noodles_daniel_hypothesis):
    # the hypothesis states the remaining noodles Daniel has, which can be computed from the premise
    remaining_noodles_daniel_premise = initial_noodles_daniel_premise - given_noodles_premise
    # check if 'remaining_noodles_daniel_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_noodles_daniel_premise == remaining_noodles_daniel_hypothesis

print(entailment_or_contradiction(initial_noodles_daniel_premise, given_noodles_premise, remaining_noodles_daniel_hypothesis))
"
193,contradiction,,contradiction, There were 27.0 boys and 35.0 girls on the playground at recess.,66.0 children were on the playground at recess,there were 27.0 boys and 35.0 girls on the playground at recess.,66.0 children were on the playground at recess,"boys_premise = 27.0
girls_premise = 35.0
total_children_hypothesis = 66.0

def entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis):
    # the total number of children in the hypothesis can be computed from the number of boys and girls in the premise
    total_children_premise = boys_premise + girls_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis))
"
307,contradiction,,contradiction, For Halloween Sarah received 108.0 pieces of candy and she ate 36.0 pieces then placed the rest into piles with 9.0 in each pile,She could make 4.0 piles,for halloween sarah received 108.0 pieces of candy and she ate 36.0 pieces then placed the rest into piles with 9.0 in each pile,she could make 4.0 piles,"received_candy_premise = 108.0
eaten_candy_premise = 36.0
candy_per_pile_premise = 9.0
piles_hypothesis = 4.0

def entailment_or_contradiction(received_candy_premise, eaten_candy_premise, candy_per_pile_premise, piles_hypothesis):
    # the premise suggests that the remaining candy after eating is divided into piles
    remaining_candy_premise = received_candy_premise - eaten_candy_premise
    # find the number of piles from the premise
    piles_premise = remaining_candy_premise / candy_per_pile_premise
    # check if the number of piles from the hypothesis is equal to that deduced from the premise
    return piles_premise == piles_hypothesis

print(entailment_or_contradiction(received_candy_premise, eaten_candy_premise, candy_per_pile_premise, piles_hypothesis))
"
604,entailment,,entailment,Randy has 78.0 blocks and Anna gives him 19.0 blocks,Randy has 97.0 blocks now,randy has 78.0 blocks and anna gives him 19.0 blocks,randy has 97.0 blocks now,"blocks_randy_premise = 78.0
blocks_received_premise = 19.0
total_blocks_hypothesis = 97.0

def entailment_or_contradiction(blocks_randy_premise, blocks_received_premise, total_blocks_hypothesis):
    # the total number of blocks Randy has now can be computed from the entities in the premise
    total_blocks_premise = blocks_randy_premise + blocks_received_premise
    # check if 'total_blocks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_blocks_premise == total_blocks_hypothesis

print(entailment_or_contradiction(blocks_randy_premise, blocks_received_premise, total_blocks_hypothesis))
"
206,entailment,,entailment, There are 261.0 fishbowls and each fishbowl has 23.0 fish,There are 6003.0 fish,there are 261.0 fishbowls and each fishbowl has 23.0 fish,there are 6003.0 fish,"fishbowls_premise = 261.0
fish_per_bowl_premise = 23.0
total_fish_hypothesis = 6003.0

def entailment_or_contradiction(fishbowls_premise, fish_per_bowl_premise, total_fish_hypothesis):
    # The total number of fish can be computed from the number of fishbowls and fish per bowl
    total_fish_premise = fishbowls_premise * fish_per_bowl_premise
    # Check if 'total_fish_hypothesis' is equal to the quantity computed from the premise
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(fishbowls_premise, fish_per_bowl_premise, total_fish_hypothesis))
"
245,contradiction,,contradiction," Sue’s mother made 75.0 cookies and she put the cookies in bags, with 3.0 cookies in each bag",She could fill up 20.0 bags,"sue’s mother made 75.0 cookies and she put the cookies in bags, with 3.0 cookies in each bag",she could fill up 20.0 bags,"cookies_made_premise = 75.0
cookies_per_bag_premise = 3.0
filled_bags_hypothesis = 20.0

def entailment_or_contradiction(cookies_made_premise, cookies_per_bag_premise, filled_bags_hypothesis):
    # the hypothesis talks about the number of filled bags which can be computed from the entities in the premise
    filled_bags_premise = cookies_made_premise / cookies_per_bag_premise
    # check if 'filled_bags_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return filled_bags_premise == filled_bags_hypothesis

print(entailment_or_contradiction(cookies_made_premise, cookies_per_bag_premise, filled_bags_hypothesis))
"
231,contradiction,,contradiction, Lucy has an aquarium with 212.0 fish and she wants to buy 68.0 more fish,Lucy would have 284.0 fish then,lucy has an aquarium with 212.0 fish and she wants to buy 68.0 more fish,lucy would have 284.0 fish then,"current_fish_premise = 212.0
buy_more_fish_premise = 68.0
total_fish_hypothesis = 284.0

def entailment_or_contradiction(current_fish_premise, buy_more_fish_premise, total_fish_hypothesis):
    # the number of fish in the hypothesis can be computed from the numbers in the premise
    total_fish_premise = current_fish_premise + buy_more_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(current_fish_premise, buy_more_fish_premise, total_fish_hypothesis))
"
117,contradiction,,contradiction,Teresa jogged 25.0 kilometers at 5.0 kilometers per hour,Teresa jogged for 4.0 hours,teresa jogged 25.0 kilometers at 5.0 kilometers per hour,teresa jogged for 4.0 hours,"distance_premise = 25.0 # in kilometers
speed_premise = 5.0 # in kilometers per hour
time_hypothesis = 4.0 # in hours

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
197,contradiction,,contradiction, Gary had 73.0 dollars and he spent 55.0 dollars on a pet snake,Gary has 19.0 dollars left,gary had 73.0 dollars and he spent 55.0 dollars on a pet snake,gary has 19.0 dollars left,"initial_money_premise = 73.0
spent_money_premise = 55.0
remaining_money_hypothesis = 19.0

def entailment_or_contradiction(initial_money_premise, spent_money_premise, remaining_money_hypothesis):
    # the remaining money in the hypothesis can be computed from the initial and spent money in the premise
    remaining_money_premise = initial_money_premise - spent_money_premise
    # check if 'remaining_money_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_money_premise == remaining_money_hypothesis

print(entailment_or_contradiction(initial_money_premise, spent_money_premise, remaining_money_hypothesis))
"
462,entailment,,entailment,Sally had 39.0 baseball cards and Sara gave Sally 24.0 more,Sally has 63.0 baseball cards now,sally had 39.0 baseball cards and sara gave sally 24.0 more,sally has 63.0 baseball cards now,"initial_cards_sally_premise = 39.0
received_cards_premise = 24.0
total_cards_hypothesis = 63.0

def entailment_or_contradiction(initial_cards_sally_premise, received_cards_premise, total_cards_hypothesis):
    # the total number of cards Sally has according to the premise can be computed by adding the initial number of cards to the ones she received
    total_cards_premise = initial_cards_sally_premise + received_cards_premise
    # check if the total number of cards according to the hypothesis is equal to the total number of cards according to the premise, so if they entail each other
    return total_cards_premise == total_cards_hypothesis

print(entailment_or_contradiction(initial_cards_sally_premise, received_cards_premise, total_cards_hypothesis))
"
543,contradiction,,contradiction,Our class got 54.0 books from the library and then we gave 23.0 away to a different class,Class has 34.0 books from the library left,our class got 54.0 books from the library and then we gave 23.0 away to a different class,class has 34.0 books from the library left,"books_got_premise = 54.0
books_gave_premise = 23.0
books_left_hypothesis = 34.0

def entailment_or_contradiction(books_got_premise, books_gave_premise, books_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    books_left_premise = books_got_premise - books_gave_premise
    # check if 'books_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return books_left_premise == books_left_hypothesis

print(entailment_or_contradiction(books_got_premise, books_gave_premise, books_left_hypothesis))
"
259,contradiction,,contradiction, Darius drove 679.0 miles to visit his grandmother and Julia drove 998.0 miles to visit her grandmother,The total number of miles Darius and Julia drove is 1672.0,darius drove 679.0 miles to visit his grandmother and julia drove 998.0 miles to visit her grandmother,the total number of miles darius and julia drove is 1672.0,"darius_miles_premise = 679.0
julia_miles_premise = 998.0
total_miles_hypothesis = 1672.0

def entailment_or_contradiction(darius_miles_premise, julia_miles_premise, total_miles_hypothesis):
    # the total number of miles driven can be computed from Darius's and Julia's individual miles
    total_miles_premise = darius_miles_premise + julia_miles_premise
    # check if 'total_miles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_miles_premise == total_miles_hypothesis

print(entailment_or_contradiction(darius_miles_premise, julia_miles_premise, total_miles_hypothesis))
"
91,contradiction,,contradiction,Denise removes 5.0 bananas from a jar and there were originally 46.0 bananas in the jar,42.0 bananas are left in the jar,denise removes 5.0 bananas from a jar and there were originally 46.0 bananas in the jar,42.0 bananas are left in the jar,"bananas_removed_premise = 5.0
bananas_originally_premise = 46.0
bananas_left_hypothesis = 42.0

def entailment_or_contradiction(bananas_removed_premise, bananas_originally_premise, bananas_left_hypothesis):
    # the hypothesis talks about the number of bananas left, which can be computed from the premise
    bananas_left_premise = bananas_originally_premise - bananas_removed_premise
    # check if 'bananas_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bananas_left_premise == bananas_left_hypothesis

print(entailment_or_contradiction(bananas_removed_premise, bananas_originally_premise, bananas_left_hypothesis))
"
180,entailment,,entailment, There are 38.0 books on the shelf and Marta put 10.0 more books on the shelf,48.0 books are on the shelf now,there are 38.0 books on the shelf and marta put 10.0 more books on the shelf,48.0 books are on the shelf now,"books_on_shelf_premise = 38.0
books_added_premise = 10.0
total_books_hypothesis = 48.0

def entailment_or_contradiction(books_on_shelf_premise, books_added_premise, total_books_hypothesis):
    # the total number of books on the shelf in the hypothesis can be computed from the entities in the premise
    total_books_premise = books_on_shelf_premise + books_added_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(books_on_shelf_premise, books_added_premise, total_books_hypothesis))
"
394,entailment,,entailment,Joan has 8.0 orange balloons  and her friend gives her 2.0 more ,Joan has 10.0 orange balloons now,joan has 8.0 orange balloons and her friend gives her 2.0 more,joan has 10.0 orange balloons now,"initial_balloons_premise = 8.0
received_balloons_premise = 2.0
total_balloons_hypothesis = 10.0

def entailment_or_contradiction(initial_balloons_premise, received_balloons_premise, total_balloons_hypothesis):
    # the hypothesis can be computed from the information given in the premise
    total_balloons_premise = initial_balloons_premise + received_balloons_premise
    # check if 'total_balloons_hypothesis' equals the quantity deduced from the premise
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(initial_balloons_premise, received_balloons_premise, total_balloons_hypothesis))
"
142,entailment,,entailment," I read 21.0 pages of my English book yesterday and today, I read 17.0 pages",The total number of pages I read is 38.0,"i read 21.0 pages of my english book yesterday and today, i read 17.0 pages",the total number of pages i read is 38.0,"pages_read_yesterday_premise = 21.0
pages_read_today_premise = 17.0
total_pages_read_hypothesis = 38.0

def entailment_or_contradiction(pages_read_yesterday_premise, pages_read_today_premise, total_pages_read_hypothesis):
    # the total number of pages read can be computed by adding the numbers from yesterday and today
    total_pages_read_premise = pages_read_yesterday_premise + pages_read_today_premise
    # check if the total pages read in the hypothesis is the same as the total pages read in the premise
    return total_pages_read_premise == total_pages_read_hypothesis

print(entailment_or_contradiction(pages_read_yesterday_premise, pages_read_today_premise, total_pages_read_hypothesis))
"
96,entailment,,entailment,"Each child has 3.0 oranges, and there are 4.0 children",12.0 oranges are there in total,"each child has 3.0 oranges, and there are 4.0 children",12.0 oranges are there in total,"oranges_per_child_premise = 3.0
children_premise = 4.0
total_oranges_hypothesis = 12.0

def entailment_or_contradiction(oranges_per_child_premise, children_premise, total_oranges_hypothesis):
    # the total number of oranges can be computed from the number of oranges per child and the total number of children
    total_oranges_premise = oranges_per_child_premise * children_premise
    # check if 'total_oranges_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_oranges_premise == total_oranges_hypothesis

print(entailment_or_contradiction(oranges_per_child_premise, children_premise, total_oranges_hypothesis))
"
67,contradiction,,contradiction,"Alyssa picked 25.0 limes, and Mike picked 32.0 limes  and Tom picked 12.0 plums ",61.0 limes were picked in all ,"alyssa picked 25.0 limes, and mike picked 32.0 limes and tom picked 12.0 plums",61.0 limes were picked in all,"alyssa_limes_premise = 25.0
mike_limes_premise = 32.0
total_limes_hypothesis = 61.0

def entailment_or_contradiction(alyssa_limes_premise, mike_limes_premise, total_limes_hypothesis):
    # the hypothesis includes a total number of limes, which can be computed from the premise
    total_limes_premise = alyssa_limes_premise + mike_limes_premise
    # check if 'total_limes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_limes_premise == total_limes_hypothesis

print(entailment_or_contradiction(alyssa_limes_premise, mike_limes_premise, total_limes_hypothesis))
"
426,entailment,,entailment,"A ship has 8723.0 tons of cargo and at the Bahamas, sailors unloaded 5973.0 tons of cargo",2750.0 tons of cargo is left on the ship,"a ship has 8723.0 tons of cargo and at the bahamas, sailors unloaded 5973.0 tons of cargo",2750.0 tons of cargo is left on the ship,"initial_cargo_premise = 8723.0
unloaded_cargo_premise = 5973.0
remaining_cargo_hypothesis = 2750.0

def entailment_or_contradiction(initial_cargo_premise, unloaded_cargo_premise, remaining_cargo_hypothesis):
    # calculate the remaining cargo according to the premise
    remaining_cargo_premise = initial_cargo_premise - unloaded_cargo_premise
    # check if the remaining cargo according to the hypothesis matches the remaining cargo calculated from the premise
    return remaining_cargo_premise == remaining_cargo_hypothesis

print(entailment_or_contradiction(initial_cargo_premise, unloaded_cargo_premise, remaining_cargo_hypothesis))
"
673,contradiction,,contradiction,"A waiter had 36.0 customers to wait on, and 19.0 of the customers left and then 14.0 of the remaining customers left",He would have 5.0 customers ,"a waiter had 36.0 customers to wait on, and 19.0 of the customers left and then 14.0 of the remaining customers left",he would have 5.0 customers,"initial_customers_premise = 36.0
first_left_customers_premise = 19.0
second_left_customers_premise = 14.0
remaining_customers_hypothesis = 5.0

def entailment_or_contradiction(initial_customers_premise, first_left_customers_premise, second_left_customers_premise, remaining_customers_hypothesis):
    # calculate the remaining customers after the first and second wave of customers leaving
    remaining_customers_premise = initial_customers_premise - first_left_customers_premise - second_left_customers_premise
    # check if the remaining customers from the premise are equal to the remaining customers from the hypothesis
    return remaining_customers_premise == remaining_customers_hypothesis

print(entailment_or_contradiction(initial_customers_premise, first_left_customers_premise, second_left_customers_premise, remaining_customers_hypothesis))
"
54,entailment,,entailment,"A treasure hunter discovered a buried treasure chest filled with a total of 5155.0 gems  and 45.0 of the gems were diamonds , and the rest were rubies ",5110.0 of the gems were rubies ,"a treasure hunter discovered a buried treasure chest filled with a total of 5155.0 gems and 45.0 of the gems were diamonds , and the rest were rubies",5110.0 of the gems were rubies,"total_gems_premise = 5155.0
diamonds_premise = 45.0
rubies_hypothesis = 5110.0

def entailment_or_contradiction(total_gems_premise, diamonds_premise, rubies_hypothesis):
    # the number of rubies can be computed from the total number of gems and the number of diamonds
    rubies_premise = total_gems_premise - diamonds_premise
    # check if 'rubies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return rubies_premise == rubies_hypothesis

print(entailment_or_contradiction(total_gems_premise, diamonds_premise, rubies_hypothesis))
"
356,entailment,,entailment,Joan found 70.0 seashells on the beach  and Sam gave her  27.0 seashells ,Joan has 97.0 seashells now ,joan found 70.0 seashells on the beach and sam gave her 27.0 seashells,joan has 97.0 seashells now,"found_seashells_premise = 70.0
given_seashells_premise = 27.0
total_seashells_hypothesis = 97.0

def entailment_or_contradiction(found_seashells_premise, given_seashells_premise, total_seashells_hypothesis):
    # the hypothesis talks about the total number of seashells, which can be computed from the premise
    total_seashells_premise = found_seashells_premise + given_seashells_premise
    # check if 'total_seashells_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_seashells_premise == total_seashells_hypothesis

print(entailment_or_contradiction(found_seashells_premise, given_seashells_premise, total_seashells_hypothesis))
"
622,entailment,,entailment,We have a pile with 100.0 seeds in it and those seeds came from 4.0 watermelons,25.0 seeds were there in each watermelon,we have a pile with 100.0 seeds in it and those seeds came from 4.0 watermelons,25.0 seeds were there in each watermelon,"total_seeds_premise = 100.0
total_watermelons_premise = 4.0
seeds_per_watermelon_hypothesis = 25.0

def entailment_or_contradiction(total_seeds_premise, total_watermelons_premise, seeds_per_watermelon_hypothesis):
    # the hypothesis talks about the number of seeds per watermelon, which can be computed from the premise
    seeds_per_watermelon_premise = total_seeds_premise / total_watermelons_premise
    # check if 'seeds_per_watermelon_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return seeds_per_watermelon_premise == seeds_per_watermelon_hypothesis

print(entailment_or_contradiction(total_seeds_premise, total_watermelons_premise, seeds_per_watermelon_hypothesis))
"
512,entailment,,entailment,Lisa took a plane trip of 256.0 miles and she took this trip 32.0 times,She has flown 8192.0 miles,lisa took a plane trip of 256.0 miles and she took this trip 32.0 times,she has flown 8192.0 miles,"trip_distance_premise = 256.0
trips_number_premise = 32.0
total_distance_hypothesis = 8192.0

def entailment_or_contradiction(trip_distance_premise, trips_number_premise, total_distance_hypothesis):
    # the total distance flown can be computed from the entities in the premise
    total_distance_premise = trip_distance_premise * trips_number_premise
    # check if 'total_distance_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_distance_premise == total_distance_hypothesis

print(entailment_or_contradiction(trip_distance_premise, trips_number_premise, total_distance_hypothesis))
"
483,contradiction,,contradiction,"Mary had 33.0 Pokemon cards , and 6.0 were torn  and Mary gave Sam 23.0 of her Pokemon cards ",Mary has 5.0 Pokemon cards now,"mary had 33.0 pokemon cards , and 6.0 were torn and mary gave sam 23.0 of her pokemon cards",mary has 5.0 pokemon cards now,"cards_initially_premise = 33.0
torn_cards_premise = 6.0
given_cards_premise = 23.0
cards_left_hypothesis = 5.0

def entailment_or_contradiction(cards_initially_premise, torn_cards_premise, given_cards_premise, cards_left_hypothesis):
    # the quantity of cards Mary has left can be computed from the quantities in the premise
    cards_left_premise = cards_initially_premise - torn_cards_premise - given_cards_premise
    # check if 'cards_left_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return cards_left_premise == cards_left_hypothesis

print(entailment_or_contradiction(cards_initially_premise, torn_cards_premise, given_cards_premise, cards_left_hypothesis))
"
432,entailment,,entailment,A car company produced 3884.0 cars in North America but 2871.0 cars in Europe were recalled.,1013.0 cars were successfully produced,a car company produced 3884.0 cars in north america but 2871.0 cars in europe were recalled.,1013.0 cars were successfully produced,"produced_cars_NA_premise = 3884.0
recalled_cars_Europe_premise = 2871.0
successful_cars_hypothesis = 1013.0

def entailment_or_contradiction(produced_cars_NA_premise, recalled_cars_Europe_premise, successful_cars_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    successful_cars_premise = produced_cars_NA_premise - recalled_cars_Europe_premise
    # check if 'successful_cars_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return successful_cars_premise == successful_cars_hypothesis

print(entailment_or_contradiction(produced_cars_NA_premise, recalled_cars_Europe_premise, successful_cars_hypothesis))
"
237,contradiction,,contradiction, 1038.0 pounds of oranges are in 45.0 bags,Each bag contains 23.0 pounds of oranges,1038.0 pounds of oranges are in 45.0 bags,each bag contains 23.0 pounds of oranges,"total_oranges_premise = 1038.0
total_bags_premise = 45.0
oranges_per_bag_hypothesis = 23.0

def entailment_or_contradiction(total_oranges_premise, total_bags_premise, oranges_per_bag_hypothesis):
    # the hypothesis talks about the number of oranges per bag, which can be computed from the premise
    oranges_per_bag_premise = total_oranges_premise / total_bags_premise
    # check if 'oranges_per_bag_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return oranges_per_bag_premise == oranges_per_bag_hypothesis

print(entailment_or_contradiction(total_oranges_premise, total_bags_premise, oranges_per_bag_hypothesis))
"
325,contradiction,,contradiction,There were a total of 13.0 hockey games a month and the season is played for  14.0 months,177.0 hockey games are played in the season ,there were a total of 13.0 hockey games a month and the season is played for 14.0 months,177.0 hockey games are played in the season,"games_per_month_premise = 13.0
months_premise = 14.0
total_games_hypothesis = 177.0

def entailment_or_contradiction(games_per_month_premise, months_premise, total_games_hypothesis):
    # the total number of games in the season can be computed from the entities in the premise
    total_games_premise = games_per_month_premise * months_premise
    # check if 'total_games_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_games_premise == total_games_hypothesis

print(entailment_or_contradiction(games_per_month_premise, months_premise, total_games_hypothesis))
"
699,contradiction,,contradiction,Mike had 34.0 peaches left at his roadside fruit stand and he went to the orchard and picked 86.0 more peaches to stock up the stand,He has 115.0 peaches now,mike had 34.0 peaches left at his roadside fruit stand and he went to the orchard and picked 86.0 more peaches to stock up the stand,he has 115.0 peaches now,"peaches_left_premise = 34.0
picked_peaches_premise = 86.0
total_peaches_hypothesis = 115.0

def entailment_or_contradiction(peaches_left_premise, picked_peaches_premise, total_peaches_hypothesis):
    # the total number of peaches in the hypothesis can be computed from the quantities in the premise
    total_peaches_premise = peaches_left_premise + picked_peaches_premise
    # check if 'total_peaches_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_peaches_premise == total_peaches_hypothesis

print(entailment_or_contradiction(peaches_left_premise, picked_peaches_premise, total_peaches_hypothesis))
"
441,contradiction,,contradiction,"A dust storm sweeps across the prairie and it covers 64535.0 acres of the prairie in the dust, and leaves 522.0 acres untouched",65056.0 acres are in the prarie,"a dust storm sweeps across the prairie and it covers 64535.0 acres of the prairie in the dust, and leaves 522.0 acres untouched",65056.0 acres are in the prarie,"covered_acres_premise = 64535.0
untouched_acres_premise = 522.0
total_acres_hypothesis = 65056.0

def entailment_or_contradiction(covered_acres_premise, untouched_acres_premise, total_acres_hypothesis):
    # the total acres in the prairie can be computed from the acres covered by dust and the untouched acres
    total_acres_premise = covered_acres_premise + untouched_acres_premise
    # check if 'total_acres_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_acres_premise == total_acres_hypothesis

print(entailment_or_contradiction(covered_acres_premise, untouched_acres_premise, total_acres_hypothesis))
"
402,entailment,,entailment,Alyssa picked 42.0 pears from the pear tree and Nancy sold 17.0 of the pears ,25.0 pears were left ,alyssa picked 42.0 pears from the pear tree and nancy sold 17.0 of the pears,25.0 pears were left,"picked_pears_premise = 42.0
sold_pears_premise = 17.0
left_pears_hypothesis = 25.0

def entailment_or_contradiction(picked_pears_premise, sold_pears_premise, left_pears_hypothesis):
    # The hypothesis can be computed from the premise by subtracting the sold pears from the picked pears
    left_pears_premise = picked_pears_premise - sold_pears_premise
    # Check if the left pears computed from the premise equals the left pears from the hypothesis
    return left_pears_premise == left_pears_hypothesis

print(entailment_or_contradiction(picked_pears_premise, sold_pears_premise, left_pears_hypothesis))
"
558,entailment,,entailment,Mrs. Santiago has 58.0 red roses and Mrs. Garrett has 24.0,The total number of roses is 82.0,mrs. santiago has 58.0 red roses and mrs. garrett has 24.0,the total number of roses is 82.0,"red_roses_santiago_premise = 58.0
red_roses_garrett_premise = 24.0
total_roses_hypothesis = 82.0

def entailment_or_contradiction(red_roses_santiago_premise, red_roses_garrett_premise, total_roses_hypothesis):
    # the total number of roses can be computed as the sum of Santiago's and Garrett's roses
    total_roses_premise = red_roses_santiago_premise + red_roses_garrett_premise
    # check if the total number of roses from the hypothesis equals the total number of roses from the premise
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(red_roses_santiago_premise, red_roses_garrett_premise, total_roses_hypothesis))
"
299,contradiction,,contradiction," Wendy earned 5.0 points for each bag of cans she recycled, and she had 11.0 bags but didn't recycle 2.0 of them",She would have 44.0 points earned,"wendy earned 5.0 points for each bag of cans she recycled, and she had 11.0 bags but didn't recycle 2.0 of them",she would have 44.0 points earned,"points_per_bag_premise = 5.0
total_bags_premise = 11.0
unrecycled_bags_premise = 2.0
total_points_hypothesis = 44.0

def entailment_or_contradiction(points_per_bag_premise, total_bags_premise, unrecycled_bags_premise, total_points_hypothesis):
    # Compute the total points Wendy earned from the premise
    total_points_premise = points_per_bag_premise * (total_bags_premise - unrecycled_bags_premise)
    # Check if the total points from the hypothesis matches the one computed from the premise
    return total_points_premise == total_points_hypothesis

print(entailment_or_contradiction(points_per_bag_premise, total_bags_premise, unrecycled_bags_premise, total_points_hypothesis))
"
74,entailment,,entailment,Jason has 7.0 violet balloons and 4.0 red balloons  and he lost 3.0 of the violet balloons ,Jason has 4.0 violet balloons now,jason has 7.0 violet balloons and 4.0 red balloons and he lost 3.0 of the violet balloons,jason has 4.0 violet balloons now,"violet_balloons_start_premise = 7.0
lost_violet_balloons_premise = 3.0
violet_balloons_end_hypothesis = 4.0

def entailment_or_contradiction(violet_balloons_start_premise, lost_violet_balloons_premise, violet_balloons_end_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    violet_balloons_end_premise = violet_balloons_start_premise - lost_violet_balloons_premise
    # check if 'violet_balloons_end_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return violet_balloons_end_premise == violet_balloons_end_hypothesis

print(entailment_or_contradiction(violet_balloons_start_premise, lost_violet_balloons_premise, violet_balloons_end_hypothesis))
"
413,contradiction,,contradiction,Jessica had 8.0 quarters in her bank  and her sister gave her 3.0 quarters ,Jessica has 14.0 quarters now,jessica had 8.0 quarters in her bank and her sister gave her 3.0 quarters,jessica has 14.0 quarters now,"quarters_initial_premise = 8.0
quarters_received_premise = 3.0
quarters_total_hypothesis = 14.0

def entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, quarters_total_hypothesis):
    # the hypothesis talks about the total number of quarters Jessica has, which can be computed from the premise
    total_quarters_premise = quarters_initial_premise + quarters_received_premise
    # check if 'quarters_total_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_quarters_premise == quarters_total_hypothesis

print(entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, quarters_total_hypothesis))
"
314,entailment,,entailment,"There were a total of 27.0 soccer games during the 3.0 month season, and the games are equally divided",9.0 soccer games are played a month,"there were a total of 27.0 soccer games during the 3.0 month season, and the games are equally divided",9.0 soccer games are played a month,"total_games_premise = 27.0
months_premise = 3.0
games_per_month_hypothesis = 9.0

def entailment_or_contradiction(total_games_premise, months_premise, games_per_month_hypothesis):
    # the premise indicates that the games are evenly divided over the months
    games_per_month_premise = total_games_premise / months_premise
    # check if 'games_per_month_hypothesis' equals the number of games deduced from the premise
    return games_per_month_premise == games_per_month_hypothesis

print(entailment_or_contradiction(total_games_premise, months_premise, games_per_month_hypothesis))
"
285,contradiction,,contradiction," At the arcade Cody won 49.0 tickets, and he spent 25.0 tickets on a beanie and later won 6.0 more tickets",He would have 28.0 tickets ,"at the arcade cody won 49.0 tickets, and he spent 25.0 tickets on a beanie and later won 6.0 more tickets",he would have 28.0 tickets,"won_tickets_premise = 49.0
spent_tickets_premise = 25.0
won_later_tickets_premise = 6.0
total_tickets_hypothesis = 28.0

def entailment_or_contradiction(won_tickets_premise, spent_tickets_premise, won_later_tickets_premise, total_tickets_hypothesis):
    # the total number of tickets Cody has can be computed from the entities in the premise
    total_tickets_premise = won_tickets_premise - spent_tickets_premise + won_later_tickets_premise
    # check if 'total_tickets_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_tickets_premise == total_tickets_hypothesis

print(entailment_or_contradiction(won_tickets_premise, spent_tickets_premise, won_later_tickets_premise, total_tickets_hypothesis))
"
283,contradiction,,contradiction," Faye had 34.0 coloring books, and she gave away 3.0 of them but then bought 48.0 more",She would have 78.0 coloring books total,"faye had 34.0 coloring books, and she gave away 3.0 of them but then bought 48.0 more",she would have 78.0 coloring books total,"initial_books_premise = 34.0
given_books_premise = 3.0
bought_books_premise = 48.0
total_books_hypothesis = 78.0

def entailment_or_contradiction(initial_books_premise, given_books_premise, bought_books_premise, total_books_hypothesis):
    # The hypothesis quantity can be computed from the entities in the premise
    total_books_premise = initial_books_premise - given_books_premise + bought_books_premise
    # Check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(initial_books_premise, given_books_premise, bought_books_premise, total_books_hypothesis))
"
296,entailment,,entailment," A trivia team had 5.0 members total, but during a game 2.0 members didn't show up, and each member that did show up scored 6.0 points",18.0 points were scored total,"a trivia team had 5.0 members total, but during a game 2.0 members didn't show up, and each member that did show up scored 6.0 points",18.0 points were scored total,"total_members_premise = 5.0
absent_members_premise = 2.0
score_per_member_premise = 6.0
total_score_hypothesis = 18.0

def entailment_or_contradiction(total_members_premise, absent_members_premise, score_per_member_premise, total_score_hypothesis):
    # the total points scored can be computed from the premise
    total_score_premise = (total_members_premise - absent_members_premise) * score_per_member_premise
    # check if 'total_score_hypothesis' matches the computed total score from premise
    return total_score_premise == total_score_hypothesis

print(entailment_or_contradiction(total_members_premise, absent_members_premise, score_per_member_premise, total_score_hypothesis))
"
274,entailment,,entailment," A florist had 37.0 roses, and she sold 16.0 of them and then later picked 19.0 more",She would have 40.0 roses ,"a florist had 37.0 roses, and she sold 16.0 of them and then later picked 19.0 more",she would have 40.0 roses,"initial_roses_premise = 37.0
sold_roses_premise = 16.0
picked_roses_premise = 19.0
total_roses_hypothesis = 40.0

def entailment_or_contradiction(initial_roses_premise, sold_roses_premise, picked_roses_premise, total_roses_hypothesis):
    # the total quantity of roses in the hypothesis can be computed from the quantities in the premise
    total_roses_premise = initial_roses_premise - sold_roses_premise + picked_roses_premise
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, sold_roses_premise, picked_roses_premise, total_roses_hypothesis))
"
655,contradiction,,contradiction,A recipe calls for 18.0 servings of cereal and each serving is 2.0 cups,39.0 cups are needed,a recipe calls for 18.0 servings of cereal and each serving is 2.0 cups,39.0 cups are needed,"servings_premise = 18.0
serving_size_premise = 2.0
total_cups_hypothesis = 39.0

def entailment_or_contradiction(servings_premise, serving_size_premise, total_cups_hypothesis):
    # the hypothesis is about the total quantity of cereal needed, which can be computed from the premise
    total_cups_premise = servings_premise * serving_size_premise 
    # check if 'total_cups_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cups_premise == total_cups_hypothesis

print(entailment_or_contradiction(servings_premise, serving_size_premise, total_cups_hypothesis))
"
190,entailment,,entailment," Paul got a box of 479.0 crayons for his birthday and at the end of the school  year, he only had 134.0 left",345.0 crayons had been lost or given  away,"paul got a box of 479.0 crayons for his birthday and at the end of the school year, he only had 134.0 left",345.0 crayons had been lost or given away,"initial_crayons_premise = 479.0
final_crayons_premise = 134.0
lost_crayons_hypothesis = 345.0

def entailment_or_contradiction(initial_crayons_premise, final_crayons_premise, lost_crayons_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    lost_crayons_premise = initial_crayons_premise - final_crayons_premise
    # check if 'lost_crayons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return lost_crayons_premise == lost_crayons_hypothesis

print(entailment_or_contradiction(initial_crayons_premise, final_crayons_premise, lost_crayons_hypothesis))
"
183,contradiction,,contradiction, Mrs. Hilt has 50.0 cents and a pencil costs 5.0 cents,She can buy 12.0 pencils with the money she has,mrs. hilt has 50.0 cents and a pencil costs 5.0 cents,she can buy 12.0 pencils with the money she has,"cents_premise = 50.0
cost_per_pencil_premise = 5.0
pencils_hypothesis = 12.0

def entailment_or_contradiction(cents_premise, cost_per_pencil_premise, pencils_hypothesis):
    # the number of pencils Mrs. Hilt can buy can be computed from the entities in the premise
    pencils_premise = cents_premise / cost_per_pencil_premise
    # check if 'pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pencils_premise == pencils_hypothesis

print(entailment_or_contradiction(cents_premise, cost_per_pencil_premise, pencils_hypothesis))
"
594,entailment,,entailment,There are 64.0 pigs in the barn and 86.0 more pigs come to join them,There are 150.0 pigs now,there are 64.0 pigs in the barn and 86.0 more pigs come to join them,there are 150.0 pigs now,"pigs_barn_premise = 64.0
pigs_come_premise = 86.0
total_pigs_hypothesis = 150.0

def entailment_or_contradiction(pigs_barn_premise, pigs_come_premise, total_pigs_hypothesis):
    # the total number of pigs in the barn is computed from the entities in the premise
    total_pigs_premise = pigs_barn_premise + pigs_come_premise
    # check if 'total_pigs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pigs_premise == total_pigs_hypothesis

print(entailment_or_contradiction(pigs_barn_premise, pigs_come_premise, total_pigs_hypothesis))
"
695,contradiction,,contradiction,"Wendy uploaded 79.0 pictures to Facebook on Monday and she uploaded 44.0 pictures to Facebook on Tuesday, then split all the pictures into 5.0 different albums",20.1 pictures were in each album ,"wendy uploaded 79.0 pictures to facebook on monday and she uploaded 44.0 pictures to facebook on tuesday, then split all the pictures into 5.0 different albums",20.1 pictures were in each album,"pictures_uploaded_monday_premise = 79.0
pictures_uploaded_tuesday_premise = 44.0
albums_premise = 5.0
pictures_per_album_hypothesis = 20.1

def entailment_or_contradiction(pictures_uploaded_monday_premise, pictures_uploaded_tuesday_premise, albums_premise, pictures_per_album_hypothesis):
    # the hypothesis talks about the number of pictures per album, which can be computed from the premise
    total_pictures_premise = pictures_uploaded_monday_premise + pictures_uploaded_tuesday_premise
    # compute the number of pictures per album from the premise
    pictures_per_album_premise = total_pictures_premise / albums_premise
    # the hypothesis entails the premise if the computed number of pictures per album is equal between the premise and hypothesis
    return pictures_per_album_premise == pictures_per_album_hypothesis

print(entailment_or_contradiction(pictures_uploaded_monday_premise, pictures_uploaded_tuesday_premise, albums_premise, pictures_per_album_hypothesis))
"
188,entailment,,entailment, Randy has 78.0 blocks and he uses 19.0 blocks to build a tower,59.0 blocks are left,randy has 78.0 blocks and he uses 19.0 blocks to build a tower,59.0 blocks are left,"blocks_initial_premise = 78.0
blocks_used_premise = 19.0
blocks_left_hypothesis = 59.0

def entailment_or_contradiction(blocks_initial_premise, blocks_used_premise, blocks_left_hypothesis):
    # the hypothesis suggests the remaining number of blocks, which can be computed from the blocks mentioned in the premise
    blocks_left_premise = blocks_initial_premise - blocks_used_premise
    # check if 'blocks_left_hypothesis' is equal to the quantity deduced from the premise
    return blocks_left_premise == blocks_left_hypothesis

print(entailment_or_contradiction(blocks_initial_premise, blocks_used_premise, blocks_left_hypothesis))
"
156,entailment,,entailment, The clown blew up 47.0 balloons and then he blew up 13.0 more balloons,Clown has 60.0 balloons now,the clown blew up 47.0 balloons and then he blew up 13.0 more balloons,clown has 60.0 balloons now,"initial_balloons_premise = 47.0
additional_balloons_premise = 13.0
total_balloons_hypothesis = 60.0

def entailment_or_contradiction(initial_balloons_premise, additional_balloons_premise, total_balloons_hypothesis):
    # the total number of balloons according to the premise can be found by adding the initial and additional balloons
    total_balloons_premise = initial_balloons_premise + additional_balloons_premise
    # check if 'total_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(initial_balloons_premise, additional_balloons_premise, total_balloons_hypothesis))
"
114,entailment,,entailment,Charles strolled 6.0 miles at 3.0 miles per hour,Charles travelled for 2.0 hours,charles strolled 6.0 miles at 3.0 miles per hour,charles travelled for 2.0 hours,"strolled_distance_premise = 6.0
speed_premise = 3.0
hours_hypothesis = 2.0

def entailment_or_contradiction(strolled_distance_premise, speed_premise, hours_hypothesis):
    # the total hours of travel can be computed by dividing distance by speed
    hours_premise = strolled_distance_premise / speed_premise
    # check if 'hours_hypothesis' is equal to the computed 'hours_premise'
    return hours_premise == hours_hypothesis

print(entailment_or_contradiction(strolled_distance_premise, speed_premise, hours_hypothesis))
"
31,contradiction,,contradiction,Sally had 760.0 quarters in her bank  and she spent 418.0 of her quarters ,She has 341.0 quarters now,sally had 760.0 quarters in her bank and she spent 418.0 of her quarters,she has 341.0 quarters now,"initial_quarters_premise = 760.0
spent_quarters_premise = 418.0
remaining_quarters_hypothesis = 341.0

def entailment_or_contradiction(initial_quarters_premise, spent_quarters_premise, remaining_quarters_hypothesis):
    # the hypothesis talks about the number of quarters remaining, which can be computed from the premise
    remaining_quarters_premise = initial_quarters_premise - spent_quarters_premise
    # check if 'remaining_quarters_hypothesis' is equal to the quantity deduced from the premise
    return remaining_quarters_premise == remaining_quarters_hypothesis

print(entailment_or_contradiction(initial_quarters_premise, spent_quarters_premise, remaining_quarters_hypothesis))
"
644,entailment,,entailment,A pet supply store has 600.0 bags of dog food and they receive 327.0 bags of cat food.,There are 927.0 bags,a pet supply store has 600.0 bags of dog food and they receive 327.0 bags of cat food.,there are 927.0 bags,"dog_food_bags_premise = 600.0
cat_food_bags_premise = 327.0
total_bags_hypothesis = 927.0

def entailment_or_contradiction(dog_food_bags_premise, cat_food_bags_premise, total_bags_hypothesis):
    # the total number of bags in the hypothesis can be computed from the quantities mentioned in the premise
    total_bags_premise = dog_food_bags_premise + cat_food_bags_premise
    # check if the total number of bags in the premise is equal to the total number of bags in the hypothesis
    return total_bags_premise == total_bags_hypothesis

print(entailment_or_contradiction(dog_food_bags_premise, cat_food_bags_premise, total_bags_hypothesis))
"
439,contradiction,,contradiction,There were originally 20817.0 houses in Lincoln  County and there was a housing boom and now there are 97741.0 houses in the county,76923.0 houses were built  from the original to the present,there were originally 20817.0 houses in lincoln county and there was a housing boom and now there are 97741.0 houses in the county,76923.0 houses were built from the original to the present,"original_houses_premise = 20817.0
current_houses_premise = 97741.0
houses_built_hypothesis = 76923.0

def entailment_or_contradiction(original_houses_premise, current_houses_premise, houses_built_hypothesis):
    # the number of houses built can be computed from the entities in the premise
    houses_built_premise = current_houses_premise - original_houses_premise
    # check if 'houses_built_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return houses_built_premise == houses_built_hypothesis

print(entailment_or_contradiction(original_houses_premise, current_houses_premise, houses_built_hypothesis))
"
167,contradiction,,contradiction, There were 28.0 girls and 35.0 boys on the playground at recess.,61.0 children were there in all,there were 28.0 girls and 35.0 boys on the playground at recess.,61.0 children were there in all,"girls_premise = 28.0
boys_premise = 35.0
total_children_hypothesis = 61.0

def entailment_or_contradiction(girls_premise, boys_premise, total_children_hypothesis):
    # the hypothesis talks about the total number of children, which can be computed from the premise
    total_children_premise = girls_premise + boys_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, total_children_hypothesis))
"
641,contradiction,,contradiction,Lucy has a tank with 212.0 fish and she moves 68.0 of them into a different tank,146.0  are left in the first tank,lucy has a tank with 212.0 fish and she moves 68.0 of them into a different tank,146.0 are left in the first tank,"initial_fish_premise = 212.0
moved_fish_premise = 68.0
remaining_fish_hypothesis = 146.0

def entailment_or_contradiction(initial_fish_premise, moved_fish_premise, remaining_fish_hypothesis):
    # the remaining fish in the tank can be computed from the initial number of fish and the moved fish
    remaining_fish_premise = initial_fish_premise - moved_fish_premise
    # check if the quantity of remaining fish in the hypothesis is the same as in the premise
    return remaining_fish_premise == remaining_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, moved_fish_premise, remaining_fish_hypothesis))
"
264,entailment,,entailment, A pet store had 13.0 siamese cats and 5.0 house cats and During a sale they sold 10.0 cats,They has 8.0 cats left,a pet store had 13.0 siamese cats and 5.0 house cats and during a sale they sold 10.0 cats,they has 8.0 cats left,"siamese_cats_premise = 13.0
house_cats_premise = 5.0
sold_cats_premise = 10.0
left_cats_hypothesis = 8.0

def entailment_or_contradiction(siamese_cats_premise, house_cats_premise, sold_cats_premise, left_cats_hypothesis):
    # the total number of cats before and after the sale can be calculated from the entities in the premise
    total_cats_before_sale = siamese_cats_premise + house_cats_premise
    total_cats_after_sale = total_cats_before_sale - sold_cats_premise
    # check if 'left_cats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cats_after_sale == left_cats_hypothesis

print(entailment_or_contradiction(siamese_cats_premise, house_cats_premise, sold_cats_premise, left_cats_hypothesis))
"
654,entailment,,entailment,A recipe calls for 18.0 servings of cereal and each serving is 2.0 cups,36.0 cups are needed,a recipe calls for 18.0 servings of cereal and each serving is 2.0 cups,36.0 cups are needed,"servings_premise = 18.0
cups_per_serving_premise = 2.0
total_cups_hypothesis = 36.0

def entailment_or_contradiction(servings_premise, cups_per_serving_premise, total_cups_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_cups_premise = servings_premise * cups_per_serving_premise
    # check if 'total_cups_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cups_premise == total_cups_hypothesis

print(entailment_or_contradiction(servings_premise, cups_per_serving_premise, total_cups_hypothesis))
"
577,contradiction,,contradiction,Tommy has 60.0 balloons and his mom gave him 34.0 balloons for his birthday,Tommy has 91.0 balloons now,tommy has 60.0 balloons and his mom gave him 34.0 balloons for his birthday,tommy has 91.0 balloons now,"tommy_balloons_premise = 60.0
mom_balloons_premise = 34.0
total_balloons_hypothesis = 91.0

def entailment_or_contradiction(tommy_balloons_premise, mom_balloons_premise, total_balloons_hypothesis):
    # count the total number of balloons from the premise
    total_balloons_premise = tommy_balloons_premise + mom_balloons_premise
    # check if the total number of balloons from the hypothesis is the same as the total number of balloons from the premise
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(tommy_balloons_premise, mom_balloons_premise, total_balloons_hypothesis))
"
0,entailment,,entailment,Sam had 9.0 dimes in his bank  and his dad gave him 7.0 dimes ,Sam has 16.0 dimes now,sam had 9.0 dimes in his bank and his dad gave him 7.0 dimes,sam has 16.0 dimes now,"dimes_sam_premise = 9.0
dimes_given_premise = 7.0
total_dimes_hypothesis = 16.0

def entailment_or_contradiction(dimes_sam_premise, dimes_given_premise, total_dimes_hypothesis):
    # total dimes can be computed from the entities in the premise
    total_dimes_premise = dimes_sam_premise + dimes_given_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(dimes_sam_premise, dimes_given_premise, total_dimes_hypothesis))
"
642,entailment,,entailment,Lucy has 212.0 fish and then she buys 280.0 more fish,She has 492.0 fish now,lucy has 212.0 fish and then she buys 280.0 more fish,she has 492.0 fish now,"fish_initial_premise = 212.0
bought_fish_premise = 280.0
total_fish_hypothesis = 492.0

def entailment_or_contradiction(fish_initial_premise, bought_fish_premise, total_fish_hypothesis):
    # the total number of fish in the hypothesis can be computed from the initial number of fish and the bought fish in the premise
    total_fish_premise = fish_initial_premise + bought_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(fish_initial_premise, bought_fish_premise, total_fish_hypothesis))
"
100,entailment,,entailment,"Jesse has 21.0 bananas, and he shares them among 3.0 friends",Each friend gets 7.0 bananas,"jesse has 21.0 bananas, and he shares them among 3.0 friends",each friend gets 7.0 bananas,"bananas_premise = 21.0
friends_premise = 3.0
bananas_per_friend_hypothesis = 7.0

def entailment_or_contradiction(bananas_premise, friends_premise, bananas_per_friend_hypothesis):
    # the hypothesis talks about the number of bananas each friend gets, which can be computed from the premise
    bananas_per_friend_premise = bananas_premise / friends_premise
    # check if 'bananas_per_friend_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bananas_per_friend_premise == bananas_per_friend_hypothesis

print(entailment_or_contradiction(bananas_premise, friends_premise, bananas_per_friend_hypothesis))
"
130,entailment,,entailment, 3.0 owls were sitting on the fence and 2.0 more owls joined them,5.0 owls are on the fence now,3.0 owls were sitting on the fence and 2.0 more owls joined them,5.0 owls are on the fence now,"initial_owls_premise = 3.0
joined_owls_premise = 2.0
total_owls_hypothesis = 5.0

def entailment_or_contradiction(initial_owls_premise, joined_owls_premise, total_owls_hypothesis):
    # the total number of owls can be computed from the premise
    total_owls_premise = initial_owls_premise + joined_owls_premise
    # check if 'total_owls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_owls_premise == total_owls_hypothesis

print(entailment_or_contradiction(initial_owls_premise, joined_owls_premise, total_owls_hypothesis))
"
477,contradiction,,contradiction,Sam has 6.0 puppies and he gave 2.0 of them to a friend,He has 8.0 puppies now,sam has 6.0 puppies and he gave 2.0 of them to a friend,he has 8.0 puppies now,"puppies_premise = 6.0
gave_puppies_premise = 2.0
puppies_hypothesis = 8.0

def entailment_or_contradiction(puppies_premise, gave_puppies_premise, puppies_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    puppies_left_premise = puppies_premise - gave_puppies_premise
    # check if 'puppies_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return puppies_left_premise == puppies_hypothesis

print(entailment_or_contradiction(puppies_premise, gave_puppies_premise, puppies_hypothesis))
"
331,contradiction,,contradiction,The farmers reported that they harvest 45.0 sacks of apples from each of the 8.0 sections of the orchard daily.,361.0 sacks are harvested every day,the farmers reported that they harvest 45.0 sacks of apples from each of the 8.0 sections of the orchard daily.,361.0 sacks are harvested every day,"sacks_per_section_premise = 45.0
sections_premise = 8.0
total_sacks_hypothesis = 361.0

def entailment_or_contradiction(sacks_per_section_premise, sections_premise, total_sacks_hypothesis):
    # the total number of sacks harvested can be computed from the number of sacks per section and the number of sections
    total_sacks_premise = sacks_per_section_premise * sections_premise
    # check if 'total_sacks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_sacks_premise == total_sacks_hypothesis

print(entailment_or_contradiction(sacks_per_section_premise, sections_premise, total_sacks_hypothesis))
"
239,contradiction,,contradiction," You are reading a book with 120.0 pages, and you want to read the same number of pages each night",You would have 9.0 pages to read each night to finish in 10.0 days,"you are reading a book with 120.0 pages, and you want to read the same number of pages each night",you would have 9.0 pages to read each night to finish in 10.0 days,"total_pages_premise = 120.0
pages_per_night_hypothesis = 9.0
days_hypothesis = 10.0

def entailment_or_contradiction(total_pages_premise, pages_per_night_hypothesis, days_hypothesis):
    # the hypothesis talks about the number of pages per night, which can be computed from the premise 
    pages_per_night_premise = total_pages_premise / days_hypothesis
    # check if 'pages_per_night_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pages_per_night_premise == pages_per_night_hypothesis

print(entailment_or_contradiction(total_pages_premise, pages_per_night_hypothesis, days_hypothesis))
"
596,entailment,,entailment,Adolfo made a tower with 35.0 blocks and he added 65.0 more blocks to the tower,100.0 total blocks are in the tower now,adolfo made a tower with 35.0 blocks and he added 65.0 more blocks to the tower,100.0 total blocks are in the tower now,"initial_blocks_premise = 35.0
added_blocks_premise = 65.0
total_blocks_hypothesis = 100.0

def entailment_or_contradiction(initial_blocks_premise, added_blocks_premise, total_blocks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_blocks_premise = initial_blocks_premise + added_blocks_premise
    # check if 'total_blocks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_blocks_premise == total_blocks_hypothesis

print(entailment_or_contradiction(initial_blocks_premise, added_blocks_premise, total_blocks_hypothesis))
"
318,entailment,,entailment,There are 3.0 calories in a candy bar.,15.0 calories are there in 5.0 candy bars,there are 3.0 calories in a candy bar.,15.0 calories are there in 5.0 candy bars,"calories_per_candy_bar_premise = 3.0
total_calories_hypothesis = 15.0
candy_bars_hypothesis = 5.0

def entailment_or_contradiction(calories_per_candy_bar_premise, total_calories_hypothesis, candy_bars_hypothesis):
    # the total calories in the hypothesis can be computed from the calories per candy and the number of candies in the premise
    total_calories_premise = calories_per_candy_bar_premise * candy_bars_hypothesis
    # check if 'total_calories_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_calories_premise == total_calories_hypothesis

print(entailment_or_contradiction(calories_per_candy_bar_premise, total_calories_hypothesis, candy_bars_hypothesis))
"
680,entailment,,entailment,"At the arcade Cody won 49.0 tickets, and he lost 6.0 tickets and later spent 25.0 tickets on a beanie",He would have 18.0 tickets left,"at the arcade cody won 49.0 tickets, and he lost 6.0 tickets and later spent 25.0 tickets on a beanie",he would have 18.0 tickets left,"won_tickets_premise = 49.0
lost_tickets_premise = 6.0
spent_tickets_premise = 25.0
remaining_tickets_hypothesis = 18.0

def entailment_or_contradiction(won_tickets_premise, lost_tickets_premise, spent_tickets_premise, remaining_tickets_hypothesis):
    # Compute the total number of Cody's tickets by subtracting the lost and spent tickets from the won tickets
    remaining_tickets_premise = won_tickets_premise - lost_tickets_premise - spent_tickets_premise
    # Check if the remaining tickets from the hypothesis match the computed remaining tickets from the premise
    return remaining_tickets_premise == remaining_tickets_hypothesis

print(entailment_or_contradiction(won_tickets_premise, lost_tickets_premise, spent_tickets_premise, remaining_tickets_hypothesis))
"
323,contradiction,,contradiction,Nancy has 7.0 black balloons and Mary has 4.0 times more  black balloons than Nancy,Mary has 24.0 black balloons now,nancy has 7.0 black balloons and mary has 4.0 times more black balloons than nancy,mary has 24.0 black balloons now,"black_balloons_nancy_premise = 7.0
times_black_balloons_mary_nancy_premise = 4.0
black_balloons_mary_hypothesis = 24.0

def entailment_or_contradiction(black_balloons_nancy_premise, times_black_balloons_mary_nancy_premise, black_balloons_mary_hypothesis):
    # the hypothesis states a quantity for Mary's black balloons, which is referenced in the premise
    # calculate the number of black balloons Mary has according to the premise
    black_balloons_mary_premise = black_balloons_nancy_premise * times_black_balloons_mary_nancy_premise
    # check if the quantity from the hypothesis equals the quantity deduced from the premise
    return black_balloons_mary_premise == black_balloons_mary_hypothesis

print(entailment_or_contradiction(black_balloons_nancy_premise, times_black_balloons_mary_nancy_premise, black_balloons_mary_hypothesis))
"
73,contradiction,,contradiction,Melanie picked 7.0 plums and 4.0 oranges from the orchard  and she gave 3.0 plums to Sam ,She has 8.0 plums now,melanie picked 7.0 plums and 4.0 oranges from the orchard and she gave 3.0 plums to sam,she has 8.0 plums now,"picked_plums_premise = 7.0
picked_oranges_premise = 4.0
given_plums_premise = 3.0
total_plums_hypothesis = 8.0

def entailment_or_contradiction(picked_plums_premise, picked_oranges_premise, given_plums_premise, total_plums_hypothesis):
    # the hypothesis talks about the number of plums Melanie has, which can be calculated from the premise
    total_plums_premise = picked_plums_premise - given_plums_premise
    # check if 'total_plums_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_plums_premise == total_plums_hypothesis

print(entailment_or_contradiction(picked_plums_premise, picked_oranges_premise, given_plums_premise, total_plums_hypothesis))
"
714,entailment,,entailment,"When relatives visit Haley and her family, she and her cousins do origami and she gives 48.0 origami papers to every 1.0 of her 6.0 cousins",She has given away 288.0 papers,"when relatives visit haley and her family, she and her cousins do origami and she gives 48.0 origami papers to every 1.0 of her 6.0 cousins",she has given away 288.0 papers,"papers_per_cousin_premise = 48.0
num_of_cousins_premise = 6.0
total_papers_hypothesis = 288.0

def entailment_or_contradiction(papers_per_cousin_premise, num_of_cousins_premise, total_papers_hypothesis):
    # the total number of papers given by Haley can be computed from the entities in the premise
    total_papers_premise = papers_per_cousin_premise * num_of_cousins_premise
    # check if 'total_papers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_papers_premise == total_papers_hypothesis

print(entailment_or_contradiction(papers_per_cousin_premise, num_of_cousins_premise, total_papers_hypothesis))
"
389,contradiction,,contradiction,Mike has 35.0 books in his library and he bought 56.0 more books at a yard sale over the weekend,Mike has 92.0 books now,mike has 35.0 books in his library and he bought 56.0 more books at a yard sale over the weekend,mike has 92.0 books now,"books_initial_premise = 35.0
books_bought_premise = 56.0
total_books_hypothesis = 92.0

def entailment_or_contradiction(books_initial_premise, books_bought_premise, total_books_hypothesis):
    # Mike's total number of books can be computed from the initial number of books and those bought
    total_books_premise = books_initial_premise + books_bought_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(books_initial_premise, books_bought_premise, total_books_hypothesis))
"
360,entailment,,entailment,Sam had 9.0 dimes in his bank and he gave 7.0 dimes to his dad,Sam has 2.0 dimes now,sam had 9.0 dimes in his bank and he gave 7.0 dimes to his dad,sam has 2.0 dimes now,"dimes_start_premise = 9.0
dimes_given_premise = 7.0
dimes_left_hypothesis = 2.0

def entailment_or_contradiction(dimes_start_premise, dimes_given_premise, dimes_left_hypothesis):
    # calculate how many dimes Sam has left after giving some to his dad
    dimes_left_premise = dimes_start_premise - dimes_given_premise
    # check if the quantity deduced from the premise matches the quantity in the hypothesis
    return dimes_left_premise == dimes_left_hypothesis

print(entailment_or_contradiction(dimes_start_premise, dimes_given_premise, dimes_left_hypothesis))
"
23,contradiction,,contradiction,Joan 's cat had 8.0 kittens  and she gave 2.0 to her friends ,She has 4.0 kittens now,joan 's cat had 8.0 kittens and she gave 2.0 to her friends,she has 4.0 kittens now,"initial_kittens_premise = 8.0
given_kittens_premise = 2.0
remaining_kittens_hypothesis = 4.0

def entailment_or_contradiction(initial_kittens_premise, given_kittens_premise, remaining_kittens_hypothesis):
    # the hypothesis talks about the remaining number of kittens which can be computed from the premise
    remaining_kittens_premise = initial_kittens_premise - given_kittens_premise
    # check if 'remaining_kittens_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_kittens_premise == remaining_kittens_hypothesis

print(entailment_or_contradiction(initial_kittens_premise, given_kittens_premise, remaining_kittens_hypothesis))
"
590,entailment,,entailment,Connie has 64.0 red and blue markers and 41.0 of the markers are red,23.0 markers are blue,connie has 64.0 red and blue markers and 41.0 of the markers are red,23.0 markers are blue,"red_markers_premise = 41.0
total_markers_premise = 64.0
blue_markers_hypothesis = 23.0

def entailment_or_contradiction(red_markers_premise, total_markers_premise, blue_markers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    blue_markers_premise = total_markers_premise - red_markers_premise
    # check if 'blue_markers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return blue_markers_premise == blue_markers_hypothesis

print(entailment_or_contradiction(red_markers_premise, total_markers_premise, blue_markers_hypothesis))
"
682,entailment,,entailment,"George had 28.0 socks, and he bought 36.0 new ones and his Dad gave him 4.0 more",He would have 68.0 socks ,"george had 28.0 socks, and he bought 36.0 new ones and his dad gave him 4.0 more",he would have 68.0 socks,"socks_initially_premise = 28.0
socks_bought_premise = 36.0
socks_received_premise = 4.0
total_socks_hypothesis = 68.0

def entailment_or_contradiction(socks_initially_premise, socks_bought_premise, socks_received_premise, total_socks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_socks_premise = socks_initially_premise + socks_bought_premise + socks_received_premise
    # check if 'total_socks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_socks_premise == total_socks_hypothesis

print(entailment_or_contradiction(socks_initially_premise, socks_bought_premise, socks_received_premise, total_socks_hypothesis))
"
713,contradiction,,contradiction,"Christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",They were able to gather 1604.0 pieces of firewood if they gathered 80.0 sacks,"christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",they were able to gather 1604.0 pieces of firewood if they gathered 80.0 sacks,"wood_per_sack = 20.0
sacks_gathered_hypothesis = 80.0
total_wood_hypothesis = 1604.0

def entailment_or_contradiction(wood_per_sack, sacks_gathered_hypothesis, total_wood_hypothesis):
    # the total wood in the hypothesis can be computed from the entities in the premise
    total_wood_premise = wood_per_sack * sacks_gathered_hypothesis
    # check if 'total_wood_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_wood_premise == total_wood_hypothesis

print(entailment_or_contradiction(wood_per_sack, sacks_gathered_hypothesis, total_wood_hypothesis))
"
533,contradiction,,contradiction,There was 698.0 children taking a test and 105.0 passed,591.0 children had to sit it again,there was 698.0 children taking a test and 105.0 passed,591.0 children had to sit it again,"children_taking_test_premise = 698.0
passed_premise = 105.0
resit_hypothesis = 591.0

def entailment_or_contradiction(children_taking_test_premise, passed_premise, resit_hypothesis):
    # the number of children that had to resit the test can be computed by subtracting the number of children who passed from the total number of children
    resit_premise = children_taking_test_premise - passed_premise
    # check if 'resit_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return resit_premise == resit_hypothesis

print(entailment_or_contradiction(children_taking_test_premise, passed_premise, resit_hypothesis))
"
373,contradiction,,contradiction,"Melanie had 7.0 dimes in her bank  and she gave her dad 8.0 dimes, and her mother gave her 4.0 dimes ",Melanie has 5.0 dimes now,"melanie had 7.0 dimes in her bank and she gave her dad 8.0 dimes, and her mother gave her 4.0 dimes",melanie has 5.0 dimes now,"initial_dimes_premise = 7.0
given_to_dad_premise = 8.0
received_from_mom_premise = 4.0
total_dimes_hypothesis = 5.0

def entailment_or_contradiction(initial_dimes_premise, given_to_dad_premise, received_from_mom_premise, total_dimes_hypothesis):
    # the total number of dimes Melanie has can be computed from the entities in the premise
    total_dimes_premise = initial_dimes_premise - given_to_dad_premise + received_from_mom_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(initial_dimes_premise, given_to_dad_premise, received_from_mom_premise, total_dimes_hypothesis))
"
137,contradiction,,contradiction, There are 4.0 squirrels in a tree with 2.0 nuts.,There are 5.0 more squirrels than nuts,there are 4.0 squirrels in a tree with 2.0 nuts.,there are 5.0 more squirrels than nuts,"squirrels_premise = 4.0
nuts_premise = 2.0
squirrels_nuts_difference_hypothesis = 5.0

def entailment_or_contradiction(squirrels_premise, nuts_premise, squirrels_nuts_difference_hypothesis):
    # the hypothesis claims a difference between the number of squirrels and nuts, which can be computed from the premise
    squirrels_nuts_difference_premise = squirrels_premise - nuts_premise
    # check if 'squirrels_nuts_difference_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return squirrels_nuts_difference_premise == squirrels_nuts_difference_hypothesis

print(entailment_or_contradiction(squirrels_premise, nuts_premise, squirrels_nuts_difference_hypothesis))
"
383,contradiction,,contradiction,"Joan picked 37.0 oranges, and Sara sold 10.0 of them  and Alyssa picked 30.0 pears ",Joan has 23.0 oranges left,"joan picked 37.0 oranges, and sara sold 10.0 of them and alyssa picked 30.0 pears",joan has 23.0 oranges left,"picked_oranges_joan_premise = 37.0
sold_oranges_sara_premise = 10.0
left_oranges_joan_hypothesis = 23.0

def entailment_or_contradiction(picked_oranges_joan_premise, sold_oranges_sara_premise, left_oranges_joan_hypothesis):
    # the number of oranges left with Joan can be computed from the entities in the premise
    left_oranges_joan_premise = picked_oranges_joan_premise - sold_oranges_sara_premise
    # check if 'left_oranges_joan_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_oranges_joan_premise == left_oranges_joan_hypothesis

print(entailment_or_contradiction(picked_oranges_joan_premise, sold_oranges_sara_premise, left_oranges_joan_hypothesis))
"
273,contradiction,,contradiction," In fourth grade there were 10.0 students at the start of the year and During the year, 4.0 students left, and 42.0 new students came to school",50.0 students were in fourth grade at the end,"in fourth grade there were 10.0 students at the start of the year and during the year, 4.0 students left, and 42.0 new students came to school",50.0 students were in fourth grade at the end,"start_of_year_students_premise = 10.0
left_students_premise = 4.0
new_students_premise = 42.0
end_of_year_students_hypothesis = 50.0

def entailment_or_contradiction(start_of_year_students_premise, left_students_premise, new_students_premise, end_of_year_students_hypothesis):
    # The total number of students at the end of the year can be calculated from the students at the start of the year, the students left, and the new students 
    end_of_year_students_premise = start_of_year_students_premise - left_students_premise + new_students_premise
    # Check if the 'end_of_year_students_hypothesis' is equal to 'end_of_year_students_premise'
    return end_of_year_students_premise == end_of_year_students_hypothesis

print(entailment_or_contradiction(start_of_year_students_premise, left_students_premise, new_students_premise, end_of_year_students_hypothesis))
"
643,contradiction,,contradiction,Lucy has 212.0 fish and then she buys 280.0 more fish,She has 496.0 fish now,lucy has 212.0 fish and then she buys 280.0 more fish,she has 496.0 fish now,"initial_fish_premise = 212.0
bought_fish_premise = 280.0
total_fish_hypothesis = 496.0

def entailment_or_contradiction(initial_fish_premise, bought_fish_premise, total_fish_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_fish_premise = initial_fish_premise + bought_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, bought_fish_premise, total_fish_hypothesis))
"
52,entailment,,entailment,Each of farmer Cunningham 's 6048.0 lambs is either black or white  and there are 193.0 white ones ,5855.0 of Farmer Cunningham 's lambs are black ,each of farmer cunningham 's 6048.0 lambs is either black or white and there are 193.0 white ones,5855.0 of farmer cunningham 's lambs are black,"total_lambs_premise = 6048.0
white_lambs_premise = 193.0
black_lambs_hypothesis = 5855.0

def entailment_or_contradiction(total_lambs_premise, white_lambs_premise, black_lambs_hypothesis):
    # the number of black lambs can be computed from the total number of lambs and the number of white lambs
    black_lambs_premise = total_lambs_premise - white_lambs_premise
    # check if the number of black lambs in the hypothesis matches the number computed from the premise
    return black_lambs_premise == black_lambs_hypothesis

print(entailment_or_contradiction(total_lambs_premise, white_lambs_premise, black_lambs_hypothesis))
"
320,entailment,,entailment,"There are 4.0 children in the classroom, each student will get 2.0 pencils.",The teacher will have to give out 8.0 pencils,"there are 4.0 children in the classroom, each student will get 2.0 pencils.",the teacher will have to give out 8.0 pencils,"children_premise = 4.0
pencils_per_child_premise = 2.0
total_pencils_hypothesis = 8.0

def entailment_or_contradiction(children_premise, pencils_per_child_premise, total_pencils_hypothesis):
    # the total number of pencils that need to be distributed can be computed from the number of children and pencils each child gets
    total_pencils_premise = children_premise * pencils_per_child_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(children_premise, pencils_per_child_premise, total_pencils_hypothesis))
"
534,entailment,,entailment,There are 12.0 birds on the fence and 8.0 birds fly away,4.0 birds are on the fence,there are 12.0 birds on the fence and 8.0 birds fly away,4.0 birds are on the fence,"birds_initial_premise = 12.0
birds_flyaway_premise = 8.0
birds_hypothesis = 4.0

def entailment_or_contradiction(birds_initial_premise, birds_flyaway_premise, birds_hypothesis):
    # the number of birds remaining on the fence in the hypothesis can be computed from the entities in the premise
    birds_remaining_premise = birds_initial_premise - birds_flyaway_premise
    # check if 'birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return birds_remaining_premise == birds_hypothesis

print(entailment_or_contradiction(birds_initial_premise, birds_flyaway_premise, birds_hypothesis))
"
269,contradiction,,contradiction," For the school bake sale Carol made 30.0 cupcakes, and she sold 9.0 of them and then made 28.0 more",She would have 50.0 cupcakes ,"for the school bake sale carol made 30.0 cupcakes, and she sold 9.0 of them and then made 28.0 more",she would have 50.0 cupcakes,"made_cupcakes_premise = 30.0
sold_cupcakes_premise = 9.0
made_more_cupcakes_premise = 28.0
total_cupcakes_hypothesis = 50.0

def entailment_or_contradiction(made_cupcakes_premise, sold_cupcakes_premise, made_more_cupcakes_premise, total_cupcakes_hypothesis):
    # The total number of cupcakes can be calculated from the premise
    total_cupcakes_premise = made_cupcakes_premise - sold_cupcakes_premise + made_more_cupcakes_premise
    # check if 'total_cupcakes_premise' entails the quantity deduced from the hypothesis, so if they are equal
    return total_cupcakes_premise == total_cupcakes_hypothesis

print(entailment_or_contradiction(made_cupcakes_premise, sold_cupcakes_premise, made_more_cupcakes_premise, total_cupcakes_hypothesis))
"
431,contradiction,,contradiction,"6522.0 liters  of oil,  minus 5165.0 liters of oil, leaked into the water from a broken oil pipe in the sea.",1358.0 liters of oil were leaked into the water,"6522.0 liters of oil, minus 5165.0 liters of oil, leaked into the water from a broken oil pipe in the sea.",1358.0 liters of oil were leaked into the water,"oil_start_premise = 6522.0
oil_leaked_premise = 5165.0
oil_leaked_hypothesis = 1358.0

def entailment_or_contradiction(oil_start_premise, oil_leaked_premise, oil_leaked_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    oil_left_premise = oil_start_premise - oil_leaked_premise
    # check if 'oil_leaked_hypothesis' contradicts the quantity deduced from the premise
    return oil_left_premise == oil_leaked_hypothesis

print(entailment_or_contradiction(oil_start_premise, oil_leaked_premise, oil_leaked_hypothesis))
"
68,entailment,,entailment,Sara had 100.0 pennies and 783.0 quarters in her bank  and her dad borrowed 271.0 quarters from Sara ,She has 512.0 quarters now,sara had 100.0 pennies and 783.0 quarters in her bank and her dad borrowed 271.0 quarters from sara,she has 512.0 quarters now,"pennies_premise = 100.0
quarters_premise = 783.0
borrowed_quarters_premise = 271.0
quarters_hypothesis = 512.0

def entailment_or_contradiction(pennies_premise, quarters_premise, borrowed_quarters_premise, quarters_hypothesis):
    # compute the remaining quarters from the premise
    remaining_quarters_premise = quarters_premise - borrowed_quarters_premise
    # check if 'quarters_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_quarters_premise == quarters_hypothesis

print(entailment_or_contradiction(pennies_premise, quarters_premise, borrowed_quarters_premise, quarters_hypothesis))
"
586,entailment,,entailment,4.0 CDs fit on a shelf,2.0 shelves are needed to hold 8.0 CDs,4.0 cds fit on a shelf,2.0 shelves are needed to hold 8.0 cds,"cds_per_shelf_premise = 4.0
shelves_hypothesis = 2.0
cds_hypothesis = 8.0

def entailment_or_contradiction(cds_per_shelf_premise, shelves_hypothesis, cds_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_cds_premise = cds_per_shelf_premise * shelves_hypothesis
    # check if 'cds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cds_premise == cds_hypothesis

print(entailment_or_contradiction(cds_per_shelf_premise, shelves_hypothesis, cds_hypothesis))
"
542,entailment,,entailment,Our class got 54.0 books from the library and then we gave 23.0 away to a different class,Class has 31.0 books from the library left,our class got 54.0 books from the library and then we gave 23.0 away to a different class,class has 31.0 books from the library left,"initial_books_premise = 54.0
given_books_premise = 23.0
left_books_hypothesis = 31.0

def entailment_or_contradiction(initial_books_premise, given_books_premise, left_books_hypothesis):
    # the hypothesis talks about the number of books left, which can be computed from the information in the premise
    left_books_premise = initial_books_premise - given_books_premise
    # check if 'left_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_books_premise == left_books_hypothesis

print(entailment_or_contradiction(initial_books_premise, given_books_premise, left_books_hypothesis))
"
613,contradiction,,contradiction,There are 261.0 fish and each fishbowl has 23.0 fish,12.5 fishbowls are there,there are 261.0 fish and each fishbowl has 23.0 fish,12.5 fishbowls are there,"fish_premise = 261.0
fish_per_bowl_premise = 23.0
bowls_hypothesis = 12.5

def entailment_or_contradiction(fish_premise, fish_per_bowl_premise, bowls_hypothesis):
    # the number of fishbowls in the hypothesis can be computed from the entities in the premise
    bowls_premise = fish_premise / fish_per_bowl_premise
    # check if 'bowls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bowls_premise == bowls_hypothesis

print(entailment_or_contradiction(fish_premise, fish_per_bowl_premise, bowls_hypothesis))
"
497,contradiction,,contradiction,Denise adds 5.0 bananas to a jar and there were originally 46.0 bananas in the jar,54.0 bananas are left in the jar,denise adds 5.0 bananas to a jar and there were originally 46.0 bananas in the jar,54.0 bananas are left in the jar,"bananas_added_premise = 5.0
original_bananas_premise = 46.0
total_bananas_hypothesis = 54.0

def entailment_or_contradiction(bananas_added_premise, original_bananas_premise, total_bananas_hypothesis):
    # the total bananas in the jar in the hypothesis can be computed from the entities in the premise
    total_bananas_premise = bananas_added_premise + original_bananas_premise
    # check if 'total_bananas_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bananas_premise == total_bananas_hypothesis

print(entailment_or_contradiction(bananas_added_premise, original_bananas_premise, total_bananas_hypothesis))
"
422,entailment,,entailment,"Sandy went to the mall to buy clothes and she spent 13.99 on shorts, 12.14 on a shirt, and received 7.43 for returning a jacket",The net amount of money that Sandy spent on clothes is 18.7,"sandy went to the mall to buy clothes and she spent 13.99 on shorts, 12.14 on a shirt, and received 7.43 for returning a jacket",the net amount of money that sandy spent on clothes is 18.7,"shorts_cost_premise = 13.99
shirt_cost_premise = 12.14
returned_jacket_money_premise = 7.43
net_spent_hypothesis = 18.7

def entailment_or_contradiction(shorts_cost_premise, shirt_cost_premise, returned_jacket_money_premise, net_spent_hypothesis):
    # compute the total net amount spent by Sandy based on the premise
    net_spent_premise = shorts_cost_premise + shirt_cost_premise - returned_jacket_money_premise
    # check if the net amount spent according to the hypothesis is equal to the one computed from the premise
    return round(net_spent_premise, 2) == net_spent_hypothesis

print(entailment_or_contradiction(shorts_cost_premise, shirt_cost_premise, returned_jacket_money_premise, net_spent_hypothesis))
"
587,contradiction,,contradiction,4.0 CDs fit on a shelf,4.0 shelves are needed to hold 8.0 CDs,4.0 cds fit on a shelf,4.0 shelves are needed to hold 8.0 cds,"cds_per_shelf_premise = 4.0
shelves_hypothesis = 4.0
cds_hypothesis = 8.0

def entailment_or_contradiction(cds_per_shelf_premise, shelves_hypothesis, cds_hypothesis):
    # the number of cds that fit on a shelf is given in the premise
    # we can use this to calculate the number of shelves needed to hold a certain number of cds
    shelves_needed_premise = cds_hypothesis / cds_per_shelf_premise
    # check if the number of shelves hypothesized is equal to the number of shelves calculated from the premise
    return shelves_needed_premise == shelves_hypothesis

print(entailment_or_contradiction(cds_per_shelf_premise, shelves_hypothesis, cds_hypothesis))
"
565,contradiction,,contradiction,Cindy’s mom baked 41.0 cookies and Paul’s dad ate 38.0,0.0 cookies are left,cindy’s mom baked 41.0 cookies and paul’s dad ate 38.0,0.0 cookies are left,"baked_cookies_premise = 41.0
eaten_cookies_premise = 38.0
left_cookies_hypothesis = 0.0

def entailment_or_contradiction(baked_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    left_cookies_premise = baked_cookies_premise - eaten_cookies_premise
    # check if 'left_cookies_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return left_cookies_premise == left_cookies_hypothesis

print(entailment_or_contradiction(baked_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis))
"
382,entailment,,entailment,"Joan picked 37.0 oranges, and Sara sold 10.0 of them  and Alyssa picked 30.0 pears ",Joan has 27.0 oranges left,"joan picked 37.0 oranges, and sara sold 10.0 of them and alyssa picked 30.0 pears",joan has 27.0 oranges left,"picked_oranges_joan_premise = 37.0
sold_oranges_sara_premise = 10.0
remaining_oranges_joan_hypothesis = 27.0

def entailment_or_contradiction(picked_oranges_joan_premise, sold_oranges_sara_premise, remaining_oranges_joan_hypothesis):
    # the number of remaining oranges in the hypothesis can be computed from the entities in the premise
    remaining_oranges_joan_premise = picked_oranges_joan_premise - sold_oranges_sara_premise
    # check if 'remaining_oranges_joan_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_oranges_joan_premise == remaining_oranges_joan_hypothesis

print(entailment_or_contradiction(picked_oranges_joan_premise, sold_oranges_sara_premise, remaining_oranges_joan_hypothesis))
"
339,contradiction,,contradiction,"For the final act, the circus brought out dancing animals wearing crowns, and each crown is made with 7.0 different colored feathers",6533.0 feathers are needed for 934.0 crowns,"for the final act, the circus brought out dancing animals wearing crowns, and each crown is made with 7.0 different colored feathers",6533.0 feathers are needed for 934.0 crowns,"feathers_per_crown_premise = 7.0
crowns_hypothesis = 934.0
total_feathers_hypothesis = 6533.0

def entailment_or_contradiction(feathers_per_crown_premise, crowns_hypothesis, total_feathers_hypothesis):
    # the total number of feathers in the hypothesis can be computed from the entities in the premise
    total_feathers_premise = feathers_per_crown_premise * crowns_hypothesis
    # check if 'total_feathers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_feathers_premise == total_feathers_hypothesis

print(entailment_or_contradiction(feathers_per_crown_premise, crowns_hypothesis, total_feathers_hypothesis))
"
387,contradiction,,contradiction,"Keith picked 47.0 pears,  and Mike picked 12.0 pears from the pear tree  and Keith gave away 46.0 pears",Mike has 10.0 pears left,"keith picked 47.0 pears, and mike picked 12.0 pears from the pear tree and keith gave away 46.0 pears",mike has 10.0 pears left,"pears_picked_keith_premise = 47.0
pears_picked_mike_premise = 12.0
pears_given_away_keith_premise = 46.0
pears_left_mike_hypothesis = 10.0

def entailment_or_contradiction(pears_picked_keith_premise, pears_picked_mike_premise, pears_given_away_keith_premise, pears_left_mike_hypothesis):
    # the hypothesis talks about how many pears Mike has left, which can be computed from the entities in the premise
    # we assume that Keith gave away his own pears, so Mike still has all the pears he picked
    pears_left_mike_premise = pears_picked_mike_premise 
    # check if 'pears_left_mike_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pears_left_mike_premise == pears_left_mike_hypothesis

print(entailment_or_contradiction(pears_picked_keith_premise, pears_picked_mike_premise, pears_given_away_keith_premise, pears_left_mike_hypothesis))
"
89,contradiction,,contradiction,There are 4.0 cards and 3.0 cards more are added,11.0 cards are there total,there are 4.0 cards and 3.0 cards more are added,11.0 cards are there total,"initial_cards_premise = 4.0
added_cards_premise = 3.0
total_cards_hypothesis = 11.0

def entailment_or_contradiction(initial_cards_premise, added_cards_premise, total_cards_hypothesis):
    # the total number of cards in the hypothesis is computed from the initial cards and the added ones in the premise
    total_cards_premise = initial_cards_premise + added_cards_premise  
    # check if the total number of cards from the hypothesis is equal to the computed total number of cards in the premise
    return total_cards_premise == total_cards_hypothesis

print(entailment_or_contradiction(initial_cards_premise, added_cards_premise, total_cards_hypothesis))
"
584,entailment,,entailment,There are 40.0 boys and 117 girls on the playground.,157.0 children are on the playground,there are 40.0 boys and 117 girls on the playground.,157.0 children are on the playground,"boys_premise = 40.0
girls_premise = 117
total_children_hypothesis = 157.0

def entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis):
    # the total number of children can be computed from the numbers of boys and girls in the premise
    total_children_premise = boys_premise + girls_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis))
"
423,contradiction,,contradiction,"Sandy went to the mall to buy clothes and she spent 13.99 on shorts, 12.14 on a shirt, and received 7.43 for returning a jacket",The net amount of money that Sandy spent on clothes is 17.5,"sandy went to the mall to buy clothes and she spent 13.99 on shorts, 12.14 on a shirt, and received 7.43 for returning a jacket",the net amount of money that sandy spent on clothes is 17.5,"shorts_price_premise = 13.99
shirt_price_premise = 12.14
returned_jacket_money_premise = 7.43
net_spent_money_hypothesis = 17.5

def entailment_or_contradiction(shorts_price_premise, shirt_price_premise, returned_jacket_money_premise, net_spent_money_hypothesis):
    # the hypothesis talks about the net amount of money spent, which can be computed from the premise
    total_spent_money_premise = shorts_price_premise + shirt_price_premise - returned_jacket_money_premise
    # check if 'net_spent_money_hypothesis' entails the quantity deduced from the premise, i.e., if they are equal
    return total_spent_money_premise == net_spent_money_hypothesis

print(entailment_or_contradiction(shorts_price_premise, shirt_price_premise, returned_jacket_money_premise, net_spent_money_hypothesis))
"
145,contradiction,,contradiction," In a school, there are 542.0 girls and 387.0 boys.",928.0 pupils are there in that school,"in a school, there are 542.0 girls and 387.0 boys.",928.0 pupils are there in that school,"girls_premise = 542.0
boys_premise = 387.0
total_pupils_hypothesis = 928.0

def entailment_or_contradiction(girls_premise, boys_premise, total_pupils_hypothesis):
    # the hypothesis talks about the total number of pupils, which can be computed from the number of boys and girls in the premise
    total_pupils_premise = girls_premise + boys_premise
    # check if the number of total pupils from the premise entails the number of total pupils from the hypothesis, so if they are equal
    return total_pupils_premise == total_pupils_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, total_pupils_hypothesis))
"
697,contradiction,,contradiction,"A company invited 18.0 people to a luncheon; 12.0 more people showed up, and the tables they had held 3.0 people each",They need 8.0 tables,"a company invited 18.0 people to a luncheon; 12.0 more people showed up, and the tables they had held 3.0 people each",they need 8.0 tables,"invited_people_premise = 18.0
additional_people_premise = 12.0
people_per_table_premise = 3.0
tables_needed_hypothesis = 8.0

def entailment_or_contradiction(invited_people_premise, additional_people_premise, people_per_table_premise, tables_needed_hypothesis):
    # the hypothesis talks about the number of tables needed, which can be computed from the entities in the premise
    total_people_premise = invited_people_premise + additional_people_premise
    tables_needed_premise = total_people_premise / people_per_table_premise
    # check if 'tables_needed_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return tables_needed_hypothesis == tables_needed_premise

print(entailment_or_contradiction(invited_people_premise, additional_people_premise, people_per_table_premise, tables_needed_hypothesis))
"
230,entailment,,entailment, Lucy has an aquarium with 212.0 fish and she wants to buy 68.0 more fish,Lucy would have 280.0 fish then,lucy has an aquarium with 212.0 fish and she wants to buy 68.0 more fish,lucy would have 280.0 fish then,"fish_premise = 212.0
buy_fish_premise = 68.0
fish_hypothesis = 280.0

def entailment_or_contradiction(fish_premise, buy_fish_premise, fish_hypothesis):
    # the hypothesis talks about the total number of fish, which can be computed from the entities in the premise
    total_fish_premise = fish_premise + buy_fish_premise
    # check if 'fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == fish_hypothesis

print(entailment_or_contradiction(fish_premise, buy_fish_premise, fish_hypothesis))
"
365,contradiction,,contradiction,Jessica found 8.0 seashells and she gave Joan 6.0 seashells,Jessica has 1.0 seashells left,jessica found 8.0 seashells and she gave joan 6.0 seashells,jessica has 1.0 seashells left,"found_seashells_premise = 8.0
given_seashells_premise = 6.0
left_seashells_hypothesis = 1.0

def entailment_or_contradiction(found_seashells_premise, given_seashells_premise, left_seashells_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    left_seashells_premise = found_seashells_premise - given_seashells_premise
    # check if 'left_seashells_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_seashells_premise == left_seashells_hypothesis

print(entailment_or_contradiction(found_seashells_premise, given_seashells_premise, left_seashells_hypothesis))
"
486,entailment,,entailment,Sally has 9.0 orange balloons and 4.0 blue balloons  and she found 2.0 more of the orange balloons ,Sally has 11.0 orange balloons now,sally has 9.0 orange balloons and 4.0 blue balloons and she found 2.0 more of the orange balloons,sally has 11.0 orange balloons now,"orange_balloons_initial_premise = 9.0
found_orange_balloons_premise = 2.0
orange_balloons_hypothesis = 11.0

def entailment_or_contradiction(orange_balloons_initial_premise, found_orange_balloons_premise, orange_balloons_hypothesis):
    # the hypothesis talks about the total number of orange balloons Sally has, which can be computed from the premise
    total_orange_balloons_premise = orange_balloons_initial_premise + found_orange_balloons_premise
    # check if 'orange_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_orange_balloons_premise == orange_balloons_hypothesis

print(entailment_or_contradiction(orange_balloons_initial_premise, found_orange_balloons_premise, orange_balloons_hypothesis))
"
427,contradiction,,contradiction,"A ship has 8723.0 tons of cargo and at the Bahamas, sailors unloaded 5973.0 tons of cargo",2754.0 tons of cargo is left on the ship,"a ship has 8723.0 tons of cargo and at the bahamas, sailors unloaded 5973.0 tons of cargo",2754.0 tons of cargo is left on the ship,"initial_cargo_premise = 8723.0
unloaded_cargo_premise = 5973.0
remaining_cargo_hypothesis = 2754.0

def entailment_or_contradiction(initial_cargo_premise, unloaded_cargo_premise, remaining_cargo_hypothesis):
    # compute the remaining cargo on the ship from the premise
    remaining_cargo_premise = initial_cargo_premise - unloaded_cargo_premise
    # check if 'remaining_cargo_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cargo_premise == remaining_cargo_hypothesis

print(entailment_or_contradiction(initial_cargo_premise, unloaded_cargo_premise, remaining_cargo_hypothesis))
"
528,entailment,,entailment,"In a school, there are 542.0 girls and 387.0 boys.",155.0 more girls are there compared to boys in that school,"in a school, there are 542.0 girls and 387.0 boys.",155.0 more girls are there compared to boys in that school,"girls_premise = 542.0
boys_premise = 387.0
more_girls_than_boys_hypothesis = 155.0

def entailment_or_contradiction(girls_premise, boys_premise, more_girls_than_boys_hypothesis):
    # the difference of girls and boys in the hypothesis can be computed from the entities in the premise
    difference_girls_boys_premise = girls_premise - boys_premise
    # check if 'more_girls_than_boys_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return difference_girls_boys_premise == more_girls_than_boys_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, more_girls_than_boys_hypothesis))
"
163,contradiction,,contradiction," Mrs. Heine is buying Valentine’s Day treats for her 2.0 dogs, and she wants to buy them 3.0 heart biscuits each",She needs 9.0 biscuits,"mrs. heine is buying valentine’s day treats for her 2.0 dogs, and she wants to buy them 3.0 heart biscuits each",she needs 9.0 biscuits,"dogs_premise = 2.0
biscuits_per_dog_premise = 3.0
total_biscuits_hypothesis = 9.0

def entailment_or_contradiction(dogs_premise, biscuits_per_dog_premise, total_biscuits_hypothesis):
    # The quantity in the hypothesis can be computed from the entities in the premise
    total_biscuits_premise = dogs_premise * biscuits_per_dog_premise
    # Check if 'total_biscuits_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_biscuits_premise == total_biscuits_hypothesis

print(entailment_or_contradiction(dogs_premise, biscuits_per_dog_premise, total_biscuits_hypothesis))
"
601,contradiction,,contradiction,There are 38.0 books on the shelf and Marta takes 10.0 books off the shelf,26.0 books are on the shelf now,there are 38.0 books on the shelf and marta takes 10.0 books off the shelf,26.0 books are on the shelf now,"books_premise = 38.0
books_taken_premise = 10.0
books_hypothesis = 26.0

def entailment_or_contradiction(books_premise, books_taken_premise, books_hypothesis):
    # the hypothesis talks about the number of books on the shelf after some were taken off, which can be computed from the premise
    remaining_books_premise = books_premise - books_taken_premise
    # check if 'books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_books_premise == books_hypothesis

print(entailment_or_contradiction(books_premise, books_taken_premise, books_hypothesis))
"
252,entailment,,entailment," Jazmin had 1209.0 dolls and Geraldine had 2186.0 dolls, and they put their dolls together",They would have 3395.0 dolls ,"jazmin had 1209.0 dolls and geraldine had 2186.0 dolls, and they put their dolls together",they would have 3395.0 dolls,"jazmin_dolls_premise = 1209.0
geraldine_dolls_premise = 2186.0
total_dolls_hypothesis = 3395.0

def entailment_or_contradiction(jazmin_dolls_premise, geraldine_dolls_premise, total_dolls_hypothesis):
    # the hypothesis talks about the total number of dolls, which can be computed from the premise
    total_dolls_premise = jazmin_dolls_premise + geraldine_dolls_premise
    # check if 'total_dolls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dolls_premise == total_dolls_hypothesis

print(entailment_or_contradiction(jazmin_dolls_premise, geraldine_dolls_premise, total_dolls_hypothesis))
"
229,contradiction,,contradiction, The farmer had 127.0 apples and he gave 88.0 apples to his neighbor,He has 35.0 apples now,the farmer had 127.0 apples and he gave 88.0 apples to his neighbor,he has 35.0 apples now,"apples_premise = 127.0
given_apples_premise = 88.0
remaining_apples_hypothesis = 35.0

def entailment_or_contradiction(apples_premise, given_apples_premise, remaining_apples_hypothesis):
    # The total remaining apples in the premise can be computed by subtracting the given apples from the total apples
    remaining_apples_premise = apples_premise - given_apples_premise
    # Check if the remaining apples from the premise equals the remaining apples from the hypothesis
    return remaining_apples_premise == remaining_apples_hypothesis

print(entailment_or_contradiction(apples_premise, given_apples_premise, remaining_apples_hypothesis))
"
409,contradiction,,contradiction,Jason has 676.0 Pokemon cards  and Alyssa bought Jason 224.0 new Pokemon cards ,Jason has 898.0 Pokemon cards now,jason has 676.0 pokemon cards and alyssa bought jason 224.0 new pokemon cards,jason has 898.0 pokemon cards now,"jason_cards_premise = 676.0
alyssa_bought_cards_premise = 224.0
jason_cards_hypothesis = 898.0

def entailment_or_contradiction(jason_cards_premise, alyssa_bought_cards_premise, jason_cards_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_cards_premise = jason_cards_premise + alyssa_bought_cards_premise
    # check if 'jason_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cards_premise == jason_cards_hypothesis

print(entailment_or_contradiction(jason_cards_premise, alyssa_bought_cards_premise, jason_cards_hypothesis))
"
312,entailment,,entailment,There are 43.0 pencils in the drawer and 19.0 pencils on the desk and Dan placed  16.0 more pencils on the desk,78.0 pencils are now there in total ,there are 43.0 pencils in the drawer and 19.0 pencils on the desk and dan placed 16.0 more pencils on the desk,78.0 pencils are now there in total,"pencils_drawer_premise = 43.0
pencils_desk_premise = 19.0
placed_pencils_premise = 16.0
total_pencils_hypothesis = 78.0

def entailment_or_contradiction(pencils_drawer_premise, pencils_desk_premise, placed_pencils_premise, total_pencils_hypothesis):
    # the total number of pencils can be computed from the entities in the premise
    total_pencils_premise = pencils_drawer_premise + pencils_desk_premise + placed_pencils_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencils_drawer_premise, pencils_desk_premise, placed_pencils_premise, total_pencils_hypothesis))
"
416,entailment,,entailment,Joan picked 43.0 apples from the orchard and Melanie gave Joan 27.0 more apples,Joan has 70.0 apples now,joan picked 43.0 apples from the orchard and melanie gave joan 27.0 more apples,joan has 70.0 apples now,"apples_picked_premise = 43.0
apples_received_premise = 27.0
total_apples_hypothesis = 70.0

def entailment_or_contradiction(apples_picked_premise, apples_received_premise, total_apples_hypothesis):
    # the hypothesis total number of apples can be computed from the entities in the premise
    total_apples_premise = apples_picked_premise + apples_received_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(apples_picked_premise, apples_received_premise, total_apples_hypothesis))
"
19,contradiction,,contradiction,A restaurant served 6.0 cakes during lunch and 9.0 during dinner today .,12.0 cakes were served today,a restaurant served 6.0 cakes during lunch and 9.0 during dinner today .,12.0 cakes were served today,"cakes_lunch_premise = 6.0
cakes_dinner_premise = 9.0
total_cakes_hypothesis = 12.0

def entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, total_cakes_hypothesis):
    # the total number of cakes served can be computed from the entities in the premise
    total_cakes_premise = cakes_lunch_premise + cakes_dinner_premise
    # check if 'total_cakes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cakes_premise == total_cakes_hypothesis

print(entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, total_cakes_hypothesis))
"
495,contradiction,,contradiction,Barbara has 18.0 candies and she uses 9.0,Barbara has 12.0 candies left,barbara has 18.0 candies and she uses 9.0,barbara has 12.0 candies left,"initial_candies_premise = 18.0
used_candies_premise = 9.0
remaining_candies_hypothesis = 12.0

def entailment_or_contradiction(initial_candies_premise, used_candies_premise, remaining_candies_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_candies_premise = initial_candies_premise - used_candies_premise
    # check if 'remaining_candies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_candies_premise == remaining_candies_hypothesis

print(entailment_or_contradiction(initial_candies_premise, used_candies_premise, remaining_candies_hypothesis))
"
471,contradiction,,contradiction,A restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch  and then the restaurant made 3.0 more hamburgers ,15.0 hamburgers were made ,a restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch and then the restaurant made 3.0 more hamburgers,15.0 hamburgers were made,"hamburgers_made_initially_premise = 9.0
hotdogs_made_premise = 4.0
additional_hamburgers_made_premise = 3.0
total_hamburgers_hypothesis = 15.0

def entailment_or_contradiction(hamburgers_made_initially_premise, hotdogs_made_premise, additional_hamburgers_made_premise, total_hamburgers_hypothesis):
    # the number of hamburgers made in the premise can be added to see if it matches the total in the hypothesis
    total_hamburgers_premise = hamburgers_made_initially_premise + additional_hamburgers_made_premise
    # check if 'total_hamburgers_premise' entails the quantity in the hypothesis, so if they are equal
    return total_hamburgers_premise == total_hamburgers_hypothesis

print(entailment_or_contradiction(hamburgers_made_initially_premise, hotdogs_made_premise, additional_hamburgers_made_premise, total_hamburgers_hypothesis))
"
248,entailment,,entailment, Lansing has 25.0 elementary schools and there are 247.0 students in each school,6175.0 elementary students are there altogether in Lansing,lansing has 25.0 elementary schools and there are 247.0 students in each school,6175.0 elementary students are there altogether in lansing,"schools_premise = 25.0
students_per_school_premise = 247.0
total_students_hypothesis = 6175.0

def entailment_or_contradiction(schools_premise, students_per_school_premise, total_students_hypothesis):
    # the hypothesis talks about the total number of students, which can be computed from the quantities in the premise
    total_students_premise = schools_premise * students_per_school_premise
    # check if 'total_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(schools_premise, students_per_school_premise, total_students_hypothesis))
"
21,contradiction,,contradiction,Fred had 7.0 dimes in his bank  and his sister borrowed 3.0 of his dimes ,Fred has 6.0 dimes now,fred had 7.0 dimes in his bank and his sister borrowed 3.0 of his dimes,fred has 6.0 dimes now,"initial_dimes_premise = 7.0
borrowed_dimes_premise = 3.0
final_dimes_hypothesis = 6.0

def entailment_or_contradiction(initial_dimes_premise, borrowed_dimes_premise, final_dimes_hypothesis):
    # the entity in the hypothesis can be computed by subtracting borrowed_dimes_premise from initial_dimes_premise
    final_dimes_premise = initial_dimes_premise - borrowed_dimes_premise
    # check if 'final_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return final_dimes_premise == final_dimes_hypothesis

print(entailment_or_contradiction(initial_dimes_premise, borrowed_dimes_premise, final_dimes_hypothesis))
"
660,entailment,,entailment,"219.0 people are going to the zoo, and there are 3.0 tasty sandwiches made ready for each person's lunch.",657.0 sandwiches are prepared in total,"219.0 people are going to the zoo, and there are 3.0 tasty sandwiches made ready for each person's lunch.",657.0 sandwiches are prepared in total,"people_premise = 219.0
sandwiches_per_person_premise = 3.0
total_sandwiches_hypothesis = 657.0

def entailment_or_contradiction(people_premise, sandwiches_per_person_premise, total_sandwiches_hypothesis):
    # the total number of sandwiches in the hypothesis can be computed from the entities in the premise
    total_sandwiches_premise = people_premise * sandwiches_per_person_premise
    # check if 'total_sandwiches_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_sandwiches_premise == total_sandwiches_hypothesis

print(entailment_or_contradiction(people_premise, sandwiches_per_person_premise, total_sandwiches_hypothesis))
"
184,entailment,,entailment," Mark has 13.0 trees in his backyard, and he plants 12.0 more",He will have 25.0 trees ,"mark has 13.0 trees in his backyard, and he plants 12.0 more",he will have 25.0 trees,"trees_initial_premise = 13.0
trees_planted_premise = 12.0
total_trees_hypothesis = 25.0

def entailment_or_contradiction(trees_initial_premise, trees_planted_premise, total_trees_hypothesis):
    # the total number of trees can be computed from the entities in the premise
    total_trees_premise = trees_initial_premise + trees_planted_premise
    # check if 'total_trees_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_trees_premise == total_trees_hypothesis

print(entailment_or_contradiction(trees_initial_premise, trees_planted_premise, total_trees_hypothesis))
"
670,entailment,,entailment,A book store had 41.0 books in the bargin bin and they then sort out 2.0 books off the bin and sold 33.0 books,6.0 books would now be in the bin,a book store had 41.0 books in the bargin bin and they then sort out 2.0 books off the bin and sold 33.0 books,6.0 books would now be in the bin,"initial_books_premise = 41.0
sorted_books_premise = 2.0
sold_books_premise = 33.0
remaining_books_hypothesis = 6.0

def entailment_or_contradiction(initial_books_premise, sorted_books_premise, sold_books_premise, remaining_books_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    remaining_books_premise = initial_books_premise - sorted_books_premise - sold_books_premise
    # check if 'remaining_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_books_premise == remaining_books_hypothesis

print(entailment_or_contradiction(initial_books_premise, sorted_books_premise, sold_books_premise, remaining_books_hypothesis))
"
213,contradiction,,contradiction, There are 84.0 leaves and there are 139.0 ladybugs on each leaf,11678.0 ladybugs are there in all,there are 84.0 leaves and there are 139.0 ladybugs on each leaf,11678.0 ladybugs are there in all,"leaves_premise = 84.0
ladybugs_per_leaf_premise = 139.0
total_ladybugs_hypothesis = 11678.0

def entailment_or_contradiction(leaves_premise, ladybugs_per_leaf_premise, total_ladybugs_hypothesis):
    # the total number of ladybugs can be computed from the entities in the premise
    total_ladybugs_premise = leaves_premise * ladybugs_per_leaf_premise
    # check if 'total_ladybugs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_ladybugs_premise == total_ladybugs_hypothesis

print(entailment_or_contradiction(leaves_premise, ladybugs_per_leaf_premise, total_ladybugs_hypothesis))
"
251,contradiction,,contradiction, There are 14240.0 books in a library and they are arranged on shelves that hold 8.0 books each,1779.0 shelves are in the library,there are 14240.0 books in a library and they are arranged on shelves that hold 8.0 books each,1779.0 shelves are in the library,"books_premise = 14240.0
books_per_shelf_premise = 8.0
shelves_hypothesis = 1779.0

def entailment_or_contradiction(books_premise, books_per_shelf_premise, shelves_hypothesis):
    # the hypothesis talks about the number of shelves, this can be computed from the premise
    total_shelves_premise = books_premise / books_per_shelf_premise
    # check if 'shelves_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_shelves_premise == shelves_hypothesis

print(entailment_or_contradiction(books_premise, books_per_shelf_premise, shelves_hypothesis))
"
344,entailment,,entailment,"Shannon, Brenda’s neighbor, joined Brenda in making bracelets and she brought 48.0 heart-shaped stones and wanted to have 8.0 of this type of stone in each of the bracelet she makes",Shannon can make 6.0 bracelets with heart-shaped stones,"shannon, brenda’s neighbor, joined brenda in making bracelets and she brought 48.0 heart-shaped stones and wanted to have 8.0 of this type of stone in each of the bracelet she makes",shannon can make 6.0 bracelets with heart-shaped stones,"stones_brought_premise = 48.0
stones_per_bracelet_premise = 8.0
bracelets_hypothesis = 6.0

def entailment_or_contradiction(stones_brought_premise, stones_per_bracelet_premise, bracelets_hypothesis):
    # the number of bracelets Shannon can make can be computed from the number of stones she brought and the number of stones per bracelet
    bracelets_premise = stones_brought_premise / stones_per_bracelet_premise
    # check if 'bracelets_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bracelets_premise == bracelets_hypothesis

print(entailment_or_contradiction(stones_brought_premise, stones_per_bracelet_premise, bracelets_hypothesis))
"
378,entailment,,entailment,There are 14.0 rulers and 34.0 crayons in a drawer and Tim takes out 11.0 rulers from the drawer,3.0 rulers are now in the drawer,there are 14.0 rulers and 34.0 crayons in a drawer and tim takes out 11.0 rulers from the drawer,3.0 rulers are now in the drawer,"rulers_premise = 14.0
taken_rulers_premise = 11.0
rulers_hypothesis = 3.0

def entailment_or_contradiction(rulers_premise, taken_rulers_premise, rulers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_rulers_premise = rulers_premise - taken_rulers_premise
    # check if 'rulers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_rulers_premise == rulers_hypothesis

print(entailment_or_contradiction(rulers_premise, taken_rulers_premise, rulers_hypothesis))
"
546,entailment,,entailment,Mrs. Sheridan has 47.0 fish and she gave her sister 22.0 fish,She has 25.0 fish now,mrs. sheridan has 47.0 fish and she gave her sister 22.0 fish,she has 25.0 fish now,"initial_fish_premise = 47.0
given_fish_premise = 22.0
total_fish_hypothesis = 25.0

def entailment_or_contradiction(initial_fish_premise, given_fish_premise, total_fish_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_fish_premise = initial_fish_premise - given_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, given_fish_premise, total_fish_hypothesis))
"
133,contradiction,,contradiction, 2.0 beavers were working on their home and 1.0 went for a swim,0.0 beavers are still working on their home,2.0 beavers were working on their home and 1.0 went for a swim,0.0 beavers are still working on their home,"working_beavers_premise = 2.0
swimming_beavers_premise = 1.0
working_beavers_hypothesis = 0.0

def entailment_or_contradiction(working_beavers_premise, swimming_beavers_premise, working_beavers_hypothesis):
    # the number of beavers working according to the hypothesis can be computed from the numbers in the premise
    # calculate the number of beavers still working after one went for a swim
    working_beavers_after_swim_premise = working_beavers_premise - swimming_beavers_premise
    # check if the number of working beavers according to the hypothesis matches the calculated number
    return working_beavers_after_swim_premise == working_beavers_hypothesis

print(entailment_or_contradiction(working_beavers_premise, swimming_beavers_premise, working_beavers_hypothesis))
"
275,contradiction,,contradiction," A florist had 37.0 roses, and she sold 16.0 of them and then later picked 19.0 more",She would have 38.0 roses ,"a florist had 37.0 roses, and she sold 16.0 of them and then later picked 19.0 more",she would have 38.0 roses,"initial_roses_premise = 37.0
sold_roses_premise = 16.0
picked_roses_premise = 19.0
total_roses_hypothesis = 38.0

def entailment_or_contradiction(initial_roses_premise, sold_roses_premise, picked_roses_premise, total_roses_hypothesis):
    # the hypothesis talks about the total number of roses, which can be computed from the premise
    total_roses_premise = initial_roses_premise - sold_roses_premise + picked_roses_premise
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, sold_roses_premise, picked_roses_premise, total_roses_hypothesis))
"
189,contradiction,,contradiction, Randy has 78.0 blocks and he uses 19.0 blocks to build a tower,63.0 blocks are left,randy has 78.0 blocks and he uses 19.0 blocks to build a tower,63.0 blocks are left,"blocks_randy_premise = 78.0
blocks_used_premise = 19.0
blocks_left_hypothesis = 63.0

def entailment_or_contradiction(blocks_randy_premise, blocks_used_premise, blocks_left_hypothesis):
    # the hypothesis talks about the number of blocks left, which can be computed from the entities in the premise
    blocks_left_premise = blocks_randy_premise - blocks_used_premise
    # check if 'blocks_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return blocks_left_premise == blocks_left_hypothesis

print(entailment_or_contradiction(blocks_randy_premise, blocks_used_premise, blocks_left_hypothesis))
"
78,entailment,,entailment,A restaurant served 7.0 slices of pie during lunch and 5.0 during dinner today  and it served 8.0 of them yesterday ,12.0 slices of pie were served today ,a restaurant served 7.0 slices of pie during lunch and 5.0 during dinner today and it served 8.0 of them yesterday,12.0 slices of pie were served today,"slices_lunch_today_premise = 7.0
slices_dinner_today_premise = 5.0
slices_served_today_hypothesis = 12.0

def entailment_or_contradiction(slices_lunch_today_premise, slices_dinner_today_premise, slices_served_today_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_slices_served_today_premise = slices_lunch_today_premise + slices_dinner_today_premise
    # check if 'slices_served_today_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_slices_served_today_premise == slices_served_today_hypothesis

print(entailment_or_contradiction(slices_lunch_today_premise, slices_dinner_today_premise, slices_served_today_hypothesis))
"
256,entailment,,entailment, Ceasar needs to read a 563.0 page book for school and he has already read 147.0 pages,Ceasar has 416.0 pages left,ceasar needs to read a 563.0 page book for school and he has already read 147.0 pages,ceasar has 416.0 pages left,"total_pages_premise = 563.0
read_pages_premise = 147.0
remaining_pages_hypothesis = 416.0

def entailment_or_contradiction(total_pages_premise, read_pages_premise, remaining_pages_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_pages_premise = total_pages_premise - read_pages_premise
    # check if 'remaining_pages_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_pages_premise == remaining_pages_hypothesis

print(entailment_or_contradiction(total_pages_premise, read_pages_premise, remaining_pages_hypothesis))
"
418,entailment,,entailment,There are 46.0 rulers in the drawer and Tim put 25.0 more rulers into the drawer,71.0 rulers are now in the drawer,there are 46.0 rulers in the drawer and tim put 25.0 more rulers into the drawer,71.0 rulers are now in the drawer,"rulers_drawer_premise = 46.0
added_rulers_premise = 25.0
total_rulers_hypothesis = 71.0

def entailment_or_contradiction(rulers_drawer_premise, added_rulers_premise, total_rulers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_rulers_premise = rulers_drawer_premise + added_rulers_premise
    # check if 'total_rulers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_rulers_premise == total_rulers_hypothesis

print(entailment_or_contradiction(rulers_drawer_premise, added_rulers_premise, total_rulers_hypothesis))
"
529,contradiction,,contradiction,"In a school, there are 542.0 girls and 387.0 boys.",154.0 more girls are there compared to boys in that school,"in a school, there are 542.0 girls and 387.0 boys.",154.0 more girls are there compared to boys in that school,"girls_premise = 542.0
boys_premise = 387.0
diff_girls_boys_hypothesis = 154.0

def entailment_or_contradiction(girls_premise, boys_premise, diff_girls_boys_hypothesis):
    # the hypothesis talks about the difference between girls and boys, which can be computed from the premise
    diff_girls_boys_premise = girls_premise - boys_premise
    # check if 'diff_girls_boys_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return diff_girls_boys_hypothesis == diff_girls_boys_premise

print(entailment_or_contradiction(girls_premise, boys_premise, diff_girls_boys_hypothesis))
"
322,entailment,,entailment,Nancy has 7.0 black balloons and Mary has 4.0 times more  black balloons than Nancy,Mary has 28.0 black balloons now,nancy has 7.0 black balloons and mary has 4.0 times more black balloons than nancy,mary has 28.0 black balloons now,"nancy_balloons_premise = 7.0
mary_multiplier_premise = 4.0
mary_balloons_hypothesis = 28.0

def entailment_or_contradiction(nancy_balloons_premise, mary_multiplier_premise, mary_balloons_hypothesis):
    # calculate the number of balloons Mary has based on the information in the premise
    mary_balloons_premise = nancy_balloons_premise * mary_multiplier_premise
    # check if the number of balloons Mary has according to the hypothesis is the same as the one calculated from the premise
    return mary_balloons_premise == mary_balloons_hypothesis

print(entailment_or_contradiction(nancy_balloons_premise, mary_multiplier_premise, mary_balloons_hypothesis))
"
57,contradiction,,contradiction,"1.0 evening , a restaurant served a total of 0.5 loaf of wheat bread and 0.4 loaf of white bread .",1.2 loaves were served in all,"1.0 evening , a restaurant served a total of 0.5 loaf of wheat bread and 0.4 loaf of white bread .",1.2 loaves were served in all,"wheat_bread_premise = 0.5
white_bread_premise = 0.4
total_bread_hypothesis = 1.2

def entailment_or_contradiction(wheat_bread_premise, white_bread_premise, total_bread_hypothesis):
    # the total bread served can be computed by adding the wheat and white bread served
    total_bread_premise = wheat_bread_premise + white_bread_premise
    # check if 'total_bread_hypothesis' contradicts or entails the quantity deduced from the premise, so if they are equal
    return total_bread_premise == total_bread_hypothesis

print(entailment_or_contradiction(wheat_bread_premise, white_bread_premise, total_bread_hypothesis))
"
151,contradiction,,contradiction, There are 12.0 birds on the fence and 8.0 more birds land on the fence,16.0 birds are on the fence,there are 12.0 birds on the fence and 8.0 more birds land on the fence,16.0 birds are on the fence,"birds_on_fence_premise = 12.0
birds_landed_premise = 8.0
total_birds_hypothesis = 16.0

def entailment_or_contradiction(birds_on_fence_premise, birds_landed_premise, total_birds_hypothesis):
    # The total birds on the fence in the premise can be computed by adding the ones that were there with the ones that landed
    total_birds_premise = birds_on_fence_premise + birds_landed_premise
    # Check if the total in the hypothesis is equal to the total computed from the premise
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(birds_on_fence_premise, birds_landed_premise, total_birds_hypothesis))
"
15,contradiction,,contradiction,"Joan picked 37.0 oranges, and Sara picked 10.0 oranges  and Alyssa picked 30.0 pears ",48.0 oranges were picked in total ,"joan picked 37.0 oranges, and sara picked 10.0 oranges and alyssa picked 30.0 pears",48.0 oranges were picked in total,"joan_oranges_premise = 37.0
sara_oranges_premise = 10.0
total_oranges_hypothesis = 48.0

def entailment_or_contradiction(joan_oranges_premise, sara_oranges_premise, total_oranges_hypothesis):
    # the total number of oranges can be computed from the premise
    total_oranges_premise = joan_oranges_premise + sara_oranges_premise
    # check if 'total_oranges_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_oranges_premise == total_oranges_hypothesis

print(entailment_or_contradiction(joan_oranges_premise, sara_oranges_premise, total_oranges_hypothesis))
"
220,entailment,,entailment, Mr. Guzman bought 48.0 doughnuts packed equally into 4.0 boxes.,12.0 doughnuts were in each box,mr. guzman bought 48.0 doughnuts packed equally into 4.0 boxes.,12.0 doughnuts were in each box,"doughnuts_premise = 48.0
boxes_premise = 4.0
doughnuts_per_box_hypothesis = 12.0

def entailment_or_contradiction(doughnuts_premise, boxes_premise, doughnuts_per_box_hypothesis):
    # the hypothesis talks about the number of doughnuts in each box, which can be computed from the premise
    doughnuts_per_box_premise = doughnuts_premise / boxes_premise
    # check if 'doughnuts_per_box_hypothesis' matches the quantity deduced from the premise, so if they are equal
    return doughnuts_per_box_premise == doughnuts_per_box_hypothesis

print(entailment_or_contradiction(doughnuts_premise, boxes_premise, doughnuts_per_box_hypothesis))
"
392,entailment,,entailment,A restaurant serves 6.0 cakes during lunch and 9.0 during dinner today.,3.0 more cakes are served during dinner than lunch,a restaurant serves 6.0 cakes during lunch and 9.0 during dinner today.,3.0 more cakes are served during dinner than lunch,"cakes_lunch_premise = 6.0
cakes_dinner_premise = 9.0
more_cakes_dinner_hypothesis = 3.0

def entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, more_cakes_dinner_hypothesis):
    # the hypothesis talks about the difference in the number of cakes served during lunch and dinner, which can be computed from the premise
    difference_cakes_premise = cakes_dinner_premise - cakes_lunch_premise
    # check if 'more_cakes_dinner_hypothesis' entails the difference deduced from the premise, so if they are equal
    return difference_cakes_premise == more_cakes_dinner_hypothesis

print(entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, more_cakes_dinner_hypothesis))
"
589,contradiction,,contradiction,Connie had 73 marbles and she gave 70.0 to Juan,Connie has 4.0 marbles now,connie had 73 marbles and she gave 70.0 to juan,connie has 4.0 marbles now,"initial_marbles_premise = 73
gave_marbles_premise = 70.0
remaining_marbles_hypothesis = 4.0

def entailment_or_contradiction(initial_marbles_premise, gave_marbles_premise, remaining_marbles_hypothesis):
    # the premise provides information about the initial marbles and the ones given away
    # compute the remaining marbles as per the premise
    remaining_marbles_premise = initial_marbles_premise - gave_marbles_premise
    # check if the remaining marbles according to the premise matches with the hypothesis
    return remaining_marbles_premise == remaining_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_premise, gave_marbles_premise, remaining_marbles_hypothesis))
"
434,entailment,,entailment,"Abe 's family moved from the Bahamas to Japan , so they had convert their money into Japanese yen  and their checking account  had 6359.0 yen, and he has spent 3485.0 yen since then ",They have 2874.0 yen left,"abe 's family moved from the bahamas to japan , so they had convert their money into japanese yen and their checking account had 6359.0 yen, and he has spent 3485.0 yen since then",they have 2874.0 yen left,"initial_yen_premise = 6359.0
spent_yen_premise = 3485.0
remaining_yen_hypothesis = 2874.0

def entailment_or_contradiction(initial_yen_premise, spent_yen_premise, remaining_yen_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    remaining_yen_premise = initial_yen_premise - spent_yen_premise
    # check if 'remaining_yen_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_yen_premise == remaining_yen_hypothesis

print(entailment_or_contradiction(initial_yen_premise, spent_yen_premise, remaining_yen_hypothesis))
"
597,contradiction,,contradiction,Adolfo made a tower with 35.0 blocks and he added 65.0 more blocks to the tower,101.0 total blocks are in the tower now,adolfo made a tower with 35.0 blocks and he added 65.0 more blocks to the tower,101.0 total blocks are in the tower now,"blocks_initial_premise = 35.0
blocks_added_premise = 65.0
total_blocks_hypothesis = 101.0

def entailment_or_contradiction(blocks_initial_premise, blocks_added_premise, total_blocks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_blocks_premise = blocks_initial_premise + blocks_added_premise
    # check if 'total_blocks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_blocks_premise == total_blocks_hypothesis

print(entailment_or_contradiction(blocks_initial_premise, blocks_added_premise, total_blocks_hypothesis))
"
621,contradiction,,contradiction,I want to put 20.0 gallons of gas into 5.0 gallon gas cans.,I need 3.0 gas cans,i want to put 20.0 gallons of gas into 5.0 gallon gas cans.,i need 3.0 gas cans,"gas_premise = 20.0
can_capacity_premise = 5.0
cans_needed_hypothesis = 3.0

def entailment_or_contradiction(gas_premise, can_capacity_premise, cans_needed_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    cans_needed_premise = gas_premise / can_capacity_premise
    # check if 'cans_needed_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return cans_needed_premise == cans_needed_hypothesis

print(entailment_or_contradiction(gas_premise, can_capacity_premise, cans_needed_hypothesis))
"
487,contradiction,,contradiction,Sally has 9.0 orange balloons and 4.0 blue balloons  and she found 2.0 more of the orange balloons ,Sally has 13.0 orange balloons now,sally has 9.0 orange balloons and 4.0 blue balloons and she found 2.0 more of the orange balloons,sally has 13.0 orange balloons now,"orange_balloons_premise = 9.0
found_orange_balloons_premise = 2.0
orange_balloons_hypothesis = 13.0

def entailment_or_contradiction(orange_balloons_premise, found_orange_balloons_premise, orange_balloons_hypothesis):
    # the total number of orange balloons can be computed from the premise
    total_orange_balloons_premise = orange_balloons_premise + found_orange_balloons_premise
    # check if 'orange_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_orange_balloons_premise == orange_balloons_hypothesis

print(entailment_or_contradiction(orange_balloons_premise, found_orange_balloons_premise, orange_balloons_hypothesis))
"
526,entailment,,entailment,Lucy went to the grocery store and she bought 16.0 packs of cookies and ate 12.0 packs of them,She has 4.0 packs of cookies left,lucy went to the grocery store and she bought 16.0 packs of cookies and ate 12.0 packs of them,she has 4.0 packs of cookies left,"bought_cookies_premise = 16.0
eaten_cookies_premise = 12.0
left_cookies_hypothesis = 4.0

def entailment_or_contradiction(bought_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis):
    # the hypothesis talks about the number of cookies left, which can be computed from the premise
    left_cookies_premise = bought_cookies_premise - eaten_cookies_premise
    # check if 'left_cookies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_cookies_premise == left_cookies_hypothesis

print(entailment_or_contradiction(bought_cookies_premise, eaten_cookies_premise, left_cookies_hypothesis))
"
212,entailment,,entailment, There are 84.0 leaves and there are 139.0 ladybugs on each leaf,11676.0 ladybugs are there in all,there are 84.0 leaves and there are 139.0 ladybugs on each leaf,11676.0 ladybugs are there in all,"leaves_premise = 84.0
ladybugs_per_leaf_premise = 139.0
total_ladybugs_hypothesis = 11676.0

def entailment_or_contradiction(leaves_premise, ladybugs_per_leaf_premise, total_ladybugs_hypothesis):
    # compute the total number of ladybugs from the premise
    total_ladybugs_premise = leaves_premise * ladybugs_per_leaf_premise
    # check if 'total_ladybugs_hypothesis' is equal to the quantity deduced from the premise
    return total_ladybugs_premise == total_ladybugs_hypothesis

print(entailment_or_contradiction(leaves_premise, ladybugs_per_leaf_premise, total_ladybugs_hypothesis))
"
116,entailment,,entailment,Teresa jogged 25.0 kilometers at 5.0 kilometers per hour,Teresa jogged for 5.0 hours,teresa jogged 25.0 kilometers at 5.0 kilometers per hour,teresa jogged for 5.0 hours,"distance_premise = 25.0
speed_premise = 5.0
time_hypothesis = 5.0

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the time Teresa jogged can be computed from the entities in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the time deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
624,entailment,,entailment,3.0 cars with 63.0 people each are going to the zoo.,189.0 people are going to the zoo,3.0 cars with 63.0 people each are going to the zoo.,189.0 people are going to the zoo,"cars_premise = 3.0
people_per_car_premise = 63.0
total_people_hypothesis = 189.0

def entailment_or_contradiction(cars_premise, people_per_car_premise, total_people_hypothesis):
    # the total number of people can be computed from the number of cars and the number of people per car
    total_people_premise = cars_premise * people_per_car_premise
    # check if 'total_people_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(cars_premise, people_per_car_premise, total_people_hypothesis))
"
410,entailment,,entailment,Jason had 9.0 Pokemon cards  and he gave 4.0 to his friends ,He has 5.0 Pokemon cards now,jason had 9.0 pokemon cards and he gave 4.0 to his friends,he has 5.0 pokemon cards now,"cards_initially_premise = 9.0
cards_given_premise = 4.0
cards_left_hypothesis = 5.0

def entailment_or_contradiction(cards_initially_premise, cards_given_premise, cards_left_hypothesis):
    # the hypothesis talks about the number of Pokemon cards left, which can be computed from the premise
    cards_left_premise = cards_initially_premise - cards_given_premise
    # check if 'cards_left_hypothesis' equals the quantity deduced from the premise
    return cards_left_premise == cards_left_hypothesis

print(entailment_or_contradiction(cards_initially_premise, cards_given_premise, cards_left_hypothesis))
"
315,contradiction,,contradiction,"There were a total of 27.0 soccer games during the 3.0 month season, and the games are equally divided",7.0 soccer games are played a month,"there were a total of 27.0 soccer games during the 3.0 month season, and the games are equally divided",7.0 soccer games are played a month,"total_games_premise = 27.0
months_premise = 3.0
games_per_month_hypothesis = 7.0

def entailment_or_contradiction(total_games_premise, months_premise, games_per_month_hypothesis):
    # the hypothesis talks about the number of games per month, which can be calculated from the premise
    games_per_month_premise = total_games_premise / months_premise
    # check if 'games_per_month_hypothesis' contradicts the quantity deduced from the premise
    return games_per_month_premise == games_per_month_hypothesis

print(entailment_or_contradiction(total_games_premise, months_premise, games_per_month_hypothesis))
"
6,entailment,,entailment,"Benny picked 2.0 apples, and Dan picked 9.0 apples from the apple tree .",11.0 apples were picked in total,"benny picked 2.0 apples, and dan picked 9.0 apples from the apple tree .",11.0 apples were picked in total,"benny_apples_premise = 2.0
dan_apples_premise = 9.0
total_apples_hypothesis = 11.0

def entailment_or_contradiction(benny_apples_premise, dan_apples_premise, total_apples_hypothesis):
    # the total number of apples picked can be calculated by adding the apples picked by Benny and Dan
    total_apples_premise = benny_apples_premise + dan_apples_premise
    # check if the total number of apples picked as per the hypothesis matches with the premise
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(benny_apples_premise, dan_apples_premise, total_apples_hypothesis))
"
136,entailment,,entailment, There are 4.0 squirrels in a tree with 2.0 nuts.,There are 2.0 more squirrels than nuts,there are 4.0 squirrels in a tree with 2.0 nuts.,there are 2.0 more squirrels than nuts,"squirrels_premise = 4.0
nuts_premise = 2.0
more_squirrels_than_nuts_hypothesis = 2.0

def entailment_or_contradiction(squirrels_premise, nuts_premise, more_squirrels_than_nuts_hypothesis):
    # the difference between the number of squirrels and nuts from the premise should be the same as the difference mentioned in the hypothesis
    difference_premise = squirrels_premise - nuts_premise
    # check if 'more_squirrels_than_nuts_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return difference_premise == more_squirrels_than_nuts_hypothesis

print(entailment_or_contradiction(squirrels_premise, nuts_premise, more_squirrels_than_nuts_hypothesis))
"
120,entailment,,entailment,Heather bicycled 40.0 kilometers at 8.0 kilometers per hour,Heather bicycled for 5.0 hours,heather bicycled 40.0 kilometers at 8.0 kilometers per hour,heather bicycled for 5.0 hours,"distance_premise = 40.0
speed_premise = 8.0
time_hypothesis = 5.0

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the time in the hypothesis can be computed from the distances and speed in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the time deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
162,entailment,,entailment," Mrs. Heine is buying Valentine’s Day treats for her 2.0 dogs, and she wants to buy them 3.0 heart biscuits each",She needs 6.0 biscuits,"mrs. heine is buying valentine’s day treats for her 2.0 dogs, and she wants to buy them 3.0 heart biscuits each",she needs 6.0 biscuits,"dogs_premise = 2.0
biscuits_per_dog_premise = 3.0
total_biscuits_hypothesis = 6.0

def entailment_or_contradiction(dogs_premise, biscuits_per_dog_premise, total_biscuits_hypothesis):
    # The total number of biscuits can be calculated from the number of dogs and the number of biscuits per dog
    total_biscuits_premise = dogs_premise * biscuits_per_dog_premise
    # Check if the calculated total biscuits from the premise is equal to the total biscuits in the hypothesis
    return total_biscuits_premise == total_biscuits_hypothesis

print(entailment_or_contradiction(dogs_premise, biscuits_per_dog_premise, total_biscuits_hypothesis))
"
99,contradiction,,contradiction,The school is planning a field trip and there are 14.0 students and 2.0 seats on each school bus,4.0 buses are needed to take the trip,the school is planning a field trip and there are 14.0 students and 2.0 seats on each school bus,4.0 buses are needed to take the trip,"students_premise = 14.0
seats_per_bus_premise = 2.0
buses_hypothesis = 4.0

def entailment_or_contradiction(students_premise, seats_per_bus_premise, buses_hypothesis):
    # calculate the number of buses needed based on the premise
    buses_needed_premise = students_premise / seats_per_bus_premise
    # check if the number of buses from the hypothesis is equal to the number of buses needed based on the premise
    return buses_needed_premise == buses_hypothesis

print(entailment_or_contradiction(students_premise, seats_per_bus_premise, buses_hypothesis))
"
566,entailment,,entailment,25.0 children were riding on the bus and at the bus stop 18.0 children got on the bus,43.0 children are now riding on the bus ,25.0 children were riding on the bus and at the bus stop 18.0 children got on the bus,43.0 children are now riding on the bus,"children_bus_premise = 25.0
children_bus_stop_premise = 18.0
total_children_hypothesis = 43.0

def entailment_or_contradiction(children_bus_premise, children_bus_stop_premise, total_children_hypothesis):
    # total number of children can be computed by adding the number of children already on the bus and the number of children that got on the bus
    total_children_premise = children_bus_premise + children_bus_stop_premise
    # check if 'total_children_hypothesis' is equal to the computed total children from the premise
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(children_bus_premise, children_bus_stop_premise, total_children_hypothesis))
"
201,contradiction,,contradiction, The Ferris wheel in Paradise Park has 14.0 seats and each seat can hold 6.0 people,85.0 people can ride the Ferris wheel at the same time,the ferris wheel in paradise park has 14.0 seats and each seat can hold 6.0 people,85.0 people can ride the ferris wheel at the same time,"seats_ferris_wheel_premise = 14.0
people_per_seat_premise = 6.0
max_people_hypothesis = 85.0

def entailment_or_contradiction(seats_ferris_wheel_premise, people_per_seat_premise, max_people_hypothesis):
    # the total number of people that can ride the Ferris wheel at the same time can be computed from the entities in the premise
    total_people_premise = seats_ferris_wheel_premise * people_per_seat_premise
    # check if 'max_people_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_people_premise == max_people_hypothesis

print(entailment_or_contradiction(seats_ferris_wheel_premise, people_per_seat_premise, max_people_hypothesis))
"
209,contradiction,,contradiction, We ordered 21.0 pizzas and each pizza has 8.0 slices,164.0 slices of pizza are there altogether,we ordered 21.0 pizzas and each pizza has 8.0 slices,164.0 slices of pizza are there altogether,"ordered_pizzas_premise = 21.0
slices_per_pizza_premise = 8.0
total_slices_hypothesis = 164.0

def entailment_or_contradiction(ordered_pizzas_premise, slices_per_pizza_premise, total_slices_hypothesis):
    # the total number of slices can be calculated from the number of ordered pizzas and the number of slices per pizza
    total_slices_premise = ordered_pizzas_premise * slices_per_pizza_premise
    # check if the total number of slices from the hypothesis matches with the total slices calculated from the premise
    return total_slices_premise == total_slices_hypothesis

print(entailment_or_contradiction(ordered_pizzas_premise, slices_per_pizza_premise, total_slices_hypothesis))
"
46,entailment,,entailment,"Each year , salmon travel upstream , going from the ocean to the rivers where they were born  and this year , 712261.0 male and 259378.0 female salmon returned to their rivers ",971639.0 salmon made the trip ,"each year , salmon travel upstream , going from the ocean to the rivers where they were born and this year , 712261.0 male and 259378.0 female salmon returned to their rivers",971639.0 salmon made the trip,"male_salmon_premise = 712261.0
female_salmon_premise = 259378.0
total_salmon_hypothesis = 971639.0

def entailment_or_contradiction(male_salmon_premise, female_salmon_premise, total_salmon_hypothesis):
    # the total number of salmon in the hypothesis can be computed from the number of male and female salmon in the premise
    total_salmon_premise = male_salmon_premise + female_salmon_premise
    # check if 'total_salmon_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_salmon_premise == total_salmon_hypothesis

print(entailment_or_contradiction(male_salmon_premise, female_salmon_premise, total_salmon_hypothesis))
"
168,entailment,,entailment, There were 58.0 geese and 37.0 ducks in the marsh.,95.0 birds were there in all,there were 58.0 geese and 37.0 ducks in the marsh.,95.0 birds were there in all,"geese_premise = 58.0
ducks_premise = 37.0
total_birds_hypothesis = 95.0

def entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis):
    # the total number of birds in the hypothesis can be computed from the number of geese and ducks in the premise
    total_birds_premise = geese_premise + ducks_premise
    # check if 'total_birds_hypothesis' is equal to the quantity deduced from the premise
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, total_birds_hypothesis))
"
491,contradiction,,contradiction,Carol collects 5.0 peanuts and she gives her father 2.0,Carol has 1.0 peanuts left,carol collects 5.0 peanuts and she gives her father 2.0,carol has 1.0 peanuts left,"collected_peanuts_premise = 5.0
given_peanuts_premise = 2.0
remaining_peanuts_hypothesis = 1.0

def entailment_or_contradiction(collected_peanuts_premise, given_peanuts_premise, remaining_peanuts_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_peanuts_premise = collected_peanuts_premise - given_peanuts_premise
    # check if 'remaining_peanuts_hypothesis' contradicts the quantity deduced from the premise
    return remaining_peanuts_premise == remaining_peanuts_hypothesis

print(entailment_or_contradiction(collected_peanuts_premise, given_peanuts_premise, remaining_peanuts_hypothesis))
"
430,entailment,,entailment,"6522.0 liters  of oil,  minus 5165.0 liters of oil, leaked into the water from a broken oil pipe in the sea.",1357.0 liters of oil were leaked into the water,"6522.0 liters of oil, minus 5165.0 liters of oil, leaked into the water from a broken oil pipe in the sea.",1357.0 liters of oil were leaked into the water,"oil_premise1 = 6522.0
oil_premise2 = 5165.0
leaked_oil_hypothesis = 1357.0

def entailment_or_contradiction(oil_premise1, oil_premise2, leaked_oil_hypothesis):
    # the leaked oil in the hypothesis can be computed from the entities in the premise
    leaked_oil_premise = oil_premise1 - oil_premise2
    # check if 'leaked_oil_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return leaked_oil_premise == leaked_oil_hypothesis

print(entailment_or_contradiction(oil_premise1, oil_premise2, leaked_oil_hypothesis))
"
308,entailment,,entailment," A company invited 18.0 people to a luncheon, but 12.0 of them didn't show up, and the tables they had held 3.0 people each",They need 2.0 tables,"a company invited 18.0 people to a luncheon, but 12.0 of them didn't show up, and the tables they had held 3.0 people each",they need 2.0 tables,"invited_people_premise = 18.0
no_show_people_premise = 12.0
table_capacity_premise = 3.0
needed_tables_hypothesis = 2.0

def entailment_or_contradiction(invited_people_premise, no_show_people_premise, table_capacity_premise, needed_tables_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    attend_people_premise = invited_people_premise - no_show_people_premise
    needed_tables_premise = attend_people_premise / table_capacity_premise
    # check if 'needed_tables_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return needed_tables_premise == needed_tables_hypothesis

print(entailment_or_contradiction(invited_people_premise, no_show_people_premise, table_capacity_premise, needed_tables_hypothesis))
"
79,contradiction,,contradiction,A restaurant served 7.0 slices of pie during lunch and 5.0 during dinner today  and it served 8.0 of them yesterday ,11.0 slices of pie were served today ,a restaurant served 7.0 slices of pie during lunch and 5.0 during dinner today and it served 8.0 of them yesterday,11.0 slices of pie were served today,"lunch_pie_slices_premise = 7.0
dinner_pie_slices_premise = 5.0
total_pie_slices_hypothesis = 11.0

def entailment_or_contradiction(lunch_pie_slices_premise, dinner_pie_slices_premise, total_pie_slices_hypothesis):
    # the total number of pie slices served today can be computed from the entities in the premise
    total_pie_slices_premise = lunch_pie_slices_premise + dinner_pie_slices_premise
    # check if 'total_pie_slices_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pie_slices_premise == total_pie_slices_hypothesis

print(entailment_or_contradiction(lunch_pie_slices_premise, dinner_pie_slices_premise, total_pie_slices_hypothesis))
"
595,contradiction,,contradiction,There are 64.0 pigs in the barn and 86.0 more pigs come to join them,There are 149.0 pigs now,there are 64.0 pigs in the barn and 86.0 more pigs come to join them,there are 149.0 pigs now,"pigs_barn_premise = 64.0
pigs_join_premise = 86.0
total_pigs_hypothesis = 149.0

def entailment_or_contradiction(pigs_barn_premise, pigs_join_premise, total_pigs_hypothesis):
    # the total number of pigs can be computed from the numbers in the premise
    total_pigs_premise = pigs_barn_premise + pigs_join_premise
    # check if 'total_pigs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pigs_premise == total_pigs_hypothesis

print(entailment_or_contradiction(pigs_barn_premise, pigs_join_premise, total_pigs_hypothesis))
"
454,entailment,,entailment,A treasure hunter discovered a buried treasure chest filled with 5155.0 rubys and 45.0 diamonds.,5200.0 gems were there in total,a treasure hunter discovered a buried treasure chest filled with 5155.0 rubys and 45.0 diamonds.,5200.0 gems were there in total,"rubys_premise = 5155.0
diamonds_premise = 45.0
total_gems_hypothesis = 5200.0

def entailment_or_contradiction(rubys_premise, diamonds_premise, total_gems_hypothesis):
    # the total number of gems in the hypothesis can be computed from the number of rubys and diamonds in the premise
    total_gems_premise = rubys_premise + diamonds_premise
    # check if 'total_gems_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gems_premise == total_gems_hypothesis

print(entailment_or_contradiction(rubys_premise, diamonds_premise, total_gems_hypothesis))
"
72,entailment,,entailment,Melanie picked 7.0 plums and 4.0 oranges from the orchard  and she gave 3.0 plums to Sam ,She has 4.0 plums now,melanie picked 7.0 plums and 4.0 oranges from the orchard and she gave 3.0 plums to sam,she has 4.0 plums now,"picked_plums_premise = 7.0
given_plums_premise = 3.0
plums_hypothesis = 4.0

def entailment_or_contradiction(picked_plums_premise, given_plums_premise, plums_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_plums_premise = picked_plums_premise - given_plums_premise
    # check if 'plums_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_plums_premise == plums_hypothesis

print(entailment_or_contradiction(picked_plums_premise, given_plums_premise, plums_hypothesis))
"
313,contradiction,,contradiction,There are 43.0 pencils in the drawer and 19.0 pencils on the desk and Dan placed  16.0 more pencils on the desk,81.0 pencils are now there in total ,there are 43.0 pencils in the drawer and 19.0 pencils on the desk and dan placed 16.0 more pencils on the desk,81.0 pencils are now there in total,"pencils_drawer_premise = 43.0
pencils_desk_premise = 19.0
added_pencils_premise = 16.0
total_pencils_hypothesis = 81.0

def entailment_or_contradiction(pencils_drawer_premise, pencils_desk_premise, added_pencils_premise, total_pencils_hypothesis):
    # the hypothesis talks about the total number of pencils, which can be computed from the entities in the premise
    total_pencils_premise = pencils_drawer_premise + pencils_desk_premise + added_pencils_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencils_drawer_premise, pencils_desk_premise, added_pencils_premise, total_pencils_hypothesis))
"
181,contradiction,,contradiction, There are 38.0 books on the shelf and Marta put 10.0 more books on the shelf,52.0 books are on the shelf now,there are 38.0 books on the shelf and marta put 10.0 more books on the shelf,52.0 books are on the shelf now,"books_on_shelf_premise = 38.0
added_books_premise = 10.0
total_books_hypothesis = 52.0

def entailment_or_contradiction(books_on_shelf_premise, added_books_premise, total_books_hypothesis):
    # the total number of books on the shelf can be computed from the entities in the premise
    total_books_premise = books_on_shelf_premise + added_books_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(books_on_shelf_premise, added_books_premise, total_books_hypothesis))
"
337,contradiction,,contradiction,"The next act involved several jugglers, and each juggler is juggling 6.0 balls at a time",2272.0 balls are needed if there are 378.0 jugglers putting a show at the same time,"the next act involved several jugglers, and each juggler is juggling 6.0 balls at a time",2272.0 balls are needed if there are 378.0 jugglers putting a show at the same time,"balls_per_juggler_premise = 6.0
total_balls_hypothesis = 2272.0
total_jugglers_hypothesis = 378.0

def entailment_or_contradiction(balls_per_juggler_premise, total_balls_hypothesis, total_jugglers_hypothesis):
    # the total number of balls needed can be calculated from the premise by multiplying the number of balls each juggler needs by the total number of jugglers
    total_balls_premise = balls_per_juggler_premise * total_jugglers_hypothesis
    # check if 'total_balls_hypothesis' entails the quantity deduced from the premise
    return total_balls_premise == total_balls_hypothesis

print(entailment_or_contradiction(balls_per_juggler_premise, total_balls_hypothesis, total_jugglers_hypothesis))
"
609,contradiction,,contradiction,There were 58.0 geese and 37.0 ducks in the marsh.,16.0 more geese were in the marsh,there were 58.0 geese and 37.0 ducks in the marsh.,16.0 more geese were in the marsh,"geese_premise = 58.0
ducks_premise = 37.0
more_geese_hypothesis = 16.0

def entailment_or_contradiction(geese_premise, ducks_premise, more_geese_hypothesis):
    # The hypothesis implies a comparison between the number of geese and ducks in the marsh
    # Compute the difference between the number of geese and ducks from the premise
    geese_ducks_difference_premise = geese_premise - ducks_premise
    # Check if this difference matches the number of 'more_geese' in the hypothesis
    return geese_ducks_difference_premise == more_geese_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, more_geese_hypothesis))
"
119,contradiction,,contradiction,Benjamin skated 80.0 kilometers at 10.0 kilometers per hour,Benjamin skated for 10.0 hours,benjamin skated 80.0 kilometers at 10.0 kilometers per hour,benjamin skated for 10.0 hours,"distance_premise = 80.0
speed_premise = 10.0
time_hypothesis = 10.0

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the time that Benjamin was skating can be computed from the distance and speed in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
293,contradiction,,contradiction," Robin uploaded 35.0 pictures from her phone and 5.0 from her camera to facebook, and she sorted the pics into 5.0 different albums with the same amount of pics in each album",6.0 pictures were in each of the albums,"robin uploaded 35.0 pictures from her phone and 5.0 from her camera to facebook, and she sorted the pics into 5.0 different albums with the same amount of pics in each album",6.0 pictures were in each of the albums,"phone_pictures_premise = 35.0
camera_pictures_premise = 5.0
albums_premise = 5.0
pics_per_album_hypothesis = 6.0

def entailment_or_contradiction(phone_pictures_premise, camera_pictures_premise, albums_premise, pics_per_album_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_pictures_premise = phone_pictures_premise + camera_pictures_premise
    # calculate the number of pictures per album, as per the premise
    pics_per_album_premise = total_pictures_premise / albums_premise
    # check if 'pics_per_album_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pics_per_album_premise == pics_per_album_hypothesis

print(entailment_or_contradiction(phone_pictures_premise, camera_pictures_premise, albums_premise, pics_per_album_hypothesis))
"
627,contradiction,,contradiction,Marlee has 3.0 tables for her Halloween party and each table will hold 12.0 guests,She can invite 37.0 guests,marlee has 3.0 tables for her halloween party and each table will hold 12.0 guests,she can invite 37.0 guests,"tables_premise = 3.0
guests_per_table_premise = 12.0
total_guests_hypothesis = 37.0

def entailment_or_contradiction(tables_premise, guests_per_table_premise, total_guests_hypothesis):
    # the hypothesis talks about the total number of guests that can be invited, which can be computed from the quantities in the premise
    total_guests_premise = tables_premise * guests_per_table_premise
    # check if 'total_guests_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_guests_premise == total_guests_hypothesis

print(entailment_or_contradiction(tables_premise, guests_per_table_premise, total_guests_hypothesis))
"
480,entailment,,entailment,"Mike picked 7.0 apples , Nancy ate 3.0 apples , and Keith picked 6.0 apples and 4.0 pears , at the farm .",10.0 apples were left,"mike picked 7.0 apples , nancy ate 3.0 apples , and keith picked 6.0 apples and 4.0 pears , at the farm .",10.0 apples were left,"mike_apples_premise = 7.0
nancy_apples_premise = 3.0
keith_apples_premise = 6.0
left_apples_hypothesis = 10.0

def entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, left_apples_hypothesis):
    # the total number of apples in the premise can be calculated by adding what Mike and Keith picked and subtracting what Nancy ate
    total_apples_premise = mike_apples_premise + keith_apples_premise - nancy_apples_premise
    # check if the total number of apples left in the premise equals the number mentioned in the hypothesis
    return total_apples_premise == left_apples_hypothesis

print(entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, left_apples_hypothesis))
"
161,contradiction,,contradiction, Mrs. Sheridan has 22.0 fish and her sister gave her 47.0 more fish,She has 72.0 fish now,mrs. sheridan has 22.0 fish and her sister gave her 47.0 more fish,she has 72.0 fish now,"initial_fish_premise = 22.0
received_fish_premise = 47.0
total_fish_hypothesis = 72.0

def entailment_or_contradiction(initial_fish_premise, received_fish_premise, total_fish_hypothesis):
    # the total number of fish in the hypothesis can be calculated from the numbers in the premise
    total_fish_premise = initial_fish_premise + received_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, received_fish_premise, total_fish_hypothesis))
"
8,entailment,,entailment,"Melanie had 7.0 dimes in her bank  and her dad gave her 8.0 dimes, and her mother gave her 4.0 dimes ",Melanie has 19.0 dimes now,"melanie had 7.0 dimes in her bank and her dad gave her 8.0 dimes, and her mother gave her 4.0 dimes",melanie has 19.0 dimes now,"dimes_melanie_premise = 7.0
dimes_dad_premise = 8.0
dimes_mother_premise = 4.0
total_dimes_hypothesis = 19.0

def entailment_or_contradiction(dimes_melanie_premise, dimes_dad_premise, dimes_mother_premise, total_dimes_hypothesis):
    # the total dimes in the hypothesis can be computed from the entities in the premise
    total_dimes_premise = dimes_melanie_premise + dimes_dad_premise + dimes_mother_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(dimes_melanie_premise, dimes_dad_premise, dimes_mother_premise, total_dimes_hypothesis))
"
583,contradiction,,contradiction,Josh had 142.0 pencils and he got 31.0 pencils from Dorothy,Josh has 168.0 pencils now,josh had 142.0 pencils and he got 31.0 pencils from dorothy,josh has 168.0 pencils now,"pencils_initial_premise = 142.0
received_pencils_premise = 31.0
total_pencils_hypothesis = 168.0

def entailment_or_contradiction(pencils_initial_premise, received_pencils_premise, total_pencils_hypothesis):
    # the total number of pencils Josh has can be computed from the entities in the premise
    total_pencils_premise = pencils_initial_premise + received_pencils_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencils_initial_premise, received_pencils_premise, total_pencils_hypothesis))
"
468,entailment,,entailment,Sara had 100.0 pennies and 783.0 quarters in her bank  and her dad gave 271.0 quarters to Sara ,She has 1054.0 quarters now,sara had 100.0 pennies and 783.0 quarters in her bank and her dad gave 271.0 quarters to sara,she has 1054.0 quarters now,"quarters_initial_premise = 783.0
quarters_received_premise = 271.0
quarters_hypothesis = 1054.0

def entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, quarters_hypothesis):
    # the premise provides information about the initial number of quarters and the quantity received later
    # the total number of quarters can be computed by adding these two quantities
    total_quarters_premise = quarters_initial_premise + quarters_received_premise
    # check if 'quarters_hypothesis' entails the total quantity deduced from the premise, so if they are equal
    return total_quarters_premise == quarters_hypothesis

print(entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, quarters_hypothesis))
"
623,contradiction,,contradiction,We have a pile with 100.0 seeds in it and those seeds came from 4.0 watermelons,21.0 seeds were there in each watermelon,we have a pile with 100.0 seeds in it and those seeds came from 4.0 watermelons,21.0 seeds were there in each watermelon,"total_seeds_premise = 100.0
watermelons_premise = 4.0
seeds_per_watermelon_hypothesis = 21.0

def entailment_or_contradiction(total_seeds_premise, watermelons_premise, seeds_per_watermelon_hypothesis):
    # calculate the average number of seeds per watermelon from the premise
    seeds_per_watermelon_premise = total_seeds_premise / watermelons_premise
    # check if the average seeds per watermelon from the hypothesis matches with the premise
    return seeds_per_watermelon_premise == seeds_per_watermelon_hypothesis

print(entailment_or_contradiction(total_seeds_premise, watermelons_premise, seeds_per_watermelon_hypothesis))
"
453,contradiction,,contradiction,"A cell phone company has a total of 7422.0 customers across the world, and they get 723.0 more customers in the United States",They will have 8144.0 total customers ,"a cell phone company has a total of 7422.0 customers across the world, and they get 723.0 more customers in the united states",they will have 8144.0 total customers,"total_customers_premise = 7422.0
us_customers_premise = 723.0
total_customers_hypothesis = 8144.0

def entailment_or_contradiction(total_customers_premise, us_customers_premise, total_customers_hypothesis):
    # the total number of customers after getting 723.0 more customers can be computed from the entities in the premise
    total_customers_after_addition = total_customers_premise + us_customers_premise
    # check if 'total_customers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_customers_after_addition == total_customers_hypothesis

print(entailment_or_contradiction(total_customers_premise, us_customers_premise, total_customers_hypothesis))
"
567,contradiction,,contradiction,25.0 children were riding on the bus and at the bus stop 18.0 children got on the bus,39.0 children are now riding on the bus ,25.0 children were riding on the bus and at the bus stop 18.0 children got on the bus,39.0 children are now riding on the bus,"children_on_bus_premise = 25.0
children_got_on_premise = 18.0
children_on_bus_hypothesis = 39.0

def entailment_or_contradiction(children_on_bus_premise, children_got_on_premise, children_on_bus_hypothesis):
    # the hypothesis talks about the total number of children riding the bus, which can be calculated from the entities in the premise
    total_children_premise = children_on_bus_premise + children_got_on_premise
    # check if 'children_on_bus_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == children_on_bus_hypothesis

print(entailment_or_contradiction(children_on_bus_premise, children_got_on_premise, children_on_bus_hypothesis))
"
36,entailment,,entailment,A restaurant made 9.0 hamburgers to serve during lunch  and only 3.0 were actually served ,6.0 hamburgers were left over from lunch ,a restaurant made 9.0 hamburgers to serve during lunch and only 3.0 were actually served,6.0 hamburgers were left over from lunch,"made_hamburgers_premise = 9.0
served_hamburgers_premise = 3.0
leftover_hamburgers_hypothesis = 6.0

def entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    leftover_hamburgers_premise = made_hamburgers_premise - served_hamburgers_premise
    # check if 'leftover_hamburgers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return leftover_hamburgers_premise == leftover_hamburgers_hypothesis

print(entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis))
"
474,entailment,,entailment,There were 9.0 red orchids and 3.0 white orchids in the vase  and Sally cut 15.0 red orchids from her flower garden and put them in the vase ,24.0 red orchids are there now in the vase,there were 9.0 red orchids and 3.0 white orchids in the vase and sally cut 15.0 red orchids from her flower garden and put them in the vase,24.0 red orchids are there now in the vase,"red_orchids_premise = 9.0
cut_red_orchids_premise = 15.0
red_orchids_hypothesis = 24.0

def entailment_or_contradiction(red_orchids_premise, cut_red_orchids_premise, red_orchids_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_red_orchids_premise = red_orchids_premise + cut_red_orchids_premise
    # check if 'red_orchids_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_red_orchids_premise == red_orchids_hypothesis

print(entailment_or_contradiction(red_orchids_premise, cut_red_orchids_premise, red_orchids_hypothesis))
"
257,contradiction,,contradiction, Ceasar needs to read a 563.0 page book for school and he has already read 147.0 pages,Ceasar has 419.0 pages left,ceasar needs to read a 563.0 page book for school and he has already read 147.0 pages,ceasar has 419.0 pages left,"total_pages_premise = 563.0
read_pages_premise = 147.0
remaining_pages_hypothesis = 419.0

def entailment_or_contradiction(total_pages_premise, read_pages_premise, remaining_pages_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_pages_premise = total_pages_premise - read_pages_premise
    # check if 'remaining_pages_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_pages_premise == remaining_pages_hypothesis

print(entailment_or_contradiction(total_pages_premise, read_pages_premise, remaining_pages_hypothesis))
"
650,entailment,,entailment,There are 504.0 apples and it takes 4.0 apples to make 1.0 pie,There are 126.0 pies,there are 504.0 apples and it takes 4.0 apples to make 1.0 pie,there are 126.0 pies,"apples_premise = 504.0
apples_per_pie_premise = 4.0
pies_hypothesis = 126.0

def entailment_or_contradiction(apples_premise, apples_per_pie_premise, pies_hypothesis):
    # the hypothesis talks about the number of pies, which can be computed from the number of apples and the ratio of apples to pies
    pies_premise = apples_premise / apples_per_pie_premise
    # check if the number of pies deduced from the premise equals the number of pies in the hypothesis
    return pies_premise == pies_hypothesis

print(entailment_or_contradiction(apples_premise, apples_per_pie_premise, pies_hypothesis))
"
288,entailment,,entailment," George had 28.0 socks, and he threw away 4.0 old ones that didn't fit and bought 36.0 new ones",He would have 60.0 socks ,"george had 28.0 socks, and he threw away 4.0 old ones that didn't fit and bought 36.0 new ones",he would have 60.0 socks,"initial_socks_premise = 28.0
thrown_away_socks_premise = 4.0
bought_socks_premise = 36.0
total_socks_hypothesis = 60.0

def entailment_or_contradiction(initial_socks_premise, thrown_away_socks_premise, bought_socks_premise, total_socks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_socks_premise = initial_socks_premise - thrown_away_socks_premise + bought_socks_premise
    # check if 'total_socks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_socks_premise == total_socks_hypothesis

print(entailment_or_contradiction(initial_socks_premise, thrown_away_socks_premise, bought_socks_premise, total_socks_hypothesis))
"
581,contradiction,,contradiction,Todd has 54.0 pieces of gum and Steve gave him 16.0 more pieces,Todd has 73.0 pieces of gum now,todd has 54.0 pieces of gum and steve gave him 16.0 more pieces,todd has 73.0 pieces of gum now,"gum_todd_premise = 54.0
gum_steve_gave = 16.0
total_gum_hypothesis = 73.0

def entailment_or_contradiction(gum_todd_premise, gum_steve_gave, total_gum_hypothesis):
    # the total amount of gum that Todd now has can be computed from the entities in the premise
    total_gum_premise = gum_todd_premise + gum_steve_gave
    # check if 'total_gum_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gum_premise == total_gum_hypothesis

print(entailment_or_contradiction(gum_todd_premise, gum_steve_gave, total_gum_hypothesis))
"
171,contradiction,,contradiction, Josh had 142.0 pencils and he gave 31.0 pencils to Dorothy,Josh has 106.0 pencils left,josh had 142.0 pencils and he gave 31.0 pencils to dorothy,josh has 106.0 pencils left,"pencils_initially_premise = 142.0
pencils_given_premise = 31.0
pencils_left_hypothesis = 106.0

def entailment_or_contradiction(pencils_initially_premise, pencils_given_premise, pencils_left_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    pencils_left_premise = pencils_initially_premise - pencils_given_premise
    # check if 'pencils_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pencils_left_premise == pencils_left_hypothesis

print(entailment_or_contradiction(pencils_initially_premise, pencils_given_premise, pencils_left_hypothesis))
"
98,entailment,,entailment,The school is planning a field trip and there are 14.0 students and 2.0 seats on each school bus,7.0 buses are needed to take the trip,the school is planning a field trip and there are 14.0 students and 2.0 seats on each school bus,7.0 buses are needed to take the trip,"students_premise = 14.0
seats_per_bus_premise = 2.0
buses_hypothesis = 7.0

def entailment_or_contradiction(students_premise, seats_per_bus_premise, buses_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    buses_premise = students_premise / seats_per_bus_premise
    # check if 'buses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return buses_premise == buses_hypothesis

print(entailment_or_contradiction(students_premise, seats_per_bus_premise, buses_hypothesis))
"
677,contradiction,,contradiction,"Maria picked 48.0 carrots from her garden, and she threw out 15.0 of them and then threw away another 11.0 more the next day",She would have 25.0 carrots left,"maria picked 48.0 carrots from her garden, and she threw out 15.0 of them and then threw away another 11.0 more the next day",she would have 25.0 carrots left,"picked_carrots_premise = 48.0
thrown_carrots_first_day_premise = 15.0
thrown_carrots_second_day_premise = 11.0
left_carrots_hypothesis = 25.0

def entailment_or_contradiction(picked_carrots_premise, thrown_carrots_first_day_premise, thrown_carrots_second_day_premise, left_carrots_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    left_carrots_premise = picked_carrots_premise - thrown_carrots_first_day_premise - thrown_carrots_second_day_premise
    # check if 'left_carrots_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_carrots_premise == left_carrots_hypothesis

print(entailment_or_contradiction(picked_carrots_premise, thrown_carrots_first_day_premise, thrown_carrots_second_day_premise, left_carrots_hypothesis))
"
610,entailment,,entailment,Gary had 73.0 dollars and he sold his pet snake for 55.0 dollars,Gary has 128.0 dollars now,gary had 73.0 dollars and he sold his pet snake for 55.0 dollars,gary has 128.0 dollars now,"initial_money_premise = 73.0
snake_sale_premise = 55.0
total_money_hypothesis = 128.0

def entailment_or_contradiction(initial_money_premise, snake_sale_premise, total_money_hypothesis):
    # the total money Gary has in the hypothesis can be computed from the money he initially had and the money he got from selling his snake
    total_money_premise = initial_money_premise + snake_sale_premise
    # check if 'total_money_hypothesis' equals the money computed from the premise
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(initial_money_premise, snake_sale_premise, total_money_hypothesis))
"
438,entailment,,entailment,There were originally 20817.0 houses in Lincoln  County and there was a housing boom and now there are 97741.0 houses in the county,76924.0 houses were built  from the original to the present,there were originally 20817.0 houses in lincoln county and there was a housing boom and now there are 97741.0 houses in the county,76924.0 houses were built from the original to the present,"original_houses_premise = 20817.0
current_houses_premise = 97741.0
houses_built_hypothesis = 76924.0

def entailment_or_contradiction(original_houses_premise, current_houses_premise, houses_built_hypothesis):
    # the hypothesis talks about the number of houses built, which can be computed from the original and current number of houses in the premise
    houses_built_premise = current_houses_premise - original_houses_premise
    # check if 'houses_built_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return houses_built_premise == houses_built_hypothesis

print(entailment_or_contradiction(original_houses_premise, current_houses_premise, houses_built_hypothesis))
"
319,contradiction,,contradiction,There are 3.0 calories in a candy bar.,18.0 calories are there in 5.0 candy bars,there are 3.0 calories in a candy bar.,18.0 calories are there in 5.0 candy bars,"calories_per_candy_premise = 3.0
total_calories_hypothesis = 18.0
number_of_candy_hypothesis = 5.0

def entailment_or_contradiction(calories_per_candy_premise, total_calories_hypothesis, number_of_candy_hypothesis):
    # the total calories in hypothesis can be computed from the entities in the premise
    total_calories_premise = calories_per_candy_premise * number_of_candy_hypothesis
    # check if 'total_calories_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_calories_premise == total_calories_hypothesis
    
print(entailment_or_contradiction(calories_per_candy_premise, total_calories_hypothesis, number_of_candy_hypothesis))
"
395,contradiction,,contradiction,Joan has 8.0 orange balloons  and her friend gives her 2.0 more ,Joan has 5.0 orange balloons now,joan has 8.0 orange balloons and her friend gives her 2.0 more,joan has 5.0 orange balloons now,"initial_balloons_premise = 8.0
received_balloons_premise = 2.0
total_balloons_hypothesis = 5.0

def entailment_or_contradiction(initial_balloons_premise, received_balloons_premise, total_balloons_hypothesis):
    # the total number of balloons in the hypothesis can be computed from the entities in the premise
    total_balloons_premise = initial_balloons_premise + received_balloons_premise
    # check if 'total_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(initial_balloons_premise, received_balloons_premise, total_balloons_hypothesis))
"
219,contradiction,,contradiction," White t-shirts can be purchased in packages of 6.0, and Mom buys 71.0 packages",She will have 422.0 white t-shirts ,"white t-shirts can be purchased in packages of 6.0, and mom buys 71.0 packages",she will have 422.0 white t-shirts,"packages_premise = 71.0
package_size_premise = 6.0
tshirts_hypothesis = 422.0

def entailment_or_contradiction(packages_premise, package_size_premise, tshirts_hypothesis):
    # the total number of t-shirts can be computed from the number of packages and the size of each package
    total_tshirts_premise = packages_premise * package_size_premise
    # check if 'tshirts_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_tshirts_premise == tshirts_hypothesis

print(entailment_or_contradiction(packages_premise, package_size_premise, tshirts_hypothesis))
"
226,entailment,,entailment, 6.0 students were sitting at each table in the lunchroom and there are 34.0 tables,204.0 students were sitting in the lunchroom,6.0 students were sitting at each table in the lunchroom and there are 34.0 tables,204.0 students were sitting in the lunchroom,"students_per_table_premise = 6.0
tables_premise = 34.0
total_students_hypothesis = 204.0

def entailment_or_contradiction(students_per_table_premise, tables_premise, total_students_hypothesis):
    # the hypothesis talks about the total number of students, which can be computed from the premise
    total_students_premise = students_per_table_premise * tables_premise
    # check if 'total_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(students_per_table_premise, tables_premise, total_students_hypothesis))
"
684,entailment,,entailment,"Maria has 45.0 bottles of water in her fridge, and she drank 14.0 of them and her sister drank 8.0",23.0 bottles are left,"maria has 45.0 bottles of water in her fridge, and she drank 14.0 of them and her sister drank 8.0",23.0 bottles are left,"bottles_initially_premise = 45.0
drank_maria_premise = 14.0
drank_sister_premise = 8.0
bottles_left_hypothesis = 23.0

def entailment_or_contradiction(bottles_initially_premise, drank_maria_premise, drank_sister_premise, bottles_left_hypothesis):
    # compute the number of bottles left after Maria and her sister drank some of them
    bottles_left_premise = bottles_initially_premise - drank_maria_premise - drank_sister_premise
    # check if the remaining quantity of bottles in the premise is equal to the quantity mentioned in the hypothesis
    return bottles_left_premise == bottles_left_hypothesis

print(entailment_or_contradiction(bottles_initially_premise, drank_maria_premise, drank_sister_premise, bottles_left_hypothesis))
"
406,entailment,,entailment,Sally had 760 quarters in her bank and she received 418 more quarters,She has 1178.0 quarters now,sally had 760 quarters in her bank and she received 418 more quarters,she has 1178.0 quarters now,"quarters_bank_premise = 760
received_quarters_premise = 418
total_quarters_hypothesis = 1178.0

def entailment_or_contradiction(quarters_bank_premise, received_quarters_premise, total_quarters_hypothesis):
    # the total number of quarters can be computed from the numbers in the premise
    total_quarters_premise = quarters_bank_premise + received_quarters_premise
    # check if 'total_quarters_hypothesis' is equal to the number computed from the premise
    return total_quarters_premise == total_quarters_hypothesis

print(entailment_or_contradiction(quarters_bank_premise, received_quarters_premise, total_quarters_hypothesis))
"
292,entailment,,entailment," Robin uploaded 35.0 pictures from her phone and 5.0 from her camera to facebook, and she sorted the pics into 5.0 different albums with the same amount of pics in each album",8.0 pictures were in each of the albums,"robin uploaded 35.0 pictures from her phone and 5.0 from her camera to facebook, and she sorted the pics into 5.0 different albums with the same amount of pics in each album",8.0 pictures were in each of the albums,"phone_pictures_premise = 35.0
camera_pictures_premise = 5.0
albums_premise = 5.0
pictures_per_album_hypothesis = 8.0

def entailment_or_contradiction(phone_pictures_premise, camera_pictures_premise, albums_premise, pictures_per_album_hypothesis):
    # the hypothesis talks about the number of pictures in each album, which can be computed from the premise
    total_pictures_premise = phone_pictures_premise + camera_pictures_premise
    pictures_per_album_premise = total_pictures_premise / albums_premise
    # check if 'pictures_per_album_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pictures_per_album_premise == pictures_per_album_hypothesis

print(entailment_or_contradiction(phone_pictures_premise, camera_pictures_premise, albums_premise, pictures_per_album_hypothesis))
"
407,contradiction,,contradiction,Sally had 760 quarters in her bank and she received 418 more quarters,She has 1177.0 quarters now,sally had 760 quarters in her bank and she received 418 more quarters,she has 1177.0 quarters now,"quarters_initial_premise = 760
quarters_received_premise = 418
total_quarters_hypothesis = 1177.0

def entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, total_quarters_hypothesis):
    # the total number of quarters can be computed from the initial and received quarters
    total_quarters_premise = quarters_initial_premise + quarters_received_premise
    # check if 'total_quarters_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_quarters_premise == total_quarters_hypothesis

print(entailment_or_contradiction(quarters_initial_premise, quarters_received_premise, total_quarters_hypothesis))
"
562,entailment,,entailment,42.0 birds were sitting in a tree and then 29.0 more flew up to the tree,71.0 birds are there in the tree,42.0 birds were sitting in a tree and then 29.0 more flew up to the tree,71.0 birds are there in the tree,"birds_initial_premise = 42.0
birds_flew_premise = 29.0
birds_hypothesis = 71.0

def entailment_or_contradiction(birds_initial_premise, birds_flew_premise, birds_hypothesis):
    # the number of birds in the tree in the hypothesis can be computed from the numbers in the premise
    total_birds_premise = birds_initial_premise + birds_flew_premise
    # check if the number of birds in the hypothesis matches the calculated total from the premise
    return total_birds_premise == birds_hypothesis

print(entailment_or_contradiction(birds_initial_premise, birds_flew_premise, birds_hypothesis))
"
177,contradiction,,contradiction," Joe had 50.0 toy cars, and he gets 12.0 more cars",He will have 65.0 cars then,"joe had 50.0 toy cars, and he gets 12.0 more cars",he will have 65.0 cars then,"initial_cars_premise = 50.0
received_cars_premise = 12.0
total_cars_hypothesis = 65.0

def entailment_or_contradiction(initial_cars_premise, received_cars_premise, total_cars_hypothesis):
    # Compute the total number of cars Joe will have after receiving more, based on the premise
    total_cars_premise = initial_cars_premise + received_cars_premise
    # Check if the total number of cars in the hypothesis equals the calculated total from the premise 
    return total_cars_premise == total_cars_hypothesis

print(entailment_or_contradiction(initial_cars_premise, received_cars_premise, total_cars_hypothesis))
"
707,contradiction,,contradiction,"The farmers reported that they harvest 45.0 sacks of apples from an orchard that comprises 8.0 sections, and the same amount of apples is harvested from each section",6.2 sacks are harvested from a section,"the farmers reported that they harvest 45.0 sacks of apples from an orchard that comprises 8.0 sections, and the same amount of apples is harvested from each section",6.2 sacks are harvested from a section,"total_sacks_premise = 45.0
total_sections_premise = 8.0
sacks_per_section_hypothesis = 6.2

def entailment_or_contradiction(total_sacks_premise, total_sections_premise, sacks_per_section_hypothesis):
    # the hypothesis talks about the number of sacks per section, which can be computed from the information in the premise
    sacks_per_section_premise = total_sacks_premise / total_sections_premise
    # check if 'sacks_per_section_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return sacks_per_section_premise == sacks_per_section_hypothesis

print(entailment_or_contradiction(total_sacks_premise, total_sections_premise, sacks_per_section_hypothesis))
"
25,contradiction,,contradiction,Mike has 87.0 baseball cards  and Sam bought 13.0 of Mike 's baseball cards ,Mike has 72.0 baseball cards now,mike has 87.0 baseball cards and sam bought 13.0 of mike 's baseball cards,mike has 72.0 baseball cards now,"baseball_cards_mike_premise = 87.0
bought_baseball_cards_sam_premise = 13.0
baseball_cards_mike_hypothesis = 72.0

def entailment_or_contradiction(baseball_cards_mike_premise, bought_baseball_cards_sam_premise, baseball_cards_mike_hypothesis):
    # the hypothesis talks about how many baseball cards Mike has now, which can be computed from the entities in the premise
    baseball_cards_mike_now_premise = baseball_cards_mike_premise - bought_baseball_cards_sam_premise
    # check if 'baseball_cards_mike_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return baseball_cards_mike_now_premise == baseball_cards_mike_hypothesis

print(entailment_or_contradiction(baseball_cards_mike_premise, bought_baseball_cards_sam_premise, baseball_cards_mike_hypothesis))
"
653,contradiction,,contradiction,You want to give 24.0 cookies to each of the 6.0 people.,You need 145.0 cookies,you want to give 24.0 cookies to each of the 6.0 people.,you need 145.0 cookies,"cookies_per_person_premise = 24.0
people_premise = 6.0
total_cookies_hypothesis = 145.0

def entailment_or_contradiction(cookies_per_person_premise, people_premise, total_cookies_hypothesis):
    # the total number of cookies can be computed from the entities in the premise
    total_cookies_premise = cookies_per_person_premise * people_premise
    # check if 'total_cookies_hypothesis' entails the quantity deduced from the premise
    return total_cookies_premise == total_cookies_hypothesis

print(entailment_or_contradiction(cookies_per_person_premise, people_premise, total_cookies_hypothesis))
"
361,contradiction,,contradiction,Sam had 9.0 dimes in his bank and he gave 7.0 dimes to his dad,Sam has 5.0 dimes now,sam had 9.0 dimes in his bank and he gave 7.0 dimes to his dad,sam has 5.0 dimes now,"dimes_initial_premise = 9.0
dimes_given_premise = 7.0
dimes_final_hypothesis = 5.0

def entailment_or_contradiction(dimes_initial_premise, dimes_given_premise, dimes_final_hypothesis):
    # the hypothesis talks about the number of dimes Sam has now, which can be computed from the premise
    dimes_final_premise = dimes_initial_premise - dimes_given_premise
    # check if 'dimes_final_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return dimes_final_premise == dimes_final_hypothesis

print(entailment_or_contradiction(dimes_initial_premise, dimes_given_premise, dimes_final_hypothesis))
"
108,entailment,,entailment,Shirley sold 20.0 boxes of Do-Si-Dos.,"Shirley needed 5.0 cases of 4.0 boxes , plus extra boxes",shirley sold 20.0 boxes of do-si-dos.,"shirley needed 5.0 cases of 4.0 boxes , plus extra boxes","sold_boxes_premise = 20.0
cases_needed_hypothesis = 5.0
boxes_per_case_hypothesis = 4.0

def entailment_or_contradiction(sold_boxes_premise, cases_needed_hypothesis, boxes_per_case_hypothesis):
    # the hypothesis talks about the number of cases and boxes needed, which can be referenced to the number of boxes sold in the premise
    # find the total number of boxes needed from the hypothesis 
    total_boxes_needed_hypothesis = cases_needed_hypothesis * boxes_per_case_hypothesis
    # check if the total boxes needed form the hypothesis is less than or equal to 'sold_boxes_premise' 
    return total_boxes_needed_hypothesis <= sold_boxes_premise

print(entailment_or_contradiction(sold_boxes_premise, cases_needed_hypothesis, boxes_per_case_hypothesis))
"
228,entailment,,entailment, The farmer had 127.0 apples and he gave 88.0 apples to his neighbor,He has 39.0 apples now,the farmer had 127.0 apples and he gave 88.0 apples to his neighbor,he has 39.0 apples now,"apples_initial_premise = 127.0
apples_given_premise = 88.0
apples_remaining_hypothesis = 39.0

def entailment_or_contradiction(apples_initial_premise, apples_given_premise, apples_remaining_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    apples_remaining_premise = apples_initial_premise - apples_given_premise
    # check if 'apples_remaining_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return apples_remaining_premise == apples_remaining_hypothesis

print(entailment_or_contradiction(apples_initial_premise, apples_given_premise, apples_remaining_hypothesis))
"
511,contradiction,,contradiction,Charles strolled at 3.0 miles per hour for 6.0 hours,Charles travelled for 21.0 miles,charles strolled at 3.0 miles per hour for 6.0 hours,charles travelled for 21.0 miles,"stroll_speed_premise = 3.0 # in miles per hour
stroll_time_premise = 6.0 # in hours
travelled_distance_hypothesis = 21.0 # in miles

def entailment_or_contradiction(stroll_speed_premise, stroll_time_premise, travelled_distance_hypothesis):
    # the distance travelled can be computed from the speed and time mentioned in the premise
    travelled_distance_premise = stroll_speed_premise * stroll_time_premise
    # check if 'travelled_distance_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return travelled_distance_premise == travelled_distance_hypothesis

print(entailment_or_contradiction(stroll_speed_premise, stroll_time_premise, travelled_distance_hypothesis))
"
121,contradiction,,contradiction,Heather bicycled 40.0 kilometers at 8.0 kilometers per hour,Heather bicycled for 3.0 hours,heather bicycled 40.0 kilometers at 8.0 kilometers per hour,heather bicycled for 3.0 hours,"distance_premise = 40.0
speed_premise = 8.0
time_hypothesis = 3.0

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the time in the hypothesis can be computed from the entities in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
652,entailment,,entailment,You want to give 24.0 cookies to each of the 6.0 people.,You need 144.0 cookies,you want to give 24.0 cookies to each of the 6.0 people.,you need 144.0 cookies,"cookies_per_person_premise = 24.0
people_premise = 6.0
total_cookies_hypothesis = 144.0

def entailment_or_contradiction(cookies_per_person_premise, people_premise, total_cookies_hypothesis):
    # the total number of cookies needed can be computed from the premise
    total_cookies_premise = cookies_per_person_premise * people_premise
    # check if 'total_cookies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cookies_premise == total_cookies_hypothesis

print(entailment_or_contradiction(cookies_per_person_premise, people_premise, total_cookies_hypothesis))
"
122,entailment,,entailment,Lawrence walked 4.0 kilometers at 3.0 kilometers per hour,Lawrence walked for 1.333333 hours,lawrence walked 4.0 kilometers at 3.0 kilometers per hour,lawrence walked for 1.333333 hours,"distance_walked_premise = 4.0  # kilometers
speed_walked_premise = 3.0  # kilometers per hour
time_walked_hypothesis = 1.333333  # hours

def entailment_or_contradiction(distance_walked_premise, speed_walked_premise, time_walked_hypothesis):
    # The time walked can be computed from the distance walked and the speed
    time_walked_premise = distance_walked_premise / speed_walked_premise
    # Check if the time walked calculated from the premise is the same as the time walked in the hypothesis
    return abs(time_walked_premise - time_walked_hypothesis) < 0.0001  # using a small threshold to account for floating point precision

print(entailment_or_contradiction(distance_walked_premise, speed_walked_premise, time_walked_hypothesis))
"
348,entailment,,entailment,"On Friday, 1250.0 people visited the zoo and 3.0 times as many people visited on Saturday than on Friday",3750.0 people visited the zoo on Saturday,"on friday, 1250.0 people visited the zoo and 3.0 times as many people visited on saturday than on friday",3750.0 people visited the zoo on saturday,"friday_visitors_premise = 1250.0
times_more_saturday_premise = 3.0
saturday_visitors_hypothesis = 3750.0

def entailment_or_contradiction(friday_visitors_premise, times_more_saturday_premise, saturday_visitors_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    saturday_visitors_premise = friday_visitors_premise * times_more_saturday_premise
    # check if 'saturday_visitors_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return saturday_visitors_premise == saturday_visitors_hypothesis

print(entailment_or_contradiction(friday_visitors_premise, times_more_saturday_premise, saturday_visitors_hypothesis))
"
504,entailment,,entailment,6.0 people ate 54.0 lemon heads each.,324.0 lemon heads were eaten all together,6.0 people ate 54.0 lemon heads each.,324.0 lemon heads were eaten all together,"people_premise = 6.0
lemon_heads_each_premise = 54.0
total_lemon_heads_hypothesis = 324.0

def entailment_or_contradiction(people_premise, lemon_heads_each_premise, total_lemon_heads_hypothesis):
    # the total number of lemon heads eaten can be computed from the entities in the premise
    total_lemon_heads_premise = people_premise * lemon_heads_each_premise
    # check if 'total_lemon_heads_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_lemon_heads_premise == total_lemon_heads_hypothesis

print(entailment_or_contradiction(people_premise, lemon_heads_each_premise, total_lemon_heads_hypothesis))
"
280,entailment,,entailment," Maria picked 48.0 carrots from her garden, and she threw out 11.0 of them and then picked 15.0 more the next day",She would have 52.0 carrots total,"maria picked 48.0 carrots from her garden, and she threw out 11.0 of them and then picked 15.0 more the next day",she would have 52.0 carrots total,"carrots_picked_first_day_premise = 48.0
carrots_thrown_out_premise = 11.0
carrots_picked_second_day_premise = 15.0
total_carrots_hypothesis = 52.0

def entailment_or_contradiction(carrots_picked_first_day_premise, carrots_thrown_out_premise, carrots_picked_second_day_premise, total_carrots_hypothesis):
    # calculate the total carrots from the premise
    total_carrots_premise = carrots_picked_first_day_premise - carrots_thrown_out_premise + carrots_picked_second_day_premise
    # check if the total carrots from the hypothesis equals the total from the premise
    return total_carrots_premise == total_carrots_hypothesis

print(entailment_or_contradiction(carrots_picked_first_day_premise, carrots_thrown_out_premise, carrots_picked_second_day_premise, total_carrots_hypothesis))
"
415,contradiction,,contradiction,There are 7.0 crayons in the drawer and Mary put 3.0 more crayons in the drawer,9.0 crayons are in the drawer now,there are 7.0 crayons in the drawer and mary put 3.0 more crayons in the drawer,9.0 crayons are in the drawer now,"crayons_in_drawer_premise = 7.0
added_crayons_premise = 3.0
total_crayons_hypothesis = 9.0

def entailment_or_contradiction(crayons_in_drawer_premise, added_crayons_premise, total_crayons_hypothesis):
    # the hypothesis states the total number of crayons in the drawer, which can be computed from the premise
    total_crayons_premise = crayons_in_drawer_premise + added_crayons_premise
    # check if the total number of crayons from the hypothesis is equal to the total number of crayons computed from the premise
    return total_crayons_premise == total_crayons_hypothesis

print(entailment_or_contradiction(crayons_in_drawer_premise, added_crayons_premise, total_crayons_hypothesis))
"
503,contradiction,,contradiction,"There are 35.0 bottle caps in every box of Beverly's bottle cap collection, and the bottle caps are organized into 7.0 boxes",244.0 bottle caps are there in total,"there are 35.0 bottle caps in every box of beverly's bottle cap collection, and the bottle caps are organized into 7.0 boxes",244.0 bottle caps are there in total,"bottle_caps_per_box_premise = 35.0
total_boxes_premise = 7.0
total_bottle_caps_hypothesis = 244.0

def entailment_or_contradiction(bottle_caps_per_box_premise, total_boxes_premise, total_bottle_caps_hypothesis):
    # the total number of bottle caps can be computed from the entities in the premise
    total_bottle_caps_premise = bottle_caps_per_box_premise * total_boxes_premise
    # check if 'total_bottle_caps_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bottle_caps_premise == total_bottle_caps_hypothesis

print(entailment_or_contradiction(bottle_caps_per_box_premise, total_boxes_premise, total_bottle_caps_hypothesis))
"
4,entailment,,entailment,There are 2.0 pencils in the drawer  and Tim placed 3.0 pencils in the drawer ,5.0 pencils are now there in total ,there are 2.0 pencils in the drawer and tim placed 3.0 pencils in the drawer,5.0 pencils are now there in total,"initial_pencils_premise = 2.0
added_pencils_premise = 3.0
total_pencils_hypothesis = 5.0

def entailment_or_contradiction(initial_pencils_premise, added_pencils_premise, total_pencils_hypothesis):
    # the total number of pencils in the drawer can be calculated by adding the initial pencils and the added pencils
    total_pencils_premise = initial_pencils_premise + added_pencils_premise
    # check if 'total_pencils_hypothesis' is equal to the calculated total pencils from the premise
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(initial_pencils_premise, added_pencils_premise, total_pencils_hypothesis))
"
561,contradiction,,contradiction,21.0 birds were sitting in a tree and 14.0 more birds flew away,6.0 birds are left in the tree,21.0 birds were sitting in a tree and 14.0 more birds flew away,6.0 birds are left in the tree,"birds_in_tree_premise = 21.0
birds_flew_away_premise = 14.0
birds_left_hypothesis = 6.0

def entailment_or_contradiction(birds_in_tree_premise, birds_flew_away_premise, birds_left_hypothesis):
    # the hypothesis about the number of birds left can be computed from the premise
    birds_left_premise = birds_in_tree_premise - birds_flew_away_premise
    # check if 'birds_left_hypothesis' matches the quantity deduced from the premise
    return birds_left_premise == birds_left_hypothesis

print(entailment_or_contradiction(birds_in_tree_premise, birds_flew_away_premise, birds_left_hypothesis))
"
639,contradiction,,contradiction,"Jill invited 37.0 people to her birthday party, and each pizza is divided into 8 equal parts and each person eats 1.0 slice",6.0 pizzas were eaten,"jill invited 37.0 people to her birthday party, and each pizza is divided into 8 equal parts and each person eats 1.0 slice",6.0 pizzas were eaten,"invited_people_premise = 37.0
slices_per_pizza_premise = 8.0
slices_per_person_premise = 1.0
eaten_pizzas_hypothesis = 6.0

def entailment_or_contradiction(invited_people_premise, slices_per_pizza_premise, slices_per_person_premise, eaten_pizzas_hypothesis):
    # the hypothesis says something about the number of eaten pizzas, which can be deduced from the number of people and slices per pizza
    eaten_pizzas_premise = (invited_people_premise * slices_per_person_premise) / slices_per_pizza_premise
    # check if 'eaten_pizzas_hypothesis' is equal to 'eaten_pizzas_premise'
    return eaten_pizzas_premise == eaten_pizzas_hypothesis

print(entailment_or_contradiction(invited_people_premise, slices_per_pizza_premise, slices_per_person_premise, eaten_pizzas_hypothesis))
"
591,contradiction,,contradiction,Connie has 64.0 red and blue markers and 41.0 of the markers are red,27.0 markers are blue,connie has 64.0 red and blue markers and 41.0 of the markers are red,27.0 markers are blue,"red_markers_premise = 41.0
total_markers_premise = 64.0
blue_markers_hypothesis = 27.0

def entailment_or_contradiction(red_markers_premise, total_markers_premise, blue_markers_hypothesis):
    # the number of blue markers in the premise can be computed by subtracting the number of red markers from the total
    blue_markers_premise = total_markers_premise - red_markers_premise
    # check if 'blue_markers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return blue_markers_premise == blue_markers_hypothesis

print(entailment_or_contradiction(red_markers_premise, total_markers_premise, blue_markers_hypothesis))
"
354,entailment,,entailment,Mrs. Hilt saw a rollercoaster and 7.0 students rode the rollercoaster every 5.0 minutes,21.0 students rode the rollercoaster in 15.0 minutes,mrs. hilt saw a rollercoaster and 7.0 students rode the rollercoaster every 5.0 minutes,21.0 students rode the rollercoaster in 15.0 minutes,"students_per_5min_premise = 7.0
time_15min_hypothesis = 15.0
students_15min_hypothesis = 21.0

def entailment_or_contradiction(students_per_5min_premise, time_15min_hypothesis, students_15min_hypothesis):
    # the hypothesis talks about the number of students who rode the rollercoaster in 15 minutes, which can be computed from the premise
    # find the total number of students who rode the rollercoaster in 15 minutes from the premise 
    students_15min_premise = (time_15min_hypothesis/5) * students_per_5min_premise
    # check if 'students_15min_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return students_15min_premise == students_15min_hypothesis

print(entailment_or_contradiction(students_per_5min_premise, time_15min_hypothesis, students_15min_hypothesis))
"
37,contradiction,,contradiction,A restaurant made 9.0 hamburgers to serve during lunch  and only 3.0 were actually served ,3.0 hamburgers were left over from lunch ,a restaurant made 9.0 hamburgers to serve during lunch and only 3.0 were actually served,3.0 hamburgers were left over from lunch,"made_hamburgers_premise = 9.0
served_hamburgers_premise = 3.0
leftover_hamburgers_hypothesis = 3.0

def entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    leftover_hamburgers_premise = made_hamburgers_premise - served_hamburgers_premise
    # check if 'leftover_hamburgers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return leftover_hamburgers_premise == leftover_hamburgers_hypothesis

print(entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis))
"
39,contradiction,,contradiction,There are 7.0 crayons in the drawer  and Mary took 3.0 crayons out of the drawer ,0.0 crayons are there now ,there are 7.0 crayons in the drawer and mary took 3.0 crayons out of the drawer,0.0 crayons are there now,"crayons_drawer_premise = 7.0
crayons_taken_premise = 3.0
crayons_now_hypothesis = 0.0

def entailment_or_contradiction(crayons_drawer_premise, crayons_taken_premise, crayons_now_hypothesis):
    # the hypothesis refers to the number of crayons left in the drawer, which can be computed from the entities in the premise
    crayons_now_premise = crayons_drawer_premise - crayons_taken_premise
    # check if 'crayons_now_hypothesis' is equal to the quantity deduced from the premise
    return crayons_now_premise == crayons_now_hypothesis

print(entailment_or_contradiction(crayons_drawer_premise, crayons_taken_premise, crayons_now_hypothesis))
"
340,entailment,,entailment,"The junior ranger asked Christian to help him place 420.0 seedlings in packets, and every packet needs to contain 7.0 seeds",They need 60.0 packets,"the junior ranger asked christian to help him place 420.0 seedlings in packets, and every packet needs to contain 7.0 seeds",they need 60.0 packets,"seedlings_premise = 420.0
seeds_per_packet_premise = 7.0
packets_hypothesis = 60.0

def entailment_or_contradiction(seedlings_premise, seeds_per_packet_premise, packets_hypothesis):
    # the number of packets can be computed from the total number of seedlings and the number of seeds per packet
    packets_premise = seedlings_premise / seeds_per_packet_premise
    # check if 'packets_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return packets_premise == packets_hypothesis

print(entailment_or_contradiction(seedlings_premise, seeds_per_packet_premise, packets_hypothesis))
"
578,entailment,,entailment,Marcus has 210.0 baseball cards and Carter gave him 58.0 more cards,Marcus has 268.0 baseball cards now,marcus has 210.0 baseball cards and carter gave him 58.0 more cards,marcus has 268.0 baseball cards now,"initial_cards_premise = 210.0
received_cards_premise = 58.0
total_cards_hypothesis = 268.0

def entailment_or_contradiction(initial_cards_premise, received_cards_premise, total_cards_hypothesis):
    # the total number of cards in the hypothesis can be computed from the entities in the premise
    total_cards_premise = initial_cards_premise + received_cards_premise
    # check if 'total_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cards_premise == total_cards_hypothesis

print(entailment_or_contradiction(initial_cards_premise, received_cards_premise, total_cards_hypothesis))
"
187,contradiction,,contradiction, 5.0 boats are in the lake and each boat has 3.0 people,19.0 people are on boats in the lake,5.0 boats are in the lake and each boat has 3.0 people,19.0 people are on boats in the lake,"boats_premise = 5.0
people_per_boat_premise = 3.0
total_people_hypothesis = 19.0

def entailment_or_contradiction(boats_premise, people_per_boat_premise, total_people_hypothesis):
    # the total number of people on boats can be computed from the entities in the premise
    total_people_premise = boats_premise * people_per_boat_premise
    # check if 'total_people_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(boats_premise, people_per_boat_premise, total_people_hypothesis))
"
205,contradiction,,contradiction, A sandbox is 312.0 centimeters long and 146.0 centimeters wide.,The sandbox covers 45553.0 square centimeters of ground,a sandbox is 312.0 centimeters long and 146.0 centimeters wide.,the sandbox covers 45553.0 square centimeters of ground,"length_sandbox_premise = 312.0
width_sandbox_premise = 146.0
area_sandbox_hypothesis = 45553.0

def entailment_or_contradiction(length_sandbox_premise, width_sandbox_premise, area_sandbox_hypothesis):
    # the area of the sandbox can be calculated from the length and width
    area_sandbox_premise = length_sandbox_premise * width_sandbox_premise
    # check if the calculated area from the premise is equal to the area in the hypothesis
    return area_sandbox_premise == area_sandbox_hypothesis

print(entailment_or_contradiction(length_sandbox_premise, width_sandbox_premise, area_sandbox_hypothesis))
"
341,contradiction,,contradiction,"The junior ranger asked Christian to help him place 420.0 seedlings in packets, and every packet needs to contain 7.0 seeds",They need 61.0 packets,"the junior ranger asked christian to help him place 420.0 seedlings in packets, and every packet needs to contain 7.0 seeds",they need 61.0 packets,"seedlings_premise = 420.0
seeds_per_packet_premise = 7.0
total_packets_hypothesis = 61.0

def entailment_or_contradiction(seedlings_premise, seeds_per_packet_premise, total_packets_hypothesis):
    # we can compute the total number of packets needed from the premise
    total_packets_premise = seedlings_premise / seeds_per_packet_premise
    # the hypothesis is entailed if the total packets needed from the premise is equal to 'total_packets_hypothesis'
    return total_packets_premise == total_packets_hypothesis

print(entailment_or_contradiction(seedlings_premise, seeds_per_packet_premise, total_packets_hypothesis))
"
518,entailment,,entailment,There are 6.0 birds and 3.0 nests.,There are 9.0 bird-related objects,there are 6.0 birds and 3.0 nests.,there are 9.0 bird-related objects,"birds_premise = 6.0
nests_premise = 3.0
bird_related_objects_hypothesis = 9.0

def entailment_or_contradiction(birds_premise, nests_premise, bird_related_objects_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    bird_related_objects_premise = birds_premise + nests_premise
    # check if 'bird_related_objects_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bird_related_objects_premise == bird_related_objects_hypothesis

print(entailment_or_contradiction(birds_premise, nests_premise, bird_related_objects_hypothesis))
"
358,entailment,,entailment,There were 6.0 roses in the vase and Mary cut some roses from her flower garden and put 16.0 more roses in the vase,22.0 roses are now in the vase,there were 6.0 roses in the vase and mary cut some roses from her flower garden and put 16.0 more roses in the vase,22.0 roses are now in the vase,"initial_roses_premise = 6.0
added_roses_premise = 16.0
total_roses_hypothesis = 22.0

def entailment_or_contradiction(initial_roses_premise, added_roses_premise, total_roses_hypothesis):
    # the total number of roses in the vase can be computed from the entities in the premise
    total_roses_premise = initial_roses_premise + added_roses_premise
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, added_roses_premise, total_roses_hypothesis))
"
398,entailment,,entailment,Joan 's cat had 8.0 kittens  and she got  2.0  more from her friends ,She has 10.0 kittens now,joan 's cat had 8.0 kittens and she got 2.0 more from her friends,she has 10.0 kittens now,"kittens_joan_premise = 8.0
kittens_from_friends_premise = 2.0
total_kittens_hypothesis = 10.0

def entailment_or_contradiction(kittens_joan_premise, kittens_from_friends_premise, total_kittens_hypothesis):
    # the total kittens in the hypothesis can be computed from the entities in the premise
    total_kittens_premise = kittens_joan_premise + kittens_from_friends_premise
    # check if 'total_kittens_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_kittens_premise == total_kittens_hypothesis

print(entailment_or_contradiction(kittens_joan_premise, kittens_from_friends_premise, total_kittens_hypothesis))
"
214,entailment,,entailment, There are 544.0 pots and each pot has 32.0 flowers in it,17408.0 flowers are there in all,there are 544.0 pots and each pot has 32.0 flowers in it,17408.0 flowers are there in all,"pots_premise = 544.0
flowers_per_pot_premise = 32.0
total_flowers_hypothesis = 17408.0

def entailment_or_contradiction(pots_premise, flowers_per_pot_premise, total_flowers_hypothesis):
    # the total number of flowers can be computed from the premise
    total_flowers_premise = pots_premise * flowers_per_pot_premise
    # check if 'total_flowers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_flowers_premise == total_flowers_hypothesis

print(entailment_or_contradiction(pots_premise, flowers_per_pot_premise, total_flowers_hypothesis))
"
421,contradiction,,contradiction,"Mike joined his school's band and he bought a trumpet for $145.16, and sold a song book which was $5.84",The net amount that Mike spent at the music store is 134.7,"mike joined his school's band and he bought a trumpet for $145.16, and sold a song book which was $5.84",the net amount that mike spent at the music store is 134.7,"trumpet_price_premise = 145.16
book_price_premise = 5.84
net_spent_hypothesis = 134.7

def entailment_or_contradiction(trumpet_price_premise, book_price_premise, net_spent_hypothesis):
    # The hypothesis states a net amount spent, which can be calculated from the premise
    net_spent_premise = trumpet_price_premise - book_price_premise
    # Check if 'net_spent_hypothesis' is equal to the quantity calculated from the premise
    return net_spent_premise == net_spent_hypothesis

print(entailment_or_contradiction(trumpet_price_premise, book_price_premise, net_spent_hypothesis))
"
573,contradiction,,contradiction,There are 58.0 geese and 37.0 ducks in the marsh.,25.0 more geese are there than ducks,there are 58.0 geese and 37.0 ducks in the marsh.,25.0 more geese are there than ducks,"geese_premise = 58.0
ducks_premise = 37.0
geese_more_than_ducks_hypothesis = 25.0

def entailment_or_contradiction(geese_premise, ducks_premise, geese_more_than_ducks_hypothesis):
    # the hypothesis talks about the difference between the number of geese and ducks, which can be computed from the premise
    geese_more_than_ducks_premise = geese_premise - ducks_premise
    # check if 'geese_more_than_ducks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return geese_more_than_ducks_premise == geese_more_than_ducks_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, geese_more_than_ducks_hypothesis))
"
260,entailment,,entailment, Isabel bought 900.0 pieces of paper and she used 156.0 pieces of the paper,She has 744.0 pieces of paper left,isabel bought 900.0 pieces of paper and she used 156.0 pieces of the paper,she has 744.0 pieces of paper left,"bought_paper_premise = 900.0
used_paper_premise = 156.0
left_paper_hypothesis = 744.0

def entailment_or_contradiction(bought_paper_premise, used_paper_premise, left_paper_hypothesis):
    # compute the number of paper left from the premise
    left_paper_premise = bought_paper_premise - used_paper_premise
    # check if 'left_paper_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_paper_premise == left_paper_hypothesis

print(entailment_or_contradiction(bought_paper_premise, used_paper_premise, left_paper_hypothesis))
"
191,contradiction,,contradiction," Paul got a box of 479.0 crayons for his birthday and at the end of the school  year, he only had 134.0 left",340.0 crayons had been lost or given  away,"paul got a box of 479.0 crayons for his birthday and at the end of the school year, he only had 134.0 left",340.0 crayons had been lost or given away,"initial_crayons_premise = 479.0
remaining_crayons_premise = 134.0
lost_or_given_away_crayons_hypothesis = 340.0

def entailment_or_contradiction(initial_crayons_premise, remaining_crayons_premise, lost_or_given_away_crayons_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    lost_or_given_away_crayons_premise = initial_crayons_premise - remaining_crayons_premise
    # check if 'lost_or_given_away_crayons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return lost_or_given_away_crayons_premise == lost_or_given_away_crayons_hypothesis

print(entailment_or_contradiction(initial_crayons_premise, remaining_crayons_premise, lost_or_given_away_crayons_hypothesis))
"
295,contradiction,,contradiction," Wendy's old washing machine could only wash 8.0 pieces of clothing at a time, and she had to wash 39.0 shirts and 33.0 sweaters",She would have 6.0 loads to do,"wendy's old washing machine could only wash 8.0 pieces of clothing at a time, and she had to wash 39.0 shirts and 33.0 sweaters",she would have 6.0 loads to do,"clothes_per_load_premise = 8.0
shirts_premise = 39.0
sweaters_premise = 33.0
loads_hypothesis = 6.0

def entailment_or_contradiction(clothes_per_load_premise, shirts_premise, sweaters_premise, loads_hypothesis):
    # the total number of loads can be calculated from the number of clothes and the washing machine capacity
    total_clothes_premise = shirts_premise + sweaters_premise
    loads_premise = total_clothes_premise / clothes_per_load_premise
    # check if the number of loads in the hypothesis is equal to the computed number of loads from the premise
    return round(loads_premise) == loads_hypothesis

print(entailment_or_contradiction(clothes_per_load_premise, shirts_premise, sweaters_premise, loads_hypothesis))
"
649,contradiction,,contradiction,There are 45.0 pounds of oranges and each bag contains 23.0 pounds of oranges,There are 1.4 bags,there are 45.0 pounds of oranges and each bag contains 23.0 pounds of oranges,there are 1.4 bags,"pounds_of_oranges_premise = 45.0
pounds_per_bag_premise = 23.0
bags_hypothesis = 1.4

def entailment_or_contradiction(pounds_of_oranges_premise, pounds_per_bag_premise, bags_hypothesis):
    # the number of bags can be computed from the total pounds of oranges and pounds per bag
    bags_premise = pounds_of_oranges_premise / pounds_per_bag_premise
    # check if the number of bags from the hypothesis is equal to the one computed from the premise
    return bags_premise == bags_hypothesis

print(entailment_or_contradiction(pounds_of_oranges_premise, pounds_per_bag_premise, bags_hypothesis))
"
249,contradiction,,contradiction, Lansing has 25.0 elementary schools and there are 247.0 students in each school,6173.0 elementary students are there altogether in Lansing,lansing has 25.0 elementary schools and there are 247.0 students in each school,6173.0 elementary students are there altogether in lansing,"schools_premise = 25.0
students_per_school_premise = 247.0
total_students_hypothesis = 6173.0 

def entailment_or_contradiction(schools_premise, students_per_school_premise, total_students_hypothesis):
    # the total number of students in the premise can be computed by multiplying the number of schools with the number of students in each school
    total_students_premise = schools_premise * students_per_school_premise
    # check if the computed total students from the premise is the same as the total students in the hypothesis (entailment)
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(schools_premise, students_per_school_premise, total_students_hypothesis))
"
316,entailment,,entailment,"There are 390.0 students at a school, and each classroom holds 30.0 students",13.0 classrooms are needed at the school,"there are 390.0 students at a school, and each classroom holds 30.0 students",13.0 classrooms are needed at the school,"total_students_premise = 390.0
students_per_classroom_premise = 30.0
needed_classrooms_hypothesis = 13.0

def entailment_or_contradiction(total_students_premise, students_per_classroom_premise, needed_classrooms_hypothesis):
    # the number of classrooms required can be computed by dividing the total number of students by the capacity of each classroom
    needed_classrooms_premise = total_students_premise / students_per_classroom_premise
    # check if 'needed_classrooms_hypothesis' matches the calculated number of classrooms from the premise
    return needed_classrooms_premise == needed_classrooms_hypothesis

print(entailment_or_contradiction(total_students_premise, students_per_classroom_premise, needed_classrooms_hypothesis))
"
720,entailment,,entailment,The farmer had 127.0 apples and his neighbor gave him 88.0 apples,Farmer has 215.0 apples now,the farmer had 127.0 apples and his neighbor gave him 88.0 apples,farmer has 215.0 apples now,"farmer_apples_premise = 127.0
neighbor_apples_premise = 88.0
total_apples_hypothesis = 215.0

def entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis):
    # the total number of apples in the hypothesis can be computed from the entities in the premise
    total_apples_premise = farmer_apples_premise + neighbor_apples_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(farmer_apples_premise, neighbor_apples_premise, total_apples_hypothesis))
"
359,contradiction,,contradiction,There were 6.0 roses in the vase and Mary cut some roses from her flower garden and put 16.0 more roses in the vase,18.0 roses are now in the vase,there were 6.0 roses in the vase and mary cut some roses from her flower garden and put 16.0 more roses in the vase,18.0 roses are now in the vase,"initial_roses_premise = 6.0
additional_roses_premise = 16.0
total_roses_hypothesis = 18.0

def entailment_or_contradiction(initial_roses_premise, additional_roses_premise, total_roses_hypothesis):
    # the total number of roses in the vase can be computed from the entities in the premise
    total_roses_premise = initial_roses_premise + additional_roses_premise
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, additional_roses_premise, total_roses_hypothesis))
"
537,contradiction,,contradiction,20.0 ducks are swimming in a lake and 13.0 ducks leave,11.0 ducks are swimming in the lake,20.0 ducks are swimming in a lake and 13.0 ducks leave,11.0 ducks are swimming in the lake,"ducks_start_premise = 20.0
ducks_leave_premise = 13.0
ducks_remaining_hypothesis = 11.0

def entailment_or_contradiction(ducks_start_premise, ducks_leave_premise, ducks_remaining_hypothesis):
    # ducks_remaining_hypothesis can be computed from ducks_start_premise and ducks_leave_premise
    ducks_remaining_premise = ducks_start_premise - ducks_leave_premise
    # check if ducks_remaining_hypothesis equals ducks_remaining_premise
    return ducks_remaining_premise == ducks_remaining_hypothesis

print(entailment_or_contradiction(ducks_start_premise, ducks_leave_premise, ducks_remaining_hypothesis))
"
553,contradiction,,contradiction,Daniel had 54.0 noodles and he gave 12.0 noodles to William,Daniel has 41.0 noodles left,daniel had 54.0 noodles and he gave 12.0 noodles to william,daniel has 41.0 noodles left,"noodles_daniel_premise = 54.0
given_noodles_premise = 12.0
noodles_daniel_hypothesis = 41.0

def entailment_or_contradiction(noodles_daniel_premise, given_noodles_premise, noodles_daniel_hypothesis):
    # to find out how many noodles Daniel has left, we subtract the noodles he gave from the noodles he had
    remaining_noodles_premise = noodles_daniel_premise - given_noodles_premise
    # check if 'noodles_daniel_hypothesis' is the same as 'remaining_noodles_premise'
    return remaining_noodles_premise == noodles_daniel_hypothesis

print(entailment_or_contradiction(noodles_daniel_premise, given_noodles_premise, noodles_daniel_hypothesis))
"
478,entailment,,entailment,"Mike picked 7.0 apples, Nancy picked 3.0 apples, but Keith ate 6.0 apples and 4.0 pears, at the farm.",4.0 apples are left,"mike picked 7.0 apples, nancy picked 3.0 apples, but keith ate 6.0 apples and 4.0 pears, at the farm.",4.0 apples are left,"mike_apples_premise = 7.0
nancy_apples_premise = 3.0
keith_apples_premise = 6.0
apples_left_hypothesis = 4.0

def entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, apples_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_apples_premise = mike_apples_premise + nancy_apples_premise - keith_apples_premise
    # check if 'apples_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == apples_left_hypothesis

print(entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, apples_left_hypothesis))
"
386,entailment,,entailment,"Keith picked 47.0 pears,  and Mike picked 12.0 pears from the pear tree  and Keith gave away 46.0 pears",Mike has 13.0 pears left,"keith picked 47.0 pears, and mike picked 12.0 pears from the pear tree and keith gave away 46.0 pears",mike has 13.0 pears left,"keith_picked_premise = 47.0
mike_picked_premise = 12.0
keith_gave_away_premise = 46.0
mike_left_hypothesis = 13.0

def entailment_or_contradiction(keith_picked_premise, mike_picked_premise, keith_gave_away_premise, mike_left_hypothesis):
    # the hypothesis talks about the number of pears left with Mike, which can be computed from the information in the premise
    # find the total number of pears left with Keith after he gave away some
    keith_left_premise = keith_picked_premise - keith_gave_away_premise
    # find the total number of pears left, by adding the pears left with Mike and Keith
    total_left_premise = keith_left_premise + mike_picked_premise
    # check if the total pears left with Mike in the hypothesis is equal to the one computed from the premise
    return total_left_premise == mike_left_hypothesis

print(entailment_or_contradiction(keith_picked_premise, mike_picked_premise, keith_gave_away_premise, mike_left_hypothesis))
"
603,contradiction,,contradiction,There are 3.0 boats on the lake and there are 5.0 people total in the boats,5.5 people are in each boat on average,there are 3.0 boats on the lake and there are 5.0 people total in the boats,5.5 people are in each boat on average,"boats_premise = 3.0
people_premise = 5.0
average_people_per_boat_hypothesis = 5.5

def entailment_or_contradiction(boats_premise, people_premise, average_people_per_boat_hypothesis):
    # the average number of people per boat in the hypothesis can be computed from the entities in the premise
    average_people_per_boat_premise = people_premise / boats_premise
    # check if 'average_people_per_boat_hypothesis' contradicts the quantity deduced from the premise
    return average_people_per_boat_premise == average_people_per_boat_hypothesis

print(entailment_or_contradiction(boats_premise, people_premise, average_people_per_boat_hypothesis))
"
452,entailment,,entailment,"A cell phone company has a total of 7422.0 customers across the world, and they get 723.0 more customers in the United States",They will have 8145.0 total customers ,"a cell phone company has a total of 7422.0 customers across the world, and they get 723.0 more customers in the united states",they will have 8145.0 total customers,"total_customers_premise = 7422.0
new_us_customers_premise = 723.0
total_customers_hypothesis = 8145.0

def entailment_or_contradiction(total_customers_premise, new_us_customers_premise, total_customers_hypothesis):
    # The hypothesis implies the new total customers after adding the new US customers to the existing total customers
    total_customers_after_addition_premise = total_customers_premise + new_us_customers_premise
    # Check if the new total customers from the premise matches the total customers in the hypothesis
    return total_customers_after_addition_premise == total_customers_hypothesis

print(entailment_or_contradiction(total_customers_premise, new_us_customers_premise, total_customers_hypothesis))
"
202,entailment,,entailment, A garden has 52.0 rows and 15.0 columns of bean plans.,780.0 plants are there in all,a garden has 52.0 rows and 15.0 columns of bean plans.,780.0 plants are there in all,"rows_premise = 52.0
columns_premise = 15.0
total_plants_hypothesis = 780.0

def entailment_or_contradiction(rows_premise, columns_premise, total_plants_hypothesis):
    # the hypothesis talks about the total number of plants, which can be computed from the rows and columns mentioned in the premise
    total_plants_premise = rows_premise * columns_premise
    # check if 'total_plants_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_plants_premise == total_plants_hypothesis

print(entailment_or_contradiction(rows_premise, columns_premise, total_plants_hypothesis))
"
7,contradiction,,contradiction,"Benny picked 2.0 apples, and Dan picked 9.0 apples from the apple tree .",10.0 apples were picked in total,"benny picked 2.0 apples, and dan picked 9.0 apples from the apple tree .",10.0 apples were picked in total,"benny_apples_premise = 2.0
dan_apples_premise = 9.0
total_apples_hypothesis = 10.0

def entailment_or_contradiction(benny_apples_premise, dan_apples_premise, total_apples_hypothesis):
    # the total apples in the hypothesis can be calculated from the apples picked by Benny and Dan in the premise
    total_apples_premise = benny_apples_premise + dan_apples_premise
    # check if 'total_apples_hypothesis' equals the quantity deduced from the premise
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(benny_apples_premise, dan_apples_premise, total_apples_hypothesis))
"
16,entailment,,entailment,"Jason picked 46.0 pears , Keith picked 47.0 pears , and Mike picked 12.0 pears from the pear tree .",105.0 pears were picked in total,"jason picked 46.0 pears , keith picked 47.0 pears , and mike picked 12.0 pears from the pear tree .",105.0 pears were picked in total,"pears_jason_premise = 46.0
pears_keith_premise = 47.0
pears_mike_premise = 12.0
total_pears_hypothesis = 105.0

def entailment_or_contradiction(pears_jason_premise, pears_keith_premise, pears_mike_premise, total_pears_hypothesis):
    # the hypothesis talks about the total number of pears picked, which can be computed from the premise
    total_pears_premise = pears_jason_premise + pears_keith_premise + pears_mike_premise
    # check if the total number of pears from the hypothesis is equal to the total number of pears from the premise
    return total_pears_premise == total_pears_hypothesis

print(entailment_or_contradiction(pears_jason_premise, pears_keith_premise, pears_mike_premise, total_pears_hypothesis))
"
396,entailment,,entailment,Fred had 7.0 dimes in his bank  and his sister loaned Fred 3.0 more dimes ,Fred has 10.0 dimes now,fred had 7.0 dimes in his bank and his sister loaned fred 3.0 more dimes,fred has 10.0 dimes now,"fred_dimes_premise = 7.0
loaned_dimes_premise = 3.0
total_dimes_hypothesis = 10.0

def entailment_or_contradiction(fred_dimes_premise, loaned_dimes_premise, total_dimes_hypothesis):
    # the total number of dimes Fred has now can be computed from the number of dimes he had and the loaned dimes from his sister
    total_dimes_premise = fred_dimes_premise + loaned_dimes_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(fred_dimes_premise, loaned_dimes_premise, total_dimes_hypothesis))
"
375,contradiction,,contradiction,A restaurant baked 5.0 cakes during lunch and sold 6.0 during dinner today  and the restaurant baked 3.0 cakes yesterday ,3.0 cakes are left ,a restaurant baked 5.0 cakes during lunch and sold 6.0 during dinner today and the restaurant baked 3.0 cakes yesterday,3.0 cakes are left,"baked_cakes_lunch = 5.0
sold_cakes_dinner = 6.0
baked_cakes_yesterday = 3.0
left_cakes_hypothesis = 3.0

def entailment_or_contradiction(baked_cakes_lunch, sold_cakes_dinner, baked_cakes_yesterday, left_cakes_hypothesis):
    # The hypothesis talks about the number of cakes left, which can be computed from the premise
    # Find the total number of cakes from the premise
    total_cakes = baked_cakes_lunch + baked_cakes_yesterday
    # The number of cakes left is the total number of baked cakes minus the sold cakes
    left_cakes_premise = total_cakes - sold_cakes_dinner
    # Check if the number of cakes left from the hypothesis equals the quantity computed from the premise
    return left_cakes_hypothesis == left_cakes_premise 

print(entailment_or_contradiction(baked_cakes_lunch, sold_cakes_dinner, baked_cakes_yesterday, left_cakes_hypothesis))
"
522,entailment,,entailment,Mrs. Hilt ate 5.0 apples in 3 hours.,She eats 1.66666666667 apples per hour on average,mrs. hilt ate 5.0 apples in 3 hours.,she eats 1.66666666667 apples per hour on average,"apples_premise = 5.0
hours_premise = 3
apples_per_hour_hypothesis = 1.66666666667

def entailment_or_contradiction(apples_premise, hours_premise, apples_per_hour_hypothesis):
    # the apples per hour can be computed from the entities in the premise
    apples_per_hour_premise = apples_premise / hours_premise
    # check if 'apples_per_hour_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return abs(apples_per_hour_premise - apples_per_hour_hypothesis) <= 1e-9

print(entailment_or_contradiction(apples_premise, hours_premise, apples_per_hour_hypothesis))
"
124,entailment,,entailment, 2.0 birds were sitting on the fence and 4.0 more birds came to join them,6.0 birds are sitting on the fence,2.0 birds were sitting on the fence and 4.0 more birds came to join them,6.0 birds are sitting on the fence,"birds_initially_premise = 2.0
birds_joined_premise = 4.0
total_birds_hypothesis = 6.0

def entailment_or_contradiction(birds_initially_premise, birds_joined_premise, total_birds_hypothesis):
    # the total number of birds in the hypothesis can be computed from the birds initially on the fence and the ones that joined them
    total_birds_premise = birds_initially_premise + birds_joined_premise
    # check if 'total_birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(birds_initially_premise, birds_joined_premise, total_birds_hypothesis))
"
334,entailment,,entailment,"The first act included 5.0 clown mobiles, each stuffed with 28.0 clowns.",140.0 clowns are inside all the clown mobiles combined,"the first act included 5.0 clown mobiles, each stuffed with 28.0 clowns.",140.0 clowns are inside all the clown mobiles combined,"clown_mobiles_premise = 5.0
clowns_per_mobile_premise = 28.0
total_clowns_hypothesis = 140.0

def entailment_or_contradiction(clown_mobiles_premise, clowns_per_mobile_premise, total_clowns_hypothesis):
    # the total number of clowns can be computed from the entities in the premise
    total_clowns_premise = clown_mobiles_premise * clowns_per_mobile_premise
    # check if 'total_clowns_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_clowns_premise == total_clowns_hypothesis

print(entailment_or_contradiction(clown_mobiles_premise, clowns_per_mobile_premise, total_clowns_hypothesis))
"
499,contradiction,,contradiction,There are 47.0 eggs in a box and Harry puts 5.0 eggs in the box,56.0 eggs are in the box,there are 47.0 eggs in a box and harry puts 5.0 eggs in the box,56.0 eggs are in the box,"eggs_in_box_initially = 47.0
eggs_put_in_by_Harry = 5.0
total_eggs_hypothesis = 56.0

def entailment_or_contradiction(eggs_in_box_initially, eggs_put_in_by_Harry, total_eggs_hypothesis):
    # The total number of eggs in the box can be computed by adding the eggs already in the box and the eggs put in by Harry
    total_eggs_premise = eggs_in_box_initially + eggs_put_in_by_Harry
    # Check if the total number of eggs as per the hypothesis equals the total number of eggs as per the premise
    return total_eggs_premise == total_eggs_hypothesis

print(entailment_or_contradiction(eggs_in_box_initially, eggs_put_in_by_Harry, total_eggs_hypothesis))
"
634,entailment,,entailment,Third-grade students went to a concert in 8.0 buses and there were 45.0 students total,5.625 students went in each bus,third-grade students went to a concert in 8.0 buses and there were 45.0 students total,5.625 students went in each bus,"buses_premise = 8.0
students_premise = 45.0
students_per_bus_hypothesis = 5.625

def entailment_or_contradiction(buses_premise, students_premise, students_per_bus_hypothesis):
    # the hypothesis talks about the number of students in each bus, which can be computed from the premise
    students_per_bus_premise = students_premise / buses_premise
    # check if 'students_per_bus_hypothesis' entails the number deduced from the premise, so if they are equal
    return students_per_bus_premise == students_per_bus_hypothesis

print(entailment_or_contradiction(buses_premise, students_premise, students_per_bus_hypothesis))
"
530,entailment,,entailment,Linda has 34.0 candies and she gave Chloe 28.0 candies,Linda has 6.0 candies left,linda has 34.0 candies and she gave chloe 28.0 candies,linda has 6.0 candies left,"initial_candies_premise = 34.0
given_candies_premise = 28.0
remaining_candies_hypothesis = 6.0

def entailment_or_contradiction(initial_candies_premise, given_candies_premise, remaining_candies_hypothesis):
    # the remaining candies in the hypothesis can be computed from the initial and given candies in the premise
    remaining_candies_premise = initial_candies_premise - given_candies_premise
    # check if 'remaining_candies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_candies_premise == remaining_candies_hypothesis

print(entailment_or_contradiction(initial_candies_premise, given_candies_premise, remaining_candies_hypothesis))
"
379,contradiction,,contradiction,There are 14.0 rulers and 34.0 crayons in a drawer and Tim takes out 11.0 rulers from the drawer,2.0 rulers are now in the drawer,there are 14.0 rulers and 34.0 crayons in a drawer and tim takes out 11.0 rulers from the drawer,2.0 rulers are now in the drawer,"rulers_premise = 14.0
taken_rulers_premise = 11.0
remaining_rulers_hypothesis = 2.0

def entailment_or_contradiction(rulers_premise, taken_rulers_premise, remaining_rulers_hypothesis):
    # the hypothesis talks about the remaining number of rulers, which can be computed from the premise
    remaining_rulers_premise = rulers_premise - taken_rulers_premise
    # check if 'remaining_rulers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_rulers_premise == remaining_rulers_hypothesis

print(entailment_or_contradiction(rulers_premise, taken_rulers_premise, remaining_rulers_hypothesis))
"
484,entailment,,entailment,"Mary had 18.0 baseball cards and promised to give Fred 26.0 baseball cards, and Mary buys 40.0 baseball cards",She will have 32.0 baseball cards left after she gives the promised cards to Fred,"mary had 18.0 baseball cards and promised to give fred 26.0 baseball cards, and mary buys 40.0 baseball cards",she will have 32.0 baseball cards left after she gives the promised cards to fred,"mary_cards_premise = 18.0
promised_cards_premise = 26.0
bought_cards_premise = 40.0
remaining_cards_hypothesis = 32.0

def entailment_or_contradiction(mary_cards_premise, promised_cards_premise, bought_cards_premise, remaining_cards_hypothesis):
    # the total number of cards after Mary buys more can be computed from the premise
    total_cards_after_buying = mary_cards_premise + bought_cards_premise
    # then, we can compute the remaining cards after Mary gives away the promised cards
    remaining_cards_premise = total_cards_after_buying - promised_cards_premise
    # check if 'remaining_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cards_premise == remaining_cards_hypothesis

print(entailment_or_contradiction(mary_cards_premise, promised_cards_premise, bought_cards_premise, remaining_cards_hypothesis))
"
207,contradiction,,contradiction, There are 261.0 fishbowls and each fishbowl has 23.0 fish,There are 5998.0 fish,there are 261.0 fishbowls and each fishbowl has 23.0 fish,there are 5998.0 fish,"fishbowls_premise = 261.0
fish_per_bowl_premise = 23.0
total_fish_hypothesis = 5998.0

def entailment_or_contradiction(fishbowls_premise, fish_per_bowl_premise, total_fish_hypothesis):
    # the total number of fish can be computed from the entities in the premise
    total_fish_premise = fishbowls_premise * fish_per_bowl_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(fishbowls_premise, fish_per_bowl_premise, total_fish_hypothesis))
"
615,contradiction,,contradiction,There are 84.0 leaves and there are 139.0 ladybugs on the leaves,The average number of ladybugs on each leaf is 1.9,there are 84.0 leaves and there are 139.0 ladybugs on the leaves,the average number of ladybugs on each leaf is 1.9,"leaves_premise = 84.0
ladybugs_premise = 139.0
average_ladybugs_hypothesis = 1.9

def entailment_or_contradiction(leaves_premise, ladybugs_premise, average_ladybugs_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    average_ladybugs_premise = ladybugs_premise / leaves_premise
    # check if the 'average_ladybugs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return average_ladybugs_premise == average_ladybugs_hypothesis

print(entailment_or_contradiction(leaves_premise, ladybugs_premise, average_ladybugs_hypothesis))
"
32,entailment,,entailment,Jason has 676.0 Pokemon cards  and Alyssa bought 224.0 of Jason 's Pokemon cards ,Jason has 452.0 Pokemon cards now,jason has 676.0 pokemon cards and alyssa bought 224.0 of jason 's pokemon cards,jason has 452.0 pokemon cards now,"jason_cards_premise = 676.0
alyssa_bought_premise = 224.0
jason_cards_hypothesis = 452.0

def entailment_or_contradiction(jason_cards_premise, alyssa_bought_premise, jason_cards_hypothesis):
    # the hypothesis suggests a total number of cards Jason has after Alyssa bought some of them
    # we can compute this total from the entities in the premise
    jason_cards_after_sale = jason_cards_premise - alyssa_bought_premise
    # check if 'jason_cards_hypothesis' matches the quantity deduced from the premise
    return jason_cards_after_sale == jason_cards_hypothesis

print(entailment_or_contradiction(jason_cards_premise, alyssa_bought_premise, jason_cards_hypothesis))
"
261,contradiction,,contradiction, Isabel bought 900.0 pieces of paper and she used 156.0 pieces of the paper,She has 745.0 pieces of paper left,isabel bought 900.0 pieces of paper and she used 156.0 pieces of the paper,she has 745.0 pieces of paper left,"bought_paper_premise = 900.0
used_paper_premise = 156.0
remaining_paper_hypothesis = 745.0

def entailment_or_contradiction(bought_paper_premise, used_paper_premise, remaining_paper_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_paper_premise = bought_paper_premise - used_paper_premise
    # check if 'remaining_paper_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_paper_premise == remaining_paper_hypothesis

print(entailment_or_contradiction(bought_paper_premise, used_paper_premise, remaining_paper_hypothesis))
"
366,entailment,,entailment,Sandy grew 6.0 carrots and Sam took 3.0 carrots,Sandy has 3.0 carrots left,sandy grew 6.0 carrots and sam took 3.0 carrots,sandy has 3.0 carrots left,"grown_carrots_premise = 6.0
taken_carrots_premise = 3.0
left_carrots_hypothesis = 3.0

def entailment_or_contradiction(grown_carrots_premise, taken_carrots_premise, left_carrots_hypothesis):
    # the premise states how many carrots were grown and how many were taken
    # from this we can compute how many are left
    left_carrots_premise = grown_carrots_premise - taken_carrots_premise
    # check if the number of left carrots from the hypothesis equals the computed number from the premise
    return left_carrots_premise == left_carrots_hypothesis

print(entailment_or_contradiction(grown_carrots_premise, taken_carrots_premise, left_carrots_hypothesis))
"
329,contradiction,,contradiction,"There are 24.0 bicycles and 14.0 tricycles in the storage area at Danny's apartment building and each bicycle has 2.0 wheels, and each tricycle has 3.0 wheels",87.0 wheels are there in all,"there are 24.0 bicycles and 14.0 tricycles in the storage area at danny's apartment building and each bicycle has 2.0 wheels, and each tricycle has 3.0 wheels",87.0 wheels are there in all,"bicycles_premise = 24.0
tricycles_premise = 14.0
bicycle_wheels_premise = 2.0
tricycle_wheels_premise = 3.0
total_wheels_hypothesis = 87.0

def entailment_or_contradiction(bicycles_premise, tricycles_premise, bicycle_wheels_premise, tricycle_wheels_premise, total_wheels_hypothesis):
    # calculate the total number of wheels from the premise
    total_wheels_premise = (bicycles_premise * bicycle_wheels_premise) + (tricycles_premise * tricycle_wheels_premise)
    # check if 'total_wheels_hypothesis' is equal to the quantity deduced from the premise
    return total_wheels_premise == total_wheels_hypothesis

print(entailment_or_contradiction(bicycles_premise, tricycles_premise, bicycle_wheels_premise, tricycle_wheels_premise, total_wheels_hypothesis))
"
40,entailment,,entailment,There are 46.0 rulers in the drawer  and Tim took 25.0 rulers from the drawer ,21.0 rulers are now in the drawer ,there are 46.0 rulers in the drawer and tim took 25.0 rulers from the drawer,21.0 rulers are now in the drawer,"rulers_premise = 46.0
taken_rulers_premise = 25.0
rulers_hypothesis = 21.0

def entailment_or_contradiction(rulers_premise, taken_rulers_premise, rulers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_rulers_premise = rulers_premise - taken_rulers_premise
    # check if 'rulers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_rulers_premise == rulers_hypothesis

print(entailment_or_contradiction(rulers_premise, taken_rulers_premise, rulers_hypothesis))
"
571,contradiction,,contradiction,There were 28.0 girls and 35.0 boys on the playground at recess.,6.0 more boys are there than girls,there were 28.0 girls and 35.0 boys on the playground at recess.,6.0 more boys are there than girls,"girls_premise = 28.0
boys_premise = 35.0
more_boys_hypothesis = 6.0

def entailment_or_contradiction(girls_premise, boys_premise, more_boys_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    difference_premise = boys_premise - girls_premise
    # check if 'more_boys_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return difference_premise == more_boys_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, more_boys_hypothesis))
"
262,entailment,,entailment," Mrs. Hilt impressed 2436.0 fans at the basketball game on Friday, and the fans were seated in equal groups on 3.0 sets of bleachers",812.0 fans were on each set,"mrs. hilt impressed 2436.0 fans at the basketball game on friday, and the fans were seated in equal groups on 3.0 sets of bleachers",812.0 fans were on each set,"total_fans_premise = 2436.0
bleachers_sets_premise = 3.0
fans_per_set_hypothesis = 812.0

def entailment_or_contradiction(total_fans_premise, bleachers_sets_premise, fans_per_set_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    fans_per_set_premise = total_fans_premise / bleachers_sets_premise
    # check if 'fans_per_set_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return fans_per_set_premise == fans_per_set_hypothesis

print(entailment_or_contradiction(total_fans_premise, bleachers_sets_premise, fans_per_set_hypothesis))
"
671,contradiction,,contradiction,A book store had 41.0 books in the bargin bin and they then sort out 2.0 books off the bin and sold 33.0 books,3.0 books would now be in the bin,a book store had 41.0 books in the bargin bin and they then sort out 2.0 books off the bin and sold 33.0 books,3.0 books would now be in the bin,"initial_books_premise = 41.0
sorted_books_premise = 2.0
sold_books_premise = 33.0
books_in_bin_hypothesis = 3.0

def entailment_or_contradiction(initial_books_premise, sorted_books_premise, sold_books_premise, books_in_bin_hypothesis):
    # the books in the bin can be computed by subtracting the sorted and sold books from the initial books in premise
    books_in_bin_premise = initial_books_premise - sorted_books_premise - sold_books_premise
    # check if the books in bin from hypothesis equals the calculated books in bin from premise
    return books_in_bin_premise == books_in_bin_hypothesis

print(entailment_or_contradiction(initial_books_premise, sorted_books_premise, sold_books_premise, books_in_bin_hypothesis))
"
134,entailment,,entailment, 2.0 toucans are sitting on a tree limb and 1.0 more toucan joins them,There are 3.0 toucans in all,2.0 toucans are sitting on a tree limb and 1.0 more toucan joins them,there are 3.0 toucans in all,"sitting_toucans_premise = 2.0
joined_toucans_premise = 1.0
total_toucans_hypothesis = 3.0

def entailment_or_contradiction(sitting_toucans_premise, joined_toucans_premise, total_toucans_hypothesis):
    # the total number of toucans in the hypothesis can be computed from the entities in the premise
    total_toucans_premise = sitting_toucans_premise + joined_toucans_premise
    # check if 'total_toucans_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_toucans_premise == total_toucans_hypothesis

print(entailment_or_contradiction(sitting_toucans_premise, joined_toucans_premise, total_toucans_hypothesis))
"
403,contradiction,,contradiction,Alyssa picked 42.0 pears from the pear tree and Nancy sold 17.0 of the pears ,21.0 pears were left ,alyssa picked 42.0 pears from the pear tree and nancy sold 17.0 of the pears,21.0 pears were left,"pears_picked_premise = 42.0
pears_sold_premise = 17.0
pears_left_hypothesis = 21.0

def entailment_or_contradiction(pears_picked_premise, pears_sold_premise, pears_left_hypothesis):
    # compute the remaining pears from the premise
    pears_left_premise = pears_picked_premise - pears_sold_premise
    # check if 'pears_left_hypothesis' matches the computed quantity from the premise
    return pears_left_premise == pears_left_hypothesis

print(entailment_or_contradiction(pears_picked_premise, pears_sold_premise, pears_left_hypothesis))
"
449,contradiction,,contradiction,"A petri dish originally contained 600.0 bacteria  and a scientist let the bacteria grow, and now there are 8917.0 more of them",9513.0 bacteria are there now ,"a petri dish originally contained 600.0 bacteria and a scientist let the bacteria grow, and now there are 8917.0 more of them",9513.0 bacteria are there now,"original_bacteria_premise = 600.0
additional_bacteria_premise = 8917.0
total_bacteria_hypothesis = 9513.0

def entailment_or_contradiction(original_bacteria_premise, additional_bacteria_premise, total_bacteria_hypothesis):
    # the total number of bacteria after growth can be computed from the numbers in the premise
    total_bacteria_premise = original_bacteria_premise + additional_bacteria_premise
    # check if 'total_bacteria_hypothesis' is equal to the number deduced from the premise
    return total_bacteria_premise == total_bacteria_hypothesis

print(entailment_or_contradiction(original_bacteria_premise, additional_bacteria_premise, total_bacteria_hypothesis))
"
154,entailment,,entailment, Sandy had 26.0 pet fish and she bought 6.0 more fish,Sandy has 32.0 pet fish now,sandy had 26.0 pet fish and she bought 6.0 more fish,sandy has 32.0 pet fish now,"original_fish_premise = 26.0
bought_fish_premise = 6.0
total_fish_hypothesis = 32.0

def entailment_or_contradiction(original_fish_premise, bought_fish_premise, total_fish_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_fish_premise = original_fish_premise + bought_fish_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(original_fish_premise, bought_fish_premise, total_fish_hypothesis))
"
608,entailment,,entailment,There were 58.0 geese and 37.0 ducks in the marsh.,21.0 more geese were in the marsh,there were 58.0 geese and 37.0 ducks in the marsh.,21.0 more geese were in the marsh,"geese_premise = 58.0
ducks_premise = 37.0
more_geese_hypothesis = 21.0

def entailment_or_contradiction(geese_premise, ducks_premise, more_geese_hypothesis):
    # the hypothesis talks about the difference in number between geese and ducks, which can be computed from the premise
    difference_geese_ducks_premise = geese_premise - ducks_premise
    # check if 'more_geese_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return difference_geese_ducks_premise == more_geese_hypothesis

print(entailment_or_contradiction(geese_premise, ducks_premise, more_geese_hypothesis))
"
507,contradiction,,contradiction,Marilyn has 51.0 bottle caps and Nancy gives her 36.0,Marilyn has 84.0 bottle caps now,marilyn has 51.0 bottle caps and nancy gives her 36.0,marilyn has 84.0 bottle caps now,"initial_caps_marilyn_premise = 51.0
received_caps_premise = 36.0
total_caps_hypothesis = 84.0

def entailment_or_contradiction(initial_caps_marilyn_premise, received_caps_premise, total_caps_hypothesis):
    # the total number of caps Marilyn has can be computed from the entities in the premise
    total_caps_premise = initial_caps_marilyn_premise + received_caps_premise
    # check if 'total_caps_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_caps_premise == total_caps_hypothesis

print(entailment_or_contradiction(initial_caps_marilyn_premise, received_caps_premise, total_caps_hypothesis))
"
276,entailment,,entailment," A teacher had 6.0 worksheets to grade, and she graded 4.0 but then another 18.0 were turned in",She would have 20.0 worksheets to grade,"a teacher had 6.0 worksheets to grade, and she graded 4.0 but then another 18.0 were turned in",she would have 20.0 worksheets to grade,"initial_worksheets_premise = 6.0
graded_worksheets_premise = 4.0
additional_worksheets_premise = 18.0
total_worksheets_hypothesis = 20.0

def entailment_or_contradiction(initial_worksheets_premise, graded_worksheets_premise, additional_worksheets_premise, total_worksheets_hypothesis):
    # the hypothesis talks about the total number of worksheets to grade, which can be computed from the premise
    remaining_worksheets_premise = initial_worksheets_premise - graded_worksheets_premise
    total_worksheets_premise = remaining_worksheets_premise + additional_worksheets_premise
    # check if 'total_worksheets_premise' entails the quantity deduced from the hypothesis, so if they are equal
    return total_worksheets_premise == total_worksheets_hypothesis

print(entailment_or_contradiction(initial_worksheets_premise, graded_worksheets_premise, additional_worksheets_premise, total_worksheets_hypothesis))
"
29,contradiction,,contradiction,Sam had 98.0 pennies in his bank  and he spent 93.0 of his pennies ,He has 0.0 pennies now,sam had 98.0 pennies in his bank and he spent 93.0 of his pennies,he has 0.0 pennies now,"pennies_initial_premise = 98.0
pennies_spent_premise = 93.0
pennies_remaining_hypothesis = 0.0

def entailment_or_contradiction(pennies_initial_premise, pennies_spent_premise, pennies_remaining_hypothesis):
    # The hypothesis can be computed from the entities in the premise
    pennies_remaining_premise = pennies_initial_premise - pennies_spent_premise
    # Check if 'pennies_remaining_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pennies_remaining_premise == pennies_remaining_hypothesis

print(entailment_or_contradiction(pennies_initial_premise, pennies_spent_premise, pennies_remaining_hypothesis))
"
626,entailment,,entailment,Marlee has 3.0 tables for her Halloween party and each table will hold 12.0 guests,She can invite 36.0 guests,marlee has 3.0 tables for her halloween party and each table will hold 12.0 guests,she can invite 36.0 guests,"tables_premise = 3.0
guests_per_table_premise = 12.0
total_guests_hypothesis = 36.0

def entailment_or_contradiction(tables_premise, guests_per_table_premise, total_guests_hypothesis):
    # the total guests that can be accommodated can be computed from the entities in the premise
    total_guests_premise = tables_premise * guests_per_table_premise
    # check if 'total_guests_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_guests_premise == total_guests_hypothesis

print(entailment_or_contradiction(tables_premise, guests_per_table_premise, total_guests_hypothesis))
"
625,contradiction,,contradiction,3.0 cars with 63.0 people each are going to the zoo.,187.0 people are going to the zoo,3.0 cars with 63.0 people each are going to the zoo.,187.0 people are going to the zoo,"cars_premise = 3.0
people_per_car_premise = 63.0
total_people_hypothesis = 187.0

def entailment_or_contradiction(cars_premise, people_per_car_premise, total_people_hypothesis):
    # the total number of people going to the zoo can be deduced from the premise
    total_people_premise = cars_premise * people_per_car_premise
    # if the 'total_people_hypothesis' is equal to the quantity deduced from the premise, then the hypothesis is entailed
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(cars_premise, people_per_car_premise, total_people_hypothesis))
"
254,entailment,,entailment, Jorge scored 156.0 goals playing soccer last season and this season he scored 187.0 goals,The total number of goals Jorge scored is 343.0,jorge scored 156.0 goals playing soccer last season and this season he scored 187.0 goals,the total number of goals jorge scored is 343.0,"last_season_goals_premise = 156.0
this_season_goals_premise = 187.0
total_goals_hypothesis = 343.0

def entailment_or_contradiction(last_season_goals_premise, this_season_goals_premise, total_goals_hypothesis):
    # the total goals in the hypothesis can be deduced by adding goals from each season from the premise
    total_goals_premise = last_season_goals_premise + this_season_goals_premise
    # check if 'total_goals_hypothesis' is equal to the quantity deduced from the premise
    return total_goals_premise == total_goals_hypothesis

print(entailment_or_contradiction(last_season_goals_premise, this_season_goals_premise, total_goals_hypothesis))
"
668,entailment,,entailment,"A florist had 37.0 roses, and she picked 16.0 more and then later picked another 19.0 more",She would have 72.0 roses ,"a florist had 37.0 roses, and she picked 16.0 more and then later picked another 19.0 more",she would have 72.0 roses,"initial_roses_premise = 37.0
first_pick_premise = 16.0
second_pick_premise = 19.0
total_roses_hypothesis = 72.0

def entailment_or_contradiction(initial_roses_premise, first_pick_premise, second_pick_premise, total_roses_hypothesis):
    # total roses can be computed by adding the initial number of roses with the number of roses picked later
    total_roses_premise = initial_roses_premise + first_pick_premise + second_pick_premise
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, first_pick_premise, second_pick_premise, total_roses_hypothesis))
"
524,entailment,,entailment,"There were 10.0 students riding on the school bus and at the first stop, 3.0 students got on the bus",13.0 students are now on the bus,"there were 10.0 students riding on the school bus and at the first stop, 3.0 students got on the bus",13.0 students are now on the bus,"students_start_premise = 10.0
students_on_premise = 3.0
total_students_hypothesis = 13.0

def entailment_or_contradiction(students_start_premise, students_on_premise, total_students_hypothesis):
    # calculate the total students in bus after the first stop from the premise
    total_students_premise = students_start_premise + students_on_premise
    # check if 'total_students_hypothesis' is equal to the total students computed from the premise
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(students_start_premise, students_on_premise, total_students_hypothesis))
"
460,entailment,,entailment,"Nicole found an orange caterpillar and a green caterpillar in her backyard  and the green caterpillar was 3.0 inches long, and the orange caterpillar was 1.1666666666666667 inches long ",The green caterpillar and orange caterpillar were 4.16666666667 inches in total,"nicole found an orange caterpillar and a green caterpillar in her backyard and the green caterpillar was 3.0 inches long, and the orange caterpillar was 1.1666666666666667 inches long",the green caterpillar and orange caterpillar were 4.16666666667 inches in total,"green_caterpillar_premise = 3.0
orange_caterpillar_premise = 1.1666666666666667
total_caterpillars_hypothesis = 4.16666666667

def entailment_or_contradiction(green_caterpillar_premise, orange_caterpillar_premise, total_caterpillars_hypothesis):
    # the total length of the caterpillars can be computed from the premise
    total_caterpillars_premise = green_caterpillar_premise + orange_caterpillar_premise
    # check if the total length of the caterpillars in the hypothesis entails the quantity deduced from the premise
    return round(total_caterpillars_premise, 2) == round(total_caterpillars_hypothesis, 2)

print(entailment_or_contradiction(green_caterpillar_premise, orange_caterpillar_premise, total_caterpillars_hypothesis))
"
