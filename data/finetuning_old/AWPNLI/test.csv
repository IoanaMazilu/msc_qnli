sample_index,generated_label,error_message,golden_label,premise,hypothesis,clean_premise,clean_hypothesis,completion
246,entailment,,entailment, A perfect score is 21.0 points.,You would have 63.0 points after 3.0 perfect games in a row,a perfect score is 21.0 points.,you would have 63.0 points after 3.0 perfect games in a row,"perfect_score_premise = 21.0
games_hypothesis = 3.0
total_points_hypothesis = 63.0

def entailment_or_contradiction(perfect_score_premise, games_hypothesis, total_points_hypothesis):
    # the hypothesis talks about the total points after a number of games, which can be computed from the premise
    total_points_premise = perfect_score_premise * games_hypothesis
    # check if 'total_points_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_points_premise == total_points_hypothesis

print(entailment_or_contradiction(perfect_score_premise, games_hypothesis, total_points_hypothesis))
"
61,contradiction,,contradiction,"Karin 's science class weighed plastic rings for an experiment  and they found that the orange ring weighed 0.08333333333333333 ounce , the purple ring weighed 0.3333333333333333 ounce , and the white ring weighed 0.4166666666666667 ounce ",The total weight of the plastic rings  is 2.5,"karin 's science class weighed plastic rings for an experiment and they found that the orange ring weighed 0.08333333333333333 ounce , the purple ring weighed 0.3333333333333333 ounce , and the white ring weighed 0.4166666666666667 ounce",the total weight of the plastic rings is 2.5,"orange_ring_weight_premise = 0.08333333333333333
purple_ring_weight_premise = 0.3333333333333333
white_ring_weight_premise = 0.4166666666666667
total_weight_hypothesis = 2.5

def entailment_or_contradiction(orange_ring_weight_premise, purple_ring_weight_premise, white_ring_weight_premise, total_weight_hypothesis):
    # the hypothesis talks about the total weight of the rings, which can be computed from the weights given in the premise
    total_weight_premise = orange_ring_weight_premise + purple_ring_weight_premise + white_ring_weight_premise
    # check if 'total_weight_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_weight_premise == total_weight_hypothesis

print(entailment_or_contradiction(orange_ring_weight_premise, purple_ring_weight_premise, white_ring_weight_premise, total_weight_hypothesis))
"
338,entailment,,entailment,"For the final act, the circus brought out dancing animals wearing crowns, and each crown is made with 7.0 different colored feathers",6538.0 feathers are needed for 934.0 crowns,"for the final act, the circus brought out dancing animals wearing crowns, and each crown is made with 7.0 different colored feathers",6538.0 feathers are needed for 934.0 crowns,"feathers_per_crown_premise = 7.0
crowns_hypothesis = 934.0
total_feathers_hypothesis = 6538.0

def entailment_or_contradiction(feathers_per_crown_premise, crowns_hypothesis, total_feathers_hypothesis):
    # the total number of feathers needed can be computed from the number of crowns and feathers per crown
    total_feathers_premise = feathers_per_crown_premise * crowns_hypothesis
    # check if 'total_feathers_hypothesis' entails the quantity deduced from the premise
    return total_feathers_premise == total_feathers_hypothesis

print(entailment_or_contradiction(feathers_per_crown_premise, crowns_hypothesis, total_feathers_hypothesis))
"
173,contradiction,,contradiction, There are 40.0 boys and some girls on the playground and there are 117.0 children altogether,79.0 girls are on the playground,there are 40.0 boys and some girls on the playground and there are 117.0 children altogether,79.0 girls are on the playground,"boys_premise = 40.0
total_children_premise = 117.0
girls_hypothesis = 79.0

def entailment_or_contradiction(boys_premise, total_children_premise, girls_hypothesis):
    # the hypothesis says there are 79 girls on the playground, which can be computed from the premise
    # subtract the number of boys from the total number of children to get the number of girls
    girls_premise = total_children_premise - boys_premise
    # check if 'girls_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return girls_premise == girls_hypothesis

print(entailment_or_contradiction(boys_premise, total_children_premise, girls_hypothesis))
"
659,contradiction,,contradiction,A perfect score is 21 points and 3 games were played,3.0 points were earned per round,a perfect score is 21 points and 3 games were played,3.0 points were earned per round,"perfect_score_premise = 21
games_played_premise = 3
points_per_round_hypothesis = 3.0

def entailment_or_contradiction(perfect_score_premise, games_played_premise, points_per_round_hypothesis):
    # Calculate the average points per round from the premise
    points_per_round_premise = perfect_score_premise / games_played_premise
    # Check if the points per round in the hypothesis match the calculated points per round from the premise
    return points_per_round_premise == points_per_round_hypothesis

print(entailment_or_contradiction(perfect_score_premise, games_played_premise, points_per_round_hypothesis))
"
600,entailment,,entailment,There are 38.0 books on the shelf and Marta takes 10.0 books off the shelf,28.0 books are on the shelf now,there are 38.0 books on the shelf and marta takes 10.0 books off the shelf,28.0 books are on the shelf now,"books_on_shelf_premise = 38.0
taken_books_premise = 10.0
books_on_shelf_hypothesis = 28.0

def entailment_or_contradiction(books_on_shelf_premise, taken_books_premise, books_on_shelf_hypothesis):
    # the number of books on the shelf after Marta's action can be computed from the entities in the premise
    books_on_shelf_after_marta_premise = books_on_shelf_premise - taken_books_premise
    # check if 'books_on_shelf_hypothesis' entails the quantity deduced from the premise
    return books_on_shelf_after_marta_premise == books_on_shelf_hypothesis

print(entailment_or_contradiction(books_on_shelf_premise, taken_books_premise, books_on_shelf_hypothesis))
"
705,contradiction,,contradiction,Mary has 9.0 yellow marbles and she gave Joan 3.0 yellow marbles,Mary has 7.0 yellow marbles left,mary has 9.0 yellow marbles and she gave joan 3.0 yellow marbles,mary has 7.0 yellow marbles left,"mary_marbles_premise = 9.0
mary_gave_marbles_premise = 3.0
mary_marbles_left_hypothesis = 7.0

def entailment_or_contradiction(mary_marbles_premise, mary_gave_marbles_premise, mary_marbles_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    mary_marbles_left_premise = mary_marbles_premise - mary_gave_marbles_premise
    # check if 'mary_marbles_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return mary_marbles_left_premise == mary_marbles_left_hypothesis

print(entailment_or_contradiction(mary_marbles_premise, mary_gave_marbles_premise, mary_marbles_left_hypothesis))
"
635,contradiction,,contradiction,Third-grade students went to a concert in 8.0 buses and there were 45.0 students total,3.1 students went in each bus,third-grade students went to a concert in 8.0 buses and there were 45.0 students total,3.1 students went in each bus,"buses_premise = 8.0
students_premise = 45.0
students_per_bus_hypothesis = 3.1

def entailment_or_contradiction(buses_premise, students_premise, students_per_bus_hypothesis):
    # calculate the students per bus from the premise
    students_per_bus_premise = students_premise / buses_premise
    # check if 'students_per_bus_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return students_per_bus_premise == students_per_bus_hypothesis

print(entailment_or_contradiction(buses_premise, students_premise, students_per_bus_hypothesis))
"
178,entailment,,entailment, Josh had 16.0 marbles in his collection and he lost 7.0 marbles,He has 9.0 marbles now,josh had 16.0 marbles in his collection and he lost 7.0 marbles,he has 9.0 marbles now,"initial_marbles_premise = 16.0
lost_marbles_premise = 7.0
current_marbles_hypothesis = 9.0

def entailment_or_contradiction(initial_marbles_premise, lost_marbles_premise, current_marbles_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    current_marbles_premise = initial_marbles_premise - lost_marbles_premise
    # check if 'current_marbles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return current_marbles_premise == current_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_premise, lost_marbles_premise, current_marbles_hypothesis))
"
278,entailment,,entailment," A waiter had 19.0 customers to wait on, and 14.0 customers left and he got another 36.0 customers",He would have 41.0 customers ,"a waiter had 19.0 customers to wait on, and 14.0 customers left and he got another 36.0 customers",he would have 41.0 customers,"initial_customers_premise = 19.0
left_customers_premise = 14.0
new_customers_premise = 36.0
total_customers_hypothesis = 41.0

def entailment_or_contradiction(initial_customers_premise, left_customers_premise, new_customers_premise, total_customers_hypothesis):
    # the hypothesis talks about the total number of customers, which can be computed from the premise
    total_customers_premise = initial_customers_premise - left_customers_premise + new_customers_premise
    # check if 'total_customers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_customers_premise == total_customers_hypothesis

print(entailment_or_contradiction(initial_customers_premise, left_customers_premise, new_customers_premise, total_customers_hypothesis))
"
368,entailment,,entailment,"Joan had 9.0 blue balloons , but Sally popped 5.0 of them and Jessica has 2.0 blue balloons ",They have 6.0 blue balloons now,"joan had 9.0 blue balloons , but sally popped 5.0 of them and jessica has 2.0 blue balloons",they have 6.0 blue balloons now,"initial_balloons_joan = 9.0
popped_balloons_sally = 5.0
balloons_jessica = 2.0
total_balloons_hypothesis = 6.0

def entailment_or_contradiction(initial_balloons_joan, popped_balloons_sally, balloons_jessica, total_balloons_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    total_balloons_premise = initial_balloons_joan - popped_balloons_sally + balloons_jessica
    # check if 'total_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(initial_balloons_joan, popped_balloons_sally, balloons_jessica, total_balloons_hypothesis))
"
185,contradiction,,contradiction," Mark has 13.0 trees in his backyard, and he plants 12.0 more",He will have 28.0 trees ,"mark has 13.0 trees in his backyard, and he plants 12.0 more",he will have 28.0 trees,"trees_before_planting_premise = 13.0
trees_planted_premise = 12.0
total_trees_hypothesis = 28.0

def entailment_or_contradiction(trees_before_planting_premise, trees_planted_premise, total_trees_hypothesis):
    # the hypothesis talks about the total number of trees, which can be computed from the entities in the premise
    total_trees_premise = trees_before_planting_premise + trees_planted_premise
    # check if 'total_trees_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_trees_premise == total_trees_hypothesis

print(entailment_or_contradiction(trees_before_planting_premise, trees_planted_premise, total_trees_hypothesis))
"
126,entailment,,entailment, There are 6.0 birds and 3.0 nests.,There are 3.0 more birds than nests,there are 6.0 birds and 3.0 nests.,there are 3.0 more birds than nests,"birds_premise = 6.0
nests_premise = 3.0
more_birds_than_nests_hypothesis = 3.0

def entailment_or_contradiction(birds_premise, nests_premise, more_birds_than_nests_hypothesis):
    # the hypothesis states that there are 3.0 more birds than nests, which can be computed from the premise
    difference_birds_nests_premise = birds_premise - nests_premise
    # check if 'more_birds_than_nests_hypothesis' is equal to the difference computed from the premise
    return difference_birds_nests_premise == more_birds_than_nests_hypothesis 

print(entailment_or_contradiction(birds_premise, nests_premise, more_birds_than_nests_hypothesis))
"
648,contradiction,,entailment,There are 45.0 pounds of oranges and each bag contains 23.0 pounds of oranges,There are 1.95652173913 bags,there are 45.0 pounds of oranges and each bag contains 23.0 pounds of oranges,there are 1.95652173913 bags,"total_oranges_premise = 45.0
oranges_per_bag_premise = 23.0
total_bags_hypothesis = 1.95652173913

def entailment_or_contradiction(total_oranges_premise, oranges_per_bag_premise, total_bags_hypothesis):
    # calculate the total number of bags from the premise 
    total_bags_premise = total_oranges_premise / oranges_per_bag_premise
    # check if 'total_bags_hypothesis' entails the quantity deduced from the premise
    return total_bags_premise == total_bags_hypothesis

print(entailment_or_contradiction(total_oranges_premise, oranges_per_bag_premise, total_bags_hypothesis))
"
267,contradiction,,contradiction," Amy had 4.0 music files and 21.0 video files on her flash drive, and she deleted 23.0 of the files",0.0 files were still on her flash drive,"amy had 4.0 music files and 21.0 video files on her flash drive, and she deleted 23.0 of the files",0.0 files were still on her flash drive,"music_files_premise = 4.0
video_files_premise = 21.0
deleted_files_premise = 23.0
remaining_files_hypothesis = 0.0

def entailment_or_contradiction(music_files_premise, video_files_premise, deleted_files_premise, remaining_files_hypothesis):
    # total files before deletion can be computed from the music and video files
    total_files_premise = music_files_premise + video_files_premise
    # remaining files after deletion can be computed by subtracting the deleted files from the total files
    remaining_files_premise = total_files_premise - deleted_files_premise
    # check if 'remaining_files_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return remaining_files_premise == remaining_files_hypothesis

print(entailment_or_contradiction(music_files_premise, video_files_premise, deleted_files_premise, remaining_files_hypothesis))
"
362,entailment,,entailment,A restaurant served 9 pizzas but 6 were returned.,3.0 pizzas were successfully served,a restaurant served 9 pizzas but 6 were returned.,3.0 pizzas were successfully served,"served_pizzas_premise = 9
returned_pizzas_premise = 6
successfully_served_pizzas_hypothesis = 3.0

def entailment_or_contradiction(served_pizzas_premise, returned_pizzas_premise, successfully_served_pizzas_hypothesis):
    # the premise mentions the number of pizzas served and returned, 
    # the number of successfully served pizzas can be computed from the premise
    successfully_served_pizzas_premise = served_pizzas_premise - returned_pizzas_premise
    # check if 'successfully_served_pizzas_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return successfully_served_pizzas_premise == successfully_served_pizzas_hypothesis

print(entailment_or_contradiction(served_pizzas_premise, returned_pizzas_premise, successfully_served_pizzas_hypothesis))
"
517,entailment,,contradiction,A bee has 6.0 legs and the legs are split on 2.0 sides of their body,0.0 legs are on a side,a bee has 6.0 legs and the legs are split on 2.0 sides of their body,0.0 legs are on a side,"legs_premise = 6.0
sides_premise = 2.0
legs_side_hypothesis = 0.0

def entailment_or_contradiction(legs_premise, sides_premise, legs_side_hypothesis):
    # the hypothesis talks about legs on a side of the bee's body, which can be computed from the premise
    legs_side_premise = legs_premise / sides_premise
    # check if 'legs_on_side_hypothesis' contradicts the quantity deduced from the premise, if they are not equal
    return legs_side_premise != legs_side_hypothesis

print(entailment_or_contradiction(legs_premise, sides_premise, legs_side_hypothesis))
"
153,contradiction,,contradiction, 13.0 ducks are swimming in a lake and 20.0 more ducks come to join them,31.0 ducks are swimming in the lake,13.0 ducks are swimming in a lake and 20.0 more ducks come to join them,31.0 ducks are swimming in the lake,"initial_ducks_premise = 13.0
joined_ducks_premise = 20.0
total_ducks_hypothesis = 31.0

def entailment_or_contradiction(initial_ducks_premise, joined_ducks_premise, total_ducks_hypothesis):
    # the total number of ducks in the hypothesis can be computed from the initial ducks and the joined ducks in the premise
    total_ducks_premise = initial_ducks_premise + joined_ducks_premise
    # check if 'total_ducks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_ducks_premise == total_ducks_hypothesis

print(entailment_or_contradiction(initial_ducks_premise, joined_ducks_premise, total_ducks_hypothesis))
"
310,entailment,,entailment,Sara had 21.0 quarters in her bank and her dad gave her 49.0 more quarters,She has 70.0 quarters now,sara had 21.0 quarters in her bank and her dad gave her 49.0 more quarters,she has 70.0 quarters now,"quarters_sara_premise = 21.0
quarters_dad_premise = 49.0
total_quarters_hypothesis = 70.0

def entailment_or_contradiction(quarters_sara_premise, quarters_dad_premise, total_quarters_hypothesis):
    # the total number of quarters in the hypothesis can be computed from the quantities in the premise
    total_quarters_premise = quarters_sara_premise + quarters_dad_premise
    # check if 'total_quarters_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_quarters_premise == total_quarters_hypothesis

print(entailment_or_contradiction(quarters_sara_premise, quarters_dad_premise, total_quarters_hypothesis))
"
450,entailment,,entailment,"Molly is the owner of the Wafting Pie Company and her employees used 816.0 eggs to bake pumpkin pies this morning, and 1339.0 eggs this afternoon",2155.0 eggs were used this day,"molly is the owner of the wafting pie company and her employees used 816.0 eggs to bake pumpkin pies this morning, and 1339.0 eggs this afternoon",2155.0 eggs were used this day,"eggs_morning_premise = 816.0
eggs_afternoon_premise = 1339.0
total_eggs_hypothesis = 2155.0

def entailment_or_contradicition(eggs_morning_premise, eggs_afternoon_premise, total_eggs_hypothesis):
    # the total number of eggs used in the hypothesis can be computed from the eggs used in the morning and in the afternoon from the premise
    total_eggs_premise = eggs_morning_premise + eggs_afternoon_premise
    # check if 'total_eggs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_eggs_premise == total_eggs_hypothesis

print(entailment_or_contradicition(eggs_morning_premise, eggs_afternoon_premise, total_eggs_hypothesis))
"
569,contradiction,,contradiction,Misha has 34.0 dollars and she receives 47.0 dollars more,She has 78.0 dollars now,misha has 34.0 dollars and she receives 47.0 dollars more,she has 78.0 dollars now,"initial_money_premise = 34.0
received_money_premise = 47.0
total_money_hypothesis = 78.0

def entailment_or_contradiction(initial_money_premise, received_money_premise, total_money_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_money_premise = initial_money_premise + received_money_premise
    # check if 'total_money_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(initial_money_premise, received_money_premise, total_money_hypothesis))
"
469,contradiction,,contradiction,Sara had 100.0 pennies and 783.0 quarters in her bank  and her dad gave 271.0 quarters to Sara ,She has 1049.0 quarters now,sara had 100.0 pennies and 783.0 quarters in her bank and her dad gave 271.0 quarters to sara,she has 1049.0 quarters now,"initial_quarters_premise = 783.0
given_quarters_premise = 271.0
total_quarters_hypothesis = 1049.0

def entailment_or_contradiction(initial_quarters_premise, given_quarters_premise, total_quarters_hypothesis):
    # the total number of quarters Sara has can be computed from the initial number of quarters and the ones she received
    total_quarters_premise = initial_quarters_premise + given_quarters_premise
    # check if the total number of quarters in the hypothesis matches the one computed from the premise
    return total_quarters_premise == total_quarters_hypothesis

print(entailment_or_contradiction(initial_quarters_premise, given_quarters_premise, total_quarters_hypothesis))
"
232,entailment,,entailment, A pet supply store has 600.0 bags of dog food and 327.0 bags of cat food.,273.0 more bags of dog food are there than cat food,a pet supply store has 600.0 bags of dog food and 327.0 bags of cat food.,273.0 more bags of dog food are there than cat food,"dog_food_bags_premise = 600.0
cat_food_bags_premise = 327.0
more_dog_food_bags_hypothesis = 273.0

def entailment_or_contradiction(dog_food_bags_premise, cat_food_bags_premise, more_dog_food_bags_hypothesis):
    # the hypothesis talks about the difference in the number of dog food bags and cat food bags, which can be computed from the premise
    difference_in_bags_premise = dog_food_bags_premise - cat_food_bags_premise
    # check if 'more_dog_food_bags_hypothesis' is equal to the difference in bags computed from the premise
    return difference_in_bags_premise == more_dog_food_bags_hypothesis

print(entailment_or_contradiction(dog_food_bags_premise, cat_food_bags_premise, more_dog_food_bags_hypothesis))
"
709,contradiction,,contradiction,"After 6.0 days of harvesting, Lewis found they had 83.0 sacks of oranges.",They harvest 18.0 sacks of oranges per day,"after 6.0 days of harvesting, lewis found they had 83.0 sacks of oranges.",they harvest 18.0 sacks of oranges per day,"days_harvesting_premise = 6.0
sacks_oranges_premise = 83.0
sacks_oranges_per_day_hypothesis = 18.0

def entailment_or_contradiction(days_harvesting_premise, sacks_oranges_premise, sacks_oranges_per_day_hypothesis):
    # The premise gives the total number of sacks after a certain number of days. From this, we can compute the average number of sacks harvested per day.
    sacks_oranges_per_day_premise = sacks_oranges_premise/days_harvesting_premise
    # Then we compare this with the number of sacks per day given in the hypothesis.
    return sacks_oranges_per_day_premise == sacks_oranges_per_day_hypothesis

print(entailment_or_contradiction(days_harvesting_premise, sacks_oranges_premise, sacks_oranges_per_day_hypothesis))
"
69,contradiction,,contradiction,Sara had 100.0 pennies and 783.0 quarters in her bank  and her dad borrowed 271.0 quarters from Sara ,She has 513.0 quarters now,sara had 100.0 pennies and 783.0 quarters in her bank and her dad borrowed 271.0 quarters from sara,she has 513.0 quarters now,"pennies_premise = 100.0
quarters_premise = 783.0
borrowed_quarters_premise = 271.0
quarters_hypothesis = 513.0

def entailment_or_contradiction(pennies_premise, quarters_premise, borrowed_quarters_premise, quarters_hypothesis):
    # the number of quarters Sara has now can be calculated from the premise
    remaining_quarters_premise = quarters_premise - borrowed_quarters_premise
    # check if 'quarters_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_quarters_premise == quarters_hypothesis

print(entailment_or_contradiction(pennies_premise, quarters_premise, borrowed_quarters_premise, quarters_hypothesis))
"
444,entailment,,entailment,A bathing suit manufacturer has a supply of 14797.0 bathing suits in total and it has 4969.0 bathing suits for women ,9828.0 bathing suits are there for men,a bathing suit manufacturer has a supply of 14797.0 bathing suits in total and it has 4969.0 bathing suits for women,9828.0 bathing suits are there for men,"total_bathing_suits_premise = 14797.0
women_bathing_suits_premise = 4969.0
men_bathing_suits_hypothesis = 9828.0

def entailment_or_contradiction(total_bathing_suits_premise, women_bathing_suits_premise, men_bathing_suits_hypothesis):
    # the hypothesis talks about the number of bathing suits for men, which can be computed by subtracting the number of bathing suits for women from the total number of bathing suits
    men_bathing_suits_premise = total_bathing_suits_premise - women_bathing_suits_premise
    # check if 'men_bathing_suits_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return men_bathing_suits_premise == men_bathing_suits_hypothesis

print(entailment_or_contradiction(total_bathing_suits_premise, women_bathing_suits_premise, men_bathing_suits_hypothesis))
"
238,entailment,,entailment," You are reading a book with 120.0 pages, and you want to read the same number of pages each night",You would have 12.0 pages to read each night to finish in 10.0 days,"you are reading a book with 120.0 pages, and you want to read the same number of pages each night",you would have 12.0 pages to read each night to finish in 10.0 days,"book_pages_premise = 120.0
pages_night_hypothesis = 12.0
days_hypothesis = 10.0

def entailment_or_contradiction(book_pages_premise, pages_night_hypothesis, days_hypothesis):
    # calculate the number of pages you would need to read each night to finish the book in the specified number of days
    pages_night_premise = book_pages_premise / days_hypothesis
    # check if 'pages_night_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return pages_night_premise == pages_night_hypothesis

print(entailment_or_contradiction(book_pages_premise, pages_night_hypothesis, days_hypothesis))
"
158,entailment,,entailment," Isha’s pencil is 12.0 cubes long, and she gets another pencil that is 12.0 cubes long",Both pencils are 24.0 cubes long,"isha’s pencil is 12.0 cubes long, and she gets another pencil that is 12.0 cubes long",both pencils are 24.0 cubes long,"pencil1_premise = 12.0
pencil2_premise = 12.0
total_length_hypothesis = 24.0

def entailment_or_contradiction(pencil1_premise, pencil2_premise, total_length_hypothesis):
    # the entities in the hypothesis can be computed from the entities in the premise
    total_length_premise = pencil1_premise + pencil2_premise
    # check if 'total_length_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_length_premise == total_length_hypothesis

print(entailment_or_contradiction(pencil1_premise, pencil2_premise, total_length_hypothesis))
"
311,contradiction,,contradiction,Sara had 21.0 quarters in her bank and her dad gave her 49.0 more quarters,She has 68.0 quarters now,sara had 21.0 quarters in her bank and her dad gave her 49.0 more quarters,she has 68.0 quarters now,"quarters_before_premise = 21.0
quarters_received_premise = 49.0
total_quarters_hypothesis = 68.0

def entailment_or_contradiction(quarters_before_premise, quarters_received_premise, total_quarters_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_quarters_premise = quarters_before_premise + quarters_received_premise
    # check if 'total_quarters_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_quarters_premise == total_quarters_hypothesis

print(entailment_or_contradiction(quarters_before_premise, quarters_received_premise, total_quarters_hypothesis))
"
718,contradiction,,entailment,"1,250  people visited the zoo on Friday and 3 times as many people visited on Friday than on Saturday",416.666666667 people visited the zoo on Saturday,"1,250 people visited the zoo on friday and 3 times as many people visited on friday than on saturday",416.666666667 people visited the zoo on saturday,"friday_visitors_premise = 1250
saturday_visitors_hypothesis = 416.666666667

def entailment_or_contradiction(friday_visitors_premise, saturday_visitors_hypothesis):
    # the premise states that three times as many people visited on Friday than on Saturday
    # so we can deduce the number of Saturday visitors from the premise
    saturday_visitors_premise = friday_visitors_premise / 3
    # check if 'saturday_visitors_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return saturday_visitors_premise == saturday_visitors_hypothesis

print(entailment_or_contradiction(friday_visitors_premise, saturday_visitors_hypothesis))
"
240,entailment,,entailment, A cereal box holds 18.0 cups of cereal and each serving is 2.0 cups,9.0 servings are in the whole box,a cereal box holds 18.0 cups of cereal and each serving is 2.0 cups,9.0 servings are in the whole box,"cereal_in_box_premise = 18.0
serving_size_premise = 2.0
servings_hypothesis = 9.0

def entailment_or_contradiction(cereal_in_box_premise, serving_size_premise, servings_hypothesis):
    # the hypothesis talks about the number of servings in a whole box, which can be computed from the entities in the premise
    servings_premise = cereal_in_box_premise / serving_size_premise
    # check if 'servings_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return servings_premise == servings_hypothesis

print(entailment_or_contradiction(cereal_in_box_premise, serving_size_premise, servings_hypothesis))
"
467,contradiction,,contradiction,"Mike picked 32.0 limes, and Alyssa ate 25.0 limes  and Tom picked 12.0 plums ",10.0 limes were left,"mike picked 32.0 limes, and alyssa ate 25.0 limes and tom picked 12.0 plums",10.0 limes were left,"mike_limes_premise = 32.0
alyssa_limes_premise = 25.0
left_limes_hypothesis = 10.0

def entailment_or_contradiction(mike_limes_premise, alyssa_limes_premise, left_limes_hypothesis):
    # the hypothesis talks about the number of left limes, which can be computed from the entities in the premise
    left_limes_premise = mike_limes_premise - alyssa_limes_premise
    # check if 'left_limes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_limes_premise == left_limes_hypothesis

print(entailment_or_contradiction(mike_limes_premise, alyssa_limes_premise, left_limes_hypothesis))
"
144,entailment,,entailment," In a school, there are 542.0 girls and 387.0 boys.",929.0 pupils are there in that school,"in a school, there are 542.0 girls and 387.0 boys.",929.0 pupils are there in that school,"girls_premise = 542.0
boys_premise = 387.0
total_pupils_hypothesis = 929.0

def entailment_or_contradiction(girls_premise, boys_premise, total_pupils_hypothesis):
    # the total number of pupils can be computed from the number of girls and boys in the premise
    total_pupils_premise = girls_premise + boys_premise
    # check if 'total_pupils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pupils_premise == total_pupils_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, total_pupils_hypothesis))
"
148,entailment,,entailment," There were 105.0 parents in the program and 698.0 pupils, too.",803.0 people were present in the program,"there were 105.0 parents in the program and 698.0 pupils, too.",803.0 people were present in the program,"parents_premise = 105.0
pupils_premise = 698.0
total_people_hypothesis = 803.0

def entailment_or_contradiction(parents_premise, pupils_premise, total_people_hypothesis):
    # the total number of people in the program can be computed by adding the parents and pupils from the premise
    total_people_premise = parents_premise + pupils_premise
    # check if 'total_people_hypothesis' is equal to the quantity computed from the premise
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(parents_premise, pupils_premise, total_people_hypothesis))
"
656,entailment,,entailment,"A box of books weighs 42 pounds, and each book weighs 3 pounds",14.0 books are there in the box,"a box of books weighs 42 pounds, and each book weighs 3 pounds",14.0 books are there in the box,"box_weight_premise = 42
book_weight_premise = 3
books_hypothesis = 14.0

def entailment_or_contradiction(box_weight_premise, book_weight_premise, books_hypothesis):
    # the hypothesis talks about the number of books, which can be computed from the weight of the box and the weight of each book
    books_premise = box_weight_premise / book_weight_premise
    # check if 'books_hypothesis' is equal to the quantity deduced from the premise
    return books_premise == books_hypothesis

print(entailment_or_contradiction(box_weight_premise, book_weight_premise, books_hypothesis))
"
685,contradiction,,contradiction,"Maria has 45.0 bottles of water in her fridge, and she drank 14.0 of them and her sister drank 8.0",18.0 bottles are left,"maria has 45.0 bottles of water in her fridge, and she drank 14.0 of them and her sister drank 8.0",18.0 bottles are left,"bottles_fridge_premise = 45.0
drank_maria_premise = 14.0
drank_sister_premise = 8.0
bottles_left_hypothesis = 18.0

def entailment_or_contradiction(bottles_fridge_premise, drank_maria_premise, drank_sister_premise, bottles_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    bottles_left_premise = bottles_fridge_premise - drank_maria_premise - drank_sister_premise
    # check if 'bottles_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bottles_left_premise == bottles_left_hypothesis

print(entailment_or_contradiction(bottles_fridge_premise, drank_maria_premise, drank_sister_premise, bottles_left_hypothesis))
"
435,contradiction,,contradiction,"Abe 's family moved from the Bahamas to Japan , so they had convert their money into Japanese yen  and their checking account  had 6359.0 yen, and he has spent 3485.0 yen since then ",They have 2870.0 yen left,"abe 's family moved from the bahamas to japan , so they had convert their money into japanese yen and their checking account had 6359.0 yen, and he has spent 3485.0 yen since then",they have 2870.0 yen left,"initial_yen_premise = 6359.0
spent_yen_premise = 3485.0
remaining_yen_hypothesis = 2870.0

def entailment_or_contradiction(initial_yen_premise, spent_yen_premise, remaining_yen_hypothesis):
    # the hypothesis talks about the remaining yen, which can be computed from the initial and spent yen in the premise
    remaining_yen_premise = initial_yen_premise - spent_yen_premise
    # check if the remaining yen from the hypothesis is equal to the remaining yen computed from the premise
    return remaining_yen_premise == remaining_yen_hypothesis

print(entailment_or_contradiction(initial_yen_premise, spent_yen_premise, remaining_yen_hypothesis))
"
14,entailment,,entailment,"Joan picked 37.0 oranges, and Sara picked 10.0 oranges  and Alyssa picked 30.0 pears ",47.0 oranges were picked in total ,"joan picked 37.0 oranges, and sara picked 10.0 oranges and alyssa picked 30.0 pears",47.0 oranges were picked in total,"joan_oranges_premise = 37.0
sara_oranges_premise = 10.0
alyssa_pears_premise = 30.0
total_oranges_hypothesis = 47.0

def entailment_or_contradiction(joan_oranges_premise, sara_oranges_premise, alyssa_pears_premise, total_oranges_hypothesis):
    # the total number of oranges picked can be computed from the premises
    total_oranges_premise = joan_oranges_premise + sara_oranges_premise
    # check if 'total_oranges_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_oranges_premise == total_oranges_hypothesis

print(entailment_or_contradiction(joan_oranges_premise, sara_oranges_premise, alyssa_pears_premise, total_oranges_hypothesis))
"
404,entailment,,entailment,Sam had 98.0 pennies in his bank  and he found 93.0 more pennies ,He has 191.0 pennies now,sam had 98.0 pennies in his bank and he found 93.0 more pennies,he has 191.0 pennies now,"pennies_bank_premise = 98.0
found_pennies_premise = 93.0
total_pennies_hypothesis = 191.0

def entailment_or_contradiction(pennies_bank_premise, found_pennies_premise, total_pennies_hypothesis):
    # the total number of pennies according to the hypothesis can be computed from the entities in the premise
    total_pennies_premise = pennies_bank_premise + found_pennies_premise
    # check if 'total_pennies_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pennies_premise == total_pennies_hypothesis

print(entailment_or_contradiction(pennies_bank_premise, found_pennies_premise, total_pennies_hypothesis))
"
282,entailment,,entailment," Faye had 34.0 coloring books, and she gave away 3.0 of them but then bought 48.0 more",She would have 79.0 coloring books total,"faye had 34.0 coloring books, and she gave away 3.0 of them but then bought 48.0 more",she would have 79.0 coloring books total,"initial_books_premise = 34.0
given_away_books_premise = 3.0
bought_books_premise = 48.0
total_books_hypothesis = 79.0

def entailment_or_contradiction(initial_books_premise, given_away_books_premise, bought_books_premise, total_books_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_books_premise = initial_books_premise - given_away_books_premise + bought_books_premise
    # check if 'total_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(initial_books_premise, given_away_books_premise, bought_books_premise, total_books_hypothesis))
"
690,contradiction,,entailment,"Kaleb saved 21 dollars, and got 15 dollars for his allowance and he gambles it and wins 6 times the amount",He has 216.0 dollars now,"kaleb saved 21 dollars, and got 15 dollars for his allowance and he gambles it and wins 6 times the amount",he has 216.0 dollars now,"saved_money_premise = 21
allowance_premise = 15
multiplier_gamble = 6
total_money_hypothesis = 216.0

def entailment_or_contradiction(saved_money_premise, allowance_premise, multiplier_gamble, total_money_hypothesis):
    # the hypothesis talks about the total money Kaleb has now, which can be computed from the premise
    total_money_premise = saved_money_premise + (allowance_premise * multiplier_gamble)
    # check if 'total_money_hypothesis' matches the amount deduced from the premise, so if they are equal
    return total_money_premise == total_money_hypothesis

print(entailment_or_contradiction(saved_money_premise, allowance_premise, multiplier_gamble, total_money_hypothesis))
"
455,contradiction,,contradiction,A treasure hunter discovered a buried treasure chest filled with 5155.0 rubys and 45.0 diamonds.,5196.0 gems were there in total,a treasure hunter discovered a buried treasure chest filled with 5155.0 rubys and 45.0 diamonds.,5196.0 gems were there in total,"rubys_premise = 5155.0
diamonds_premise = 45.0
total_gems_hypothesis = 5196.0

def entailment_or_contradiction(rubys_premise, diamonds_premise, total_gems_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_gems_premise = rubys_premise + diamonds_premise
    # check if 'total_gems_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gems_premise == total_gems_hypothesis

print(entailment_or_contradiction(rubys_premise, diamonds_premise, total_gems_hypothesis))
"
303,contradiction,,contradiction, Wendy uploaded 79.0 pictures to Facebook and she put 44.0 pics into 1.0 album and put the rest into 5.0 different albums,11.0 pictures were in each album,wendy uploaded 79.0 pictures to facebook and she put 44.0 pics into 1.0 album and put the rest into 5.0 different albums,11.0 pictures were in each album,"uploaded_pictures_premise = 79.0
pictures_in_one_album_premise = 44.0
total_albums_premise = 5.0
pictures_per_album_hypothesis = 11.0

def entailment_or_contradiction(uploaded_pictures_premise, pictures_in_one_album_premise, total_albums_premise, pictures_per_album_hypothesis):
    # the hypothesis speculates about the number of pictures in each album, which can be calculated from the quantities in the premise
    # calculate the pictures left after putting into one album
    remaining_pictures_premise = uploaded_pictures_premise - pictures_in_one_album_premise
    # calculate the average number of pictures in the remaining albums
    average_pictures_per_album_premise = remaining_pictures_premise / total_albums_premise
    # compare the average number of pictures per album calculated from the premise with the number in the hypothesis
    return average_pictures_per_album_premise == pictures_per_album_hypothesis

print(entailment_or_contradiction(uploaded_pictures_premise, pictures_in_one_album_premise, total_albums_premise, pictures_per_album_hypothesis))
"
330,entailment,,entailment,The farmers reported that they harvest 45.0 sacks of apples from each of the 8.0 sections of the orchard daily.,360.0 sacks are harvested every day,the farmers reported that they harvest 45.0 sacks of apples from each of the 8.0 sections of the orchard daily.,360.0 sacks are harvested every day,"sacks_per_section_premise = 45.0
sections_premise = 8.0
total_sacks_hypothesis = 360.0

def entailment_or_contradiction(sacks_per_section_premise, sections_premise, total_sacks_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_sacks_premise = sacks_per_section_premise * sections_premise
    # check if 'total_sacks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_sacks_premise == total_sacks_hypothesis

print(entailment_or_contradiction(sacks_per_section_premise, sections_premise, total_sacks_hypothesis))
"
309,contradiction,,contradiction," A company invited 18.0 people to a luncheon, but 12.0 of them didn't show up, and the tables they had held 3.0 people each",They need 5.0 tables,"a company invited 18.0 people to a luncheon, but 12.0 of them didn't show up, and the tables they had held 3.0 people each",they need 5.0 tables,"people_invited_premise = 18.0
people_no_show_premise = 12.0
people_per_table_premise = 3.0
tables_needed_hypothesis = 5.0

def entailment_or_contradiction(people_invited_premise, people_no_show_premise, people_per_table_premise, tables_needed_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    people_show_up_premise = people_invited_premise - people_no_show_premise
    tables_needed_premise = people_show_up_premise / people_per_table_premise
    # check if 'tables_needed_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return tables_needed_premise == tables_needed_hypothesis

print(entailment_or_contradiction(people_invited_premise, people_no_show_premise, people_per_table_premise, tables_needed_hypothesis))
"
417,contradiction,,contradiction,Joan picked 43.0 apples from the orchard and Melanie gave Joan 27.0 more apples,Joan has 74.0 apples now,joan picked 43.0 apples from the orchard and melanie gave joan 27.0 more apples,joan has 74.0 apples now,"picked_apples_premise = 43.0
received_apples_premise = 27.0
total_apples_hypothesis = 74.0

def entailment_or_contradiction(picked_apples_premise, received_apples_premise, total_apples_hypothesis):
    # The total number of apples that Joan has can be computed by adding the number of apples she picked and the number of apples she received
    total_apples_premise = picked_apples_premise + received_apples_premise
    # Check if the total number of apples in the hypothesis is the same as the total number of apples computed from the premise
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(picked_apples_premise, received_apples_premise, total_apples_hypothesis))
"
411,contradiction,,contradiction,Jason had 9.0 Pokemon cards  and he gave 4.0 to his friends ,He has 4.0 Pokemon cards now,jason had 9.0 pokemon cards and he gave 4.0 to his friends,he has 4.0 pokemon cards now,"initial_cards_premise = 9.0
given_cards_premise = 4.0
current_cards_hypothesis = 4.0

def entailment_or_contradiction(initial_cards_premise, given_cards_premise, current_cards_hypothesis):
    # the count of remaining cards can be computed from the initial count and the given count
    remaining_cards_premise = initial_cards_premise - given_cards_premise
    # check if 'current_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cards_premise == current_cards_hypothesis

print(entailment_or_contradiction(initial_cards_premise, given_cards_premise, current_cards_hypothesis))
"
118,entailment,,entailment,Benjamin skated 80.0 kilometers at 10.0 kilometers per hour,Benjamin skated for 8.0 hours,benjamin skated 80.0 kilometers at 10.0 kilometers per hour,benjamin skated for 8.0 hours,"distance_premise = 80.0
speed_premise = 10.0
time_hypothesis = 8.0

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
703,contradiction,,contradiction,"Vincent bought 10.0 books about animals, 1.0 book about outer space, and 3.0 books about trains and he paid $16.0 for all the books combined",The average price for 1.0 book is 4.6,"vincent bought 10.0 books about animals, 1.0 book about outer space, and 3.0 books about trains and he paid $16.0 for all the books combined",the average price for 1.0 book is 4.6,"books_animals_premise = 10.0
books_space_premise = 1.0
books_trains_premise = 3.0
total_paid_premise = 16.0
average_price_hypothesis = 4.6

def entailment_or_contradiction(books_animals_premise, books_space_premise, books_trains_premise, total_paid_premise, average_price_hypothesis):
    # the hypothesis talks about the average price per book, which can be computed from the premise
    # find the total number of books from the premise
    total_books_premise = books_animals_premise + books_space_premise + books_trains_premise
    # compute the average price per book
    average_price_premise = total_paid_premise / total_books_premise
    # check if the average price from the hypothesis is equal to the one computed from the premise
    return average_price_premise == average_price_hypothesis

print(entailment_or_contradiction(books_animals_premise, books_space_premise, books_trains_premise, total_paid_premise, average_price_hypothesis))
"
298,error,"File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/AWPNLI/gpt4/sample_298.py"", line 16
    return total_points_premise == total_points_hypothesis:
                                                          ^
SyntaxError: invalid syntax",entailment," Wendy earned 5.0 points for each bag of cans she recycled, and she had 11.0 bags but didn't recycle 2.0 of them",She would have 45.0 points earned,"wendy earned 5.0 points for each bag of cans she recycled, and she had 11.0 bags but didn't recycle 2.0 of them",she would have 45.0 points earned,"points_per_bag_premise = 5.0
total_bags_premise = 11.0
not_recycled_bags_premise = 2.0
total_points_hypothesis = 45.0

def entailment_or_contradiction(points_per_bag_premise, total_bags_premise, not_recycled_bags_premise, total_points_hypothesis):
    # the total points can be computed from the premise
    total_points_premise = points_per_bag_premise * (total_bags_premise - not_recycled_bags_premise)
    # check if 'total_points_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_points_premise == total_points_hypothesis:

print(entailment_or_contradiction(points_per_bag_premise, total_bags_premise, not_recycled_bags_premise, total_points_hypothesis))
"
715,contradiction,,contradiction,"When relatives visit Haley and her family, she and her cousins do origami and she gives 48.0 origami papers to every 1.0 of her 6.0 cousins",She has given away 289.0 papers,"when relatives visit haley and her family, she and her cousins do origami and she gives 48.0 origami papers to every 1.0 of her 6.0 cousins",she has given away 289.0 papers,"papers_per_cousin_premise = 48.0
cousins_premise = 6.0
total_papers_hypothesis = 289.0

def entailment_or_contradiction(papers_per_cousin_premise, cousins_premise, total_papers_hypothesis):
    # the total number of papers given away can be computed from the number of papers given to each cousin and the total number of cousins
    total_papers_premise = papers_per_cousin_premise * cousins_premise
    # check if 'total_papers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_papers_premise == total_papers_hypothesis

print(entailment_or_contradiction(papers_per_cousin_premise, cousins_premise, total_papers_hypothesis))
"
391,contradiction,,contradiction,"Dan found 56.0 seashells on the beach,  Jessica gave him some of her seashells and she gave him 22.0 seashells",Dan has 77.0 seashells now,"dan found 56.0 seashells on the beach, jessica gave him some of her seashells and she gave him 22.0 seashells",dan has 77.0 seashells now,"seashells_dan_found = 56.0
seashells_jessica_gave = 22.0
total_seashells_hypothesis = 77.0

def entailment_or_contradiction(seashells_dan_found, seashells_jessica_gave, total_seashells_hypothesis):
    # total seashells is the sum of the seashells Dan found and the seashells he received from Jessica
    total_seashells_premise = seashells_dan_found + seashells_jessica_gave
    # check if the total seashells from the hypothesis is equal to the total seashells deduced from the premise
    return total_seashells_premise == total_seashells_hypothesis

print(entailment_or_contradiction(seashells_dan_found, seashells_jessica_gave, total_seashells_hypothesis))
"
24,entailment,,entailment,Mike has 87.0 baseball cards  and Sam bought 13.0 of Mike 's baseball cards ,Mike has 74.0 baseball cards now,mike has 87.0 baseball cards and sam bought 13.0 of mike 's baseball cards,mike has 74.0 baseball cards now,"initial_cards_mike_premise = 87.0
cards_bought_sam_premise = 13.0
current_cards_mike_hypothesis = 74.0

def entailment_or_contradiction(initial_cards_mike_premise, cards_bought_sam_premise, current_cards_mike_hypothesis):
    # the hypothesis talks about the number of baseball cards Mike has after Sam bought some, which can be computed from the premise
    current_cards_mike_premise = initial_cards_mike_premise - cards_bought_sam_premise
    # check if 'current_cards_mike_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return current_cards_mike_premise == current_cards_mike_hypothesis

print(entailment_or_contradiction(initial_cards_mike_premise, cards_bought_sam_premise, current_cards_mike_hypothesis))
"
272,entailment,,entailment," In fourth grade there were 10.0 students at the start of the year and During the year, 4.0 students left, and 42.0 new students came to school",48.0 students were in fourth grade at the end,"in fourth grade there were 10.0 students at the start of the year and during the year, 4.0 students left, and 42.0 new students came to school",48.0 students were in fourth grade at the end,"start_students_premise = 10.0
left_students_premise = 4.0
new_students_premise = 42.0
total_students_hypothesis = 48.0

def entailment_or_contradiction(start_students_premise, left_students_premise, new_students_premise, total_students_hypothesis):
    # We find the total students in fourth grade at the end of the year by subtracting the left students from the starting students and adding new students
    total_students_premise = start_students_premise - left_students_premise + new_students_premise
    # We check if the total students from the premise is equal to the total students in the hypothesis
    return total_students_premise == total_students_hypothesis

print(entailment_or_contradiction(start_students_premise, left_students_premise, new_students_premise, total_students_hypothesis))
"
349,contradiction,,contradiction,"On Friday, 1250.0 people visited the zoo and 3.0 times as many people visited on Saturday than on Friday",3748.0 people visited the zoo on Saturday,"on friday, 1250.0 people visited the zoo and 3.0 times as many people visited on saturday than on friday",3748.0 people visited the zoo on saturday,"friday_visitors_premise = 1250.0
saturday_multipler_premise = 3.0
saturday_visitors_hypothesis = 3748.0

def entailment_or_contradiction(friday_visitors_premise, saturday_multipler_premise, saturday_visitors_hypothesis):
    # calculate the number of Saturday visitors based on the premise
    saturday_visitors_premise = friday_visitors_premise * saturday_multipler_premise
    # check if the number of Saturday visitors calculated from the premise matches the number in the hypothesis
    return saturday_visitors_premise == saturday_visitors_hypothesis

print(entailment_or_contradiction(friday_visitors_premise, saturday_multipler_premise, saturday_visitors_hypothesis))
"
203,contradiction,,contradiction, A garden has 52.0 rows and 15.0 columns of bean plans.,783.0 plants are there in all,a garden has 52.0 rows and 15.0 columns of bean plans.,783.0 plants are there in all,"rows_premise = 52.0
columns_premise = 15.0
total_plants_hypothesis = 783.0

def entailment_or_contradiction(rows_premise, columns_premise, total_plants_hypothesis):
    # the total number of plants can be computed by multiplying the rows and columns
    total_plants_premise = rows_premise * columns_premise
    # check if 'total_plants_hypothesis' equals the total plants computed from the premise
    return total_plants_premise == total_plants_hypothesis

print(entailment_or_contradiction(rows_premise, columns_premise, total_plants_hypothesis))
"
93,contradiction,,contradiction,There are 47.0 eggs in a box and Harry takes 5.0 eggs,41.0 eggs are left,there are 47.0 eggs in a box and harry takes 5.0 eggs,41.0 eggs are left,"total_eggs_premise = 47.0
taken_eggs_premise = 5.0
remaining_eggs_hypothesis = 41.0

def entailment_or_contradiction(total_eggs_premise, taken_eggs_premise, remaining_eggs_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_eggs_premise = total_eggs_premise - taken_eggs_premise
    # check if 'remaining_eggs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_eggs_premise == remaining_eggs_hypothesis

print(entailment_or_contradiction(total_eggs_premise, taken_eggs_premise, remaining_eggs_hypothesis))
"
12,entailment,,entailment,There are 11.0 rulers and 34.0 crayons in the drawer  and Tim placed 14.0 rulers in the drawer ,25.0 rulers are now there in all ,there are 11.0 rulers and 34.0 crayons in the drawer and tim placed 14.0 rulers in the drawer,25.0 rulers are now there in all,"initial_rulers_premise = 11.0
additional_rulers_premise = 14.0
total_rulers_hypothesis = 25.0

def entailment_or_contradiction(initial_rulers_premise, additional_rulers_premise, total_rulers_hypothesis):
    # calculate the total number of rulers in the premise
    total_rulers_premise = initial_rulers_premise + additional_rulers_premise
    # check if the total number of rulers in the hypothesis matches the calculated total in the premise
    return total_rulers_premise == total_rulers_hypothesis

print(entailment_or_contradiction(initial_rulers_premise, additional_rulers_premise, total_rulers_hypothesis))
"
501,entailment,,contradiction,"There are 4.0 oranges, and there are 3.0 children",6.0 oranges are there per child,"there are 4.0 oranges, and there are 3.0 children",6.0 oranges are there per child,"oranges_premise = 4.0
children_premise = 3.0
oranges_per_child_hypothesis = 6.0

def entailment_or_contradiction(oranges_premise, children_premise, oranges_per_child_hypothesis):
    # the hypothesis makes a claim about the ratio of oranges to children
    # this ratio can be computed from the premise
    oranges_per_child_premise = oranges_premise / children_premise
    # check if 'oranges_per_child_hypothesis' contradicts the ratio deduced from the premise, so if they are not equal
    return oranges_per_child_premise != oranges_per_child_hypothesis

print(entailment_or_contradiction(oranges_premise, children_premise, oranges_per_child_hypothesis))
"
50,entailment,,entailment,"So far , an orchard has sold a combined total of 9792.0 pounds of fresh and frozen fruit this season , and they have sold 3513.0 pounds of frozen fruit",6279.0 pounds of fresh fruit have been sold so far,"so far , an orchard has sold a combined total of 9792.0 pounds of fresh and frozen fruit this season , and they have sold 3513.0 pounds of frozen fruit",6279.0 pounds of fresh fruit have been sold so far,"total_fruit_sold_premise = 9792.0
frozen_fruit_sold_premise = 3513.0
fresh_fruit_sold_hypothesis = 6279.0

def entailment_or_contradiction(total_fruit_sold_premise, frozen_fruit_sold_premise, fresh_fruit_sold_hypothesis):
    # the hypothesis talks about the amount of fresh fruit sold, which can be calculated from the total and frozen fruit in the premise
    # calculate the amount of fresh fruit sold from the premise
    fresh_fruit_sold_premise = total_fruit_sold_premise - frozen_fruit_sold_premise
    # check if 'fresh_fruit_sold_hypothesis' is equal to the quantity calculated from the premise
    return fresh_fruit_sold_premise == fresh_fruit_sold_hypothesis

print(entailment_or_contradiction(total_fruit_sold_premise, frozen_fruit_sold_premise, fresh_fruit_sold_hypothesis))
"
332,entailment,,entailment,Lewis saved checking on the grapevines for his last stop and he was told by 1.0 of the pickers that they fill 324.0 drums of grapes per day,2916.0 drums of grapes would be filled in 9.0 days,lewis saved checking on the grapevines for his last stop and he was told by 1.0 of the pickers that they fill 324.0 drums of grapes per day,2916.0 drums of grapes would be filled in 9.0 days,"drums_per_day_premise = 324.0
days_hypothesis = 9.0
total_drums_hypothesis = 2916.0

def entailment_or_contradiction(drums_per_day_premise, days_hypothesis, total_drums_hypothesis):
    # the total number of drums in a certain number of days can be computed from the number of drums filled per day
    total_drums_premise = drums_per_day_premise * days_hypothesis
    # check if the 'total_drums_hypothesis' is equivalent to the total drums deduced from the premise
    return total_drums_premise == total_drums_hypothesis

print(entailment_or_contradiction(drums_per_day_premise, days_hypothesis, total_drums_hypothesis))
"
128,entailment,,entailment, There are 5.0 flowers and 3.0 bees.,There are 2.0 fewer bees than flowers,there are 5.0 flowers and 3.0 bees.,there are 2.0 fewer bees than flowers,"flowers_premise = 5.0
bees_premise = 3.0
diff_flowers_bees_hypothesis = 2.0

def entailment_or_contradiction(flowers_premise, bees_premise, diff_flowers_bees_hypothesis):
    # the hypothesis talks about the difference between the numbers of flowers and bees, which can be calculated from the premise
    diff_flowers_bees_premise = flowers_premise - bees_premise
    # check if 'diff_flowers_bees_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return diff_flowers_bees_premise == diff_flowers_bees_hypothesis

print(entailment_or_contradiction(flowers_premise, bees_premise, diff_flowers_bees_hypothesis))
"
658,entailment,,entailment,A perfect score is 21 points and 3 games were played,7.0 points were earned per round,a perfect score is 21 points and 3 games were played,7.0 points were earned per round,"perfect_score_premise = 21
games_played_premise = 3
points_per_round_hypothesis = 7.0

def entailment_or_contradiction(perfect_score_premise, games_played_premise, points_per_round_hypothesis):
    # the hypothesis talks about the average score per game, which can be computed from the entities in the premise
    points_per_round_premise = perfect_score_premise / games_played_premise
    # check if 'points_per_round_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return points_per_round_premise == points_per_round_hypothesis

print(entailment_or_contradiction(perfect_score_premise, games_played_premise, points_per_round_hypothesis))
"
301,error,"File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/AWPNLI/gpt4/sample_301.py"", line 18
    return clothes_per_small_load_premise == clothes_per_small_load_hypothesis:
                                                                              ^
SyntaxError: invalid syntax",contradiction," Luke had 47.0 pieces of clothing to wash and he put 17.0 of them in 1.0 load, but decided to split the rest into 5.0 equal loads",10.0 pieces of clothing could go in each of the small loads,"luke had 47.0 pieces of clothing to wash and he put 17.0 of them in 1.0 load, but decided to split the rest into 5.0 equal loads",10.0 pieces of clothing could go in each of the small loads,"clothes_premise = 47.0
clothes_in_large_load_premise = 17.0
number_of_small_loads_premise = 5.0
clothes_per_small_load_hypothesis = 10.0

def entailment_or_contradiction(clothes_premise, clothes_in_large_load_premise, number_of_small_loads_premise, clothes_per_small_load_hypothesis):
    # the entities in the hypothesis can be computed from the entities in the premise
    clothes_in_small_loads_premise = clothes_premise - clothes_in_large_load_premise
    # compute the number of clothes per small load from the premise
    clothes_per_small_load_premise = clothes_in_small_loads_premise / number_of_small_loads_premise
    # check if 'clothes_per_small_load_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return clothes_per_small_load_premise == clothes_per_small_load_hypothesis:

print(entailment_or_contradiction(clothes_premise, clothes_in_large_load_premise, number_of_small_loads_premise, clothes_per_small_load_hypothesis))
"
712,entailment,,entailment,"Christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",They were able to gather 1600.0 pieces of firewood if they gathered 80.0 sacks,"christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",they were able to gather 1600.0 pieces of firewood if they gathered 80.0 sacks,"wood_per_sack = 20.0
sacks_hypothesis = 80.0
total_firewood_hypothesis = 1600.0

def entailment_or_contradiction(wood_per_sack, sacks_hypothesis, total_firewood_hypothesis):
    # the total number of gathered firewood in the hypothesis can be computed from the entities in the premise
    total_firewood_premise = wood_per_sack * sacks_hypothesis
    # check if 'total_firewood_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_firewood_premise == total_firewood_hypothesis

print(entailment_or_contradiction(wood_per_sack, sacks_hypothesis, total_firewood_hypothesis))
"
294,entailment,,entailment," Wendy's old washing machine could only wash 8.0 pieces of clothing at a time, and she had to wash 39.0 shirts and 33.0 sweaters",She would have 9.0 loads to do,"wendy's old washing machine could only wash 8.0 pieces of clothing at a time, and she had to wash 39.0 shirts and 33.0 sweaters",she would have 9.0 loads to do,"clothes_per_load_premise = 8.0
shirts_premise = 39.0
sweaters_premise = 33.0
loads_hypothesis = 9.0

def entailment_or_contradiction(clothes_per_load_premise, shirts_premise, sweaters_premise, loads_hypothesis):
    # the total number of clothes to wash is the sum of shirts and sweaters
    total_clothes_premise = shirts_premise + sweaters_premise
    # the total number of loads is the total number of clothes divided by the clothes per load, rounded up
    # because a load is needed even for a fraction of the full capacity
    import math
    loads_premise = math.ceil(total_clothes_premise / clothes_per_load_premise)
    # check if the number of loads in the hypothesis is equal to the number of loads calculated
    return loads_premise == loads_hypothesis

print(entailment_or_contradiction(clothes_per_load_premise, shirts_premise, sweaters_premise, loads_hypothesis))
"
321,contradiction,,contradiction,"There are 4.0 children in the classroom, each student will get 2.0 pencils.",The teacher will have to give out 3.0 pencils,"there are 4.0 children in the classroom, each student will get 2.0 pencils.",the teacher will have to give out 3.0 pencils,"students_premise = 4.0
pencils_per_student_premise = 2.0
total_pencils_hypothesis = 3.0

def entailment_or_contradiction(students_premise, pencils_per_student_premise, total_pencils_hypothesis):
    # the hypothesis talks about the total number of pencils to be given out, which can be computed from the premise
    total_pencils_premise = students_premise * pencils_per_student_premise
    # check if 'total_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(students_premise, pencils_per_student_premise, total_pencils_hypothesis))
"
263,contradiction,,contradiction," Mrs. Hilt impressed 2436.0 fans at the basketball game on Friday, and the fans were seated in equal groups on 3.0 sets of bleachers",814.0 fans were on each set,"mrs. hilt impressed 2436.0 fans at the basketball game on friday, and the fans were seated in equal groups on 3.0 sets of bleachers",814.0 fans were on each set,"total_fans_premise = 2436.0
bleachers_premise = 3.0
fans_per_set_hypothesis = 814.0

def entailment_or_contradiction(total_fans_premise, bleachers_premise, fans_per_set_hypothesis):
    # the hypothesis talks about the number of fans on each set, which can be computed from the entities in the premise
    fans_per_set_premise = total_fans_premise / bleachers_premise
    # check if 'fans_per_set_hypothesis' is equal to the quantity deduced from the premise, so if they are equal
    return fans_per_set_premise == fans_per_set_hypothesis

print(entailment_or_contradiction(total_fans_premise, bleachers_premise, fans_per_set_hypothesis))
"
492,entailment,,entailment,Mildred collects 77.0 oranges and Mildred's father eats 2.0 of them,Mildred has 75.0 oranges now,mildred collects 77.0 oranges and mildred's father eats 2.0 of them,mildred has 75.0 oranges now,"collected_oranges_premise = 77.0
eaten_oranges_premise = 2.0
total_oranges_hypothesis = 75.0

def entailment_or_contradiction(collected_oranges_premise, eaten_oranges_premise, total_oranges_hypothesis):
    # the total number of oranges that Mildred has can be computed from the entities in the premise
    total_oranges_premise = collected_oranges_premise - eaten_oranges_premise
    # check if 'total_oranges_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_oranges_premise == total_oranges_hypothesis

print(entailment_or_contradiction(collected_oranges_premise, eaten_oranges_premise, total_oranges_hypothesis))
"
612,entailment,,entailment,There are 261.0 fish and each fishbowl has 23.0 fish,11.347826087 fishbowls are there,there are 261.0 fish and each fishbowl has 23.0 fish,11.347826087 fishbowls are there,"total_fish_premise = 261.0
fish_per_bowl_premise = 23.0
total_bowls_hypothesis = 11.347826087

def entailment_or_contradiction(total_fish_premise, fish_per_bowl_premise, total_bowls_hypothesis):
    # the total number of fishbowls can be computed from the total number of fish and the number of fish per bowl
    total_bowls_premise = total_fish_premise / fish_per_bowl_premise
    # compare the total number of fishbowls from the premise and the hypothesis
    # we use round function to 9 decimal places to compare two floating point numbers
    return round(total_bowls_premise, 9) == round(total_bowls_hypothesis, 9)

print(entailment_or_contradiction(total_fish_premise, fish_per_bowl_premise, total_bowls_hypothesis))
"
593,contradiction,,contradiction,"Joe had 50.0 toy cars, and he gives away 12.0 cars",He will have 37.0 cars remaining,"joe had 50.0 toy cars, and he gives away 12.0 cars",he will have 37.0 cars remaining,"initial_cars_premise = 50.0 
given_cars_premise = 12.0 
remaining_cars_hypothesis = 37.0 

def entailment_or_contradiction(initial_cars_premise, given_cars_premise, remaining_cars_hypothesis):
    # the number of remaining cars Joe has can be computed from the quantities in the premise
    remaining_cars_premise = initial_cars_premise - given_cars_premise
    # check if 'remaining_cars_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cars_premise == remaining_cars_hypothesis

print(entailment_or_contradiction(initial_cars_premise, given_cars_premise, remaining_cars_hypothesis))
"
519,contradiction,,contradiction,There are 6.0 birds and 3.0 nests.,There are 7.0 bird-related objects,there are 6.0 birds and 3.0 nests.,there are 7.0 bird-related objects,"birds_premise = 6.0
nests_premise = 3.0
bird_related_objects_hypothesis = 7.0

def entailment_or_contradiction(birds_premise, nests_premise, bird_related_objects_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    bird_related_objects_premise = birds_premise + nests_premise
    # check if 'bird_related_objects_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return bird_related_objects_premise == bird_related_objects_hypothesis

print(entailment_or_contradiction(birds_premise, nests_premise, bird_related_objects_hypothesis))
"
657,entailment,,contradiction,"A box of books weighs 42 pounds, and each book weighs 3 pounds",130.0 books are there in the box,"a box of books weighs 42 pounds, and each book weighs 3 pounds",130.0 books are there in the box,"total_weight_premise = 42
book_weight_premise = 3
total_books_hypothesis = 130.0

def entailment_or_contradiction(total_weight_premise, book_weight_premise, total_books_hypothesis):
    # total books in the premise can be computed by dividing total weight by the weight of each book
    total_books_premise = total_weight_premise / book_weight_premise
    # check if 'total_books_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_books_premise != total_books_hypothesis

print(entailment_or_contradiction(total_weight_premise, book_weight_premise, total_books_hypothesis))
"
86,entailment,,entailment,There are 7.0 bottle caps in a box and Linda puts 7.0 more bottle caps inside,14.0 bottle caps are in the box,there are 7.0 bottle caps in a box and linda puts 7.0 more bottle caps inside,14.0 bottle caps are in the box,"bottle_caps_premise = 7.0
bottle_caps_added_premise = 7.0
total_bottle_caps_hypothesis = 14.0

def entailment_or_contradiction(bottle_caps_premise, bottle_caps_added_premise, total_bottle_caps_hypothesis):
    # the total number of bottle caps can be computed from the premise
    total_bottle_caps_premise = bottle_caps_premise + bottle_caps_added_premise
    # check if 'total_bottle_caps_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bottle_caps_premise == total_bottle_caps_hypothesis

print(entailment_or_contradiction(bottle_caps_premise, bottle_caps_added_premise, total_bottle_caps_hypothesis))
"
1,contradiction,,contradiction,Sam had 9.0 dimes in his bank  and his dad gave him 7.0 dimes ,Sam has 17.0 dimes now,sam had 9.0 dimes in his bank and his dad gave him 7.0 dimes,sam has 17.0 dimes now,"dimes_sam_premise = 9.0
dimes_dad_premise = 7.0
total_dimes_hypothesis = 17.0

def entailment_or_contradiction(dimes_sam_premise, dimes_dad_premise, total_dimes_hypothesis):
    # the total number of dimes Sam has in the hypothesis can be computed from the entities in the premise
    total_dimes_premise = dimes_sam_premise + dimes_dad_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(dimes_sam_premise, dimes_dad_premise, total_dimes_hypothesis))
"
221,contradiction,,contradiction, Mr. Guzman bought 48.0 doughnuts packed equally into 4.0 boxes.,15.0 doughnuts were in each box,mr. guzman bought 48.0 doughnuts packed equally into 4.0 boxes.,15.0 doughnuts were in each box,"doughnuts_premise = 48.0
boxes_premise = 4.0
doughnuts_box_hypothesis = 15.0

def entailment_or_contradiction(doughnuts_premise, boxes_premise, doughnuts_box_hypothesis):
    # the number of doughnuts in each box can be computed from the premise
    doughnuts_box_premise = doughnuts_premise / boxes_premise
    # check if the number of doughnuts in each box from the premise is equal to the number of doughnuts in each box from the hypothesis
    return doughnuts_box_premise == doughnuts_box_hypothesis

print(entailment_or_contradiction(doughnuts_premise, boxes_premise, doughnuts_box_hypothesis))
"
48,entailment,,entailment,"A bathing suit manufacturer has a supply of 14797.0 bathing suits for men  and in addition , it has 4969.0 bathing suits for women ",19766.0 bathing suits are available overall ,"a bathing suit manufacturer has a supply of 14797.0 bathing suits for men and in addition , it has 4969.0 bathing suits for women",19766.0 bathing suits are available overall,"men_bathing_suits_premise = 14797.0
women_bathing_suits_premise = 4969.0
total_bathing_suits_hypothesis = 19766.0

def entailment_or_contradiction(men_bathing_suits_premise, women_bathing_suits_premise, total_bathing_suits_hypothesis):
    # the total number of bathing suits in the hypothesis can be deduced from the premise
    total_bathing_suits_premise = men_bathing_suits_premise + women_bathing_suits_premise
    # check if 'total_bathing_suits_hypothesis' is equal to 'total_bathing_suits_premise'
    return total_bathing_suits_premise == total_bathing_suits_hypothesis

print(entailment_or_contradiction(men_bathing_suits_premise, women_bathing_suits_premise, total_bathing_suits_hypothesis))
"
473,contradiction,,contradiction,Melanie picked 7.0 plums and 4.0 oranges from the orchard and Sam gave her 3.0 plums,She has 14.0 plums now,melanie picked 7.0 plums and 4.0 oranges from the orchard and sam gave her 3.0 plums,she has 14.0 plums now,"picked_plums_premise = 7.0
given_plums_premise = 3.0
total_plums_hypothesis = 14.0

def entailment_or_contradiction(picked_plums_premise, given_plums_premise, total_plums_hypothesis):
    # the hypothesis talks about the total number of plums, which can be computed from the entities in the premise
    total_plums_premise = picked_plums_premise + given_plums_premise
    # check if 'total_plums_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_plums_premise == total_plums_hypothesis

print(entailment_or_contradiction(picked_plums_premise, given_plums_premise, total_plums_hypothesis))
"
607,contradiction,,contradiction,There were 27.0 boys and 35.0 girls on the playground at recess and each boy went back inside paired with a girl,7.0 children were left on the playground now,there were 27.0 boys and 35.0 girls on the playground at recess and each boy went back inside paired with a girl,7.0 children were left on the playground now,"boys_premise = 27.0
girls_premise = 35.0
children_left_hypothesis = 7.0

def entailment_or_contradiction(boys_premise, girls_premise, children_left_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    # the number of children left on the playground is equal to the number of girls minus the number of boys (since each boy is paired with a girl)
    children_left_premise = girls_premise - boys_premise
    # check if 'children_left_hypothesis' entails the quantity deduced from the premise
    return children_left_premise == children_left_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, children_left_hypothesis))
"
666,entailment,,entailment,"In fourth grade there were 42.0 students at the start of the year and During the year, 4.0 students left, and 10.0 students were transferred to fifth grade",28.0 students were in fourth grade at the end,"in fourth grade there were 42.0 students at the start of the year and during the year, 4.0 students left, and 10.0 students were transferred to fifth grade",28.0 students were in fourth grade at the end,"start_students_premise = 42.0
left_students_premise = 4.0
transferred_students_premise = 10.0
end_students_hypothesis = 28.0

def entailment_or_contradiction(start_students_premise, left_students_premise, transferred_students_premise, end_students_hypothesis):
    # the hypothesis talks about the final number of students in the fourth grade, which can be computed from the premise
    # find the total number of students at the end of the year from the premise 
    end_students_premise = start_students_premise - left_students_premise - transferred_students_premise
    # check if the final number of students computed from the premise is equal to the number mentioned in the hypothesis
    return end_students_premise == end_students_hypothesis

print(entailment_or_contradiction(start_students_premise, left_students_premise, transferred_students_premise, end_students_hypothesis))
"
243,contradiction,,contradiction, A box of books weighs 42.0 pounds and each book weighs 3.0 pounds,12.0 books are there in the box,a box of books weighs 42.0 pounds and each book weighs 3.0 pounds,12.0 books are there in the box,"box_weight_premise = 42.0
book_weight_premise = 3.0
books_hypothesis = 12.0

def entailment_or_contradiction(box_weight_premise, book_weight_premise, books_hypothesis):
    # the number of books in the box can be calculated from the premise
    books_premise = box_weight_premise / book_weight_premise
    # check if 'books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return books_premise == books_hypothesis

print(entailment_or_contradiction(box_weight_premise, book_weight_premise, books_hypothesis))
"
367,contradiction,,contradiction,Sandy grew 6.0 carrots and Sam took 3.0 carrots,Sandy has 5.0 carrots left,sandy grew 6.0 carrots and sam took 3.0 carrots,sandy has 5.0 carrots left,"initial_carrots_premise = 6.0
taken_carrots_premise = 3.0
remaining_carrots_hypothesis = 5.0

def entailment_or_contradiction(initial_carrots_premise, taken_carrots_premise, remaining_carrots_hypothesis):
    # the hypothesis talks about the remaining carrots, which can be computed by subtracting the taken carrots from the initial number of carrots
    remaining_carrots_premise = initial_carrots_premise - taken_carrots_premise
    # check if 'remaining_carrots_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_carrots_premise == remaining_carrots_hypothesis

print(entailment_or_contradiction(initial_carrots_premise, taken_carrots_premise, remaining_carrots_hypothesis))
"
592,error,"File ""/Users/ioanamazilu/PycharmProjects/quant_nli/data/generated/AWPNLI/gpt4/sample_592.py"", line 15
    return remaining_cars_premise == remaining_cars_hypothesis:
                                                              ^
SyntaxError: invalid syntax",entailment,"Joe had 50.0 toy cars, and he gives away 12.0 cars",He will have 38.0 cars remaining,"joe had 50.0 toy cars, and he gives away 12.0 cars",he will have 38.0 cars remaining,"initial_cars_premise = 50.0
given_away_cars_premise = 12.0
remaining_cars_hypothesis = 38.0

def entailment_or_contradiction(initial_cars_premise, given_away_cars_premise, remaining_cars_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_cars_premise = initial_cars_premise - given_away_cars_premise
    # check if 'remaining_cars_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_cars_premise == remaining_cars_hypothesis:

print(entailment_or_contradiction(initial_cars_premise, given_away_cars_premise, remaining_cars_hypothesis))
"
166,entailment,,entailment, There were 28.0 girls and 35.0 boys on the playground at recess.,63.0 children were there in all,there were 28.0 girls and 35.0 boys on the playground at recess.,63.0 children were there in all,"girls_premise = 28.0
boys_premise = 35.0
total_children_hypothesis = 63.0

def entailment_or_contradiction(girls_premise, boys_premise, total_children_hypothesis):
    # the total number of children at recess can be computed from the premise
    total_children_premise = girls_premise + boys_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, total_children_hypothesis))
"
679,contradiction,,contradiction,"Faye bought 48.0 coloring books, and she gave away 34.0 of them and then gave away 3.0 more",She would have 12.0 coloring books left,"faye bought 48.0 coloring books, and she gave away 34.0 of them and then gave away 3.0 more",she would have 12.0 coloring books left,"bought_books_premise = 48.0
gave_away_books_premise1 = 34.0
gave_away_books_premise2 = 3.0
left_books_hypothesis = 12.0

def entailment_or_contradiction(bought_books_premise, gave_away_books_premise1, gave_away_books_premise2, left_books_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    left_books_premise = bought_books_premise - gave_away_books_premise1 - gave_away_books_premise2
    # check if 'left_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_books_premise == left_books_hypothesis

print(entailment_or_contradiction(bought_books_premise, gave_away_books_premise1, gave_away_books_premise2, left_books_hypothesis))
"
75,contradiction,,contradiction,Jason has 7.0 violet balloons and 4.0 red balloons  and he lost 3.0 of the violet balloons ,Jason has 3.0 violet balloons now,jason has 7.0 violet balloons and 4.0 red balloons and he lost 3.0 of the violet balloons,jason has 3.0 violet balloons now,"violet_balloons_premise = 7.0
lost_violet_balloons_premise = 3.0
violet_balloons_hypothesis = 3.0

def entailment_or_contradiction(violet_balloons_premise, lost_violet_balloons_premise, violet_balloons_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    violet_balloons_after_loss = violet_balloons_premise - lost_violet_balloons_premise
    # check if 'violet_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return violet_balloons_after_loss == violet_balloons_hypothesis

print(entailment_or_contradiction(violet_balloons_premise, lost_violet_balloons_premise, violet_balloons_hypothesis))
"
538,entailment,,entailment,Bobby had 26.0 pieces of candy and he ate 17.0 pieces of candy,Bobby has 9.0 pieces of candy left,bobby had 26.0 pieces of candy and he ate 17.0 pieces of candy,bobby has 9.0 pieces of candy left,"initial_candy_premise = 26.0
eaten_candy_premise = 17.0
remaining_candy_hypothesis = 9.0

def entailment_or_contradiction(initial_candy_premise, eaten_candy_premise, remaining_candy_hypothesis):
    # The hypothesis suggests a quantity that can be computed from the quantities in the premise
    remaining_candy_premise = initial_candy_premise - eaten_candy_premise
    # Check if the remaining candy from the hypothesis is equals to the remaining candy computed from the premise
    return remaining_candy_premise == remaining_candy_hypothesis

print(entailment_or_contradiction(initial_candy_premise, eaten_candy_premise, remaining_candy_hypothesis))
"
165,contradiction,,contradiction, 14.0 birds were sitting in a tree and 21.0 more birds flew up to the tree,39.0 birds were there altogether in the tree,14.0 birds were sitting in a tree and 21.0 more birds flew up to the tree,39.0 birds were there altogether in the tree,"birds_sitting_premise = 14.0
birds_flew_premise = 21.0
total_birds_hypothesis = 39.0

def entailment_or_contradiction(birds_sitting_premise, birds_flew_premise, total_birds_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_birds_premise = birds_sitting_premise + birds_flew_premise
    # check if 'total_birds_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_birds_premise == total_birds_hypothesis

print(entailment_or_contradiction(birds_sitting_premise, birds_flew_premise, total_birds_hypothesis))
"
388,entailment,,entailment,Mike has 35.0 books in his library and he bought 56.0 more books at a yard sale over the weekend,Mike has 91.0 books now,mike has 35.0 books in his library and he bought 56.0 more books at a yard sale over the weekend,mike has 91.0 books now,"initial_books_premise = 35.0
bought_books_premise = 56.0
total_books_hypothesis = 91.0

def entailment_or_contradiction(initial_books_premise, bought_books_premise, total_books_hypothesis):
    # the total number of books in the hypothesis can be computed from the initial books and bought books in the premise
    total_books_premise = initial_books_premise + bought_books_premise
    # check if 'total_books_hypothesis' equals the quantity deduced from the premise
    return total_books_premise == total_books_hypothesis

print(entailment_or_contradiction(initial_books_premise, bought_books_premise, total_books_hypothesis))
"
302,entailment,,entailment, Wendy uploaded 79.0 pictures to Facebook and she put 44.0 pics into 1.0 album and put the rest into 5.0 different albums,7.0 pictures were in each album,wendy uploaded 79.0 pictures to facebook and she put 44.0 pics into 1.0 album and put the rest into 5.0 different albums,7.0 pictures were in each album,"pictures_uploaded_premise = 79.0
pictures_one_album_premise = 44.0
albums_premise = 6.0
pictures_per_album_hypothesis = 7.0

def entailment_or_contradiction(pictures_uploaded_premise, pictures_one_album_premise, albums_premise, pictures_per_album_hypothesis):
    # the hypothesis talks about the number of pictures per album, which can be computed from the premise
    # find the total number of pictures in the other albums from the premise 
    pictures_other_albums_premise = pictures_uploaded_premise - pictures_one_album_premise
    # find the average number of pictures per album in the premise
    avg_pictures_per_album_premise = pictures_other_albums_premise / (albums_premise - 1)
    # check if 'pictures_per_album_hypothesis' entails the average quantity deduced from the premise, so if they are equal
    return avg_pictures_per_album_premise == pictures_per_album_hypothesis

print(entailment_or_contradiction(pictures_uploaded_premise, pictures_one_album_premise, albums_premise, pictures_per_album_hypothesis))
"
186,entailment,,entailment, 5.0 boats are in the lake and each boat has 3.0 people,15.0 people are on boats in the lake,5.0 boats are in the lake and each boat has 3.0 people,15.0 people are on boats in the lake,"boats_premise = 5.0
people_per_boat_premise = 3.0
total_people_hypothesis = 15.0

def entailment_or_contradiction(boats_premise, people_per_boat_premise, total_people_hypothesis):
    # the total people on boats in the lake can be computed from the entities in the premise
    total_people_premise = boats_premise * people_per_boat_premise
    # check if 'total_people_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(boats_premise, people_per_boat_premise, total_people_hypothesis))
"
27,contradiction,,contradiction,"Alyssa picked 42.0 pears, and Nancy picked 17.0 pears from the pear tree .",60.0 pears were picked in all,"alyssa picked 42.0 pears, and nancy picked 17.0 pears from the pear tree .",60.0 pears were picked in all,"alyssa_pears_premise = 42.0
nancy_pears_premise = 17.0
total_pears_hypothesis = 60.0

def entailment_or_contradiction(alyssa_pears_premise, nancy_pears_premise, total_pears_hypothesis):
    # the total pear count from the hypothesis can be computed from the individual pear counts in the premise
    total_pears_premise = alyssa_pears_premise + nancy_pears_premise
    # check if 'total_pears_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pears_premise == total_pears_hypothesis

print(entailment_or_contradiction(alyssa_pears_premise, nancy_pears_premise, total_pears_hypothesis))
"
141,contradiction,,contradiction," There were 10.0 students riding on the school bus and at the first stop, 3.0 students got off of the bus",10.0 students are left on the bus,"there were 10.0 students riding on the school bus and at the first stop, 3.0 students got off of the bus",10.0 students are left on the bus,"initial_students_premise = 10.0
students_off_premise = 3.0
students_left_hypothesis = 10.0

def entailment_or_contradiction(initial_students_premise, students_off_premise, students_left_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    students_left_premise = initial_students_premise - students_off_premise
    # check if 'students_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return students_left_premise == students_left_hypothesis

print(entailment_or_contradiction(initial_students_premise, students_off_premise, students_left_hypothesis))
"
66,entailment,,entailment,"Alyssa picked 25.0 limes, and Mike picked 32.0 limes  and Tom picked 12.0 plums ",57.0 limes were picked in all ,"alyssa picked 25.0 limes, and mike picked 32.0 limes and tom picked 12.0 plums",57.0 limes were picked in all,"alyssa_limes_premise = 25.0
mike_limes_premise = 32.0
total_limes_hypothesis = 57.0

def entailment_or_contradiction(alyssa_limes_premise, mike_limes_premise, total_limes_hypothesis):
    # Sum up the number of limes picked by Alyssa and Mike from the premise
    total_limes_premise = alyssa_limes_premise + mike_limes_premise
    # Check if the total number of limes picked according to the hypothesis matches with the premise
    return total_limes_premise == total_limes_hypothesis

print(entailment_or_contradiction(alyssa_limes_premise, mike_limes_premise, total_limes_hypothesis))
"
139,entailment,,contradiction, Mrs. Hilt reads 5.0 books a day.,She read 16.0 books,mrs. hilt reads 5.0 books a day.,she read 16.0 books,"books_per_day_premise = 5.0
total_books_hypothesis = 16.0

def entailment_or_contradiction(books_per_day_premise, total_books_hypothesis):
    # the hypothesis implies that she read for more than one day, the premise states that she reads 5 books per day
    # calculate the minimum number of days she needs to read to reach the total number of books in the hypothesis
    min_days_needed = total_books_hypothesis / books_per_day_premise
    # check if the 'min_days_needed' is more than one day, if it's less or equal to one day the premise contradicts the hypothesis
    return min_days_needed > 1

print(entailment_or_contradiction(books_per_day_premise, total_books_hypothesis))
"
80,entailment,,entailment,"Mike picked 7.0 apples , Nancy picked 3.0 apples , and Keith picked 6.0 apples and 4.0 pears , at the farm .",16.0 apples were picked in total,"mike picked 7.0 apples , nancy picked 3.0 apples , and keith picked 6.0 apples and 4.0 pears , at the farm .",16.0 apples were picked in total,"mike_apples_premise = 7.0
nancy_apples_premise = 3.0
keith_apples_premise = 6.0
total_apples_hypothesis = 16.0

def entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, total_apples_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    total_apples_premise = mike_apples_premise + nancy_apples_premise + keith_apples_premise
    # check if 'total_apples_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_apples_premise == total_apples_hypothesis

print(entailment_or_contradiction(mike_apples_premise, nancy_apples_premise, keith_apples_premise, total_apples_hypothesis))
"
523,contradiction,,contradiction,Mrs. Hilt ate 5.0 apples in hours.,She eats 3.6 apples per hour on average,mrs. hilt ate 5.0 apples in hours.,she eats 3.6 apples per hour on average,"apples_eaten_premise = 5.0
hours_premise = 1
average_apples_per_hour_hypothesis = 3.6

def entailment_or_contradiction(apples_eaten_premise, hours_premise, average_apples_per_hour_hypothesis):
    # compute the average apples eaten per hour from the premise
    average_apples_per_hour_premise = apples_eaten_premise / hours_premise
    # check if 'average_apples_per_hour_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return average_apples_per_hour_premise == average_apples_per_hour_hypothesis

print(entailment_or_contradiction(apples_eaten_premise, hours_premise, average_apples_per_hour_hypothesis))
"
350,entailment,,entailment,"In 1.0 week, an airplane pilot flew 1134.0 miles on Tuesday and 1475.0 miles on Thursday, and the pilot flies the same number of miles 3.0 weeks in a row",The pilot flew 7827.0 miles,"in 1.0 week, an airplane pilot flew 1134.0 miles on tuesday and 1475.0 miles on thursday, and the pilot flies the same number of miles 3.0 weeks in a row",the pilot flew 7827.0 miles,"miles_tuesday_premise = 1134.0
miles_thursday_premise = 1475.0
weeks_premise = 3.0
total_miles_hypothesis = 7827.0

def entailment_or_contradiction(miles_tuesday_premise, miles_thursday_premise, weeks_premise, total_miles_hypothesis):
    # the total miles flown by the pilot in the hypothesis can be computed from the entities in the premise
    # find the total miles flown in a week from the premise
    total_miles_week_premise = miles_tuesday_premise + miles_thursday_premise
    # find the total miles flown in 3 weeks from the premise
    total_miles_premise = total_miles_week_premise * weeks_premise
    # check if 'total_miles_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_miles_premise == total_miles_hypothesis

print(entailment_or_contradiction(miles_tuesday_premise, miles_thursday_premise, weeks_premise, total_miles_hypothesis))
"
376,entailment,,entailment,A restaurant served 6.0 cakes at dinner today but 5.0 were returned and the restaurant served 3.0 cakes successfully yesterday,4.0 cakes were sold successfully total,a restaurant served 6.0 cakes at dinner today but 5.0 were returned and the restaurant served 3.0 cakes successfully yesterday,4.0 cakes were sold successfully total,"cakes_served_dinner_premise = 6.0
cakes_returned_premise = 5.0
cakes_served_yesterday_premise = 3.0
total_cakes_sold_hypothesis = 4.0

def entailment_or_contradiction(cakes_served_dinner_premise, cakes_returned_premise, cakes_served_yesterday_premise, total_cakes_sold_hypothesis):
    # the hypothesis talks about the total number of cakes sold successfully, which can be computed from the premise
    total_cakes_sold_premise =  cakes_served_dinner_premise - cakes_returned_premise + cakes_served_yesterday_premise
    # check if the total number of cakes sold is equals in the hypothesis and the premise
    return total_cakes_sold_premise == total_cakes_sold_hypothesis

print(entailment_or_contradiction(cakes_served_dinner_premise, cakes_returned_premise, cakes_served_yesterday_premise, total_cakes_sold_hypothesis))
"
557,contradiction,,contradiction,Mrs. Sheridan has 11.0 cats and she bought 43.0 more,She has 49.0 cats now,mrs. sheridan has 11.0 cats and she bought 43.0 more,she has 49.0 cats now,"original_cats_premise = 11.0
bought_cats_premise = 43.0
total_cats_hypothesis = 49.0

def entailment_or_contradiction(original_cats_premise, bought_cats_premise, total_cats_hypothesis):
    # the total cats in the hypothesis can be computed from the original cats and bought cats in the premise
    total_cats_premise = original_cats_premise + bought_cats_premise
    # check if 'total_cats_hypothesis' entails the quantity deduced from the premise
    return total_cats_premise == total_cats_hypothesis

print(entailment_or_contradiction(original_cats_premise, bought_cats_premise, total_cats_hypothesis))
"
71,contradiction,,contradiction,A restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch  and only 3.0 hamburgers were actually served ,10.0 hamburgers were left over ,a restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch and only 3.0 hamburgers were actually served,10.0 hamburgers were left over,"made_hamburgers_premise = 9.0
served_hamburgers_premise = 3.0
leftover_hamburgers_hypothesis = 10.0

def entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    leftover_hamburgers_premise = made_hamburgers_premise - served_hamburgers_premise
    # check if 'leftover_hamburgers_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return leftover_hamburgers_premise == leftover_hamburgers_hypothesis

print(entailment_or_contradiction(made_hamburgers_premise, served_hamburgers_premise, leftover_hamburgers_hypothesis))
"
289,contradiction,,contradiction," George had 28.0 socks, and he threw away 4.0 old ones that didn't fit and bought 36.0 new ones",He would have 58.0 socks ,"george had 28.0 socks, and he threw away 4.0 old ones that didn't fit and bought 36.0 new ones",he would have 58.0 socks,"initial_socks_premise = 28.0
thrown_socks_premise = 4.0
bought_socks_premise = 36.0
total_socks_hypothesis = 58.0

def entailment_or_contradiction(initial_socks_premise, thrown_socks_premise, bought_socks_premise, total_socks_hypothesis):
    # the total number of socks can be computed from the entities mentioned in the premise
    total_socks_premise = initial_socks_premise - thrown_socks_premise + bought_socks_premise
    # check if the total number of socks in the hypothesis matches the calculated number from the premise
    return total_socks_premise == total_socks_hypothesis

print(entailment_or_contradiction(initial_socks_premise, thrown_socks_premise, bought_socks_premise, total_socks_hypothesis))
"
64,entailment,,entailment,Mike had 33.0 quarters and 87.0 nickels in his bank  and his dad borrowed 75.0 nickels from Mike ,He has 12.0 nickels now,mike had 33.0 quarters and 87.0 nickels in his bank and his dad borrowed 75.0 nickels from mike,he has 12.0 nickels now,"quarters_premise = 33.0
nickels_premise = 87.0
borrowed_nickels_premise = 75.0
nickels_hypothesis = 12.0

def entailment_or_contradiction(quarters_premise, nickels_premise, borrowed_nickels_premise, nickels_hypothesis):
    # the premise talks about the number of nickels Mike had initially and how many were borrowed
    # calculate the remaining nickels based on the premise
    remaining_nickels_premise = nickels_premise - borrowed_nickels_premise
    # check if 'nickels_hypothesis' is equal to 'remaining_nickels_premise', so if it is entailed by the premise
    return remaining_nickels_premise == nickels_hypothesis

print(entailment_or_contradiction(quarters_premise, nickels_premise, borrowed_nickels_premise, nickels_hypothesis))
"
536,entailment,,entailment,20.0 ducks are swimming in a lake and 13.0 ducks leave,7.0 ducks are swimming in the lake,20.0 ducks are swimming in a lake and 13.0 ducks leave,7.0 ducks are swimming in the lake,"ducks_start_premise = 20.0
ducks_leave_premise = 13.0
ducks_remaining_hypothesis = 7.0

def entailment_or_contradiction(ducks_start_premise, ducks_leave_premise, ducks_remaining_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    ducks_remaining_premise = ducks_start_premise - ducks_leave_premise
    # check if 'ducks_remaining_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return ducks_remaining_premise == ducks_remaining_hypothesis

print(entailment_or_contradiction(ducks_start_premise, ducks_leave_premise, ducks_remaining_hypothesis))
"
374,entailment,,entailment,A restaurant baked 5.0 cakes during lunch and sold 6.0 during dinner today  and the restaurant baked 3.0 cakes yesterday ,2.0 cakes are left ,a restaurant baked 5.0 cakes during lunch and sold 6.0 during dinner today and the restaurant baked 3.0 cakes yesterday,2.0 cakes are left,"baked_cakes_lunch_premise = 5.0
sold_cakes_dinner_premise = 6.0
baked_cakes_yesterday_premise = 3.0
left_cakes_hypothesis = 2.0

def entailment_or_contradiction(baked_cakes_lunch_premise, sold_cakes_dinner_premise, baked_cakes_yesterday_premise, left_cakes_hypothesis):
    # the hypothesis talks about the number of left cakes, which can be computed from the premise
    # find the total number of cakes left from the premise 
    total_cakes_premise = baked_cakes_lunch_premise + baked_cakes_yesterday_premise - sold_cakes_dinner_premise
    # check if 'left_cakes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cakes_premise == left_cakes_hypothesis

print(entailment_or_contradiction(baked_cakes_lunch_premise, sold_cakes_dinner_premise, baked_cakes_yesterday_premise, left_cakes_hypothesis))
"
559,contradiction,,contradiction,Mrs. Santiago has 58.0 red roses and Mrs. Garrett has 24.0,The total number of roses is 77.0,mrs. santiago has 58.0 red roses and mrs. garrett has 24.0,the total number of roses is 77.0,"red_roses_santiago = 58.0
red_roses_garrett = 24.0
total_roses_hypothesis = 77.0

def entailment_or_contradiction(red_roses_santiago, red_roses_garrett, total_roses_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_roses_premise = red_roses_santiago + red_roses_garrett
    # check if 'total_roses_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(red_roses_santiago, red_roses_garrett, total_roses_hypothesis))
"
381,contradiction,,contradiction,Sara has 31.0 red and 15.0 green balloons  and she gave Sandy 24.0 red balloons ,She has 3.0 red balloons left,sara has 31.0 red and 15.0 green balloons and she gave sandy 24.0 red balloons,she has 3.0 red balloons left,"red_balloons_premise = 31.0
given_red_balloons_premise = 24.0
red_balloons_left_hypothesis = 3.0

def entailment_or_contradiction(red_balloons_premise, given_red_balloons_premise, red_balloons_left_hypothesis):
    # the number of red balloons left can be computed from the entities in the premise
    red_balloons_left_premise = red_balloons_premise - given_red_balloons_premise
    # check if 'red_balloons_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return red_balloons_left_premise == red_balloons_left_hypothesis

print(entailment_or_contradiction(red_balloons_premise, given_red_balloons_premise, red_balloons_left_hypothesis))
"
5,contradiction,,contradiction,There are 2.0 pencils in the drawer  and Tim placed 3.0 pencils in the drawer ,2.0 pencils are now there in total ,there are 2.0 pencils in the drawer and tim placed 3.0 pencils in the drawer,2.0 pencils are now there in total,"pencils_drawer_premise = 2.0
pencils_added_premise = 3.0
total_pencils_hypothesis = 2.0

def entailment_or_contradiction(pencils_drawer_premise, pencils_added_premise, total_pencils_hypothesis):
    # the number of pencils in the drawer after Tim placed his can be computed from the entities in the premise
    total_pencils_premise = pencils_drawer_premise + pencils_added_premise
    # check if 'total_pencils_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencils_drawer_premise, pencils_added_premise, total_pencils_hypothesis))
"
661,contradiction,,contradiction,"219.0 people are going to the zoo, and there are 3.0 tasty sandwiches made ready for each person's lunch.",661.0 sandwiches are prepared in total,"219.0 people are going to the zoo, and there are 3.0 tasty sandwiches made ready for each person's lunch.",661.0 sandwiches are prepared in total,"people_premise = 219.0
sandwiches_each_person_premise = 3.0
total_sandwiches_hypothesis = 661.0

def entailment_or_contradiction(people_premise, sandwiches_each_person_premise, total_sandwiches_hypothesis):
    # the total number of sandwiches can be computed from the entities in the premise
    total_sandwiches_premise = people_premise * sandwiches_each_person_premise
    # check if 'total_sandwiches_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return total_sandwiches_premise == total_sandwiches_hypothesis

print(entailment_or_contradiction(people_premise, sandwiches_each_person_premise, total_sandwiches_hypothesis))
"
419,contradiction,,contradiction,There are 46.0 rulers in the drawer and Tim put 25.0 more rulers into the drawer,74.0 rulers are now in the drawer,there are 46.0 rulers in the drawer and tim put 25.0 more rulers into the drawer,74.0 rulers are now in the drawer,"initial_rulers_premise = 46.0
added_rulers_premise = 25.0
total_rulers_hypothesis = 74.0

def entailment_or_contradiction(initial_rulers_premise, added_rulers_premise, total_rulers_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_rulers_premise = initial_rulers_premise + added_rulers_premise
    # check if 'total_rulers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_rulers_premise == total_rulers_hypothesis

print(entailment_or_contradiction(initial_rulers_premise, added_rulers_premise, total_rulers_hypothesis))
"
575,contradiction,,contradiction,Robin has 18.0 pieces of gum and her brother gave her 44.0 more pieces,Robin has 60.0 pieces of gum now,robin has 18.0 pieces of gum and her brother gave her 44.0 more pieces,robin has 60.0 pieces of gum now,"initial_gum_premise = 18.0
gifted_gum_premise = 44.0
total_gum_hypothesis = 60.0

def entailment_or_contradiction(initial_gum_premise, gifted_gum_premise, total_gum_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_gum_premise = initial_gum_premise + gifted_gum_premise
    # check if 'total_gum_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_gum_premise == total_gum_hypothesis

print(entailment_or_contradiction(initial_gum_premise, gifted_gum_premise, total_gum_hypothesis))
"
250,entailment,,entailment, There are 14240.0 books in a library and they are arranged on shelves that hold 8.0 books each,1780.0 shelves are in the library,there are 14240.0 books in a library and they are arranged on shelves that hold 8.0 books each,1780.0 shelves are in the library,"books_in_library_premise = 14240.0
books_per_shelf_premise = 8.0
shelves_in_library_hypothesis = 1780.0

def entailment_or_contradiction(books_in_library_premise, books_per_shelf_premise, shelves_in_library_hypothesis):
    # the hypothesis talks about the number of shelves in the library, which can be computed from the entities in the premise
    shelves_in_library_premise = books_in_library_premise / books_per_shelf_premise
    # check if 'shelves_in_library_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return shelves_in_library_hypothesis == shelves_in_library_premise

print(entailment_or_contradiction(books_in_library_premise, books_per_shelf_premise, shelves_in_library_hypothesis))
"
113,contradiction,,contradiction,"Joshua has 40.0 Skittles and 6.0 eggs, and he shares the Skittles among 5.0 friends",Each friend got 12.0 Skittles,"joshua has 40.0 skittles and 6.0 eggs, and he shares the skittles among 5.0 friends",each friend got 12.0 skittles,"skittles_premise = 40.0
friends_premise = 5.0
skittles_per_friend_hypothesis = 12.0

def entailment_or_contradiction(skittles_premise, friends_premise, skittles_per_friend_hypothesis):
    # the hypothesis talks about the number of skittles each friend got, which can be computed from the premise
    skittles_per_friend_premise = skittles_premise / friends_premise
    # check if 'skittles_per_friend_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return skittles_per_friend_premise == skittles_per_friend_hypothesis

print(entailment_or_contradiction(skittles_premise, friends_premise, skittles_per_friend_hypothesis))
"
397,contradiction,,contradiction,Fred had 7.0 dimes in his bank  and his sister loaned Fred 3.0 more dimes ,Fred has 13.0 dimes now,fred had 7.0 dimes in his bank and his sister loaned fred 3.0 more dimes,fred has 13.0 dimes now,"dimes_fred_premise = 7.0
loaned_dimes_premise = 3.0
total_dimes_hypothesis = 13.0

def entailment_or_contradiction(dimes_fred_premise, loaned_dimes_premise, total_dimes_hypothesis):
    # the total number of dimes Fred has can be computed from the entities in the premise
    total_dimes_premise = dimes_fred_premise + loaned_dimes_premise
    # check if 'total_dimes_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(dimes_fred_premise, loaned_dimes_premise, total_dimes_hypothesis))
"
664,entailment,,entailment,"In fourth grade there were 10.0 students at the start of the year and During the year, 4.0 students were added, and 42.0 new students came to school",56.0 students were in fourth grade at the end,"in fourth grade there were 10.0 students at the start of the year and during the year, 4.0 students were added, and 42.0 new students came to school",56.0 students were in fourth grade at the end,"start_students_premise = 10.0
added_students_premise = 4.0
new_students_premise = 42.0
end_students_hypothesis = 56.0

def entailment_or_contradiction(start_students_premise, added_students_premise, new_students_premise, end_students_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    end_students_premise = start_students_premise + added_students_premise + new_students_premise
    # check if 'end_students_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return end_students_premise == end_students_hypothesis

print(entailment_or_contradiction(start_students_premise, added_students_premise, new_students_premise, end_students_hypothesis))
"
510,entailment,,entailment,Charles strolled at 3.0 miles per hour for 6.0 hours,Charles travelled for 18.0 miles,charles strolled at 3.0 miles per hour for 6.0 hours,charles travelled for 18.0 miles,"speed_premise = 3.0
time_premise = 6.0
distance_hypothesis = 18.0

def entailment_or_contradiction(speed_premise, time_premise, distance_hypothesis):
    # the distance travelled can be computed from the speed and time in the premise
    distance_premise = speed_premise * time_premise
    # check if 'distance_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return distance_premise == distance_hypothesis

print(entailment_or_contradiction(speed_premise, time_premise, distance_hypothesis))
"
343,contradiction,,contradiction,"Christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",They were able to fill 6.0 sacks if they gathered 80.0 pieces of wood,"christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",they were able to fill 6.0 sacks if they gathered 80.0 pieces of wood,"wood_per_sack_premise = 20.0
sacks_hypothesis = 6.0
wood_hypothesis = 80.0

def entailment_or_contradiction(wood_per_sack_premise, sacks_hypothesis, wood_hypothesis):
    # the hypothesis talks about the quantity of wood and sacks, which are also referenced in the premise
    # find the total number of wood pieces that can be contained in the sacks from the hypothesis 
    total_wood_premise = wood_per_sack_premise * sacks_hypothesis
    # check if the 'wood_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_wood_premise == wood_hypothesis

print(entailment_or_contradiction(wood_per_sack_premise, sacks_hypothesis, wood_hypothesis))
"
53,contradiction,,contradiction,Each of farmer Cunningham 's 6048.0 lambs is either black or white  and there are 193.0 white ones ,5854.0 of Farmer Cunningham 's lambs are black ,each of farmer cunningham 's 6048.0 lambs is either black or white and there are 193.0 white ones,5854.0 of farmer cunningham 's lambs are black,"total_lambs_premise = 6048.0
white_lambs_premise = 193.0
black_lambs_hypothesis = 5854.0

def entailment_or_contradiction(total_lambs_premise, white_lambs_premise, black_lambs_hypothesis):
    # the hypothesis talks about the number of black lambs, which can be computed from the total number of lambs and the number of white lambs in the premise
    black_lambs_premise = total_lambs_premise - white_lambs_premise
    # check if 'black_lambs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return black_lambs_premise == black_lambs_hypothesis

print(entailment_or_contradiction(total_lambs_premise, white_lambs_premise, black_lambs_hypothesis))
"
514,entailment,,entailment,4.0 birds were sitting on the fence and 2.0 more birds flew away,2.0 birds are now sitting on the fence,4.0 birds were sitting on the fence and 2.0 more birds flew away,2.0 birds are now sitting on the fence,"initial_birds_premise = 4.0
flew_away_birds_premise = 2.0
remaining_birds_hypothesis = 2.0

def entailment_or_contradiction(initial_birds_premise, flew_away_birds_premise, remaining_birds_hypothesis):
    # The hypothesis discusses the remaining number of birds, which can be calculated from the premise's quantities
    remaining_birds_premise = initial_birds_premise - flew_away_birds_premise
    # check if 'remaining_birds_hypothesis' matches the quantity derived from the premise
    return remaining_birds_premise == remaining_birds_hypothesis

print(entailment_or_contradiction(initial_birds_premise, flew_away_birds_premise, remaining_birds_hypothesis))
"
620,entailment,,entailment,I want to put 20.0 gallons of gas into 5.0 gallon gas cans.,I need 4.0 gas cans,i want to put 20.0 gallons of gas into 5.0 gallon gas cans.,i need 4.0 gas cans,"total_gas_premise = 20.0
gas_per_can_premise = 5.0
cans_needed_hypothesis = 4.0

def entailment_or_contradiction(total_gas_premise, gas_per_can_premise, cans_needed_hypothesis):
    # the number of gas cans needed can be computed from the total amount of gas and the capacity of each can
    cans_needed_premise = total_gas_premise / gas_per_can_premise
    # check if the number of cans from the hypothesis entails the quantity deduced from the premise, so if they are equal
    return cans_needed_premise == cans_needed_hypothesis

print(entailment_or_contradiction(total_gas_premise, gas_per_can_premise, cans_needed_hypothesis))
"
104,entailment,,entailment,Karen sold 36.0 boxes of Tagalongs,Karen picked up 3.0 cases of 12.0 boxes,karen sold 36.0 boxes of tagalongs,karen picked up 3.0 cases of 12.0 boxes,"boxes_sold_premise = 36.0
cases_picked_hypothesis = 3.0
boxes_per_case_hypothesis = 12.0

def entailment_or_contradiction(boxes_sold_premise, cases_picked_hypothesis, boxes_per_case_hypothesis):
    # the hypothesis implies that the total boxes picked up is the product of 'cases_picked_hypothesis' and 'boxes_per_case_hypothesis'
    total_boxes_picked_hypothesis = cases_picked_hypothesis * boxes_per_case_hypothesis
    # check if the total boxes picked up according to the hypothesis is equal to the boxes sold in the premise
    return total_boxes_picked_hypothesis == boxes_sold_premise

print(entailment_or_contradiction(boxes_sold_premise, cases_picked_hypothesis, boxes_per_case_hypothesis))
"
606,entailment,,entailment,There were 27.0 boys and 35.0 girls on the playground at recess and each boy went back inside paired with a girl,8.0 children were left on the playground now,there were 27.0 boys and 35.0 girls on the playground at recess and each boy went back inside paired with a girl,8.0 children were left on the playground now,"boys_premise = 27.0
girls_premise = 35.0
children_left_hypothesis = 8.0

def entailment_or_contradiction(boys_premise, girls_premise, children_left_hypothesis):
    # the hypothesis claims that there were 8 children left on the playground
    # according to the premise, each boy went back inside with a girl
    # so, the number of children left should be the difference between the number of girls and boys
    children_left_premise = girls_premise - boys_premise
    # check if the quantities in the premise and hypothesis are equal
    return children_left_premise == children_left_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, children_left_hypothesis))
"
88,entailment,,entailment,There are 4.0 cards and 3.0 cards more are added,7.0 cards are there total,there are 4.0 cards and 3.0 cards more are added,7.0 cards are there total,"cards_initial_premise = 4.0
cards_added_premise = 3.0
total_cards_hypothesis = 7.0

def entailment_or_contradiction(cards_initial_premise, cards_added_premise, total_cards_hypothesis):
    # the hypothesis refers to the total number of cards, which can be computed from the premise
    total_cards_premise = cards_initial_premise + cards_added_premise
    # check if 'total_cards_hypothesis' entails the quantity derived from the premise, so if they are equal
    return total_cards_premise == total_cards_hypothesis

print(entailment_or_contradiction(cards_initial_premise, cards_added_premise, total_cards_hypothesis))
"
347,contradiction,,contradiction,Paco had 93.0 cookies and Paco ate 15.0 of them,Paco has 77.0 cookies left,paco had 93.0 cookies and paco ate 15.0 of them,paco has 77.0 cookies left,"initial_cookies_premise = 93.0
ate_cookies_premise = 15.0
cookies_left_hypothesis = 77.0

def entailment_or_contradiction(initial_cookies_premise, ate_cookies_premise, cookies_left_hypothesis):
    # the hypothesis can be computed from the entities in the premise
    cookies_left_premise = initial_cookies_premise - ate_cookies_premise
    # check if 'cookies_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return cookies_left_premise == cookies_left_hypothesis

print(entailment_or_contradiction(initial_cookies_premise, ate_cookies_premise, cookies_left_hypothesis))
"
470,entailment,,entailment,A restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch  and then the restaurant made 3.0 more hamburgers ,12.0 hamburgers were made ,a restaurant made 9.0 hamburgers and 4.0 hot dogs to serve during lunch and then the restaurant made 3.0 more hamburgers,12.0 hamburgers were made,"hamburgers_lunch_premise = 9.0
hamburgers_additional_premise = 3.0
total_hamburgers_hypothesis = 12.0

def entailment_or_contradiction(hamburgers_lunch_premise, hamburgers_additional_premise, total_hamburgers_hypothesis):
    # the total hamburgers can be computed from the hamburgers in the lunch and additional hamburgers
    total_hamburgers_premise = hamburgers_lunch_premise + hamburgers_additional_premise
    # check if 'total_hamburgers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_hamburgers_premise == total_hamburgers_hypothesis

print(entailment_or_contradiction(hamburgers_lunch_premise, hamburgers_additional_premise, total_hamburgers_hypothesis))
"
675,contradiction,,contradiction,"There were 9 people in line for bumper cars, and 6 people got tired of waiting and left but 3 more people got in line",16.0 people were in line at some point,"there were 9 people in line for bumper cars, and 6 people got tired of waiting and left but 3 more people got in line",16.0 people were in line at some point,"initial_people_premise = 9
left_people_premise = 6
joined_people_premise = 3
total_people_hypothesis = 16

def entailment_or_contradiction(initial_people_premise, left_people_premise, joined_people_premise, total_people_hypothesis):
    # the total number of people who were in line at some point can be computed from the entities in the premise
    total_people_premise = initial_people_premise + joined_people_premise
    # check if 'total_people_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(initial_people_premise, left_people_premise, joined_people_premise, total_people_hypothesis))
"
669,contradiction,,contradiction,"A florist had 37.0 roses, and she picked 16.0 more and then later picked another 19.0 more",She would have 73.0 roses ,"a florist had 37.0 roses, and she picked 16.0 more and then later picked another 19.0 more",she would have 73.0 roses,"initial_roses_premise = 37.0
picked_roses_first_premise = 16.0
picked_roses_second_premise = 19.0
total_roses_hypothesis = 73.0

def entailment_or_contradiction(initial_roses_premise, picked_roses_first_premise, picked_roses_second_premise, total_roses_hypothesis):
    # The total number of roses in the premise can be calculated by adding up the initial roses and the picked ones
    total_roses_premise = initial_roses_premise + picked_roses_first_premise + picked_roses_second_premise
    # Compare the total number of roses from the premise with that from the hypothesis
    return total_roses_premise == total_roses_hypothesis

print(entailment_or_contradiction(initial_roses_premise, picked_roses_first_premise, picked_roses_second_premise, total_roses_hypothesis))
"
458,entailment,,entailment,"At the beach , Miki and her sister both built sandcastles and then measured their heights  and Miki 's sandcastle was 0.8333333333333334 foot tall, and her sister 's was 0.5 foot tall ",Total height of both sandcastles is 1.33333333333,"at the beach , miki and her sister both built sandcastles and then measured their heights and miki 's sandcastle was 0.8333333333333334 foot tall, and her sister 's was 0.5 foot tall",total height of both sandcastles is 1.33333333333,"miki_sandcastle_height_premise = 0.8333333333333334
sister_sandcastle_height_premise = 0.5
total_sandcastles_height_hypothesis = 1.33333333333

def entailment_or_contradiction(miki_sandcastle_height_premise, sister_sandcastle_height_premise, total_sandcastles_height_hypothesis):
    # the hypothesis talks about the total height of the sandcastles, which can be computed from the premise
    total_sandcastles_height_premise = miki_sandcastle_height_premise + sister_sandcastle_height_premise
    # check if 'total_sandcastles_height_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return round(total_sandcastles_height_premise, 2) == round(total_sandcastles_height_hypothesis, 2)

print(entailment_or_contradiction(miki_sandcastle_height_premise, sister_sandcastle_height_premise, total_sandcastles_height_hypothesis))
"
509,contradiction,,contradiction,Anne wandered for 3.0 miles at 2.0 miles per hour,she wandered for 2.7 hours,anne wandered for 3.0 miles at 2.0 miles per hour,she wandered for 2.7 hours,"distance_premise = 3.0
speed_premise = 2.0
time_hypothesis = 2.7

def entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis):
    # we can calculate the time it took for Anne to wander based on the distance and speed from the premise
    time_premise = distance_premise / speed_premise
    # check if 'time_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return time_premise == time_hypothesis

print(entailment_or_contradiction(distance_premise, speed_premise, time_hypothesis))
"
110,entailment,,entailment,"Rose has 9.0 apples and 12.0 erasers, and she shares the apples among 3.0 friends",Each friend got 3.0 apples,"rose has 9.0 apples and 12.0 erasers, and she shares the apples among 3.0 friends",each friend got 3.0 apples,"apples_premise = 9.0
friends_premise = 3.0
apples_per_friend_hypothesis = 3.0

def entailment_or_contradiction(apples_premise, friends_premise, apples_per_friend_hypothesis):
    # the hypothesis talks about the number of apples each friend got, which can be computed from the premise
    apples_per_friend_premise = apples_premise / friends_premise
    # check if 'apples_per_friend_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return apples_per_friend_premise == apples_per_friend_hypothesis

print(entailment_or_contradiction(apples_premise, friends_premise, apples_per_friend_hypothesis))
"
520,entailment,,entailment,2.0 beavers were working on their home and another 1.0 came to help,3.0 beavers are still working on their home,2.0 beavers were working on their home and another 1.0 came to help,3.0 beavers are still working on their home,"beavers_working_premise = 2.0
beavers_came_premise = 1.0
beavers_working_hypothesis = 3.0

def entailment_or_contradiction(beavers_working_premise, beavers_came_premise, beavers_working_hypothesis):
    # the number of beavers working can be computed from the premise
    total_beavers_premise = beavers_working_premise + beavers_came_premise
    # check if the number of beavers working according to the hypothesis matches the number calculated from the premise
    return total_beavers_premise == beavers_working_hypothesis

print(entailment_or_contradiction(beavers_working_premise, beavers_came_premise, beavers_working_hypothesis))
"
97,contradiction,,contradiction,"Each child has 3.0 oranges, and there are 4.0 children",9.0 oranges are there in total,"each child has 3.0 oranges, and there are 4.0 children",9.0 oranges are there in total,"oranges_per_child_premise = 3.0
children_premise = 4.0
total_oranges_hypothesis = 9.0

def entailment_or_contradiction(oranges_per_child_premise, children_premise, total_oranges_hypothesis):
    # the total number of oranges can be computed from the entities in the premise
    total_oranges_premise = oranges_per_child_premise * children_premise
    # check if 'total_oranges_hypothesis' is equal to the quantity deduced from the premise
    return total_oranges_premise == total_oranges_hypothesis

print(entailment_or_contradiction(oranges_per_child_premise, children_premise, total_oranges_hypothesis))
"
47,contradiction,,contradiction,"Each year , salmon travel upstream , going from the ocean to the rivers where they were born  and this year , 712261.0 male and 259378.0 female salmon returned to their rivers ",971642.0 salmon made the trip ,"each year , salmon travel upstream , going from the ocean to the rivers where they were born and this year , 712261.0 male and 259378.0 female salmon returned to their rivers",971642.0 salmon made the trip,"male_salmon_premise = 712261.0
female_salmon_premise = 259378.0
total_salmon_hypothesis = 971642.0

def entailment_or_contradiction(male_salmon_premise, female_salmon_premise, total_salmon_hypothesis):
    # the total number of salmon in the hypothesis can be computed from the quantities in the premise
    total_salmon_premise = male_salmon_premise + female_salmon_premise
    # check if 'total_salmon_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_salmon_premise == total_salmon_hypothesis

print(entailment_or_contradiction(male_salmon_premise, female_salmon_premise, total_salmon_hypothesis))
"
271,contradiction,,contradiction," For Halloween Faye scored 47.0 pieces of candy and she ate 25.0 pieces the first night, and then her sister gave her 40.0 more pieces",Faye has 65.0 pieces of candy now,"for halloween faye scored 47.0 pieces of candy and she ate 25.0 pieces the first night, and then her sister gave her 40.0 more pieces",faye has 65.0 pieces of candy now,"scored_candy_premise = 47.0
ate_candy_premise = 25.0
received_candy_premise = 40.0
total_candy_hypothesis = 65.0

def entailment_or_contradiction(scored_candy_premise, ate_candy_premise, received_candy_premise, total_candy_hypothesis):
    # the quantity in the hypothesis can be computed from the entities in the premise
    total_candy_premise = scored_candy_premise - ate_candy_premise + received_candy_premise
    # check if 'total_candy_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_candy_premise == total_candy_hypothesis

print(entailment_or_contradiction(scored_candy_premise, ate_candy_premise, received_candy_premise, total_candy_hypothesis))
"
531,contradiction,,contradiction,Linda has 34.0 candies and she gave Chloe 28.0 candies,Linda has 2.0 candies left,linda has 34.0 candies and she gave chloe 28.0 candies,linda has 2.0 candies left,"initial_candies_premise = 34.0
given_candies_premise = 28.0
remaining_candies_hypothesis = 2.0

def entailment_or_contradiction(initial_candies_premise, given_candies_premise, remaining_candies_hypothesis):
    # compute the remaining candies after Linda gave some to Chloe
    remaining_candies_premise = initial_candies_premise - given_candies_premise
    # check if the remaining candies in the hypothesis matches the computed remaining candies from the premise
    return remaining_candies_premise == remaining_candies_hypothesis

print(entailment_or_contradiction(initial_candies_premise, given_candies_premise, remaining_candies_hypothesis))
"
270,entailment,,entailment," For Halloween Faye scored 47.0 pieces of candy and she ate 25.0 pieces the first night, and then her sister gave her 40.0 more pieces",Faye has 62.0 pieces of candy now,"for halloween faye scored 47.0 pieces of candy and she ate 25.0 pieces the first night, and then her sister gave her 40.0 more pieces",faye has 62.0 pieces of candy now,"candy_scored_premise = 47.0
candy_ate_premise = 25.0
candy_received_premise = 40.0
candy_now_hypothesis = 62.0

def entailment_or_contradiction(candy_scored_premise, candy_ate_premise, candy_received_premise, candy_now_hypothesis):
    # the hypothesis talks about the current amount of candy Faye has, which can be calculated from the premise
    # calculate the total amount of candy from the premise
    candy_now_premise = candy_scored_premise - candy_ate_premise + candy_received_premise
    # check if 'candy_now_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return candy_now_premise == candy_now_hypothesis

print(entailment_or_contradiction(candy_scored_premise, candy_ate_premise, candy_received_premise, candy_now_hypothesis))
"
696,entailment,,entailment,"A company invited 18.0 people to a luncheon; 12.0 more people showed up, and the tables they had held 3.0 people each",They need 10.0 tables,"a company invited 18.0 people to a luncheon; 12.0 more people showed up, and the tables they had held 3.0 people each",they need 10.0 tables,"invited_people_premise = 18.0
additional_people_premise = 12.0
people_per_table_premise = 3.0
tables_needed_hypothesis = 10.0

def entailment_or_contradiction(invited_people_premise, additional_people_premise, people_per_table_premise, tables_needed_hypothesis):
    # Total number of people is the sum of the invited people and the additional people
    total_people_premise = invited_people_premise + additional_people_premise
    # Number of tables needed can be calculated by dividing the total number of people by the number of people each table can hold
    tables_needed_premise = total_people_premise / people_per_table_premise
    # Check if the number of tables needed as per the premise is equal to the number of tables mentioned in the hypothesis
    return tables_needed_premise == tables_needed_hypothesis

print(entailment_or_contradiction(invited_people_premise, additional_people_premise, people_per_table_premise, tables_needed_hypothesis))
"
576,entailment,,entailment,Tommy has 60.0 balloons and his mom gave him 34.0 balloons for his birthday,Tommy has 94.0 balloons now,tommy has 60.0 balloons and his mom gave him 34.0 balloons for his birthday,tommy has 94.0 balloons now,"balloons_tommy_premise = 60.0
balloons_from_mom_premise = 34.0
total_balloons_hypothesis = 94.0

def entailment_or_contradiction(balloons_tommy_premise, balloons_from_mom_premise, total_balloons_hypothesis):
    # the total balloons in the hypothesis can be computed from the entities in the premise
    total_balloons_premise = balloons_tommy_premise + balloons_from_mom_premise
    # check if 'total_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_balloons_premise == total_balloons_hypothesis

print(entailment_or_contradiction(balloons_tommy_premise, balloons_from_mom_premise, total_balloons_hypothesis))
"
579,contradiction,,contradiction,Marcus has 210.0 baseball cards and Carter gave him 58.0 more cards,Marcus has 270.0 baseball cards now,marcus has 210.0 baseball cards and carter gave him 58.0 more cards,marcus has 270.0 baseball cards now,"initial_cards_marcus_premise = 210.0
received_cards_premise = 58.0
total_cards_hypothesis = 270.0

def entailment_or_contradiction(initial_cards_marcus_premise, received_cards_premise, total_cards_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    total_cards_premise = initial_cards_marcus_premise + received_cards_premise
    # check if 'total_cards_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cards_premise == total_cards_hypothesis

print(entailment_or_contradiction(initial_cards_marcus_premise, received_cards_premise, total_cards_hypothesis))
"
160,entailment,,entailment, Mrs. Sheridan has 22.0 fish and her sister gave her 47.0 more fish,She has 69.0 fish now,mrs. sheridan has 22.0 fish and her sister gave her 47.0 more fish,she has 69.0 fish now,"fish_initial_premise = 22.0
fish_received_premise = 47.0
total_fish_hypothesis = 69.0

def entailment_or_contradiction(fish_initial_premise, fish_received_premise, total_fish_hypothesis):
    # the total number of fish can be computed from the initial number and the received number
    total_fish_premise = fish_initial_premise + fish_received_premise
    # check if 'total_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_fish_premise == total_fish_hypothesis

print(entailment_or_contradiction(fish_initial_premise, fish_received_premise, total_fish_hypothesis))
"
678,entailment,,entailment,"Faye bought 48.0 coloring books, and she gave away 34.0 of them and then gave away 3.0 more",She would have 11.0 coloring books left,"faye bought 48.0 coloring books, and she gave away 34.0 of them and then gave away 3.0 more",she would have 11.0 coloring books left,"bought_books_premise = 48.0
gave_away_books_premise = 34.0
gave_away_more_books_premise = 3.0
left_books_hypothesis = 11.0

def entailment_or_contradiction(bought_books_premise, gave_away_books_premise, gave_away_more_books_premise, left_books_hypothesis):
    # the hypothesis refers to the number of books left, which can be computed from the numbers in the premise
    left_books_premise = bought_books_premise - gave_away_books_premise - gave_away_more_books_premise
    # check if 'left_books_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return left_books_premise == left_books_hypothesis

print(entailment_or_contradiction(bought_books_premise, gave_away_books_premise, gave_away_more_books_premise, left_books_hypothesis))
"
506,entailment,,entailment,Marilyn has 51.0 bottle caps and Nancy gives her 36.0,Marilyn has 87.0 bottle caps now,marilyn has 51.0 bottle caps and nancy gives her 36.0,marilyn has 87.0 bottle caps now,"marilyn_caps_premise = 51.0
nancy_gives_premise = 36.0
marilyn_caps_hypothesis = 87.0

def entailment_or_contradiction(marilyn_caps_premise, nancy_gives_premise, marilyn_caps_hypothesis):
    # the total number of Marilyn's caps can be computed from the entities in the premise
    total_caps_premise = marilyn_caps_premise + nancy_gives_premise
    # check if 'marilyn_caps_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_caps_premise == marilyn_caps_hypothesis

print(entailment_or_contradiction(marilyn_caps_premise, nancy_gives_premise, marilyn_caps_hypothesis))
"
717,contradiction,,contradiction,"Jane's mom made 12.0 cinnamon swirls for each person, and there are 3.0 people eating",40.0 rolls were made in total,"jane's mom made 12.0 cinnamon swirls for each person, and there are 3.0 people eating",40.0 rolls were made in total,"swirls_per_person_premise = 12.0
people_eating_premise = 3.0
total_swirls_hypothesis = 40.0

def entailment_or_contradiction(swirls_per_person_premise, people_eating_premise, total_swirls_hypothesis):
    # The total number of cinnamon swirls made can be computed from the entities in the premise
    total_swirls_premise = swirls_per_person_premise * people_eating_premise
    # Check whether the 'total_swirls_hypothesis' contradicts or entails the quantity deduced from the premise
    return total_swirls_premise == total_swirls_hypothesis

print(entailment_or_contradiction(swirls_per_person_premise, people_eating_premise, total_swirls_hypothesis))
"
683,contradiction,,contradiction,"George had 28.0 socks, and he bought 36.0 new ones and his Dad gave him 4.0 more",He would have 69.0 socks ,"george had 28.0 socks, and he bought 36.0 new ones and his dad gave him 4.0 more",he would have 69.0 socks,"initial_socks_premise = 28.0
bought_socks_premise = 36.0
gifted_socks_premise = 4.0
total_socks_hypothesis = 69.0

def entailment_or_contradiction(initial_socks_premise, bought_socks_premise, gifted_socks_premise, total_socks_hypothesis):
    # the total number of socks in the hypothesis can be computed from the entities in the premise
    total_socks_premise = initial_socks_premise + bought_socks_premise + gifted_socks_premise
    # check if 'total_socks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_socks_premise == total_socks_hypothesis

print(entailment_or_contradiction(initial_socks_premise, bought_socks_premise, gifted_socks_premise, total_socks_hypothesis))
"
138,contradiction,,entailment, Mrs. Hilt reads 5.0 books a day.,She read 15.0 books,mrs. hilt reads 5.0 books a day.,she read 15.0 books,"books_per_day_premise = 5.0
total_books_hypothesis = 15.0

def entailment_or_contradiction(books_per_day_premise, total_books_hypothesis):
    # The hypothesis does not specify the period of time during which the books were read, so we cannot directly compare the quantities
    # However, if we assume that 'total_books_hypothesis' refers to the number of books read in a single day, then we can check if these quantities are equal
    return books_per_day_premise == total_books_hypothesis

print(entailment_or_contradiction(books_per_day_premise, total_books_hypothesis))
"
369,contradiction,,contradiction,"Joan had 9.0 blue balloons , but Sally popped 5.0 of them and Jessica has 2.0 blue balloons ",They have 9.0 blue balloons now,"joan had 9.0 blue balloons , but sally popped 5.0 of them and jessica has 2.0 blue balloons",they have 9.0 blue balloons now,"blue_balloons_joan_premise = 9.0
popped_balloons_sally_premise = 5.0
blue_balloons_jessica_premise = 2.0
total_blue_balloons_hypothesis = 9.0

def entailment_or_contradiction(blue_balloons_joan_premise, popped_balloons_sally_premise, blue_balloons_jessica_premise, total_blue_balloons_hypothesis):
    # the total number of balloons can be computed from the entities in the premise
    total_blue_balloons_premise = blue_balloons_joan_premise - popped_balloons_sally_premise + blue_balloons_jessica_premise
    # check if 'total_blue_balloons_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_blue_balloons_premise == total_blue_balloons_hypothesis

print(entailment_or_contradiction(blue_balloons_joan_premise, popped_balloons_sally_premise, blue_balloons_jessica_premise, total_blue_balloons_hypothesis))
"
198,entailment,,entailment," For the fifth grade play, the chairs have been put into 27.0 rows with 16.0 chairs in each row.",432.0 chairs have been put out for the play,"for the fifth grade play, the chairs have been put into 27.0 rows with 16.0 chairs in each row.",432.0 chairs have been put out for the play,"rows_premise = 27.0
chairs_each_row_premise = 16.0
total_chairs_hypothesis = 432.0

def entailment_or_contradiction(rows_premise, chairs_each_row_premise, total_chairs_hypothesis):
    # the total number of chairs can be calculated from the number of rows and the number of chairs in each row
    total_chairs_premise = rows_premise * chairs_each_row_premise
    # check if 'total_chairs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_chairs_premise == total_chairs_hypothesis

print(entailment_or_contradiction(rows_premise, chairs_each_row_premise, total_chairs_hypothesis))
"
428,entailment,,entailment,"Before December, customers bought 6444.0 ear muffs from the mall and During December, they bought 1346.0 less earmuffs than before",5098.0 earmuffs were sold in December,"before december, customers bought 6444.0 ear muffs from the mall and during december, they bought 1346.0 less earmuffs than before",5098.0 earmuffs were sold in december,"earmuffs_before_december_premise = 6444.0
less_earmuffs_december_premise = 1346.0
earmuffs_december_hypothesis = 5098.0

def entailment_or_contradiction(earmuffs_before_december_premise, less_earmuffs_december_premise, earmuffs_december_hypothesis):
    # the number of earmuffs sold in December can be computed from the premise
    earmuffs_december_premise = earmuffs_before_december_premise - less_earmuffs_december_premise
    # check if 'earmuffs_december_hypothesis' matches with the quantity computed from the premise
    return earmuffs_december_premise == earmuffs_december_hypothesis

print(entailment_or_contradiction(earmuffs_before_december_premise, less_earmuffs_december_premise, earmuffs_december_hypothesis))
"
541,contradiction,,contradiction,Sandy has 26.0 pet fish and her cat ate 6.0,Sandy has 22.0 now,sandy has 26.0 pet fish and her cat ate 6.0,sandy has 22.0 now,"initial_fish_premise = 26.0
eaten_fish_premise = 6.0
remaining_fish_hypothesis = 22.0

def entailment_or_contradiction(initial_fish_premise, eaten_fish_premise, remaining_fish_hypothesis):
    # the premise talks about the number of fish that Sandy initially had and how many were eaten
    # we can compute the number of fish left after some were eaten
    remaining_fish_premise = initial_fish_premise - eaten_fish_premise
    # check if 'remaining_fish_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_fish_premise == remaining_fish_hypothesis

print(entailment_or_contradiction(initial_fish_premise, eaten_fish_premise, remaining_fish_hypothesis))
"
76,contradiction,,entailment,"Dan spent $ 11.76 on a snake toy , and a cage cost him $ 14.54  and Dan also found a dollar bill on the ground ",The total cost of Dan 's purchases  is 26.3,"dan spent $ 11.76 on a snake toy , and a cage cost him $ 14.54 and dan also found a dollar bill on the ground",the total cost of dan 's purchases is 26.3,"snake_toy_cost_premise = 11.76
cage_cost_premise = 14.54
found_money_premise = 1.00
total_cost_hypothesis = 26.3

def entailment_or_contradiction(snake_toy_cost_premise, cage_cost_premise, found_money_premise, total_cost_hypothesis):
    # calculate the total cost from the premise
    total_cost_premise = snake_toy_cost_premise + cage_cost_premise - found_money_premise
    # check if the total cost from the hypothesis matches with the calculated total cost from the premise
    return total_cost_premise == total_cost_hypothesis

print(entailment_or_contradiction(snake_toy_cost_premise, cage_cost_premise, found_money_premise, total_cost_hypothesis))
"
646,entailment,,entailment,532.0 people are watching a movie in a theater and there are 750.0 seats free,1282.0 seats are there in the theater,532.0 people are watching a movie in a theater and there are 750.0 seats free,1282.0 seats are there in the theater,"people_watching_premise = 532.0
seats_free_premise = 750.0
total_seats_hypothesis = 1282.0

def entailment_or_contradiction(people_watching_premise, seats_free_premise, total_seats_hypothesis):
    # the total number of seats in the theater can be computed by adding the number of people watching and the number of free seats
    total_seats_premise = people_watching_premise + seats_free_premise
    # check if 'total_seats_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_seats_premise == total_seats_hypothesis

print(entailment_or_contradiction(people_watching_premise, seats_free_premise, total_seats_hypothesis))
"
327,contradiction,,contradiction,Sara got fast food for lunch and Sara spent $5.36 on a hotdog and $5.1 on a salad,The total of the lunch bill is 5.6,sara got fast food for lunch and sara spent $5.36 on a hotdog and $5.1 on a salad,the total of the lunch bill is 5.6,"hotdog_cost_premise = 5.36
salad_cost_premise = 5.1
total_bill_hypothesis = 5.6

def entailment_or_contradiction(hotdog_cost_premise, salad_cost_premise, total_bill_hypothesis):
    # the total bill in the hypothesis can be computed from the entities in the premise
    total_bill_premise = hotdog_cost_premise + salad_cost_premise
    # check if 'total_bill_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_bill_premise == total_bill_hypothesis

print(entailment_or_contradiction(hotdog_cost_premise, salad_cost_premise, total_bill_hypothesis))
"
393,contradiction,,contradiction,A restaurant serves 6.0 cakes during lunch and 9.0 during dinner today.,0.0 more cakes are served during dinner than lunch,a restaurant serves 6.0 cakes during lunch and 9.0 during dinner today.,0.0 more cakes are served during dinner than lunch,"cakes_lunch_premise = 6.0
cakes_dinner_premise = 9.0
cakes_difference_hypothesis = 0.0

def entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, cakes_difference_hypothesis):
    # the quantity in the hypothesis can be computed from the quantities in the premise
    cakes_difference_premise = cakes_dinner_premise - cakes_lunch_premise
    # check if 'cakes_difference_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return cakes_difference_premise == cakes_difference_hypothesis

print(entailment_or_contradiction(cakes_lunch_premise, cakes_dinner_premise, cakes_difference_hypothesis))
"
77,contradiction,,contradiction,"Dan spent $ 11.76 on a snake toy , and a cage cost him $ 14.54  and Dan also found a dollar bill on the ground ",The total cost of Dan 's purchases  is 23.9,"dan spent $ 11.76 on a snake toy , and a cage cost him $ 14.54 and dan also found a dollar bill on the ground",the total cost of dan 's purchases is 23.9,"snake_toy_cost_premise = 11.76
cage_cost_premise = 14.54
found_money_premise = 1
total_cost_hypothesis = 23.9

def entailment_or_contradiction(snake_toy_cost_premise, cage_cost_premise, found_money_premise, total_cost_hypothesis):
    # the total cost in the hypothesis can be computed from the costs in the premise
    total_cost_premise = snake_toy_cost_premise + cage_cost_premise - found_money_premise
    # check if 'total_cost_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_cost_premise == total_cost_hypothesis

print(entailment_or_contradiction(snake_toy_cost_premise, cage_cost_premise, found_money_premise, total_cost_hypothesis))
"
628,entailment,,entailment,"I have 4.0 pencil boxes, and I fill each box with 648.0 pencils",I will have 2592.0 pencils ,"i have 4.0 pencil boxes, and i fill each box with 648.0 pencils",i will have 2592.0 pencils,"pencil_boxes_premise = 4.0
pencils_per_box_premise = 648.0
total_pencils_hypothesis = 2592.0

def entailment_or_contradiction(pencil_boxes_premise, pencils_per_box_premise, total_pencils_hypothesis):
    # the total number of pencils can be computed from the number of boxes and pencils per box from the premise
    total_pencils_premise = pencil_boxes_premise * pencils_per_box_premise
    # check if 'total_pencils_hypothesis' equals the quantity deduced from the premise
    return total_pencils_premise == total_pencils_hypothesis

print(entailment_or_contradiction(pencil_boxes_premise, pencils_per_box_premise, total_pencils_hypothesis))
"
215,contradiction,,contradiction, There are 544.0 pots and each pot has 32.0 flowers in it,17410.0 flowers are there in all,there are 544.0 pots and each pot has 32.0 flowers in it,17410.0 flowers are there in all,"pots_premise = 544.0
flowers_per_pot_premise = 32.0
total_flowers_hypothesis = 17410.0

def entailment_or_contradiction(pots_premise, flowers_per_pot_premise, total_flowers_hypothesis):
    # Compute the total number of flowers from the premise
    total_flowers_premise = pots_premise * flowers_per_pot_premise
    # Check if the hypothesis quantity is equal to the premise quantity
    return total_flowers_premise == total_flowers_hypothesis

print(entailment_or_contradiction(pots_premise, flowers_per_pot_premise, total_flowers_hypothesis))
"
372,entailment,,entailment,"Melanie had 7.0 dimes in her bank  and she gave her dad 8.0 dimes, and her mother gave her 4.0 dimes ",Melanie has 3.0 dimes now,"melanie had 7.0 dimes in her bank and she gave her dad 8.0 dimes, and her mother gave her 4.0 dimes",melanie has 3.0 dimes now,"initial_dimes_premise = 7.0
dimes_given_to_dad_premise = 8.0
dimes_received_from_mom_premise = 4.0
total_dimes_hypothesis = 3.0

def entailment_or_contradiction(initial_dimes_premise, dimes_given_to_dad_premise, dimes_received_from_mom_premise, total_dimes_hypothesis):
    # calculate current amount of dimes Melanie has after giving her dad some and receiving some from her mom
    total_dimes_premise = initial_dimes_premise - dimes_given_to_dad_premise + dimes_received_from_mom_premise
    # check if the total dimes in the hypothesis matches the amount calculated from the premise
    return total_dimes_premise == total_dimes_hypothesis

print(entailment_or_contradiction(initial_dimes_premise, dimes_given_to_dad_premise, dimes_received_from_mom_premise, total_dimes_hypothesis))
"
711,contradiction,,contradiction,You have 378 balls and 1.0 juggler is able to juggle 6 balls at a time,You need 67.0 jugglers,you have 378 balls and 1.0 juggler is able to juggle 6 balls at a time,you need 67.0 jugglers,"balls_premise = 378
balls_per_juggler_premise = 6
jugglers_hypothesis = 67.0

def entailment_or_contradiction(balls_premise, balls_per_juggler_premise, jugglers_hypothesis):
    # the hypothesis talks about the number of jugglers needed, which can be computed from the premise
    # find the number of jugglers needed according to the premise
    jugglers_needed_premise = balls_premise / balls_per_juggler_premise
    # check if 'jugglers_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return jugglers_needed_premise == jugglers_hypothesis

print(entailment_or_contradiction(balls_premise, balls_per_juggler_premise, jugglers_hypothesis))
"
236,entailment,,entailment, 1035.0 pounds of oranges are in 45.0 bags,Each bag contains 23.0 pounds of oranges,1035.0 pounds of oranges are in 45.0 bags,each bag contains 23.0 pounds of oranges,"total_oranges_premise = 1035.0
bags_premise = 45.0
oranges_per_bag_hypothesis = 23.0

def entailment_or_contradiction(total_oranges_premise, bags_premise, oranges_per_bag_hypothesis):
    # the hypothesis talks about the number of oranges per bag, which can be computed from the premise
    oranges_per_bag_premise = total_oranges_premise / bags_premise
    # check if 'oranges_per_bag_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return oranges_per_bag_premise == oranges_per_bag_hypothesis

print(entailment_or_contradiction(total_oranges_premise, bags_premise, oranges_per_bag_hypothesis))
"
687,contradiction,,contradiction,"Isabel had 2.0 pages of math homework and 4.0 pages of reading homework, and there are 5 total problems",4.7 problems were on each page on average,"isabel had 2.0 pages of math homework and 4.0 pages of reading homework, and there are 5 total problems",4.7 problems were on each page on average,"math_pages_premise = 2.0
reading_pages_premise = 4.0
total_problems_premise = 5
average_problems_per_page_hypothesis = 4.7

def entailment_or_contradiction(math_pages_premise, reading_pages_premise, total_problems_premise, average_problems_per_page_hypothesis):
    # the hypothesis talks about the average number of problems per page, which can be computed from the premise
    total_pages_premise = math_pages_premise + reading_pages_premise
    # compute the average number of problems per page
    average_problems_per_page_premise = total_problems_premise / total_pages_premise
    # check if 'average_problems_per_page_hypothesis' contradicts the quantity deduced from the premise, so if they are not equal
    return average_problems_per_page_premise == average_problems_per_page_hypothesis

print(entailment_or_contradiction(math_pages_premise, reading_pages_premise, total_problems_premise, average_problems_per_page_hypothesis))
"
412,entailment,,entailment,Jessica had 8.0 quarters in her bank  and her sister gave her 3.0 quarters ,Jessica has 11.0 quarters now,jessica had 8.0 quarters in her bank and her sister gave her 3.0 quarters,jessica has 11.0 quarters now,"quarters_bank_premise = 8.0
quarters_received_premise = 3.0
quarters_total_hypothesis = 11.0

def entailment_or_contradiction(quarters_bank_premise, quarters_received_premise, quarters_total_hypothesis):
    # calculate the total quarters Jessica has now from the premise
    quarters_total_premise = quarters_bank_premise + quarters_received_premise
    # check if the total quarters from the hypothesis is equal to the total quarters calculated from the premise
    return quarters_total_premise == quarters_total_hypothesis

print(entailment_or_contradiction(quarters_bank_premise, quarters_received_premise, quarters_total_hypothesis))
"
445,contradiction,,contradiction,A bathing suit manufacturer has a supply of 14797.0 bathing suits in total and it has 4969.0 bathing suits for women ,9832.0 bathing suits are there for men,a bathing suit manufacturer has a supply of 14797.0 bathing suits in total and it has 4969.0 bathing suits for women,9832.0 bathing suits are there for men,"total_bathing_suits_premise = 14797.0
women_bathing_suits_premise = 4969.0
men_bathing_suits_hypothesis = 9832.0

def entailment_or_contradiction(total_bathing_suits_premise, women_bathing_suits_premise, men_bathing_suits_hypothesis):
    # the hypothesis claims a number of bathing suits for men, which can be computed from the total number and the number of women's bathing suits from the premise
    men_bathing_suits_premise = total_bathing_suits_premise - women_bathing_suits_premise
    # check if 'men_bathing_suits_hypothesis' is equal to the quantity deduced from the premise
    return men_bathing_suits_premise == men_bathing_suits_hypothesis

print(entailment_or_contradiction(total_bathing_suits_premise, women_bathing_suits_premise, men_bathing_suits_hypothesis))
"
446,entailment,,entailment,The Richmond Tigers sold tickets last season and they sold 9570.0 tickets at the gate and then an additional 3867.0 tickets online,13437.0 tickets were sold in total,the richmond tigers sold tickets last season and they sold 9570.0 tickets at the gate and then an additional 3867.0 tickets online,13437.0 tickets were sold in total,"gate_tickets_premise = 9570.0
online_tickets_premise = 3867.0
total_tickets_hypothesis = 13437.0

def entailment_or_contradiction(gate_tickets_premise, online_tickets_premise, total_tickets_hypothesis):
    # the premise talks about the number of tickets sold, which is also referenced in the hypothesis
    # find the total number of tickets sold from the premise
    total_tickets_premise = gate_tickets_premise + online_tickets_premise
    # check if the total tickets from the hypothesis is equal to 'total_tickets_premise'
    return total_tickets_premise == total_tickets_hypothesis

print(entailment_or_contradiction(gate_tickets_premise, online_tickets_premise, total_tickets_hypothesis))
"
268,entailment,,entailment," For the school bake sale Carol made 30.0 cupcakes, and she sold 9.0 of them and then made 28.0 more",She would have 49.0 cupcakes ,"for the school bake sale carol made 30.0 cupcakes, and she sold 9.0 of them and then made 28.0 more",she would have 49.0 cupcakes,"made_cupcakes_premise = 30.0
sold_cupcakes_premise = 9.0
made_again_cupcakes_premise = 28.0
total_cupcakes_hypothesis = 49.0

def entailment_or_contradiction(made_cupcakes_premise, sold_cupcakes_premise, made_again_cupcakes_premise, total_cupcakes_hypothesis):
    # calculate the total cupcakes by adding the cupcakes made and subtracting the cupcakes sold
    total_cupcakes_premise = made_cupcakes_premise - sold_cupcakes_premise + made_again_cupcakes_premise
    # check if the total_cupcakes_hypothesis matches the total_cupcakes_premise
    return total_cupcakes_premise == total_cupcakes_hypothesis

print(entailment_or_contradiction(made_cupcakes_premise, sold_cupcakes_premise, made_again_cupcakes_premise, total_cupcakes_hypothesis))
"
674,contradiction,,entailment,"There were 9 people in line for bumper cars, and 6 people got tired of waiting and left but 3 more people got in line",18.0 people were in line at some point,"there were 9 people in line for bumper cars, and 6 people got tired of waiting and left but 3 more people got in line",18.0 people were in line at some point,"initial_people_premise = 9
left_people_premise = 6
joined_people_premise = 3
total_people_hypothesis = 18.0

def entailment_or_contradiction(initial_people_premise, left_people_premise, joined_people_premise, total_people_hypothesis):
    # the total number of people who were in the line at some point can be computed from the premise
    total_people_premise = initial_people_premise + joined_people_premise
    # check if the total from the hypothesis is equal to the total from the premise
    return total_people_hypothesis == total_people_premise

print(entailment_or_contradiction(initial_people_premise, left_people_premise, joined_people_premise, total_people_hypothesis))
"
342,entailment,,entailment,"Christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",They were able to fill 4.0 sacks if they gathered 80.0 pieces of wood,"christian’s father and the senior ranger gathered firewood as they walked towards the lake in the park and brought with them sacks, and every sack can contain around 20.0 pieces of wood",they were able to fill 4.0 sacks if they gathered 80.0 pieces of wood,"wood_per_sack_premise = 20.0
sacks_hypothesis = 4.0
wood_hypothesis = 80.0

def entailment_or_contradiction(wood_per_sack_premise, sacks_hypothesis, wood_hypothesis):
    # the hypothesis talks about the number of sacks filled and pieces of wood gathered, which can be computed from the premise
    total_sacks_premise = wood_hypothesis / wood_per_sack_premise
    # check if 'sacks_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_sacks_premise == sacks_hypothesis

print(entailment_or_contradiction(wood_per_sack_premise, sacks_hypothesis, wood_hypothesis))
"
585,contradiction,,contradiction,There are 40.0 boys and 117 girls on the playground.,159.0 children are on the playground,there are 40.0 boys and 117 girls on the playground.,159.0 children are on the playground,"boys_premise = 40.0
girls_premise = 117
total_children_hypothesis = 159.0

def entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis):
    # the total number of children can be computed from the number of boys and girls 
    total_children_premise = boys_premise + girls_premise
    # check if 'total_children_hypothesis' entails the quantity deduced from the premise
    return total_children_premise == total_children_hypothesis

print(entailment_or_contradiction(boys_premise, girls_premise, total_children_hypothesis))
"
170,entailment,,entailment, Josh had 142.0 pencils and he gave 31.0 pencils to Dorothy,Josh has 111.0 pencils left,josh had 142.0 pencils and he gave 31.0 pencils to dorothy,josh has 111.0 pencils left,"initial_pencils_josh = 142.0
given_pencils_dorothy = 31.0
remaining_pencils_hypothesis = 111.0

def entailment_or_contradiction(initial_pencils_josh, given_pencils_dorothy, remaining_pencils_hypothesis):
    # the hypothesis implies a quantity that can be computed from the premises
    remaining_pencils_premise = initial_pencils_josh - given_pencils_dorothy
    # check if 'remaining_pencils_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_pencils_premise == remaining_pencils_hypothesis

print(entailment_or_contradiction(initial_pencils_josh, given_pencils_dorothy, remaining_pencils_hypothesis))
"
532,entailment,,entailment,There was 698.0 children taking a test and 105.0 passed,593.0 children had to sit it again,there was 698.0 children taking a test and 105.0 passed,593.0 children had to sit it again,"total_children_premise = 698.0
passed_premise = 105.0
retake_hypothesis = 593.0

def entailment_or_contradiction(total_children_premise, passed_premise, retake_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    retake_premise = total_children_premise - passed_premise
    # check if 'retake_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return retake_premise == retake_hypothesis

print(entailment_or_contradiction(total_children_premise, passed_premise, retake_hypothesis))
"
103,contradiction,,contradiction,Ashley sold 12.0 boxes of Samoas.,"Ashley needed 0.0 cases of 12.0 boxes , plus extra boxes",ashley sold 12.0 boxes of samoas.,"ashley needed 0.0 cases of 12.0 boxes , plus extra boxes","boxes_sold_premise = 12.0
required_cases_hypothesis = 0.0
boxes_per_case_hypothesis = 12.0

def entailment_or_contradiction(boxes_sold_premise, required_cases_hypothesis, boxes_per_case_hypothesis):
    # The hypothesis mentions the number of required cases each having 12.0 boxes
    required_boxes_hypothesis = required_cases_hypothesis * boxes_per_case_hypothesis
    # check if the number of boxes sold is equal to the number of boxes required in the hypothesis
    return boxes_sold_premise == required_boxes_hypothesis

print(entailment_or_contradiction(boxes_sold_premise, required_cases_hypothesis, boxes_per_case_hypothesis))
"
123,contradiction,,contradiction,Lawrence walked 4.0 kilometers at 3.0 kilometers per hour,Lawrence walked for 2.9 hours,lawrence walked 4.0 kilometers at 3.0 kilometers per hour,lawrence walked for 2.9 hours,"distance_walked_premise = 4.0
speed_premise = 3.0
time_walked_hypothesis = 2.9

def entailment_or_contradiction(distance_walked_premise, speed_premise, time_walked_hypothesis):
    # the time Lawrence walked can be computed from the distance and speed in the premise
    time_walked_premise = distance_walked_premise / speed_premise
    # check if 'time_walked_hypothesis' contradicts the time deduced from the premise, so if they are not equal
    return time_walked_premise == time_walked_hypothesis

print(entailment_or_contradiction(distance_walked_premise, speed_premise, time_walked_hypothesis))
"
570,entailment,,entailment,There were 28.0 girls and 35.0 boys on the playground at recess.,7.0 more boys are there than girls,there were 28.0 girls and 35.0 boys on the playground at recess.,7.0 more boys are there than girls,"girls_premise = 28.0
boys_premise = 35.0
more_boys_hypothesis = 7.0

def entailment_or_contradiction(girls_premise, boys_premise, more_boys_hypothesis):
    # the hypothesis talks about the difference between the number of boys and girls, which can be computed from the premise
    difference_boys_girls_premise = boys_premise - girls_premise
    # check if the difference from the hypothesis matches the difference computed from the premise
    return difference_boys_girls_premise == more_boys_hypothesis

print(entailment_or_contradiction(girls_premise, boys_premise, more_boys_hypothesis))
"
451,contradiction,,contradiction,"Molly is the owner of the Wafting Pie Company and her employees used 816.0 eggs to bake pumpkin pies this morning, and 1339.0 eggs this afternoon",2156.0 eggs were used this day,"molly is the owner of the wafting pie company and her employees used 816.0 eggs to bake pumpkin pies this morning, and 1339.0 eggs this afternoon",2156.0 eggs were used this day,"eggs_morning_premise = 816.0
eggs_afternoon_premise = 1339.0
total_eggs_hypothesis = 2156.0

def entailment_or_contradiction(eggs_morning_premise, eggs_afternoon_premise, total_eggs_hypothesis):
    # the total number of eggs used in the premise can be computed by adding the eggs used in the morning and afternoon
    total_eggs_premise = eggs_morning_premise + eggs_afternoon_premise
    # check if 'total_eggs_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_eggs_premise == total_eggs_hypothesis

print(entailment_or_contradiction(eggs_morning_premise, eggs_afternoon_premise, total_eggs_hypothesis))
"
179,contradiction,,contradiction, Josh had 16.0 marbles in his collection and he lost 7.0 marbles,He has 5.0 marbles now,josh had 16.0 marbles in his collection and he lost 7.0 marbles,he has 5.0 marbles now,"initial_marbles_josh = 16.0
lost_marbles_josh = 7.0
current_marbles_hypothesis = 5.0

def entailment_or_contradiction(initial_marbles_josh, lost_marbles_josh, current_marbles_hypothesis):
    # calculate current marbles from premise
    current_marbles_premise = initial_marbles_josh - lost_marbles_josh
    # check if the calculated current marbles is equal to the hypothesis current marbles
    return current_marbles_premise == current_marbles_hypothesis

print(entailment_or_contradiction(initial_marbles_josh, lost_marbles_josh, current_marbles_hypothesis))
"
143,contradiction,,contradiction," I read 21.0 pages of my English book yesterday and today, I read 17.0 pages",The total number of pages I read is 34.0,"i read 21.0 pages of my english book yesterday and today, i read 17.0 pages",the total number of pages i read is 34.0,"english_book_pages_yesterday_premise = 21.0
english_book_pages_today_premise = 17.0
total_pages_read_hypothesis = 34.0

def entailment_or_contradiction(english_book_pages_yesterday_premise, english_book_pages_today_premise, total_pages_read_hypothesis):
    # the total number of pages read can be computed from the pages read yesterday and today
    total_pages_read_premise = english_book_pages_yesterday_premise + english_book_pages_today_premise
    # check if 'total_pages_read_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return total_pages_read_premise == total_pages_read_hypothesis

print(entailment_or_contradiction(english_book_pages_yesterday_premise, english_book_pages_today_premise, total_pages_read_hypothesis))
"
284,entailment,,entailment," At the arcade Cody won 49.0 tickets, and he spent 25.0 tickets on a beanie and later won 6.0 more tickets",He would have 30.0 tickets ,"at the arcade cody won 49.0 tickets, and he spent 25.0 tickets on a beanie and later won 6.0 more tickets",he would have 30.0 tickets,"won_tickets_premise = 49.0
spent_tickets_premise = 25.0
won_more_tickets_premise = 6.0
remaining_tickets_hypothesis = 30.0

def entailment_or_contradiction(won_tickets_premise, spent_tickets_premise, won_more_tickets_premise, remaining_tickets_hypothesis):
    # the entity in the hypothesis can be computed from the entities in the premise
    remaining_tickets_premise = won_tickets_premise - spent_tickets_premise + won_more_tickets_premise
    # check if 'remaining_tickets_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return remaining_tickets_premise == remaining_tickets_hypothesis

print(entailment_or_contradiction(won_tickets_premise, spent_tickets_premise, won_more_tickets_premise, remaining_tickets_hypothesis))
"
297,contradiction,,contradiction," A trivia team had 5.0 members total, but during a game 2.0 members didn't show up, and each member that did show up scored 6.0 points",17.0 points were scored total,"a trivia team had 5.0 members total, but during a game 2.0 members didn't show up, and each member that did show up scored 6.0 points",17.0 points were scored total,"total_members_premise = 5.0
absent_members_premise = 2.0
points_per_member_premise = 6.0
total_points_hypothesis = 17.0

def entailment_or_contradiction(total_members_premise, absent_members_premise, points_per_member_premise, total_points_hypothesis):
    # The premise gives us the total number of members, the number of absent members, and the points scored per present member
    present_members_premise = total_members_premise - absent_members_premise
    # We can calculate the total points scored by the team
    total_points_premise = present_members_premise * points_per_member_premise
    # Check if the total points from the hypothesis match the calculated total points from the premise
    return total_points_premise == total_points_hypothesis

print(entailment_or_contradiction(total_members_premise, absent_members_premise, points_per_member_premise, total_points_hypothesis))
"
353,contradiction,,contradiction,The farmer had 127.0 apples and the farmer gave 88.0 apples to his neighbor,Farmer has 37.0 apples now,the farmer had 127.0 apples and the farmer gave 88.0 apples to his neighbor,farmer has 37.0 apples now,"apples_initially_premise = 127.0
apples_given_premise = 88.0
apples_left_hypothesis = 37.0

def entailment_or_contradiction(apples_initially_premise, apples_given_premise, apples_left_hypothesis):
    # the number of apples left can be computed from the initial number of apples and the given apples
    apples_left_premise = apples_initially_premise - apples_given_premise
    # check if 'apples_left_hypothesis' entails the quantity deduced from the premise, so if they are equal
    return apples_left_premise == apples_left_hypothesis

print(entailment_or_contradiction(apples_initially_premise, apples_given_premise, apples_left_hypothesis))
"
200,entailment,,entailment, The Ferris wheel in Paradise Park has 14.0 seats and each seat can hold 6.0 people,84.0 people can ride the Ferris wheel at the same time,the ferris wheel in paradise park has 14.0 seats and each seat can hold 6.0 people,84.0 people can ride the ferris wheel at the same time,"seats_premise = 14.0
people_per_seat_premise = 6.0
total_people_hypothesis = 84.0

def entailment_or_contradiction(seats_premise, people_per_seat_premise, total_people_hypothesis):
    # the total number of people that can ride the Ferris wheel is computed by multiplying the number of seats by the number of people each seat can hold
    total_people_premise = seats_premise * people_per_seat_premise
    # check if 'total_people_hypothesis' equals the quantity computed from the premise
    return total_people_premise == total_people_hypothesis

print(entailment_or_contradiction(seats_premise, people_per_seat_premise, total_people_hypothesis))
"
433,contradiction,,contradiction,A car company produced 3884.0 cars in North America but 2871.0 cars in Europe were recalled.,1011.0 cars were successfully produced,a car company produced 3884.0 cars in north america but 2871.0 cars in europe were recalled.,1011.0 cars were successfully produced,"cars_produced_premise = 3884.0
cars_recalled_premise = 2871.0
cars_produced_hypothesis = 1011.0

def entailment_or_contradiction(cars_produced_premise, cars_recalled_premise, cars_produced_hypothesis):
    # the number of cars produced successfully should be the cars produced minus the cars recalled
    cars_produced_successfully_premise = cars_produced_premise - cars_recalled_premise
    # check if the number of cars produced successfully from the premise is the same as the number from the hypothesis
    return cars_produced_successfully_premise == cars_produced_hypothesis

print(entailment_or_contradiction(cars_produced_premise, cars_recalled_premise, cars_produced_hypothesis))
"
